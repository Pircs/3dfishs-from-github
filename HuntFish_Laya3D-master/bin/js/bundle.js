var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EnumData;
(function (EnumData) {
    ;
    /// <summary>鱼类型（子类型）</summary>
    var FishSubtype;
    (function (FishSubtype) {
        FishSubtype[FishSubtype["Fish_1"] = 1] = "Fish_1";
        FishSubtype[FishSubtype["Fish_2"] = 2] = "Fish_2";
        FishSubtype[FishSubtype["Fish_3"] = 3] = "Fish_3";
        FishSubtype[FishSubtype["Fish_4"] = 4] = "Fish_4";
        FishSubtype[FishSubtype["Fish_5"] = 5] = "Fish_5";
        FishSubtype[FishSubtype["Fish_6"] = 6] = "Fish_6";
        FishSubtype[FishSubtype["Fish_7"] = 7] = "Fish_7";
        FishSubtype[FishSubtype["Fish_8"] = 8] = "Fish_8";
        FishSubtype[FishSubtype["Fish_9"] = 9] = "Fish_9";
        FishSubtype[FishSubtype["Fish_10"] = 10] = "Fish_10";
        FishSubtype[FishSubtype["Fish_11"] = 11] = "Fish_11";
        FishSubtype[FishSubtype["Fish_12"] = 12] = "Fish_12";
        FishSubtype[FishSubtype["Fish_13"] = 13] = "Fish_13";
        FishSubtype[FishSubtype["Fish_14"] = 14] = "Fish_14";
        FishSubtype[FishSubtype["Fish_15"] = 15] = "Fish_15";
        FishSubtype[FishSubtype["Fish_16"] = 16] = "Fish_16";
        FishSubtype[FishSubtype["Fish_17"] = 17] = "Fish_17";
        FishSubtype[FishSubtype["Fish_18"] = 18] = "Fish_18";
        FishSubtype[FishSubtype["Fish_19"] = 19] = "Fish_19";
        FishSubtype[FishSubtype["Fish_20"] = 20] = "Fish_20";
        FishSubtype[FishSubtype["Frozen_fish"] = 21] = "Frozen_fish";
        FishSubtype[FishSubtype["Fish_22"] = 22] = "Fish_22";
        FishSubtype[FishSubtype["Golden_Shark"] = 23] = "Golden_Shark";
        FishSubtype[FishSubtype["Golden_Dragon"] = 24] = "Golden_Dragon";
        /// <summary>美人鱼类型</summary>
        FishSubtype[FishSubtype["Mermaid"] = 25] = "Mermaid";
        /// <summary>海盗船类型</summary>
        FishSubtype[FishSubtype["Ship"] = 26] = "Ship";
        FishSubtype[FishSubtype["King_fishf1"] = 27] = "King_fishf1";
        FishSubtype[FishSubtype["King_fishf2"] = 28] = "King_fishf2";
        FishSubtype[FishSubtype["King_fishf3"] = 29] = "King_fishf3";
        FishSubtype[FishSubtype["King_fishf4"] = 30] = "King_fishf4";
        FishSubtype[FishSubtype["King_fishf5"] = 31] = "King_fishf5";
        FishSubtype[FishSubtype["Bomb_fish"] = 32] = "Bomb_fish";
        FishSubtype[FishSubtype["TanabataFestival_fish"] = 33] = "TanabataFestival_fish";
    })(FishSubtype = EnumData.FishSubtype || (EnumData.FishSubtype = {}));
    /// <summary>鱼所属大类型</summary>
    var FishCategory;
    (function (FishCategory) {
        FishCategory[FishCategory["Normal_Fish"] = 1] = "Normal_Fish";
        FishCategory[FishCategory["World_Boss"] = 2] = "World_Boss";
        FishCategory[FishCategory["King_fish"] = 5] = "King_fish";
        FishCategory[FishCategory["Bomb_fish"] = 6] = "Bomb_fish";
        FishCategory[FishCategory["Frozen_fish"] = 7] = "Frozen_fish";
    })(FishCategory = EnumData.FishCategory || (EnumData.FishCategory = {}));
    /// <summary>鱼的状态枚举</summary>
    var ENUM_FISH_STATE;
    (function (ENUM_FISH_STATE) {
        ENUM_FISH_STATE[ENUM_FISH_STATE["SWIMMING"] = 0] = "SWIMMING";
        ENUM_FISH_STATE[ENUM_FISH_STATE["SHOW"] = 1] = "SHOW";
        ENUM_FISH_STATE[ENUM_FISH_STATE["PAUSE"] = 2] = "PAUSE";
        ENUM_FISH_STATE[ENUM_FISH_STATE["HITTED"] = 3] = "HITTED";
        ENUM_FISH_STATE[ENUM_FISH_STATE["DEATH"] = 4] = "DEATH";
    })(ENUM_FISH_STATE = EnumData.ENUM_FISH_STATE || (EnumData.ENUM_FISH_STATE = {}));
    var SCREEN_ZODER;
    (function (SCREEN_ZODER) {
        SCREEN_ZODER[SCREEN_ZODER["BounsFont"] = 10] = "BounsFont";
        SCREEN_ZODER[SCREEN_ZODER["HuntPanelUI"] = 11] = "HuntPanelUI";
        SCREEN_ZODER[SCREEN_ZODER["AwardPanel"] = 50] = "AwardPanel";
    })(SCREEN_ZODER = EnumData.SCREEN_ZODER || (EnumData.SCREEN_ZODER = {}));
    //子弹的三种状态
    var ENUM_BULLET_STATE;
    (function (ENUM_BULLET_STATE) {
        ENUM_BULLET_STATE[ENUM_BULLET_STATE["UNLOCK"] = 0] = "UNLOCK";
        ENUM_BULLET_STATE[ENUM_BULLET_STATE["LOCKING"] = 1] = "LOCKING";
        ENUM_BULLET_STATE[ENUM_BULLET_STATE["LOCKED"] = 2] = "LOCKED"; //锁定的鱼已死亡
    })(ENUM_BULLET_STATE = EnumData.ENUM_BULLET_STATE || (EnumData.ENUM_BULLET_STATE = {}));
    var ACTSTATUS;
    (function (ACTSTATUS) {
        ACTSTATUS[ACTSTATUS["ACTSHOWSTARTBEFORE"] = 0] = "ACTSHOWSTARTBEFORE";
        ACTSTATUS[ACTSTATUS["ACTSHOWSTART_START"] = 1] = "ACTSHOWSTART_START";
        ACTSTATUS[ACTSTATUS["ACTSTART_END"] = 2] = "ACTSTART_END";
        ACTSTATUS[ACTSTATUS["ACTEND_SHOWEND"] = 3] = "ACTEND_SHOWEND";
        ACTSTATUS[ACTSTATUS["ACTSHOWENDAFTER"] = 4] = "ACTSHOWENDAFTER";
    })(ACTSTATUS = EnumData.ACTSTATUS || (EnumData.ACTSTATUS = {}));
})(EnumData || (EnumData = {}));
exports.default = EnumData;
},{}],2:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 1280;
    GameConfig.height = 720;
    GameConfig.scaleMode = "exactfit";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "top";
    GameConfig.alignH = "center";
    GameConfig.startScene = "qwe.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],3:[function(require,module,exports){
"use strict";
//游戏总管理类
Object.defineProperty(exports, "__esModule", { value: true });
var GameManger_1 = require("./manager/GameManger");
var EventManager_1 = require("./manager/EventManager");
var WalletManager_1 = require("./manager/WalletManager");
var SocketManager_1 = require("./manager/SocketManager");
var ResourceManger_1 = require("./manager/ResourceManger");
var HuntSceneManager_1 = require("./manager/HuntSceneManager");
var ConfigManager_1 = require("./manager/ConfigManager");
var SceneManager_1 = require("./manager/SceneManager");
var SoundsManager_1 = require("./manager/SoundsManager");
var TipManager_1 = require("./manager/TipManager");
var OtherManager_1 = require("./manager/OtherManager");
var GameFacade = /** @class */ (function () {
    function GameFacade() {
    }
    Object.defineProperty(GameFacade.prototype, "GameMng", {
        get: function () {
            if (null == this._gameMng)
                this._gameMng = new GameManger_1.default();
            return this._gameMng;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "ResourceMng", {
        get: function () {
            if (null == this._resourceMng)
                this._resourceMng = new ResourceManger_1.default();
            return this._resourceMng;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "SocketMng", {
        get: function () {
            if (null == this._socketMng)
                this._socketMng = new SocketManager_1.default();
            return this._socketMng;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "EventMng", {
        get: function () {
            if (null == this._eventMng)
                this._eventMng = new EventManager_1.default();
            return this._eventMng;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "HuntSceneMng", {
        get: function () {
            if (null == this._huntSceneManager)
                this._huntSceneManager = new HuntSceneManager_1.default();
            return this._huntSceneManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "ConfigMng", {
        get: function () {
            if (null == this._configManager)
                this._configManager = new ConfigManager_1.default();
            return this._configManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "SceneMng", {
        get: function () {
            if (null == this._sceneManager)
                this._sceneManager = new SceneManager_1.default();
            return this._sceneManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "SoundMng", {
        get: function () {
            if (null == this._soundManager)
                this._soundManager = new SoundsManager_1.SoundsManager();
            return this._soundManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "WalletMng", {
        get: function () {
            if (null == this._walletManager)
                this._walletManager = new WalletManager_1.default();
            return this._walletManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "TipMng", {
        get: function () {
            if (null == this._tipManager)
                this._tipManager = new TipManager_1.default();
            return this._tipManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameFacade.prototype, "OthMng", {
        get: function () {
            if (null == this._otherManager)
                this._otherManager = new OtherManager_1.default();
            return this._otherManager;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 初始化所有的管理器类
     */
    GameFacade.prototype.Init = function () {
        this.GameMng.Init();
        this.ResourceMng.Init();
        this.SocketMng.Init();
        this.EventMng.Init();
        this.HuntSceneMng.Init();
        this.ConfigMng.Init();
        this.SceneMng.init();
        this.TipMng.Init();
        this.WalletMng.Init();
    };
    Object.defineProperty(GameFacade, "Instance", {
        get: function () {
            if (this._instance == null) {
                this._instance = new GameFacade();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    GameFacade._instance = null;
    return GameFacade;
}());
exports.default = GameFacade;
},{"./manager/ConfigManager":60,"./manager/EventManager":61,"./manager/GameManger":62,"./manager/HuntSceneManager":63,"./manager/OtherManager":64,"./manager/ResourceManger":65,"./manager/SceneManager":66,"./manager/SocketManager":67,"./manager/SoundsManager":68,"./manager/TipManager":69,"./manager/WalletManager":70}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameStart_1 = require("./game/GameStart");
var Main = /** @class */ (function () {
    function Main() {
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //Laya.stage.bgColor = "#FF0000";
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //发布dev  斗鱼需要屏蔽的
        Laya.URL.basePath = Laya.URL.rootPath = "";
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("gameVersion.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        //Laya.Stat.show(0, 0);
        // 修改初始化内存
        window['Config3D'] && (window['Config3D']['_defaultConfig']['_defaultPhysicsMemory'] = 100);
        //调用DebugPanel调试面板
        //Laya.PhysicsDebugDraw.init();
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        // //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        new GameStart_1.default();
    };
    return Main;
}());
new Main();
},{"./GameConfig":2,"./game/GameStart":22}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CannonConfig = /** @class */ (function () {
    function CannonConfig() {
    }
    CannonConfig._IdleAni = "Idle";
    CannonConfig._AttackAni = "Attack";
    return CannonConfig;
}());
exports.default = CannonConfig;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FishBaseConfig = /** @class */ (function () {
    function FishBaseConfig(obj) {
        this._FishTypeID = obj['FishTypeID'];
        this._FishDeadIndex = obj['FishDeadIndex'];
        this._LastWord = obj['LastWord'];
        this._IceBlockScale = obj['IceBlockScale'];
        this._IceBlockAngel = obj['IceBlockAngel'];
        this._StatyBehavior = obj['StatyBehavior'];
        this._SpeedBehavior = obj['SpeedBehavior'];
        this._SwimAni = obj['SwimAni'];
        this._DeadAni = obj['DeadAni'];
        this._HitAni = obj['HitAni'];
        this._StayAni1 = obj['StayAni1'];
        this._StayAni2 = obj['StayAni2'];
    }
    return FishBaseConfig;
}());
exports.FishBaseConfig = FishBaseConfig;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonConstant = /** @class */ (function () {
    function CommonConstant() {
    }
    //#region u3d资源路径
    /** 捕猎场景路劲*/
    CommonConstant._huntScenePath = "unityRes/HuntScene/Conventional/HuntScene.ls";
    CommonConstant._gunScenePath = "unityRes/LayaScene_GunScene/Conventional/GunScene.ls";
    /** 捕猎场景特效名称集合*/
    CommonConstant._huntSceneEffectArray = {
        // FishNetPrefab1:"FishNetPrefab1",
        // FishNetPrefab2:"FishNetPrefab2",
        // FishNetPrefab3:"FishNetPrefab3",
        FishNetPrefab: "FishNetPrefab",
        GoldCoin: "GoldCoin",
        Gold_Effect: "Gold_Effect",
        Half_screenBomb_2: "Half-screenBomb_2",
        Full_screenBomb_2: "Full_screenBomb_2",
        HalfScreenDrawReward: "HalfScreenDrawReward02",
        ChangeCannonEffect: "ChangeCannon_effect",
        LockButtonEffect: "LockButtonEffect",
        BombFishExpEffect: "FishExp_Effect_2",
    };
    CommonConstant._huntSceneTestArry = {
        shootBulletReq: 0,
        shootBulletResp: 0,
        BulletPassResp: 0,
        ShootErrorResp: 0,
        uselessBulletReq: 0,
        uselessBulletResp: 0,
        hitFishReq: 0,
        hitFishResp: 0,
        fishDeadResp: 0,
    };
    /**大厅岛的资源 */
    CommonConstant._hallPath_ls = "unityRes/LayaScene_hall/Conventional/hall.ls";
    /**预警模型 */
    CommonConstant._warnPath_lh = "unityRes/LayaScene_WarnEffect/Conventional/WarnEffect.lh";
    //#endregion
    //#region UI面板资源路径
    /** fui资源组名字*/
    CommonConstant._groupName_fuiRes = "groupName_fuiRes";
    CommonConstant._mainPanelPath = "panel/MainPanel.scene";
    /** loading过场界面*/
    CommonConstant._loadingPanelPath = "panel/LoadingPanel.scene";
    /** hall背景图*/
    CommonConstant._hallBgPath = "LayaRes/game/rateBgTexture.png";
    CommonConstant._loadingBgPath = "LayaRes/load/lading_bg 1.png";
    /**活动的关闭按钮 */
    CommonConstant.actCloseBtnPath = "LayaRes/game/button_gb.png";
    /** fui资源*/
    CommonConstant._fuiHallUIPath = { fui: "fairyguiRes/fui/HallUI.fui", image: "fairyguiRes/fui/HallUI_atlas0.png", Package: "fairyguiRes/fui/HallUI" };
    CommonConstant._fuiHallPath = { fui: "fairyguiRes/fui/Hall.fui", image: "fairyguiRes/fui/Hall_atlas0.png", Package: "fairyguiRes/fui/Hall" };
    CommonConstant._fuiFreeTranWalletPath = { fui: "fairyguiRes/fui/FreeTranWallet.fui", image: "fairyguiRes/fui/FreeTranWallet_atlas0.png", Package: "fairyguiRes/fui/FreeTranWallet" };
    CommonConstant._fuiCommonUIPath = { fui: "fairyguiRes/fui/CommonUI.fui", image: "fairyguiRes/fui/CommonUI_atlas0.png", Package: "fairyguiRes/fui/CommonUI" };
    CommonConstant._fuiHelpPath = { fui: "fairyguiRes/fui/Help.fui", image: "fairyguiRes/fui/Help_atlas0.png", Package: "fairyguiRes/fui/Help" };
    CommonConstant._fuiHunterUIPath = { fui: "fairyguiRes/fui/HunterUI.fui", image: "fairyguiRes/fui/HunterUI_atlas0.png", Package: "fairyguiRes/fui/HunterUI" };
    CommonConstant._fuiJpPath = { fui: "fairyguiRes/fui/Jp.fui", image: "fairyguiRes/fui/Jp_atlas0.png", Package: "fairyguiRes/fui/Jp" };
    CommonConstant._fuiLoadingPath = { fui: "fairyguiRes/fui/loading.fui", image: "fairyguiRes/fui/loading_atlas0.png", Package: "fairyguiRes/fui/loading" };
    CommonConstant._fuiRankingPath = { fui: "fairyguiRes/fui/Ranking.fui", image: "fairyguiRes/fui/Ranking_atlas0.png", Package: "fairyguiRes/fui/Ranking" };
    CommonConstant._fuiSettingPath = { fui: "fairyguiRes/fui/Setting.fui", image: "fairyguiRes/fui/Setting_atlas0.png", Package: "fairyguiRes/fui/Setting" };
    CommonConstant._fuiWinningPath = { fui: "fairyguiRes/fui/Winning.fui", image: "fairyguiRes/fui/Winning_atlas0.png", Package: "fairyguiRes/fui/Winning" };
    CommonConstant._fuiGuidePath = { fui: "fairyguiRes/fui/Guide.fui", image: "fairyguiRes/fui/Guide_atlas0.png", Package: "fairyguiRes/fui/Guide" };
    CommonConstant._fuiWarnPath = { fui: "fairyguiRes/fui/Warning.fui", image: "fairyguiRes/fui/Warning_atlas0.png", Package: "fairyguiRes/fui/Warning" };
    CommonConstant._fuiMarqueePath = { fui: "fairyguiRes/fui/Marquee.fui", image: "fairyguiRes/fui/Marquee_atlas0.png", Package: "fairyguiRes/fui/Marquee" };
    CommonConstant._fuiTipPath = { fui: "fairyguiRes/fui/Public.fui", image: "fairyguiRes/fui/Public_atlas0.png", Package: "fairyguiRes/fui/Public" };
    CommonConstant._fuiPersonalInfoPath = { fui: "fairyguiRes/fui/PersonalInfo.fui", image: "fairyguiRes/fui/PersonalInfo_atlas0.png", Package: "fairyguiRes/fui/PersonalInfo" };
    CommonConstant._fuiFundTipPath = { fui: "fairyguiRes/fui/FundTip.fui", image: "fairyguiRes/fui/FundTip_atlas0.png", Package: "fairyguiRes/fui/FundTip" };
    CommonConstant._fuiGrowthFundPath = { fui: "fairyguiRes/fui/GrowthFund.fui", image: "fairyguiRes/fui/GrowthFund_atlas0.png", Package: "fairyguiRes/fui/GrowthFund" };
    CommonConstant._fuiLevelBonusPath = { fui: "fairyguiRes/fui/LevelBonus.fui", image: "fairyguiRes/fui/LevelBonus_atlas0.png", Package: "fairyguiRes/fui/LevelBonus" };
    CommonConstant._fuiLvDetailsPath = { fui: "fairyguiRes/fui/LvDetails.fui", image: "fairyguiRes/fui/LvDetails_atlas0.png", Package: "fairyguiRes/fui/LvDetails" };
    CommonConstant._fuiLvRecordsPath = { fui: "fairyguiRes/fui/LvRecords.fui", image: "fairyguiRes/fui/LvRecords_atlas0.png", Package: "fairyguiRes/fui/LvRecords" };
    CommonConstant._fuiUpgradePath1 = { fui: "fairyguiRes/fui/upgradePanel.fui", image: "fairyguiRes/fui/upgradePanel_atlas0.png", Package: "fairyguiRes/fui/upgradePanel" };
    CommonConstant._fuiUpgradePath2 = { fui: "fairyguiRes/fui/upgradePanel.fui", image: "fairyguiRes/fui/upgradePanel_atlas0_1.png", Package: "fairyguiRes/fui/upgradePanel" };
    /** 大厅小岛面板上的资源*/
    CommonConstant._prelandInfoPath = "ui://HallUI/";
    CommonConstant._islandInfoArr = [{ title: "name1", limit: "bullet1", rate: "rate1" },
        { title: "name2", limit: "bullet2", rate: "rate2" },
        { title: "name3", limit: "bullet3", rate: "rate3" }];
    /** 捕猎场景的laya资源*/
    CommonConstant._hunterBgPath1 = "LayaRes/game/BG01.png";
    CommonConstant._hunterBgPath2 = "LayaRes/game/BG02.png";
    CommonConstant._baseBgPath = "LayaRes/game/paotai.png";
    CommonConstant._lockImgPath = "LayaRes/game/lock.png"; //锁定按钮
    CommonConstant._autoImgPath = "LayaRes/game/auto.png"; //自动攻击按钮
    CommonConstant._lockImgMaskPath = "LayaRes/game/lock_down.png"; //锁定按钮mask
    CommonConstant._autoImgMaskPath = "LayaRes/game/auto_down.png"; //自动攻击按钮mask
    CommonConstant._autoTextImgPath = "LayaRes/game/zidonggongji.png"; //自动攻击文字
    CommonConstant._lockTextImgPath = "LayaRes/game/suodinggongji.png"; //锁定攻击文字
    CommonConstant._cancleAutoTextImgPath = "LayaRes/game/quxiaozidong.png"; //取消自动攻击文字
    CommonConstant._cancleLockTextImgPath = "LayaRes/game/quxiaosuoding.png"; //取消锁定攻击文字
    CommonConstant._linePointPath = "LayaRes/game/point.png"; //锁定连线的点
    CommonConstant._aimImgPath = "LayaRes/game/aim.png"; //鱼身上的锁定图标
    CommonConstant._zhuanpanPath = "LayaRes/game/zhuanpan.png"; //转盘
    CommonConstant._zhuanpanLightPath = "LayaRes/game/zhuanpan_guanquan.png"; //转盘光
    CommonConstant._fish20Path = "LayaRes/game/20.png"; //蓝色鲨鱼
    CommonConstant._fish23Path = "LayaRes/game/23.png"; //金色鲨鱼
    CommonConstant._fish25Path = "LayaRes/game/25.png"; //美人鱼
    CommonConstant._BombFlagPath = "LayaRes/game/BombFlag.png"; //炸弹鱼标志
    /** 炮台信息框*/
    CommonConstant._infoFrame = "LayaRes/game/ing_4.png";
    CommonConstant._infoLabelBg = "LayaRes/game/ing_5.png";
    CommonConstant._infoLevelBg = "LayaRes/game/djbs.png";
    CommonConstant._infoCoin = "LayaRes/game/jp_jb.png";
    CommonConstant._infoWallent = "LayaRes/game/wallent.png"; //免转按钮
    /** 公共资源*/
    CommonConstant._preCommonPath = "ui://CommonUI/";
    /** font字体*/
    CommonConstant._awardFont = "LayaRes/Font/jl_0-9.png"; //大转盘金币字体
    CommonConstant._bounsFontSelf = "LayaRes/Font/jl_0-9.png"; //自己打死鱼时的金币字体
    CommonConstant._bounsFontOther = "LayaRes/Font/yl_0-9.png"; //别人打死鱼时的金币字体
    CommonConstant._levelFont = "LayaRes/Font/djbs_0-9.png"; //炮台信息 等级数字
    CommonConstant._coinFont = "LayaRes/Font/3djnh_jb.png"; //炮台信息 金币数字
    //#endregion
    //#region 游戏常量
    CommonConstant.C_IslandAmount = 3;
    CommonConstant.C_IslandMoveX = 20;
    CommonConstant.C_IslandMoveTime = 1500;
    /** layer层列表*/
    CommonConstant.Layer = {
        Fish: 8,
        Wall: 9
    };
    /** 方向单位向量*/
    CommonConstant.DirectionVector = {
        Up: new Laya.Vector3(0, 1, 0),
        Down: new Laya.Vector3(0, -1, 0),
        Left: new Laya.Vector3(1, 0, 0),
        Right: new Laya.Vector3(-1, 0, 0),
    };
    /** 鱼的倍率*/
    CommonConstant.fishRate = {
        Fifty: 50,
        Sixty: 60,
        Eighty: 80
    };
    /** 半屏转盘的显示位置*/
    CommonConstant.HalfAwardPos = [
        new Laya.Vector3(370, 468, 0),
        new Laya.Vector3(898, 468, 0),
        new Laya.Vector3(370, 278, 0),
        new Laya.Vector3(898, 278, 0),
    ];
    CommonConstant.Delta = 60;
    CommonConstant.DispatchUselessMsgDelta = 100; //无效子弹派发间隔
    CommonConstant.SendUselessMsgDelta = 200; //无效子弹派发间隔
    CommonConstant.ShootRate = 250; //炮台射击速度 间隔0.25s
    CommonConstant.ShootMaxNum = 20; //锁定状态下 最多20个子弹
    /** 海盗船模型横向屏幕大小*/
    CommonConstant.OutWallOffset_ship = 300; //
    /** 美人鱼模型横向屏幕大小*/
    CommonConstant.OutWallOffset_mermaid = 160; //
    /** 鲨鱼模型横向屏幕大小*/
    CommonConstant.OutWallOffset_shark = 160; //
    CommonConstant.LinePointWith = 32;
    CommonConstant.BounsFontOffY = 80; //收集金币，提示字体漂浮高度
    CommonConstant.BGwidth = 1283;
    CommonConstant.BGOffSetMax = 1280;
    //#endregion
    //#region 贴图资源路劲
    /** 贴图路劲集合*/
    CommonConstant._TextureArray = {
        Gold: "jinbi.png",
        Silver: "yinbi.png",
    };
    CommonConstant._PromptContent = {
        StopAutoAttack: "您正在自动捕鱼是否停止?",
        Reconnect: "网络断开连接，是否重新连接游戏？",
        LowPay: "金币不足,请充值或到低倍场玩哦",
        HeightPay: "您的金钱超过本场限制,请到高倍场游戏",
        NeedRecharge: "金币不足,请充值后重试",
        Invalid: "下注筹码非法,请刷新游戏后重试",
        LoginOther: "异地登陆,请刷新游戏后重试",
        AccountError: "您的账号出现异常,请重新登录",
        TokeTimeOut: "会话已经过期，请重新登录",
        TokeError: "会话校验失败，请联系管理员",
        ForceKictout: "您的账号出现异常,请重新登录",
        LoginMuch: "登陆过于频繁,请稍后重试",
        SessionLong: "会话已经过期,请重新登录",
        SessionWrong: "会话校验失败,请重新登录",
        LoginFail: "账号登录失败,请联系管理员",
        LoginError: "账号错误,请联系管理员",
        BackHall: "您确定要返回大厅么？",
        BulletMax: "您当前子弹数量已达上限",
        CannotS: "需要消耗%s金币，无法召唤",
        JpReward: "该记录是JP奖金",
        EnterRoomFail: "进入房间失败，请重试",
        DemoAccTip: "试玩账号无报表数据，请登录游戏账号体验",
        ExitHuntScene: "您确定要返回大厅吗？",
    };
    CommonConstant.DIRICTION = {
        VERTICAL: 1,
        HORIZONTAL: 2,
    };
    return CommonConstant;
}());
exports.default = CommonConstant;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventConstantResponse = /** @class */ (function () {
    function EventConstantResponse() {
    }
    /**免转小键盘返回键监控 */
    EventConstantResponse.WALLETKEYNUM = "wallKeyNum";
    /**回收金币同步左下角金额时同步免转上的fg钱包 */
    EventConstantResponse.SYNCWALLETFG = "SYNCWALLETFG";
    /**排行榜监控 */
    EventConstantResponse.RANKRESP = "rankResp";
    /**中奖名单监控 */
    EventConstantResponse.WINNERRESP = "winnerResp";
    /**jp数值 */
    EventConstantResponse.JPNUMBER = "jpNumber";
    /**jp广播 */
    EventConstantResponse.JPBCAST = "jpBcast";
    /**登录角色信息 */
    EventConstantResponse.LOGINRESROLEINFO = "loginRoleInfo";
    /**开关 */
    EventConstantResponse.SWITCHRESP = "switchResp";
    /**全局广播 */
    EventConstantResponse.BCASTWORLDRESP = "bcastWorldResp";
    /**房间广播 */
    EventConstantResponse.BCASTROOMRESP = "bcastRoomResp";
    /**广播消息 */
    EventConstantResponse.BCASTMSGRESP = "bcastMsgResp";
    /**活动详情列表 */
    EventConstantResponse.ACTLISTRESP = "actListResp";
    /**等级信息 */
    EventConstantResponse.LVINFORESP = "lvInfoResp";
    /**等级配置 */
    EventConstantResponse.LVCONFIGRESP = "lvConfigResp";
    /**等级通知 */
    EventConstantResponse.LVNOTICERESP = "lvNoticeResp";
    /**成长基金当前档次 */
    EventConstantResponse.GROWTHFUNDINFORESP = "growthFundInfoResp";
    /**成长基金配置 */
    EventConstantResponse.GROWTHFUNDCONFIGRESP = "growthFundConfigResp";
    /**成长基金购买反馈 */
    EventConstantResponse.GROWTHFUNDBUYRESP = "growthFundBuyResp";
    /**等级奖金领取奖励 */
    EventConstantResponse.LVAWARDRESP = "lvAwardResp";
    /**等级奖励通知 */
    EventConstantResponse.LVAWARDNOTICERESP = "lvAwardNoticeResp";
    /**成长基金状态（活动结束时间） */
    EventConstantResponse.GROWTHFUNDSTATERESP = "growthFundStateResp";
    /**等级奖励状态反馈 */
    EventConstantResponse.LVAWARDSTATERESP = "lvAwardStateResp";
    return EventConstantResponse;
}());
exports.default = EventConstantResponse;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏相关事件
 */
var GameEvent = /** @class */ (function () {
    function GameEvent() {
    }
    GameEvent.CONNECT = "SOCKET_CONNECT"; //socket连接
    GameEvent.SOCKET_CLOSE = "SOCKET_CLOSE"; //socket断开
    GameEvent.SOCKET_ERROR = "SOCKET_ERROR"; //socket出错
    GameEvent.LOADCOMPLETE = "LOADCOMPLETE"; //游戏资源加载完成
    GameEvent.GAME_START = "GAME_START"; //游戏开始
    GameEvent.GAME_CONTINUE = "GAME_CONTINUE"; //游戏继续
    GameEvent.GAME_RECONNECT = "GAME_RECONNECT"; //断线重连
    GameEvent.HUNT_AUTOATTACK = "HUNT_AUTOATTACK"; //自动攻击开始、取消
    GameEvent.HUNT_LOCKATTACK = "HUNT_LOCKATTACK"; //锁定攻击开始、取消
    GameEvent.HUNT_HUNTEDFISH = "HUNT_HUNTEDFISH"; //自动攻击捕到鱼
    return GameEvent;
}());
exports.default = GameEvent;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LangType;
(function (LangType) {
    LangType[LangType["CHINESE"] = 0] = "CHINESE";
    LangType[LangType["ENGLISH"] = 1] = "ENGLISH";
    LangType[LangType["CHANGESEHK"] = 2] = "CHANGESEHK";
})(LangType = exports.LangType || (exports.LangType = {}));
var Lang = /** @class */ (function () {
    function Lang() {
    }
    /**
     * 语言类型转换
     * @param lang
     */
    Lang.langToType = function (lang) {
        var type = LangType.CHINESE;
        switch (lang) {
            case "zh-cn":
                type = LangType.CHINESE;
                break;
            case "en-us":
                type = LangType.ENGLISH;
                break;
            case "zh-hk":
                type = LangType.CHANGESEHK;
                break;
            default:
                type = LangType.CHINESE;
                break;
        }
        return type;
    };
    Lang.freeTranWalletCh = {
        conServer: "连接服务器超时，请重新操作",
        operationInvalid: "操作无效",
        autoAddWallet: "系统向FG游戏存入{0}元",
        reqFail: "请求中心钱包失败",
        clipNoMoney: "余额不足，请前往充值",
        setMoney: "请设置带入游戏的金额",
        jpBonus: "该记录是JP奖金",
        reqTooFast: "请求中心钱包太快",
        centerNotEnough: "中心钱包余额不足，请前往充值",
    };
    Lang.freeTranWalletEn = {
        conServer: "The connection server is out of time, please reoperate",
        operationInvalid: "This operation is invalid",
        autoAddWallet: "The system saves {0} to the FunGame",
        reqFail: "Request center purse failed",
        clipNoMoney: "The balance of the central purse is insufficient. Please go to recharge",
        setMoney: "Please set up the amount of money to bring into the game.",
        jpBonus: "This record is JP Bonus.",
        reqTooFast: "The request center wallet is too fast",
    };
    Lang.lvFundCh = {
        tipFundBuy: "已消耗{0}成功购买{1}",
        tipLevelReceived: "已成功领取等级奖金{0}元",
        tipsLevelBuy: "消耗金币{0},是否确定?",
        tipsGoldLess: "金币不足，请充值后再购买",
        tipLog: "试玩帐号无等级体系，请登录游戏体验最新功能",
        tipPurchaseFailed: "购买失败，请稍候重试。",
        tipReceiveFailed: "领取失败，请稍候重试。",
        tipActEnd: "活动已结束。",
    };
    Lang.lvFundEn = {
        tipFundBuy: "You have spent {0}to buy {1} successfully",
        tipLevelReceived: "You have received the level bonus {0} yuan successfully",
        tipsLevelBuy: "Consumption of gold coins {0}s, is it OK?",
        tipsGoldLess: "Gold is not enough, please recharge before purchase",
        tipLog: "The demo account has no rating system，please log in game to experience the latest functions",
        tipPurchaseFailed: "Purchase failed, please try again later",
        tipReceiveFailed: "Failed to receive, please try again later",
    };
    return Lang;
}());
exports.default = Lang;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sound = /** @class */ (function () {
    function Sound() {
    }
    /**
     * 三个声音类别
     */
    Sound.soundHeadArr = {
        bgSoundHead: "sounds/SceneSound/",
        fishSoundHead: "sounds/FishSound/",
        keySoundHead: "sounds/KeySound/" //按键音效文件夹
    };
    /**
     * 背景音乐
     */
    Sound.soundBgArr = {
        loginBgMusic: "LoginScene",
        hallBgMusic: "HallScene",
        playBgMusic1: "Rate0.1",
        playBgMusic2: "Rate1",
        playBgMusic3: "Rate10",
        fishMatrix: "FishMatrix",
    };
    /**
     * 鱼的声音
     */
    Sound.soundFishArr = {
        fishDying: "FishDying",
        frozonFish: "FrozonFish",
        fullSceneBomb: "FullSceneBomb",
    };
    /**
     * 按键声音
     */
    Sound.soundKeyArr = {
        bigFishCoin: "BigFishCoin",
        bossFishCoin: "BossFishCoin",
        bossWarning: "BossWarning",
        changeGun: "ChangeGun",
        onClick: "Click",
        onClose: "Close",
        coin: "Coin",
        getCoin: "GetCoin",
        luckAward: "LuckAward",
        onOpen: "Open",
        rateSelect: "RateSelect",
        shoot1: "Shoot1",
        shoot2: "Shoot2",
        shoot3: "Shoot3",
        turntable: "Turntable",
        windowChange: "WindowChange",
        rateWindow: "RateWindow",
        warn: "Warn",
        wave: "Wave",
    };
    return Sound;
}());
exports.default = Sound;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../GameFacade");
var EventNetResponse_1 = require("../net/ProtoHander/EventNetResponse");
var NetLogin_1 = require("../net/ProtoHander/NetLogin");
var FishController_1 = require("./FishController");
var CommonConstant_1 = require("../constant/CommonConstant");
var CommonUtil_1 = require("../utils/CommonUtil");
var NetRoom_1 = require("../net/ProtoHander/NetRoom");
var CannonConfig_1 = require("../config/CannonConfig");
var GameConfig_1 = require("../GameConfig");
var TipManager_1 = require("../manager/TipManager");
var GameEvent_1 = require("../constant/GameEvent");
//import CannonConfig from "../config/CannonConfig";
var BatteryController = /** @class */ (function () {
    function BatteryController() {
        this.m_cannon = null;
        /** 存放四个炮台*/
        this.m_batteryArr = [];
        /**已发射的子弹数量 */
        this.ShootedBulletAmount = 0;
        this.m_bshoot = false; //是否在射击状态
        this.m_shootIndex = 0; //自己发射子弹的索引
        this.m_shootInterval = 0; //控制射击时间间隔
        /** 死亡或者移动出边界时，都会重置为0*/
        this.LockedFishID = 0;
        /** 收到无用子弹回复后才能请求下一发子弹*/
        this.m_bDispatchMsg = true;
        /** 无用子弹字典，每间隔0.2发送一条，频率太快，服务端会忽略*/
        this.m_uselessMsgDict = [];
        this.m_uselessBulletIdDict = [];
        this.m_totalBulletIdDict = [];
        this.m_reqBulletIdDict = [];
        /** 攻击类型*/
        this.m_shootModel = 0 /* SHOOT_NORMAL */;
        this.m_shootModelLast = 0 /* SHOOT_NORMAL */;
    }
    Object.defineProperty(BatteryController, "Instance", {
        get: function () {
            if (null == this._instance)
                this._instance = new BatteryController();
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "selfCannon", {
        get: function () {
            if (this.m_cannon == null) {
                this.m_cannon = this.GetBatteryByUid(NetLogin_1.default.Instance.RoleInfo.roleId);
            }
            return this.m_cannon;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "BatteryArr", {
        get: function () {
            return this.m_batteryArr;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "gAutoAttackArr", {
        get: function () {
            return this.m_autoAttackArr;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "sAutoAttackArr", {
        set: function (v) {
            this.m_autoAttackArr = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "ShootMode", {
        set: function (v) {
            this.m_shootModel = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BatteryController.prototype, "gShootModel", {
        get: function () {
            return this.m_shootModel;
        },
        enumerable: true,
        configurable: true
    });
    BatteryController.prototype.Init = function () {
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.ReadyRoomResp, this, this.ReadyRoomResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SynRoleResp, this, this.SynRoleResp); //再次同步座位信息
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.ChangeBatteryResp, this, this.ChangeBatteryResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.ShootBulletResp, this, this.ShootBulletResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.ShootErrorResp, this, this.ShootErrorResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.LeaveRoomResp, this, this.LeaveRoomResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.UpdateChipResp, this, this.UpdateChipResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SyncChipsResp, this, this.SyncChipsResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.MqSyncChipsResp, this, this.MqSyncChipsResp); //大厅免转充值，房间内充值是 UpdateChipResp
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.BulletUselessResp, this, this.BulletUselessResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.BulletPassResp, this, this.BulletPassResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SyncJpJettonResp, this, this.SyncJpJettonResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.FishDeadResp, this, this.FishDeadResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.OnePieceResp, this, this.OnePieceResp);
        this.m_autoAttackArr = [];
        this.m_batteryArr = [];
        this.Shoot(false);
        this.m_shootIndex = 0;
        this.ShootedBulletAmount = 0;
        this.LockedFishID = 0;
        this.m_shootInterval = CommonConstant_1.default.ShootRate;
        this.m_shootModel = 0 /* SHOOT_NORMAL */;
        this.MouseDownPoint = new Laya.Point(-1, -1);
        this.InitLockLine();
        this.m_bDispatchMsg = true;
        Laya.timer.frameLoop(1, this, this.ShootBehaviour);
        Laya.timer.loop(CommonConstant_1.default.DispatchUselessMsgDelta, this, this.dispatchUselessMsg);
    };
    BatteryController.prototype.Uninit = function () {
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.ReadyRoomResp, this, this.ReadyRoomResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SynRoleResp, this, this.SynRoleResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.ChangeBatteryResp, this, this.ChangeBatteryResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.ShootBulletResp, this, this.ShootBulletResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.LeaveRoomResp, this, this.LeaveRoomResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.UpdateChipResp, this, this.UpdateChipResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SyncChipsResp, this, this.SyncChipsResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.MqSyncChipsResp, this, this.MqSyncChipsResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.BulletUselessResp, this, this.BulletUselessResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.BulletPassResp, this, this.BulletPassResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SyncJpJettonResp, this, this.SyncJpJettonResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.FishDeadResp, this, this.FishDeadResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.OnePieceResp, this, this.OnePieceResp);
        this.Shoot(false);
        this.ShootedBulletAmount = 0;
        this.LockedFishID = 0;
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        for (var i = 0; i < this.m_batteryArr.length; i++) {
            //if(this.m_batteryArr[i].Gun3D.active)
            {
                this.m_batteryArr[i].Exit();
            }
        }
        this.m_bDispatchMsg = false;
        this.m_uselessMsgDict = [];
        this.m_uselessBulletIdDict = [];
        this.m_totalBulletIdDict = [];
        this.m_reqBulletIdDict = [];
        this.m_cannon = null;
    };
    /**
     * 派发无用子弹的消息
     */
    BatteryController.prototype.dispatchUselessMsg = function () {
        if (this.m_bDispatchMsg) {
            var self_1 = this;
            for (var key in this.m_uselessMsgDict) {
                this.m_bDispatchMsg = false;
                Laya.timer.once(CommonConstant_1.default.SendUselessMsgDelta, self_1, function () {
                    var req = self_1.m_uselessMsgDict[key];
                    NetRoom_1.default.Instance.BulletUseLessReq(req.uid, req.multi, req.bulletid);
                    self_1.m_uselessBulletIdDict[req.bulletid] = req;
                    CommonConstant_1.default._huntSceneTestArry.uselessBulletReq++;
                    //utils.CommonUtils.log("  dispatchUselessMsg bulletId = ", req.bulletid);
                });
                return;
            }
        }
    };
    BatteryController.prototype.Reconnect = function () {
        this.m_autoAttackArr = [];
        this.Shoot(false);
        this.LockedFishID = 0;
        this.m_shootInterval = CommonConstant_1.default.ShootRate;
        this.m_shootModel = 0 /* SHOOT_NORMAL */;
        this.MouseDownPoint = new Laya.Point(-1, -1);
    };
    BatteryController.prototype.StopLockAttack = function () {
        this.Shoot(false);
        this.HideLockLineEffect();
        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_LOCKATTACK, false);
        this.LockedFishID = 0;
    };
    BatteryController.prototype.StopAutoAttack = function () {
        this.Shoot(false);
        this.HideLockLineEffect();
        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_AUTOATTACK, false);
        this.LockedFishID = 0;
    };
    /**
     * 初始化玩家信息
     * @param data 房间内所有的玩家信息
     */
    BatteryController.prototype.ReadyRoomResp = function (data) {
        //GameFacade.Instance.HuntSceneMng.InitFui();
        this.SynRoleResp(data);
        this.TransformView(data);
    };
    /**
     * 再次同步座位信息
     * @param data 房间内所有的玩家信息
     */
    BatteryController.prototype.SynRoleResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("------------------------SynRoleResp data:", data);
        var bUpdateArr = [false, false, false, false];
        //如果玩家自身的位置在上方，则需要调整到下方
        var tempData = this.TransformView(data);
        for (var i = 0; i < tempData.length; i++) {
            var index = tempData[i].position - 1; //服务端位置从1开始
            this.m_batteryArr[index].UpdateInfo(tempData[i]);
            bUpdateArr[index] = true;
            // //获取玩家的炮台
            // if (!this.selfCannon && NetLogin.Instance.RoleInfo.roleId == this.m_batteryArr[index].Data.uid) {
            //     this.m_cannon = this.m_batteryArr[index];
            // }
        }
        for (var i = 0; i < bUpdateArr.length; i++) {
            if (!bUpdateArr[i]) {
                this.m_batteryArr[i].UpdateInfo(null);
            }
        }
    };
    /**
     * 如果玩家自身的位置在上方，则需要变换上下炮台的位置以及场景中鱼的位置
    */
    BatteryController.prototype.TransformView = function (data) {
        var tempData = data.slice();
        var bTransform = false;
        for (var i = 0; i < data.length; i++) {
            if (data[i].uid.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString() && data[i].position > 2) {
                GameFacade_1.default.Instance.HuntSceneMng._bTransform = true;
                break;
            }
        }
        if (GameFacade_1.default.Instance.HuntSceneMng._bTransform) {
            for (var i = 0; i < data.length; i++) {
                // if (data[i].position == 1 || data[i].position == 3) {
                //     tempData[i].position = 4 - data[i].position;
                // }
                // if (data[i].position == 2 || data[i].position == 4) {
                //     tempData[i].position = 6 - data[i].position;
                // }
                tempData[i].position = 5 - data[i].position;
            }
            //GameFacade.Instance.ConfigMng.TransformFishPath();
            //GameFacade.Instance.HuntSceneMng.TransformFishView();
            return tempData;
        }
        return data;
    };
    /**
     * 玩家切换炮台倍率
     * @param data 玩家uid
     */
    BatteryController.prototype.ChangeBatteryResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("------------------ChangeBatteryResp data:", data);
        var cannon = this.GetBatteryByUid(data.uid);
        cannon.UpdateBulletMulti(data.multi);
    };
    BatteryController.prototype.ShootErrorResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("------------------ShootErrorResp data:", data);
        CommonConstant_1.default._huntSceneTestArry.ShootErrorResp++;
    };
    /**
     * 子弹发射消息返回
     * @param data
     */
    BatteryController.prototype.ShootBulletResp = function (data) {
        if (!Laya.stage.isVisibility)
            return; //切换到后台，停止子弹创建
        var cannon = this.GetBatteryByUid(data.uid);
        if (null != cannon) {
            cannon.CreateBullet(data);
            if (NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
                CommonConstant_1.default._huntSceneTestArry.shootBulletResp++;
                BatteryController.Instance.m_totalBulletIdDict[data.bulletid] = data;
                delete BatteryController.Instance.m_reqBulletIdDict[data.bulletid];
                var chips = Number(data.jettonshow) + Number(GameFacade_1.default.Instance.GameMng.getFlyingBulletChips());
                CommonUtil_1.utils.CommonUtils.log("-- CreateBullet bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString(), " chips = ", chips.toString(), " data = ", data);
            }
        }
    };
    /**
     * 离开房间
     * @param data 玩家uid
     */
    BatteryController.prototype.LeaveRoomResp = function (data) {
        this.UpdateBattery(data.uid);
    };
    /**
    * 房间内免转加钱、平台充值提现  刷新金币
    * @param data 玩家uid
    */
    BatteryController.prototype.UpdateChipResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("-- 免转加钱 刷新金币 UpdateChipResp bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString());
        this.UpdateBattery(data.uid);
    };
    /**
    * 玩家请求 同步金币
    * @param data 玩家uid
    */
    BatteryController.prototype.SyncChipsResp = function (data) {
        //utils.CommonUtils.log("-- 玩家请求 同步真实金币 SyncChipsResp  coin= ", data.chips.toString(), " realChips = ", GameFacade.Instance.GameMng.realChips.toString());
        //this.m_realChips = data.chips as number;
        this.UpdateBattery(NetLogin_1.default.Instance._playerLoginInfo.role.roleId);
    };
    /**
  * 同步玩家自己金币(用于免转) 大厅免转充值
  * @param data 玩家uid
  */
    BatteryController.prototype.MqSyncChipsResp = function (data) {
        //utils.CommonUtils.log("-- 同步金币 SyncChipsResp  coin = ", data.chips.toString());
        this.UpdateBattery(NetLogin_1.default.Instance._playerLoginInfo.role.roleId);
    };
    /**
     * 无效子弹信息
     * @param data
     */
    BatteryController.prototype.BulletUselessResp = function (data) {
        if (NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
            CommonUtil_1.utils.CommonUtils.log("-- 无效子弹信息 BulletUselessResp bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString());
            delete BatteryController.Instance.m_uselessMsgDict[data.bulletid];
            delete BatteryController.Instance.m_uselessBulletIdDict[data.bulletid];
            delete BatteryController.Instance.m_totalBulletIdDict[data.bulletid];
            CommonConstant_1.default._huntSceneTestArry.uselessBulletResp++;
            BatteryController.Instance.m_bDispatchMsg = true;
        }
        this.UpdateBattery(data.uid);
    };
    /**
     * 有效子弹信息
     * @param data
     */
    BatteryController.prototype.BulletPassResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("-- 有效子弹信息 BulletPassResp bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString());
        if (NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
            CommonConstant_1.default._huntSceneTestArry.BulletPassResp++;
        }
        this.UpdateBattery(data.uid);
    };
    /**
     * Jp奖励同步
     * @param data
     */
    BatteryController.prototype.SyncJpJettonResp = function (data) {
        this.UpdateBattery(data.uid);
    };
    /**
     * 鱼死亡同步
     * @param data
     */
    BatteryController.prototype.FishDeadResp = function (data) {
        //utils.CommonUtils.log("-- 鱼死亡同步 FishDeadResp bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString(), " realChips = ", GameFacade.Instance.GameMng.realChips.toString());
        //如果配合回收金币特效延迟更新数据会导致很多异常问题，所以此处直接更新金币
        this.UpdateBattery(data.uid);
        if (NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
            CommonConstant_1.default._huntSceneTestArry.fishDeadResp++;
        }
    };
    BatteryController.prototype.OnePieceResp = function (data) {
        //utils.CommonUtils.log("-- OnePieceResp bulletID = ", data.bulletid.toString(), " coin= ", data.jettonshow.toString());
        this.UpdateBattery(data.uid);
    };
    /**
     * 玩家UI进行更新并返回玩家炮台UI对象
     * @param userId 玩家uid
     */
    BatteryController.prototype.UpdateBattery = function (userId) {
        var cannon = this.GetBatteryByUid(userId);
        if (cannon) {
            var angle = cannon.UpdatePlayerInfoShow();
        }
        return;
    };
    BatteryController.prototype.CoinFlyingFinish = function (userId, data) {
        var cannon = this.GetBatteryByUid(userId);
        if (cannon) {
            cannon.CoinFlyingFinish(userId, data);
        }
    };
    BatteryController.prototype.GetBatteryByUid = function (userId) {
        for (var i = 0; i < this.m_batteryArr.length; i++) {
            if (this.m_batteryArr[i].Data != null) {
                //utils.CommonUtils.log("----------this.m_batteryArr[i].Data.uid = ", this.m_batteryArr[i].Data.uid);
                if (userId.toString() == this.m_batteryArr[i].Data.uid.toString()) {
                    return this.m_batteryArr[i];
                }
            }
        }
        CommonUtil_1.utils.CommonUtils.warn("------------不存在userid：", userId.toString());
        return null;
    };
    /**
     * 根据炮台倍数获取炮台资源ID
     * @param index 炮台倍数
     */
    BatteryController.prototype.GetBatteryResIdByMulti = function (multi) {
        var index = this.GetBatteryIndexByMulti(multi);
        var resId = this.GetBatteryResId(index);
        return resId;
    };
    /**
     * 获取炮台倍数对应的数组下标
     * @param multi 炮台倍数
     */
    BatteryController.prototype.GetBatteryIndexByMulti = function (multi) {
        for (var index = 0; index < NetRoom_1.default.Instance._curRoomInfo.battery.length; index++) {
            var element = NetRoom_1.default.Instance._curRoomInfo.battery[index];
            if (element == multi)
                return index;
        }
        return 0;
    };
    /**
     * 根据下标获取炮台资源ID
     * @param index 炮台下标
     */
    BatteryController.prototype.GetBatteryResId = function (index) {
        if (index < 4) {
            return 1;
        }
        else if (index < 8) {
            return 2;
        }
        else {
            return 3;
        }
    };
    BatteryController.prototype.Shoot = function (bshoot) {
        this.m_bshoot = bshoot;
    };
    /// <summary>射击行为  canShoot只有在间隔时间后才能射击，其余的调用只是作为转角度</summary>
    /// <param name="isTouch">是否执行射击操作</param>
    BatteryController.prototype.ShootBehaviour = function () {
        if (!Laya.stage.isVisibility)
            return; //切换到后台，停止子弹发射
        //this.m_shootInterval += CommonConstant.Delta;//Laya.timer.delta;
        this.m_shootInterval += Laya.timer.delta;
        if (this.m_bshoot) {
            switch (this.m_shootModel) {
                case 0 /* SHOOT_NORMAL */:
                    {
                        this.NormalShootModel();
                    }
                    break;
                case 1 /* SHOOT_AUTO */:
                    this.AutoShootModel();
                    break;
                case 2 /* SHOOT_LOCK */:
                    this.LockShootModel();
                    break;
                case 3 /* SHOOT_STOP */:
                    {
                        if (BatteryController.Instance.ShootedBulletAmount < CommonConstant_1.default.ShootMaxNum) {
                            this.m_shootModel = this.m_shootModelLast;
                        }
                    }
                    break;
            }
        }
    };
    /// <summary>普通攻击模式</summary>
    BatteryController.prototype.NormalShootModel = function () {
        //utils.CommonUtils.log("NormalShootModel");
        this.AimAndFireByPoint(Laya.stage.mouseX, Laya.stage.mouseY);
    };
    /**自动攻击*/
    BatteryController.prototype.AutoShootModel = function () {
        var len = BatteryController.Instance.gAutoAttackArr.length;
        //没有选择要自动攻击的鱼    
        if (!GameFacade_1.default.Instance.HuntSceneMng._bSelectedFish) {
            this.LockedFishID = 0;
            if (this.bAutoAttackMouseDown) {
                this.AimAndFireByPoint(Laya.stage.mouseX, Laya.stage.mouseY);
            }
            else {
                this.AimAndFireByPoint(this.MouseDownPoint.x, this.MouseDownPoint.y);
            }
            return;
        }
        else {
            if (this.LockedFishID.toString() == "0") {
                for (var i = len - 1; i >= 0; i--) {
                    if (this.m_autoAttackArr[i]) {
                        var fishType = i;
                        for (var key in FishController_1.default.Instance.FishObjDict) {
                            var obj = FishController_1.default.Instance.FishObjDict[key];
                            if (obj._MFishInfo._mFishType == fishType && obj.CheckIsFishInWall()) {
                                this.LockedFishID = obj._MFishInfo._mFishId;
                                this.LockShootModel();
                                return;
                            }
                        }
                        // 屏幕中暂无要捕的鱼,取消锁定特效
                        this.HideLockLineEffect();
                    }
                }
            }
            else {
                this.LockShootModel(); //持续攻击当前锁定的鱼，直到此鱼死亡或者移动出边界
            }
        }
    };
    /**锁定攻击*/
    BatteryController.prototype.LockShootModel = function () {
        if (this.LockedFishID.toString() == "0") {
            this.HideLockLineEffect();
            this.selfCannon.PlayAnimation(CannonConfig_1.default._IdleAni);
            return;
        }
        var fishPos = GameFacade_1.default.Instance.HuntSceneMng.GetFishPointById(this.LockedFishID.toString());
        if (fishPos == null) {
            this.selfCannon.PlayAnimation(CannonConfig_1.default._IdleAni);
            return;
        }
        this.AimAndFireByPoint(fishPos.x, fishPos.y);
    };
    BatteryController.prototype.AimAndFireByPoint = function (posX, posY) {
        if (this.selfCannon == null || null == this.selfCannon.Gun3D) {
            CommonUtil_1.utils.CommonUtils.log("AimAndFireByPoin::炮台信息为空");
            return; //加载点击时出现卡死现象
        }
        //发射的子弹超出上限
        if (BatteryController.Instance.ShootedBulletAmount == CommonConstant_1.default.ShootMaxNum) {
            GameFacade_1.default.Instance.TipMng.createTip(CommonConstant_1.default._PromptContent.BulletMax, TipManager_1.TipType.FLOATTIP);
            this.HideLockLineEffect();
            this.m_shootModelLast = this.m_shootModel;
            this.m_shootModel = 3 /* SHOOT_STOP */;
            return;
        }
        var angle = this.selfCannon.Gun3D.transform.rotationEuler.z;
        //var angle = cannon.Gun.rotation;
        if (posX != -1 && posY != -1) {
            var tempAngle = this.selfCannon.UpdateAngleByPos(posX, posY);
            angle = tempAngle == -1 ? angle : tempAngle;
            //锁定攻击时，炮身体旋转到90度，就停止攻击
            // if (tempAngle == -1 && this.LockedFishID != 0) {
            //     this.HideLockLineEffect();
            //     return;  //-1表示点击无效
            // }
        }
        this.LockLineEffect(angle);
        if (this.m_shootInterval >= CommonConstant_1.default.ShootRate) {
            this.m_shootInterval = 0;
            this.Fire(angle);
        }
    };
    // /**
    //  * 是否有足够的筹码
    //  * @param cannon 
    //  */
    // public isEnoughChip(cannon: Cannon): boolean {
    //     let jettonShow = utils.CommonUtils.numberFixed(cannon.Data.jetton_show as number);
    //     let bulletMulti = utils.CommonUtils.numberFixed(cannon.Data.bullet_multi * NetRoom.Instance._curRoomInfo.ante);
    //     if (jettonShow < bulletMulti) {
    //         //GameFacade.Instance.WalletMng.setNoEnoughChip(jettonShow);
    //         return false;
    //     }
    //     else {
    //         return true;
    //     }
    // }
    BatteryController.prototype.Fire = function (angle) {
        if (!GameFacade_1.default.Instance.WalletMng.IsfgWalletEnough()) {
            this.StopAutoAttack();
            this.StopLockAttack();
            return;
        }
        var uid = NetLogin_1.default.Instance.RoleInfo.roleId;
        var bullet_multi = this.GetBatteryByUid(uid).Data.bullet_multi;
        var time = 1;
        var bulletid = NetRoom_1.default.Instance._RoomRoleInfoDict[uid.toString()].position * 10000000 + this.m_shootIndex++;
        NetRoom_1.default.Instance.ShootBulletReq(uid, bullet_multi, angle, time, this.LockedFishID, bulletid);
    };
    // 暂不知laya的图片平铺如何使用。。。
    // 1.先在m_lineSp上贴足够长距离的点
    // 2.根据距离长度，显示距离内的点
    // 3.然后旋转m_lineSp角度即可
    BatteryController.prototype.InitLockLine = function () {
        //锁定攻击的线
        this.m_lineSp = new Laya.Sprite();
        this.m_lineSp.pos(100, 720);
        var huntPanel = GameFacade_1.default.Instance.SceneMng.GetPanelById(1 /* HuntPanel */);
        huntPanel.m_layaUINode.addChild(this.m_lineSp);
        var len = Math.floor(GameConfig_1.default.width / CommonConstant_1.default.LinePointWith);
        for (var i = 0; i < len; i++) {
            var point = new Laya.Image(CommonConstant_1.default._linePointPath);
            point.pos(0, -i * CommonConstant_1.default.LinePointWith);
            point.anchorX = 0.5;
            point.anchorY = 0.5;
            this.m_lineSp.addChild(point);
        }
        this.m_aimImg = new Laya.Image(CommonConstant_1.default._aimImgPath);
        this.m_aimImg.anchorX = 0.5;
        this.m_aimImg.anchorY = 0.5;
        this.m_aimImg.scale(0.5, 0.5);
        huntPanel.m_layaUINode.addChild(this.m_aimImg);
        this.HideLockLineEffect();
    };
    /** 锁定特效 */
    BatteryController.prototype.LockLineEffect = function (rotate) {
        var startPos = new Laya.Vector3(0, 0, 0);
        var outFishPos = new Laya.Vector3(0, 0, 0);
        var lockedFish = FishController_1.default.Instance.FishObjDict[this.LockedFishID.toString()];
        if (lockedFish == null || lockedFish == undefined) {
            this.HideLockLineEffect();
            return;
        }
        var cameraHunt = GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera;
        var cameraGun = GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera;
        cameraHunt.viewport.project(lockedFish._OwnerPos, cameraHunt.projectionViewMatrix, outFishPos);
        var worldPos = this.selfCannon.Gun3D.getChildByName("BulletPos").transform.position;
        cameraGun.worldToViewportPoint(worldPos, startPos);
        var distance = Laya.Vector3.distance(startPos, outFishPos);
        var len = Math.floor(distance / CommonConstant_1.default.LinePointWith);
        for (var i = 0; i < this.m_lineSp.numChildren; i++) {
            var point = this.m_lineSp.getChildAt(i);
            if (i < len) {
                point.visible = true;
            }
            else {
                point.visible = false;
            }
        }
        this.m_aimImg.pos(outFishPos.x, outFishPos.y);
        this.m_aimImg.visible = true;
        this.m_lineSp.rotation = rotate;
        this.m_lineSp.pos(startPos.x, startPos.y);
        this.m_lineSp.visible = true;
    };
    BatteryController.prototype.HideLockLineEffect = function () {
        if (this.m_lineSp && this.m_aimImg) {
            this.m_lineSp.visible = false;
            this.m_aimImg.visible = false;
        }
    };
    return BatteryController;
}());
exports.default = BatteryController;
},{"../GameConfig":2,"../GameFacade":3,"../config/CannonConfig":5,"../constant/CommonConstant":7,"../constant/GameEvent":9,"../manager/TipManager":69,"../net/ProtoHander/EventNetResponse":75,"../net/ProtoHander/NetLogin":80,"../net/ProtoHander/NetRoom":84,"../utils/CommonUtil":90,"./FishController":13}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../GameFacade");
var EventNetResponse_1 = require("../net/ProtoHander/EventNetResponse");
var NetLogin_1 = require("../net/ProtoHander/NetLogin");
var FishInfo_1 = require("../game/Fish/FishInfo");
var FishBase_1 = require("../game/Fish/FishBase");
var NetRoom_1 = require("../net/ProtoHander/NetRoom");
var BatteryController_1 = require("./BatteryController");
var CommonUtil_1 = require("../utils/CommonUtil");
var EnumData_1 = require("../Enum/EnumData");
var CommonConstant_1 = require("../constant/CommonConstant");
var CoinFlying_1 = require("../game/CoinEffect/CoinFlying");
var SoundNameConstant_1 = require("../constant/SoundNameConstant");
var AutoDestroy_1 = require("../utils/AutoDestroy");
var GameEvent_1 = require("../constant/GameEvent");
var FishController = /** @class */ (function () {
    function FishController() {
        /** 当前被攻击的鱼类型*/
        this._FishHitedType = null;
        this._PoolSign = null;
    }
    Object.defineProperty(FishController, "Instance", {
        get: function () {
            if (null == this._instance)
                this._instance = new FishController();
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FishController.prototype, "FishObjDict", {
        get: function () {
            return this._FishObjDict;
        },
        enumerable: true,
        configurable: true
    });
    FishController.prototype.Init = function () {
        this._PoolSign = "bounsFont";
        this._FishObjDict = {};
        this._FishHitedType = null;
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SynFishResp, this, this.CreateFish);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.FishDeadResp, this, this.FishDeadResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.OnePieceResp, this, this.OnePieceResp);
    };
    FishController.prototype.Uninit = function () {
        this._FishObjDict = null;
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SynFishResp, this, this.CreateFish);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.FishDeadResp, this, this.FishDeadResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.OnePieceResp, this, this.OnePieceResp);
        Laya.Pool.clearBySign(this._PoolSign);
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
    };
    FishController.prototype.CreateFish = function (data) {
        var fishCount = data.fish_list.length;
        for (var index = 0; index < fishCount; index++) {
            var fishResp = data.fish_list[index];
            //   if(fishResp.type > 4)continue;//todo
            if (this._FishObjDict[fishResp.id.toString()]) {
                CommonUtil_1.utils.CommonUtils.warn("已经存在鱼ID: " + fishResp.id);
                continue;
            }
            /// this.FishWarn(fishResp.type);
            var fishSpeed = NetLogin_1.default.Instance.FishInfoList(fishResp.type).fish_speed;
            var fishInfo = new FishInfo_1.default();
            fishInfo._mFishId = fishResp.id;
            fishInfo._mFishType = fishResp.type;
            fishInfo._mFishModelType = GameFacade_1.default.Instance.HuntSceneMng.GetFishModelType(fishResp.type);
            fishInfo._mPathId = fishResp.path_id;
            fishInfo._mSpeed = fishSpeed;
            fishInfo._mFishCreateTime = (fishResp.create_time_ms - NetLogin_1.default.Instance._timeOffset);
            fishInfo._mForzenTime = fishResp.frozen_time_ms;
            fishInfo._mModel = fishResp.model;
            var fwp = GameFacade_1.default.Instance.ConfigMng.FishPathConfig[fishInfo._mPathId]; // as FishWayPoint;
            fishInfo._mPathLenght = fwp._wayLength;
            fishInfo._mWayPoints = fwp._points;
            if (fishResp.pos > 0) {
                if (fishResp.model == 1) {
                    var fishModelType = fishInfo._mFishModelType;
                    if (fishInfo._mWayPoints[0].x >= 0) {
                        var fwpr = GameFacade_1.default.Instance.ConfigMng.FishOffsetConfig.get("L" + fishModelType); // as FishWayPoint;
                        Laya.Vector3.scale(fwpr._points[fishResp.pos], -1, fishInfo._offsetPoints);
                        //Debug.Log("右边出鱼");
                    }
                    else {
                        var fwpr = GameFacade_1.default.Instance.ConfigMng.FishOffsetConfig.get("R" + fishModelType); // as FishWayPoint;
                        fishInfo._offsetPoints = fwpr._points[fishResp.pos];
                        //Debug.Log("左边出鱼");
                    }
                }
            }
            // let node = GameFacade.Instance.HuntSceneMng._HuntScene.addChild(new Laya.Sprite()) as Laya.Sprite;
            // node.zOrder = fishResp.type;
            var fishScript = GameFacade_1.default.Instance.HuntSceneMng.InstantiateFish(fishResp.type).getComponent(FishBase_1.FishBase);
            this._FishObjDict[fishResp.id.toString()] = fishScript;
            fishScript.Init(fishInfo);
            fishScript.StartMove();
        }
    };
    /**
    * 鱼死亡同步
    * @param data
    */
    FishController.prototype.FishDeadResp = function (data) {
        var len = data.fish_killed.length;
        var deadFishType = -1;
        for (var i = 0; i < len; i++) {
            var fishInfo = data.fish_killed[i];
            var tFishBase = this._FishObjDict[fishInfo.fish_id.toString()];
            if (null != tFishBase && tFishBase._MFishInfo._mFishType == EnumData_1.default.FishSubtype.Bomb_fish) {
                deadFishType = EnumData_1.default.FishSubtype.Bomb_fish; //如果炮弹打死的鱼是炸弹鱼、鱼王
                break;
            }
        }
        for (var i = 0; i < len; i++) {
            var fishInfo = data.fish_killed[i];
            this.GetCoinEffect(data.uid, fishInfo, data.jettonshow, i, deadFishType);
            this.OnDeadFishOrMoveEnd(fishInfo.fish_id, true, fishInfo.bonus, data.uid, deadFishType);
        }
    };
    /** 从世界Boss身上掉下金币*/
    FishController.prototype.OnePieceResp = function (data) {
        for (var i = 0; i < data.fish_killed.length; i++) {
            var tinfo = data.fish_killed[i];
            this.NormalCoinEffect(data.uid, tinfo, data.jettonshow, i);
            if (BatteryController_1.default.Instance.gShootModel == 1 /* SHOOT_AUTO */) {
                GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_HUNTEDFISH, [tinfo.bonus, this._FishObjDict[tinfo.fish_id.toString()]._MFishInfo._mFishType]);
            }
        }
    };
    //#region  爆金币逻辑
    /**
     * 普通爆金币特效
     * @param ownerUid 玩家uid
     * @param data 打死的鱼的奖励信息
     */
    FishController.prototype.NormalCoinEffect = function (ownerUid, data, jettonshow, i) {
        var _this = this;
        if (!Laya.stage.isVisibility)
            return; //切换到后台，停止子弹创建
        var fish_id = data.fish_id;
        if (this._FishObjDict[fish_id.toString()]) {
            var tFishBase = this._FishObjDict[fish_id.toString()];
            var tfish_config = NetLogin_1.default.Instance.FishInfoList(tFishBase._MFishInfo._mFishType);
            var tbasic_reward = CommonUtil_1.utils.CommonUtils.numberFixed(tfish_config.fish_rate);
            var coinNumToShow = this.GetCoinNumsToShow(tFishBase._MFishInfo._mFishType);
            var tPos = new Laya.Vector3(tFishBase._OwnerPos.x, tFishBase._OwnerPos.y, tFishBase._OwnerPos.z);
            var tempPos = new Laya.Vector3(0, 0, 0);
            GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera.worldToViewportPoint(tPos, tempPos);
            tPos = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera, tempPos);
            this.CoinResCreate(ownerUid, data, jettonshow, coinNumToShow, tPos, true, i);
            //金币数字
            var bounsFont_1 = this.CreatBounsFont(data.bonus, tempPos, 0.3, ownerUid);
            //bounsFont.scale(1.4, 1.4);
            var scaleSize_1 = 0.6;
            Laya.Tween.to(bounsFont_1, { scaleX: 1.5, scaleY: 1.5 }, 100, null, Laya.Handler.create(this, function () {
                Laya.Tween.to(bounsFont_1, { scaleX: scaleSize_1, scaleY: scaleSize_1 }, 200, null, Laya.Handler.create(_this, function () {
                    Laya.Tween.to(bounsFont_1, { scaleX: scaleSize_1 + 0.1, scaleY: scaleSize_1 + 0.1 }, 200, null, Laya.Handler.create(_this, function () {
                        Laya.Tween.to(bounsFont_1, { scaleX: scaleSize_1, scaleY: scaleSize_1 }, 200, null, Laya.Handler.create(_this, function () {
                        }));
                    }));
                }));
            }));
            Laya.Tween.to(bounsFont_1, { y: bounsFont_1.y - 50 }, 100, null, Laya.Handler.create(this, function () { }));
            Laya.Tween.to(bounsFont_1, {}, 800, null, Laya.Handler.create(this, function () {
                Laya.Tween.to(bounsFont_1, { alpha: 0 }, 100, null, Laya.Handler.create(_this, function () { }));
                Laya.Pool.recover(_this._PoolSign, bounsFont_1);
            }));
        }
    };
    /**
     * 爆金币字体
     * @param bonus 要显示的数值大小
     * @param screenPos 字体要显示的坐标
     * @param scale 缩放比例
     */
    FishController.prototype.CreatBounsFont = function (bonus, screenPos, sacle, uid) {
        if (uid === void 0) { uid = null; }
        var huntPanel = GameFacade_1.default.Instance.SceneMng.GetPanelById(1 /* HuntPanel */);
        var fontSkin = CommonConstant_1.default._bounsFontSelf;
        //如果是其他炮打死鱼，使用其他字体
        if (uid != null && !NetLogin_1.default.Instance.IsSelfUid(uid)) {
            fontSkin = CommonConstant_1.default._bounsFontOther;
        }
        var bounsFont = Laya.Pool.getItem(this._PoolSign);
        if (bounsFont == null) {
            bounsFont = CommonUtil_1.utils.CommonUtils.CreatFontClip(new Laya.Point(screenPos.x, screenPos.y), fontSkin, ".+0123456789", huntPanel.m_layaUINode, 100); //new Laya.FontClip(fontSkin, ".+0123456789");
            bounsFont.scale(sacle, sacle);
            bounsFont.anchorX = 0.5;
            bounsFont.anchorY = 0.5;
            bounsFont.value = "+" + CommonUtil_1.utils.CommonUtils.numberFixed(bonus).toFixed(2);
        }
        else {
            bounsFont.pos(screenPos.x, screenPos.y);
            bounsFont.visible = true;
            bounsFont.alpha = 1;
            bounsFont.skin = fontSkin;
            bounsFont.scale(sacle, sacle);
            bounsFont.value = "+" + CommonUtil_1.utils.CommonUtils.numberFixed(bonus).toFixed(2);
        }
        return bounsFont;
    };
    /**
     * 鱼死亡获得金币银币的特效播放
     * @param data
     * @param fishScript
     */
    FishController.prototype.GetCoinEffect = function (ownerUid, data, jettonshow, i, fishType) {
        if (!Laya.stage.isVisibility)
            return; //切换到后台，停止子弹创建
        if (this._FishObjDict[data.fish_id.toString()]) {
            this.NormalCoinEffect(ownerUid, data, jettonshow, i);
            var tFishBase = this._FishObjDict[data.fish_id.toString()];
            var tfish_config = NetLogin_1.default.Instance.FishInfoList(tFishBase._MFishInfo._mFishType);
            var tbasic_reward = CommonUtil_1.utils.CommonUtils.numberFixed(tfish_config.fish_rate);
            if ((tbasic_reward > CommonConstant_1.default.fishRate.Fifty) && (tbasic_reward <= CommonConstant_1.default.fishRate.Sixty)) //触发半屏转盘
             {
                //todo 20号-25号鱼金币相关逻辑
                var tPos = new Laya.Vector3(tFishBase._OwnerPos.x, tFishBase._OwnerPos.y, tFishBase._OwnerPos.z);
                var tempPos = new Laya.Vector3(0, 0, 0);
                GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera.worldToViewportPoint(tPos, tempPos);
                tPos = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera, tempPos);
                this.AwardEffect(ownerUid, tFishBase._MFishInfo._mFishType, data.bonus, SoundNameConstant_1.default.soundKeyArr.bigFishCoin, tPos, true);
            }
            else if (tbasic_reward >= CommonConstant_1.default.fishRate.Eighty) { //触发全屏转盘
                if (tfish_config.fish_class != EnumData_1.default.FishCategory.Frozen_fish) {
                    //todo boss鱼金币相关逻辑 
                    var tPos = new Laya.Vector3(0, 0, 0); // utils.CommonUtils.ScreenToWorldPoint(GameFacade.Instance.HuntSceneMng._HuntSceneCamera, new Laya.Vector3(GameConfig.width / 2, GameConfig.height / 2, 0));
                    this.AwardEffect(ownerUid, tFishBase._MFishInfo._mFishType, data.bonus, SoundNameConstant_1.default.soundKeyArr.bossFishCoin, tPos, false);
                }
            }
            else {
                if (fishType != EnumData_1.default.FishSubtype.Bomb_fish) {
                    GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.coin);
                }
            }
            //todo 特殊鱼种处理
            switch (tFishBase._MFishInfo._mFishType) {
                case EnumData_1.default.FishSubtype.Bomb_fish: {
                    var bombEffect = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.BombFishExpEffect);
                    ////let tPos = utils.CommonUtils.ScreenToWorldPoint(GameFacade.Instance.HuntSceneMng._HuntSceneCamera, new Laya.Vector3(GameConfig.width / 2, GameConfig.height / 2, 0));
                    bombEffect.transform.localPosition = new Laya.Vector3(0, 0, 0); //tPos;
                    // bombEffect.active = true;
                    var ad = CommonUtil_1.utils.CommonUtils.CustomAddComponent(bombEffect, AutoDestroy_1.default);
                    ad.InitData(8000, false);
                    break;
                }
            }
        }
    };
    FishController.prototype.AwardEffect = function (ownerUid, type, reward, soundName, tPos, bHalf) {
        var panel = GameFacade_1.default.Instance.SceneMng.GetPanelById(1 /* HuntPanel */);
        //转盘
        panel.AwardEffect(ownerUid, type, reward, bHalf);
        //爆金币
        this.ScreenBombCoinEffect(soundName, tPos, ownerUid, bHalf);
    };
    FishController.prototype.ScreenBombCoinEffect = function (soundName, tPos, ownerUid, bHalf) {
        var effectName = bHalf ? CommonConstant_1.default._huntSceneEffectArray.Half_screenBomb_2 : CommonConstant_1.default._huntSceneEffectArray.Full_screenBomb_2;
        var cloneIns = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(effectName);
        //let textureName = (NetLogin.Instance.IsSelfUid(ownerUid) ? CommonConstant._TextureArray.Gold : CommonConstant._TextureArray.Silver);
        //GameFacade.Instance.ResourceMng.LoadTexture2D(textureName, function (t: Laya.Texture2D) {
        //    ((cloneIns.getChildAt(0) as Laya.ShuriKenParticle3D).particleRenderer.material as Laya.ShurikenParticleMaterial).texture = t;
        cloneIns.transform.position = tPos;
        var ad = CommonUtil_1.utils.CommonUtils.CustomAddComponent(cloneIns, AutoDestroy_1.default);
        ad.InitData(5000, false); //该特效最长时间为5秒
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, soundName);
        //});
    };
    /**
     *
     * @param uid 玩家uid
     * @param data 打死鱼的奖金信息
     * @param coinNum 要显示的金币个数
     * @param startPos 金币开始位置
     * @param isScreenPos 是否为屏幕坐标
     */
    FishController.prototype.CoinResCreate = function (uid, data, jettonshow, coinNum, startPos, isScreenPos, index) {
        if (!isScreenPos) {
            var tempPos = new Laya.Vector3(0, 0, 0);
            GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera.worldToViewportPoint(startPos, tempPos);
            startPos = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, tempPos);
        }
        var tcannon = BatteryController_1.default.Instance.GetBatteryByUid(uid);
        if (null == tcannon)
            return;
        var tendPos = tcannon.CoinEndPos;
        tendPos = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, tendPos);
        var self = this;
        var _loop_1 = function (i) {
            var cloneIns = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.GoldCoin);
            var textureName = (NetLogin_1.default.Instance.IsSelfUid(uid) ? CommonConstant_1.default._TextureArray.Gold : CommonConstant_1.default._TextureArray.Silver);
            GameFacade_1.default.Instance.ResourceMng.LoadTexture2D(textureName, function (t) {
                cloneIns.getChildAt(0).particleRenderer.material.texture = t;
                //(cloneIns.getChildAt(0) as Laya.ShuriKenParticle3D).particleSystem.startLifetimeConstant = 50;
                //(cloneIns.getChildAt(0) as Laya.ShuriKenParticle3D).particleSystem.textureSheetAnimation.cycles = 50;
                var toffsetX = CommonUtil_1.utils.CommonUtils.randomFloat(-1, 1);
                var toffsetY = CommonUtil_1.utils.CommonUtils.randomFloat(0.1, 1);
                cloneIns.transform.position = new Laya.Vector3(startPos.x + toffsetX, startPos.y + toffsetY, startPos.z);
                cloneIns.active = true;
                //cloneIns.transform.localScale = new Laya.Vector3(0.5, 0.5, 0.5);
                // Laya.timer.once(500, self, function () {
                //     Laya.Tween.to(cloneIns.transform, { localScaleX: 1, localScaleY: 1, localScaleZ: 1 }, 200, null, Laya.Handler.create(self, function () { }));
                //     Laya.Tween.to(cloneIns.transform, { localPositionY: cloneIns.transform.localPositionY + 3 }, 200, Laya.Ease.quadIn, Laya.Handler.create(self, function () {
                //         Laya.Tween.to(cloneIns.transform, { localScaleX: 1, localScaleY: 1, localScaleZ: 1 }, 150, null, Laya.Handler.create(self, function () { }));
                //         Laya.Tween.to(cloneIns.transform, { localPositionY: cloneIns.transform.localPositionY - 1 }, 150, Laya.Ease.quadOut, Laya.Handler.create(self, function () {
                //             Laya.timer.once(500, self, function () {
                //                 let ad = utils.CommonUtils.CustomAddComponent(cloneIns, CoinFlying) as CoinFlying;
                //                 ad.InitData(index * 50, tendPos, false, uid, data, jettonshow);
                //             });
                //         }));
                //     }));
                // })
                Laya.timer.once(500, self, function () {
                    Laya.Tween.to(cloneIns.transform, {
                        localPositionX: cloneIns.transform.localPositionX + 0,
                        localPositionY: cloneIns.transform.localPositionY + 1,
                    }, 300, Laya.Ease.quintOut, Laya.Handler.create(self, function () {
                        var ad = CommonUtil_1.utils.CommonUtils.CustomAddComponent(cloneIns, CoinFlying_1.default);
                        ad.InitData(index * 50, tendPos, false, uid, data, jettonshow);
                    }));
                });
            });
        };
        for (var i = 0; i < coinNum; i++) {
            _loop_1(i);
        }
    };
    /**
     * 获得的金币个数用于效果展示
     * @param fishtype 获得金币价值
     */
    FishController.prototype.GetCoinNumsToShow = function (fishtype) {
        switch (fishtype) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
                return 5;
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 26:
                return 7;
            case 13:
            case 14:
            case 15:
            case 16:
                return 10;
            case 17:
            case 18:
            case 19:
            case 20:
                return 12;
            case 21:
            case 23:
                return 15;
            case 25:
                return 16;
            default:
                break;
        }
        return 2;
    };
    //#endregion
    /**
     * 鱼路劲周期走完或者鱼死亡，自动被删除
     * @param fishId 鱼ID
     * @param isDead 是否死亡
     */
    FishController.prototype.OnDeadFishOrMoveEnd = function (fishId, isDead, bouns, uid, deadFishType) {
        if (bouns === void 0) { bouns = 0; }
        if (uid === void 0) { uid = 0; }
        if (deadFishType === void 0) { deadFishType = -1; }
        if (this._FishObjDict[fishId.toString()]) {
            var tFishBase = this._FishObjDict[fishId.toString()];
            tFishBase.Remove(isDead, bouns, uid, deadFishType);
            delete this._FishObjDict[fishId.toString()];
            if (fishId.toString() == BatteryController_1.default.Instance.LockedFishID.toString()) {
                BatteryController_1.default.Instance.LockedFishID = 0;
            }
        }
    };
    /**
    * 击中鱼请求服务器认证
    * @param fishId 被击中的鱼ID
    * @param bulletData 子弹信息
    * @param related_fishs_id 关联鱼的ID列表
    */
    FishController.prototype.HitFish = function (fishId, bulletData, related_fishs_id) {
        if (bulletData._playId.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString()) {
            if (this._FishObjDict[fishId.toString()]) {
                NetRoom_1.default.Instance.HitFishReq(bulletData._bulletMutil, fishId, related_fishs_id, bulletData._bulletId);
                delete BatteryController_1.default.Instance.m_totalBulletIdDict[bulletData._bulletId];
                CommonConstant_1.default._huntSceneTestArry.hitFishReq++;
            }
        }
    };
    FishController.prototype.Reconnect = function () {
        for (var key in this._FishObjDict) {
            this._FishObjDict[key].Remove(false);
            delete this.FishObjDict[key];
        }
    };
    FishController.prototype.IsFishKing = function (type) {
        if (type >= EnumData_1.default.FishSubtype.King_fishf1 && type < EnumData_1.default.FishSubtype.Bomb_fish) {
            return true;
        }
        return false;
    };
    return FishController;
}());
exports.default = FishController;
},{"../Enum/EnumData":1,"../GameFacade":3,"../constant/CommonConstant":7,"../constant/GameEvent":9,"../constant/SoundNameConstant":11,"../game/CoinEffect/CoinFlying":17,"../game/Fish/FishBase":18,"../game/Fish/FishInfo":20,"../net/ProtoHander/EventNetResponse":75,"../net/ProtoHander/NetLogin":80,"../net/ProtoHander/NetRoom":84,"../utils/AutoDestroy":88,"../utils/CommonUtil":90,"./BatteryController":12}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletInfo_1 = require("./BulletInfo");
var GameFacade_1 = require("../../GameFacade");
var FishController_1 = require("../../controller/FishController");
var CommonConstant_1 = require("../../constant/CommonConstant");
var AutoDestroy_1 = require("../../utils/AutoDestroy");
var BatteryController_1 = require("../../controller/BatteryController");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var EnumData_1 = require("../../Enum/EnumData");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BulletBase = /** @class */ (function (_super) {
    __extends(BulletBase, _super);
    function BulletBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 子弹的运动方向*/
        _this._direction = new Laya.Vector3(0, 0, 0);
        _this._movingSpeed = 0.3;
        _this._offset = new Laya.Vector3(1, 0, 0);
        _this._outPos = new Laya.Vector3(0, 0, 0);
        _this._trailFilterTime = 0;
        /** 上一次撞到的墙壁*/
        _this._lastHitWallName = "";
        return _this;
    }
    BulletBase.prototype.onAwake = function () {
        this.mowner = this.owner;
        this._camera = GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera;
        this._scene = GameFacade_1.default.Instance.HuntSceneMng._HuntScene;
        this._point = new Laya.Vector2();
        this._ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));
        this._outHitInfo = new Laya.HitResult();
        if (null == this._bulletMoveEffect) {
            this._bulletMoveEffect = this.mowner.getChildAt(0).getChildAt(0);
            this._bulletMoveEffect.transform.localPosition = new Laya.Vector3(0, 0, 0);
            this._trailFilterTime = this._bulletMoveEffect.getChildAt(0).trailFilter.time;
        }
    };
    BulletBase.prototype.InitData = function (bulletId, multi, bulletShowTypeId, lockedId, playerID, lockedFishID) {
        this.mowner = this.owner;
        this._bulletInfo = new BulletInfo_1.default(bulletId, multi, bulletShowTypeId, lockedId, playerID);
        this._direction = this.mowner.transform.up;
        this._lastHitWallName = "";
        this.mowner.active = true;
        this._lockedFishID = lockedId;
        this._uid = playerID;
        if (lockedFishID.toString() == "0") {
            this._state = EnumData_1.default.ENUM_BULLET_STATE.UNLOCK;
        }
        else {
            this._state = EnumData_1.default.ENUM_BULLET_STATE.LOCKING;
        }
        this.ShowBulletEffect();
    };
    BulletBase.prototype.ShowBulletEffect = function () {
        this.mowner.active = true;
        this.StartMoving();
    };
    BulletBase.prototype.StartMoving = function () {
        Laya.timer.frameLoop(1, this, this.Moving);
        this.SetBulletTrailFilterTime(0);
        Laya.timer.frameOnce(1, this, function () {
            this.SetBulletTrailFilterTime(this._trailFilterTime);
        });
    };
    BulletBase.prototype.StopMoving = function () {
        Laya.timer.clear(this, this.Moving);
    };
    /**
     * 设置拖尾特效的时间周期
     * @param t 时间周期
     */
    BulletBase.prototype.SetBulletTrailFilterTime = function (t) {
        for (var index = 0; index < this._bulletMoveEffect.numChildren; index++) {
            var element = this._bulletMoveEffect.getChildAt(index);
            element.trailFilter.time = t;
        }
    };
    BulletBase.prototype.Moving = function () {
        this._direction = this.GetDynamicDir();
        Laya.Vector3.scale(this._direction, this._movingSpeed, this._offset);
        //utils.CommonUtils.log("---------------------------子弹运动方向 moving dir = ", this._direction);
        //Laya.Vector3.scale(this._direction, this._movingSpeed, this._offset);
        this.mowner.transform.translate(this._offset, false);
        //如果飞墙外 那么需要销毁
        if (this.CheckBulletOutWall()) {
            //NetRoom.Instance.SyncChipsReq();
            //打出去边界的子弹 需要发送给服务器告诉是无效的
            this.ShootUselessBulletReq();
            this.RemoveBullet();
        }
        else {
            //this._camera.worldToViewportPoint(this.mowner.transform.position,this._outPos);
            this._camera.viewport.project(this.mowner.transform.position, this._camera.projectionViewMatrix, this._outPos);
            this.RayCastCheck(this._outPos);
            //console.log("outPos = " + this._outPos.elements)
        }
    };
    BulletBase.prototype.RayCastCheck = function (screenPos) {
        //从屏幕空间生成射线
        this._point.elements[0] = screenPos.x; // Laya.MouseManager.instance.mouseX;//Laya.stage.mouseX;// 
        this._point.elements[1] = screenPos.y; //Laya.MouseManager.instance.mouseY;//Laya.stage.mouseY;//
        this._camera.viewportPointToRay(this._point, this._ray);
        //拿到射线碰撞的物体
        this._scene.physicsSimulation.rayCast(this._ray, this._outHitInfo);
        //如果碰撞到物体
        if (this._outHitInfo.succeeded) {
            var colLayer = this._outHitInfo.collider.owner;
            var fish = null;
            // // if (colLayer.layer == CommonConstant.Layer.Fish) {
            // //     fish = GameFacade.Instance.HuntSceneMng.GetFishBase(this._outHitInfo.collider.owner);// this._outHitInfo.collider.owner.parent.getComponent(FishBase) as FishBase;
            // // }
            switch (this._state) {
                case EnumData_1.default.ENUM_BULLET_STATE.UNLOCK: {
                    if (colLayer.layer == CommonConstant_1.default.Layer.Fish) {
                        fish = GameFacade_1.default.Instance.HuntSceneMng.GetFishBase(this._outHitInfo.collider.owner); // this._outHitInfo.collider.owner.parent.getComponent(FishBase) as FishBase;
                    }
                    this.NormalAttack(fish, colLayer);
                    break;
                }
                case EnumData_1.default.ENUM_BULLET_STATE.LOCKING: {
                    fish = FishController_1.default.Instance.FishObjDict[this._lockedFishID.toString()];
                    if (fish) {
                        var fishPosVec2 = new Laya.Vector3(0, 0, 0);
                        this._camera.worldToViewportPoint(fish._OwnerPos, fishPosVec2);
                        if (Laya.Vector3.distance(screenPos, fishPosVec2) < 15) //15为屏幕坐标距离
                            this.RayCastCheckFish(colLayer, fish);
                    }
                    break;
                }
                case EnumData_1.default.ENUM_BULLET_STATE.LOCKED: {
                    break;
                }
            }
        }
    };
    BulletBase.prototype.NormalAttack = function (fish, colLayer) {
        if (fish) {
            this.RayCastCheckFish(colLayer, fish);
        }
        else if (colLayer.layer == CommonConstant_1.default.Layer.Wall) {
            this.RayCastCheckWall();
        }
    };
    BulletBase.prototype.RayCastCheckFish = function (colLayer, fish) {
        if (!fish._mIsExist)
            return;
        // 子弹打中鱼了
        var cloneIns = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.FishNetPrefab + this._bulletInfo._bulletShowTypeId);
        cloneIns.transform.position = this.mowner.transform.position;
        var ad = CommonUtil_1.utils.CommonUtils.CustomAddComponent(cloneIns, AutoDestroy_1.default);
        ad.InitData(5000, false); //渔网特效最长时间为5秒
        this.RemoveBullet();
        //todo 特殊鱼逻辑
        if (fish) {
            fish.Hitted();
            var related_fishs_id = null;
            switch (fish._MFishInfo._mFishType) {
                case EnumData_1.default.FishSubtype.Bomb_fish:
                    {
                        related_fishs_id = fish.GetRelatedFishsId();
                        break;
                    }
            }
            FishController_1.default.Instance._FishHitedType = fish._MFishInfo._mFishType;
            FishController_1.default.Instance.HitFish(fish._MFishInfo._mFishId, this._bulletInfo, related_fishs_id);
        }
    };
    BulletBase.prototype.RayCastCheckWall = function () {
        var colNamePrefix = this._outHitInfo.collider.owner.name.substring(0, 6); //长度6可保证取到下列字符串的完整值
        if (this._lastHitWallName == colNamePrefix)
            return;
        this._lastHitWallName = colNamePrefix;
        switch (colNamePrefix) {
            case "top":
                this.BulletReflect(CommonConstant_1.default.DirectionVector.Down);
                break;
            case "bottom":
                this.BulletReflect(CommonConstant_1.default.DirectionVector.Up);
                break;
            case "left":
                this.BulletReflect(CommonConstant_1.default.DirectionVector.Left);
                break;
            case "right":
                this.BulletReflect(CommonConstant_1.default.DirectionVector.Right);
                break;
            default:
                break;
        }
    };
    /**获取动态跟踪鱼的方向*/
    BulletBase.prototype.GetDynamicDir = function () {
        if (this._lockedFishID == 0) {
            return this._direction;
        }
        else {
            this._camera.viewport.project(this.mowner.transform.position, this._camera.projectionViewMatrix, this._outPos);
            var outFishPos = new Laya.Vector3(0, 0, 0);
            var lockedFish = FishController_1.default.Instance.FishObjDict[this._lockedFishID.toString()];
            if (lockedFish == null || lockedFish == undefined) {
                this._lockedFishID = 0;
                this._state = EnumData_1.default.ENUM_BULLET_STATE.LOCKED;
                return this._direction; //子弹飞行中指定的鱼已挂掉
            }
            this._camera.viewport.project(lockedFish._OwnerPos, this._camera.projectionViewMatrix, outFishPos);
            var dir = new Laya.Vector3(this._outPos.x - outFishPos.x, this._outPos.y - outFishPos.y, 0);
            new Laya.Vector3.normalize(dir, dir);
            return dir;
        }
    };
    BulletBase.prototype.CheckBulletOutWall = function () {
        if (this.mowner.transform.position.x > 12 || this.mowner.transform.position.x < -12) {
            return true;
        }
        if (this.mowner.transform.position.y > 7 || this.mowner.transform.position.y < -7) {
            return true;
        }
        return false;
    };
    /// <summary>
    /// 发送打出屏幕外的无效子弹请求
    /// </summary>
    BulletBase.prototype.ShootUselessBulletReq = function () {
        //Debug.Log("发送无效子弹： " + buttetData.BulletId + " 倍数：" + buttetData.BulletMutil);
        if (this._bulletInfo._playId.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString()) {
            var req = new RoomMsg.bullet_useless_req();
            req.uid = this._bulletInfo._playId;
            req.multi = this._bulletInfo._bulletMutil;
            req.bulletid = this._bulletInfo._bulletId;
            //NetRoom.Instance.BulletUseLessReq(req.uid, req.multi, req.bulletid);
            if (NetLogin_1.default.Instance.IsSelfUid(req.uid)) {
                BatteryController_1.default.Instance.m_uselessMsgDict[req.bulletid] = req;
            }
        }
    };
    /**
     * 根据入射向量I和法向量N求反射向量R：R = I-2(I·N)N
     * @param normal 法向量
     */
    BulletBase.prototype.BulletReflect = function (normal) {
        var arrivalAngle = this._direction; //new Laya.Vector3(this._direction.x, this._direction.y, this._direction.z);
        // utils.CommonUtils.log(this._HitWallName + "--- 子弹入射角度 this._direction = ", arrivalAngle);
        var dotValue = Laya.Vector3.dot(arrivalAngle, normal);
        var reflexAngle = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.scale(normal, dotValue * 2, reflexAngle);
        Laya.Vector3.subtract(arrivalAngle, reflexAngle, reflexAngle);
        Laya.Vector3.normalize(reflexAngle, this._direction);
        // utils.CommonUtils.log(this._HitWallName + "--- 子弹反弹 left this._direction = ", this._direction);
    };
    BulletBase.prototype.RemoveBullet = function () {
        if (this._bulletInfo._playId.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString() && BatteryController_1.default.Instance.ShootedBulletAmount > 0) {
            BatteryController_1.default.Instance.ShootedBulletAmount -= 1;
        }
        this.StopMoving();
        //this.mowner.removeSelf();
        // Laya.Pool.recover(this._bulletInfo._bulletShowTypeId.toString(), this.mowner);
        this.mowner.active = false;
    };
    return BulletBase;
}(Laya.Script3D));
exports.default = BulletBase;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../../utils/AutoDestroy":88,"../../utils/CommonUtil":90,"./BulletInfo":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletInfo = /** @class */ (function () {
    function BulletInfo(bulletId, multi, bulletShowTypeId, lockedId, playerID) {
        this._bulletId = bulletId;
        this._bulletMutil = multi;
        this._bulletShowTypeId = bulletShowTypeId;
        this._lockFishId = lockedId;
        this._playId = playerID;
    }
    return BulletInfo;
}());
exports.default = BulletInfo;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletBase_1 = require("./BulletBase");
var HF3DBulletClasses;
(function (HF3DBulletClasses) {
    var Bullet01 = /** @class */ (function (_super) {
        __extends(Bullet01, _super);
        function Bullet01() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Bullet01;
    }(BulletBase_1.default));
    HF3DBulletClasses.Bullet01 = Bullet01;
    var Bullet02 = /** @class */ (function (_super) {
        __extends(Bullet02, _super);
        function Bullet02() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Bullet02;
    }(BulletBase_1.default));
    HF3DBulletClasses.Bullet02 = Bullet02;
    var Bullet03 = /** @class */ (function (_super) {
        __extends(Bullet03, _super);
        function Bullet03() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Bullet03;
    }(BulletBase_1.default));
    HF3DBulletClasses.Bullet03 = Bullet03;
})(HF3DBulletClasses || (HF3DBulletClasses = {}));
exports.default = HF3DBulletClasses;
},{"./BulletBase":14}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BatteryController_1 = require("../../controller/BatteryController");
/**
 * 金币飞行的逻辑类
 */
var CoinFlying = /** @class */ (function (_super) {
    __extends(CoinFlying, _super);
    function CoinFlying() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._moveTotalTime = 0.5;
        _this._jumpTotalTime = 0.3;
        _this._originPos = new Laya.Vector3(0, 0, 0);
        _this._endPos = new Laya.Vector3(0, 0, 0);
        _this._delPos = new Laya.Vector3(0, 0, 0);
        _this._jumpPos = new Laya.Vector3(0, 0, 0);
        _this._averageSpeed = new Laya.Vector3(0, 0, 0);
        _this._jumpSpeed = new Laya.Vector3(0, 0, 0);
        return _this;
    }
    //private _jettonshow:number;
    /**
     *
     * @param dt 延时销毁时间
     * @param endPos 运动的结束位置
     * @param bDel 是否删除该节点
     */
    CoinFlying.prototype.InitData = function (dt, endPos, bDel, uid, data, jettonshow) {
        if (null == this.owner)
            return;
        this._uid = uid;
        this._date = data;
        //this._jettonshow = jettonshow;
        if (null == this.owner)
            return;
        this._mowner = this.owner;
        if (this._mowner.transform == null)
            return; // todo
        this._delayTime = dt;
        this._bDelete = bDel;
        this._originPos = new Laya.Vector3(this._mowner.transform.position.x, this._mowner.transform.position.y, this._mowner.transform.position.z);
        this._endPos = endPos;
        Laya.Vector3.subtract(this._endPos, this._originPos, this._delPos);
        Laya.Vector3.subtract(new Laya.Vector3(this._delPos.x / 5, this._delPos.y / 5, this._delPos.z), this._originPos, this._jumpPos);
        this._moveTime = 0;
        //Laya.timer.once(dt, this, this.StartMove);
        this.StartMove();
    };
    CoinFlying.prototype.StartMove = function () {
        //this._moveTotalTime = Laya.Vector3.distance(this._endPos, this._originPos) / 15;
        Laya.Vector3.scale(this._delPos, 1 / this._moveTotalTime, this._averageSpeed);
        Laya.Vector3.scale(this._jumpPos, 1 / this._jumpTotalTime, this._jumpSpeed);
        //Laya.timer.loop(10, this, this.JumpMove);
        Laya.timer.loop(10, this, this.CurvyMove);
    };
    CoinFlying.prototype.JumpMove = function () {
        if (this._moveTime < this._jumpTotalTime) {
            this._moveTime += 0.02;
            var speedvy = this._jumpSpeed.y * (-2);
            var acceleratedy = (this._jumpPos.y - speedvy * this._jumpTotalTime) / (this._jumpTotalTime * this._jumpTotalTime) * 2; // s = 1/2*g*t2 + vt;
            var POS = new Laya.Vector3(this._jumpSpeed.x * this._moveTime, speedvy * this._moveTime + acceleratedy * (this._moveTime * this._moveTime) / 2, this._jumpSpeed.z * this._moveTime);
            var tendPos = new Laya.Vector3(0, 0, 0);
            Laya.Vector3.add(this._originPos, POS, tendPos);
            this._mowner.transform.position = tendPos;
        }
        else {
            this._moveTime = 0;
            Laya.timer.clear(this, this.JumpMove);
            Laya.timer.loop(10, this, this.CurvyMove);
        }
    };
    CoinFlying.prototype.CurvyMove = function () {
        var _this = this;
        if (this._moveTime < this._moveTotalTime) {
            this._moveTime += 0.02;
            var speedvy = this._averageSpeed.y * (-2);
            var acceleratedy = (this._delPos.y - speedvy * this._moveTotalTime) / (this._moveTotalTime * this._moveTotalTime) * 2; // s = 1/2*g*t2 + vt;
            var POS = new Laya.Vector3(this._averageSpeed.x * this._moveTime, speedvy * this._moveTime + acceleratedy * (this._moveTime * this._moveTime) / 2, this._averageSpeed.z * this._moveTime);
            var tendPos = new Laya.Vector3(0, 0, 0);
            Laya.Vector3.add(this._originPos, POS, tendPos);
            this._mowner.transform.position = tendPos;
        }
        else {
            Laya.timer.clear(this, this.CurvyMove);
            Laya.timer.once(this._delayTime, this, function () {
                BatteryController_1.default.Instance.CoinFlyingFinish(_this._uid, _this._date);
            });
            this.LoadEndEffect();
            this.DestroySelf();
        }
    };
    CoinFlying.prototype.LoadEndEffect = function () {
        if (null == this._goldEffect)
            this._goldEffect = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.Gold_Effect);
        this._goldEffect.transform.position = this._mowner.transform.position;
        this._goldEffect.active = true;
        Laya.timer.once(2000, this, function () {
            this._goldEffect.active = false;
        });
    };
    CoinFlying.prototype.DestroySelf = function () {
        if (this._bDelete)
            this.owner.destroy();
        else
            this.owner.active = false;
    };
    return CoinFlying;
}(Laya.Script3D));
exports.default = CoinFlying;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../controller/BatteryController":12}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FishBaseConfigData_1 = require("./FishBaseConfigData");
var EnumData_1 = require("../../Enum/EnumData");
var FishController_1 = require("../../controller/FishController");
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BatteryController_1 = require("../../controller/BatteryController");
var GameEvent_1 = require("../../constant/GameEvent");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var GameConfig_1 = require("../../GameConfig");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BezierCurvers_1 = require("../../utils/BezierCurvers");
var FishBase = /** @class */ (function (_super) {
    __extends(FishBase, _super);
    function FishBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 是否播过预警特效*/
        _this._mIsWarned = false;
        return _this;
    }
    Object.defineProperty(FishBase.prototype, "_MFishInfo", {
        get: function () {
            return this._fishInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FishBase.prototype, "_OwnerPos", {
        get: function () {
            return this.mowner.transform.position;
        },
        enumerable: true,
        configurable: true
    });
    FishBase.prototype.onDisable = function () {
        this.mowner.transform.localPosition = this._initialFirstChildPosition;
        this.mowner.transform.localScale = this._initialFirstChildScale;
    };
    FishBase.prototype.Init = function (fishInfo) {
        this.mowner = this.owner;
        this._firstChild = this.mowner.getChildAt(0);
        if (null == this._initialFirstChildScale)
            this._initialFirstChildScale = new Laya.Vector3(this._firstChild.transform.localScale.x, this._firstChild.transform.localScale.y, this._firstChild.transform.localScale.z);
        if (null == this._initialFirstChildPosition)
            this._initialFirstChildPosition = new Laya.Vector3(this._firstChild.transform.localPosition.x, this._firstChild.transform.localPosition.y, this._firstChild.transform.localPosition.z);
        this._cameraTrans = GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera.transform;
        this._fishInfo = fishInfo;
        this._mCurrentCreateTime = fishInfo._mFishCreateTime;
        this._mActualPathNode = 0;
        this._mIsStay = false;
        this._mSpeedRate = 1;
        this._mAlreadyStay = false;
        this._mIsWarned = false;
        var type = this.FishTypeID(); //fishInfo._mFishType;
        //不能直接get其数据引用来赋值，必须copy一份出来（todo  代码待优化）
        this._FishBehavior = FishBaseConfigData_1.default.FishSwimConfig.CopyFishBehaviorData(type); //_FishBehaviorDict.get(type);
        this.InitPathLength();
        //// this._fishInfo._mPathLenght *= 100000; //todo 这个固定值100000是如何确定的
        this.SetFishLifeTime();
        this._FishAniClass = FishBaseConfigData_1.default.FishSwimConfig._FishAnimateDict.get(type);
        this._Animator = this.mowner.getChildAt(0).getChildAt(0).getComponent(Laya.Animator);
        this._fishActionState = EnumData_1.default.ENUM_FISH_STATE.DEATH;
        this.mowner.transform.position = new Laya.Vector3(-10000, 10000, 10000);
        this._mIsExist = true;
        this.mowner.active = true;
    };
    /**
     *主要针对规格为8的鱼群，待整理 （todo fishtype有点乱）
     */
    FishBase.prototype.FishTypeID = function () {
        //总共编号只有1-26号鱼  32号炸弹  其余是鱼群
        return this._fishInfo._mModel == 8 ? this._fishInfo._mFishType + 100 : this._fishInfo._mFishType;
    };
    FishBase.prototype.InitPathLength = function () {
        var configMng = GameFacade_1.default.Instance.ConfigMng;
        var key = configMng.GetfishPathLengthKey(this.FishTypeID(), this._fishInfo._mPathId);
        if (null == configMng._fishPathLengthConfig[key]) {
            var t = 0;
            var tPathNodeSpeed = new Array();
            tPathNodeSpeed = this._FishBehavior._PathNodeSpeed;
            var arrIndex = 0; //tPathNodeSpeed数组的下标
            var pathLength = 0; //当前路劲段的长度
            var point = null;
            while (t <= 1) {
                var p = BezierCurvers_1.BezierCurvers.GetPoint(this._fishInfo._mWayPoints, t);
                if (null != point)
                    pathLength += Laya.Vector3.distance(point, p);
                point = p;
                t += 0.001;
                if (t >= (arrIndex + 1 < tPathNodeSpeed.length ? tPathNodeSpeed[arrIndex + 1]._NodeBeginPoint : 1)) {
                    var fwp2 = new FishBaseConfigData_1.default.PathNodeInfo();
                    fwp2._NodeBeginPoint = tPathNodeSpeed[arrIndex]._NodeBeginPoint;
                    fwp2._pathLength = pathLength * 100000;
                    fwp2._SpeedRate = tPathNodeSpeed[arrIndex]._SpeedRate;
                    var weakObj = configMng._fishPathLengthConfig[key];
                    if (null == weakObj)
                        weakObj = new Laya.WeakObject();
                    weakObj.set(tPathNodeSpeed[arrIndex]._NodeBeginPoint, fwp2);
                    configMng._fishPathLengthConfig[key] = weakObj;
                    pathLength = 0; //重置为0，开始计算下一段路劲长度
                    arrIndex++;
                }
            }
        }
        //  configMng._fishPathLengthConfig;
    };
    /** 初始化鱼的生命周期*/
    FishBase.prototype.SetFishLifeTime = function () {
        this._FishBehavior._FishTotalLiftTime = 0;
        var tlenght = this._FishBehavior._PathNodeSpeed.length;
        var configMng = GameFacade_1.default.Instance.ConfigMng;
        var key = configMng.GetfishPathLengthKey(this.FishTypeID(), this._fishInfo._mPathId);
        var weakObj = configMng._fishPathLengthConfig[key];
        for (var index = 0; index < tlenght; index++) {
            var point1 = this._FishBehavior._PathNodeSpeed[index];
            var pathNodeInfo = weakObj.get(point1._NodeBeginPoint);
            point1._LifeTime = pathNodeInfo._pathLength / (pathNodeInfo._SpeedRate * this._fishInfo._mSpeed);
            point1._pathLength = pathNodeInfo._pathLength;
            var point2 = index + 1 < tlenght ? this._FishBehavior._PathNodeSpeed[index + 1] : null;
            // point1._LifeTime = ((((null != point2) ? point2._NodeBeginPoint : 1) - point1._NodeBeginPoint) * this._fishInfo._mPathLenght) / (this._fishInfo._mSpeed * point1._SpeedRate);
            if (this._FishBehavior._StayPath > point1._NodeBeginPoint && ((null == point2) || (this._FishBehavior._StayPath < point2._NodeBeginPoint))) {
                point1._LifeTime += this._FishBehavior._StayTime;
            }
            this._FishBehavior._FishTotalLiftTime += point1._LifeTime;
        }
    };
    /** 计算鱼的当前位置百分比和当前速度,返回位置节点*/
    FishBase.prototype.CalculateFishActualPathNode = function () {
        var survivalTime = this.GetCurTime() - this._fishInfo._mFishCreateTime;
        var curBeginPathNode = 0;
        var tlenght = this._FishBehavior._PathNodeSpeed.length;
        //遍历所有速度变化节点，求出当前鱼的运动状态
        for (var index = 0; index < tlenght; index++) {
            var point1 = this._FishBehavior._PathNodeSpeed[index];
            var point2 = index + 1 < tlenght ? this._FishBehavior._PathNodeSpeed[index + 1] : null;
            survivalTime -= point1._LifeTime;
            if (survivalTime < 0) {
                var curSpeed = point1._SpeedRate * this._fishInfo._mSpeed;
                curBeginPathNode = point1._NodeBeginPoint;
                survivalTime += point1._LifeTime;
                var moveTime = survivalTime;
                if (this._FishBehavior._StayPath > point1._NodeBeginPoint && ((null == point2) || (this._FishBehavior._StayPath < point2._NodeBeginPoint))) {
                    ////let stayPathNodeTime = (this._FishBehavior._StayPath - element._NodeBeginPoint) * this._fishInfo._mPathLenght / curSpeed;//到达停留点，所消耗的时间
                    var stayPathNodeTime = ((this._FishBehavior._StayPath - point1._NodeBeginPoint) / ((null == point2) ? (1 - point1._NodeBeginPoint) : (point2._NodeBeginPoint - point1._NodeBeginPoint))) * point1._pathLength / curSpeed; //到达停留点，所消耗的时间
                    if (survivalTime <= stayPathNodeTime) //还未到达停留行为路劲节点
                        moveTime = survivalTime;
                    else if (survivalTime > stayPathNodeTime && survivalTime <= stayPathNodeTime + this._FishBehavior._StayTime) { //正在播放停留行为
                        moveTime = stayPathNodeTime;
                        this.NewOnStayBehavior(stayPathNodeTime + this._FishBehavior._StayTime - survivalTime);
                    }
                    else if (survivalTime > stayPathNodeTime + this._FishBehavior._StayTime) { //已经游过了停留行为路劲节点
                        moveTime = survivalTime - this._FishBehavior._StayTime;
                    }
                }
                ////let tpn = (moveTime * curSpeed) / this._fishInfo._mPathLenght + curBeginPathNode;
                var nodePointLength = ((null == point2) ? (1 - point1._NodeBeginPoint) : (point2._NodeBeginPoint - point1._NodeBeginPoint));
                var tpn = (moveTime * curSpeed) / point1._pathLength * nodePointLength + curBeginPathNode;
                //let tpn = (moveTime / point1._LifeTime) * ((null == point2) ? (1 - point1._NodeBeginPoint) : (point2._NodeBeginPoint - point1._NodeBeginPoint)) + curBeginPathNode;
                if ((null != point2) && tpn > point2._NodeBeginPoint)
                    tpn = point2._NodeBeginPoint;
                // // //// this._mCurrentSpeed = curSpeed;
                if (this._mActualPathNode > tpn)
                    CommonUtil_1.utils.CommonUtils.log("FishModelType= " + this._fishInfo._mFishModelType + "  ActualPathNode= " + this._mActualPathNode + "  tPathNode== " + tpn
                        + "  moveTime== " + moveTime + "  curBeginPathNode== " + curBeginPathNode + "  point._pathLength== " + point1._pathLength);
                return this._mActualPathNode > tpn ? this._mActualPathNode : tpn; //找到当前位置，提前结束循环
            }
        }
        return 1;
    };
    /**
         * 检测是否停留当中
         * @param pathNode
         * @param curTime
         */
    FishBase.prototype.NewOnStayBehavior = function (curTime) {
        if (!this._mIsStay && !this._mAlreadyStay) {
            this._mIsStay = true;
            this._mAlreadyStay = true;
            this.PlayAction(EnumData_1.default.ENUM_FISH_STATE.SHOW);
            Laya.timer.once(curTime, this, this.NewCancelStayBehavior);
        }
    };
    /**
    * 取消停留行为
    */
    FishBase.prototype.NewCancelStayBehavior = function () {
        this._mIsStay = false;
        this.PlayAction(EnumData_1.default.ENUM_FISH_STATE.SWIMMING);
    };
    /**
     * 鱼受击
     */
    FishBase.prototype.Hitted = function () {
        var self = this;
        if (self.PlayAction(EnumData_1.default.ENUM_FISH_STATE.HITTED)) {
            Laya.timer.once(self._FishAniClass._HitTime * 1000, self, function () {
                self.PlayAction(EnumData_1.default.ENUM_FISH_STATE.SWIMMING);
            });
        }
    };
    /**
     * 移除鱼对象
     * @param isDead 鱼是否死亡
     */
    FishBase.prototype.Remove = function (isDead, bouns, uid, deadFishType) {
        if (bouns === void 0) { bouns = 0; }
        if (uid === void 0) { uid = 0; }
        if (deadFishType === void 0) { deadFishType = -1; }
        this.StopMove();
        if (isDead) {
            this.Dead(bouns, uid, deadFishType);
            GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.fishSoundHead, GameFacade_1.default.Instance.SoundMng.fishTypeToSoundNum(this._fishInfo._mFishType));
        }
        else
            this.mowner.active = false;
        this._mIsExist = false;
    };
    FishBase.prototype.StartMove = function () {
        Laya.timer.loop(10, this, this.Moving);
    };
    FishBase.prototype.StopMove = function () {
        Laya.timer.clear(this, this.Moving);
    };
    FishBase.prototype.GetCurTime = function () {
        return new Date().getTime();
    };
    //#region  鱼的游动逻辑
    FishBase.prototype.Moving = function () {
        if (this._mIsStay)
            return;
        var currttime = this.GetCurTime();
        //在这条路线上的生存时间
        var survivalTime = 0;
        if (currttime < this._mCurrentCreateTime) {
            //这类鱼可能是超前 推过来,只有等到时间到才出来
            return;
        }
        this._mActualPathNode = this.CalculateFishActualPathNode();
        var t = this._mActualPathNode;
        //监测是否移动到墙外
        this.CheckFishOutWall();
        ////Debug.Log(string.Format("速度 : {0} 生存时间 : {1}  长度 : {2}   T : {3} ", mWayMoveInfo.mSpeed, survivalTime, mWayMoveInfo.mPathLenght, t));
        if (t >= 1) {
            FishController_1.default.Instance.OnDeadFishOrMoveEnd(this._fishInfo._mFishId, false);
        }
        else {
            this.SwimmingStyle(t);
            if (this._fishInfo._mFishModelType > 20) //todo 这里写死的数字待整理 28是最大的模型类型id值
                this.SetTransform(100 * (28 - this._fishInfo._mFishModelType), this._firstChild.transform, this._cameraTrans);
            else
                this.SetTransform(200 * (28 - this._fishInfo._mFishModelType), this._firstChild.transform, this._cameraTrans);
        }
    };
    /**
     * 鱼的游动方式
     * @param pathNode 路劲百分比
     */
    FishBase.prototype.SwimmingStyle = function (pathNode) {
        Laya.Vector3.add(BezierCurvers_1.BezierCurvers.GetPoint(this._fishInfo._mWayPoints, pathNode), this._fishInfo._offsetPoints, this.mowner.transform.position);
        var lookDir = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.add(BezierCurvers_1.BezierCurvers.GetPoint(this._fishInfo._mWayPoints, pathNode + 0.01), this._fishInfo._offsetPoints, lookDir);
        if (this._mIsStay)
            this.mowner.transform.lookAt(this._cameraTrans.up, Laya.Vector3.Up, false);
        else {
            //this.mowner.transform.lookAt(lookDir, Laya.Vector3.Up, false);
            if (lookDir.z > this._cameraTrans.position.z)
                this.mowner.transform.lookAt(lookDir, Laya.Vector3.Up, false);
            else
                this.mowner.transform.lookAt(lookDir, CommonConstant_1.default.DirectionVector.Down, false);
        }
        var offset = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(lookDir, this.mowner.transform.position, offset);
        this.mowner.transform.translate(offset, false);
        if (pathNode < 0.2 && !this._mIsWarned && !this.CheckFishCenterPosInWall()) {
            this._mIsWarned = true;
            this.FishWarn();
        }
    };
    /**
     * 通过屏幕坐标检测鱼是否在屏幕内
     */
    FishBase.prototype.CheckFishCenterPosInWall = function () {
        var outPos = new Laya.Vector3(0, 0, 0);
        this._cameraTrans.owner.worldToViewportPoint(this.mowner.transform.position, outPos);
        // (this._cameraTrans.owner as Laya.Camera).viewport.project(this.mowner.transform.position, (this._cameraTrans.owner as Laya.Camera).projectionViewMatrix, outPos);
        return outPos.x > 50 && outPos.x < GameConfig_1.default.width - 50 && outPos.y > 50 && outPos.y < GameConfig_1.default.height - 50;
    };
    //#endregion
    //#region  动画逻辑控制
    /// <summary>鱼的动作逻辑</summary>
    /// <param name="enum_fish_state"></param>
    FishBase.prototype.PlayAction = function (enum_fish_state) {
        var self = this;
        if (null == self._Animator || null == self._FishAniClass)
            return;
        if (self._fishActionState == enum_fish_state)
            return false;
        self._fishActionState = enum_fish_state;
        switch (enum_fish_state) {
            case EnumData_1.default.ENUM_FISH_STATE.SWIMMING:
                return self.PlayAnimation(self._FishAniClass._SwimName);
            case EnumData_1.default.ENUM_FISH_STATE.SHOW: //停留动画（嬉戏）
                self.mowner.transform.lookAt(self._cameraTrans.up, Laya.Vector3.Up, false);
                return self.PlayAnimation(self._FishAniClass._StayName);
            case EnumData_1.default.ENUM_FISH_STATE.PAUSE:
                return false;
            case EnumData_1.default.ENUM_FISH_STATE.HITTED:
                return self.PlayAnimation(self._FishAniClass._HitName);
            case EnumData_1.default.ENUM_FISH_STATE.DEATH:
                return self.PlayAnimation(self._FishAniClass._DeadName);
            default:
                return false;
        }
    };
    FishBase.prototype.PlayAnimation = function (aniName) {
        if (aniName && aniName != "") {
            var aniStatesMap = this._Animator.getControllerLayer(0)._statesMap;
            var animatorState = aniStatesMap[aniName];
            if (animatorState)
                this._Animator.play(aniName);
            // this._Animator.crossFade(aniName, 0.5);//使用这个接口好像会造成鱼闪的bug
            return true;
        }
        return false;
    };
    /// <summary>鱼受玩家攻击死亡</summary>
    FishBase.prototype.Dead = function (bouns, uid, deadFishType) {
        if (uid === void 0) { uid = 0; }
        if (deadFishType === void 0) { deadFishType = -1; }
        //被炮弹打死的是鱼王/炸弹鱼
        if (deadFishType != -1) //
         {
            if (this._fishInfo._mFishType == deadFishType) //本鱼是炸弹鱼/鱼王
             {
                if (BatteryController_1.default.Instance.gShootModel == 1 /* SHOOT_AUTO */ && NetLogin_1.default.Instance.IsSelfUid(uid)) {
                    GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_HUNTEDFISH, [bouns, this._fishInfo._mFishType]);
                }
            }
        }
        else {
            if (BatteryController_1.default.Instance.gShootModel == 1 /* SHOOT_AUTO */ && NetLogin_1.default.Instance.IsSelfUid(uid)) {
                GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_HUNTEDFISH, [bouns, this._fishInfo._mFishType]);
            }
        }
        this.PlayAction(EnumData_1.default.ENUM_FISH_STATE.DEATH);
        //todo 不能直接删除，待写死亡表现
        Laya.timer.once(this._FishAniClass._DeadTime * 1000, this, function () {
            this.mowner.active = false;
        });
    };
    //#endregion
    //#region 鱼的z轴计算，防止鱼重叠穿插
    FishBase.prototype.SetTransform = function (newZPos, trans, camTrans) {
        //求出与摄像机的方向单位向量
        var dirNormal = new Laya.Vector3(1, 0, 0);
        Laya.Vector3.subtract(this.mowner.transform.position, camTrans.position, dirNormal);
        Laya.Vector3.normalize(dirNormal, dirNormal);
        //求出新位置z轴到摄像机距离与现有位置z轴到摄像机距离的比率
        var trate = (newZPos - camTrans.position.z) / (this.mowner.transform.position.z - camTrans.position.z);
        var angel = Laya.Vector3.dot(dirNormal, Laya.Vector3.ForwardRH);
        //let tangle = Math.acos(angel);//*180;
        var dis = (newZPos - this.mowner.transform.position.z) / angel; //Math.cos(tangle);// (Math.cos((tangle/180) * Math.PI));
        var tscale = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.scale(this._initialFirstChildScale, trate, tscale);
        trans.localScale = tscale;
        var dirVec3 = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.scale(dirNormal, Math.abs(dis), dirVec3);
        Laya.Vector3.add(this.mowner.transform.position, dirVec3, trans.position);
        trans.position = trans.position;
    };
    //#endregion
    FishBase.prototype.CheckFishOutWall = function () {
        if (this._MFishInfo._mFishId.toString() == BatteryController_1.default.Instance.LockedFishID.toString()) {
            var outPos = new Laya.Vector3(0, 0, 0);
            this._cameraTrans.owner.viewport.project(this.mowner.transform.position, this._cameraTrans.owner.projectionViewMatrix, outPos);
            var offset = this.GetFishSize() / 2;
            if (outPos.x > GameConfig_1.default.width + offset || outPos.x < -offset ||
                outPos.y > GameConfig_1.default.height + offset || outPos.y < -offset) {
                BatteryController_1.default.Instance.LockedFishID = 0;
                return true;
            }
        }
        return false;
    };
    /**
     * 通过屏幕坐标检测鱼是否在屏幕内
     */
    FishBase.prototype.CheckIsFishInWall = function () {
        var outPos = new Laya.Vector3(0, 0, 0);
        this._cameraTrans.owner.viewport.project(this.mowner.transform.position, this._cameraTrans.owner.projectionViewMatrix, outPos);
        var offset = this.GetFishSize() / 2;
        if (outPos.x > GameConfig_1.default.width + offset || outPos.x < -offset ||
            outPos.y > GameConfig_1.default.height + offset || outPos.y < -offset) {
            return false;
        }
        return true;
    };
    /**
     * 模型x轴长度大小（模型比较小的鱼忽略不计）
     */
    FishBase.prototype.GetFishSize = function () {
        return 0;
    };
    FishBase.prototype.GetRelatedFishsId = function () {
        return [];
    };
    /**
     * 鱼预警
     */
    FishBase.prototype.FishWarn = function () {
    };
    return FishBase;
}(Laya.Script3D));
exports.FishBase = FishBase;
},{"../../Enum/EnumData":1,"../../GameConfig":2,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/GameEvent":9,"../../constant/SoundNameConstant":11,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../../utils/BezierCurvers":89,"../../utils/CommonUtil":90,"./FishBaseConfigData":19}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var FishBaseConfig_1 = require("../../config/FishBaseConfig");
/**
 * 重新定义表结构类FishBaseConfig，方便程序调用处理
 */
var FishBaseConfigData;
(function (FishBaseConfigData) {
    /** 鱼路劲节点数据类*/
    var PathNodeInfo = /** @class */ (function () {
        function PathNodeInfo() {
            /** 鱼某段路劲的生命时长*/
            this._LifeTime = 0;
        }
        return PathNodeInfo;
    }());
    FishBaseConfigData.PathNodeInfo = PathNodeInfo;
    /** 鱼的行为数据类*/
    var FishBehavior = /** @class */ (function () {
        function FishBehavior() {
            /** 停留行为的起始节点*/
            this._StayPath = 0;
            /** 停留行为的时长*/
            this._StayTime = 0;
            /** 存放路径节点速率（下标为偶数的是key值路劲占比，下标为奇数的是value为速率，顺序相邻的两个为一组）*/
            this._PathNodeSpeed = new Array();
            /** 鱼的生命总时长*/
            this._FishTotalLiftTime = 0;
        }
        return FishBehavior;
    }());
    FishBaseConfigData.FishBehavior = FishBehavior;
    /** 鱼的动作数据类*/
    var FishAniClass = /** @class */ (function () {
        function FishAniClass() {
        }
        return FishAniClass;
    }());
    FishBaseConfigData.FishAniClass = FishAniClass;
    var FishSwimConfig = /** @class */ (function () {
        function FishSwimConfig() {
        }
        /** 配置数据预处理，方便调用*/
        FishSwimConfig.ParseFishBehaviorData = function () {
            this._FishBehaviorDict = new Laya.WeakObject();
            this._FishAnimateDict = new Laya.WeakObject();
            var dict = GameFacade_1.default.Instance.ConfigMng.FishBaseConfig;
            for (var iterator in dict) {
                var element = dict[iterator];
                var fbc = new FishBaseConfig_1.FishBaseConfig(element);
                var stay = fbc._StatyBehavior;
                var stayData = stay.split(',');
                var speed = fbc._SpeedBehavior;
                //游动行为 停留  和 速度变化
                var fishBehavior = new FishBehavior();
                if (stayData.length > 1) {
                    fishBehavior._StayPath = Number(stayData[0]);
                    fishBehavior._StayTime = Number(stayData[1]);
                }
                if ("" != speed) {
                    var speedData = speed.split('|');
                    for (var i = 0; i < speedData.length; i++) {
                        var speedTemp = speedData[i].split(',');
                        var tinfo = new PathNodeInfo();
                        tinfo._NodeBeginPoint = Number(speedTemp[0]);
                        tinfo._SpeedRate = Number(speedTemp[1]);
                        fishBehavior._PathNodeSpeed.push(tinfo);
                    }
                }
                this._FishBehaviorDict.set(fbc._FishTypeID, fishBehavior);
                //动画
                var aniClass = new FishAniClass();
                var swimAni = fbc._SwimAni;
                var deadAni = fbc._DeadAni.split(',');
                var hitAni = fbc._HitAni.split(',');
                var stayAni = fbc._StayAni1.split(',');
                aniClass._SwimName = swimAni;
                if (deadAni.length > 1) {
                    aniClass._DeadName = deadAni[0];
                    aniClass._DeadTime = Number(deadAni[1]);
                }
                if (hitAni.length > 1) {
                    aniClass._HitName = hitAni[0];
                    aniClass._HitTime = Number(hitAni[1]);
                }
                if (stayAni.length > 1) {
                    aniClass._StayName = stayAni[0];
                    aniClass._StayTime = Number(stayAni[1]);
                }
                this._FishAnimateDict.set(fbc._FishTypeID, aniClass);
            }
        };
        /**
         * 复制鱼行为数据
         * @param type 鱼规格类型ID
         */
        FishSwimConfig.CopyFishBehaviorData = function (type) {
            var fb = new FishBehavior();
            var fbd = FishSwimConfig._FishBehaviorDict.get(type);
            fb._StayPath = fbd._StayPath;
            fb._StayTime = fbd._StayTime;
            fb._PathNodeSpeed = new Array();
            for (var index = 0; index < fbd._PathNodeSpeed.length; index++) {
                var element = fbd._PathNodeSpeed[index];
                var tpni = new PathNodeInfo();
                tpni._NodeBeginPoint = element._NodeBeginPoint;
                tpni._SpeedRate = element._SpeedRate;
                fb._PathNodeSpeed.push(tpni);
            }
            return fb;
        };
        /** 鱼的行为数据列表（key为鱼类型ID;value为鱼行为类）*/
        FishSwimConfig._FishBehaviorDict = new Laya.WeakObject();
        /** 鱼的动作数据列表（key为鱼类型ID;value为鱼动作类）*/
        FishSwimConfig._FishAnimateDict = new Laya.WeakObject();
        return FishSwimConfig;
    }());
    FishBaseConfigData.FishSwimConfig = FishSwimConfig;
})(FishBaseConfigData = exports.FishBaseConfigData || (exports.FishBaseConfigData = {}));
exports.default = FishBaseConfigData;
},{"../../GameFacade":3,"../../config/FishBaseConfig":6}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WayMoveInfo = /** @class */ (function () {
    function WayMoveInfo() {
        /** 路径偏移*/
        this._offsetPoints = new Laya.Vector3(0, 0, 0);
    }
    return WayMoveInfo;
}());
exports.default = WayMoveInfo;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FishBase_1 = require("./FishBase");
var FishController_1 = require("../../controller/FishController");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var CommonUtil_1 = require("../../utils/CommonUtil");
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var EnumData_1 = require("../../Enum/EnumData");
var HF3DFishClasses;
(function (HF3DFishClasses) {
    var Fish01 = /** @class */ (function (_super) {
        __extends(Fish01, _super);
        function Fish01() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish01.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish01;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish01 = Fish01;
    var Fish02 = /** @class */ (function (_super) {
        __extends(Fish02, _super);
        function Fish02() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish02.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish02;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish02 = Fish02;
    var Fish03 = /** @class */ (function (_super) {
        __extends(Fish03, _super);
        function Fish03() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish03.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish03;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish03 = Fish03;
    var Fish04 = /** @class */ (function (_super) {
        __extends(Fish04, _super);
        function Fish04() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish04.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish04;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish04 = Fish04;
    var Fish05 = /** @class */ (function (_super) {
        __extends(Fish05, _super);
        function Fish05() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish05.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish05;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish05 = Fish05;
    var Fish06 = /** @class */ (function (_super) {
        __extends(Fish06, _super);
        function Fish06() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish06.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish06;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish06 = Fish06;
    var Fish07 = /** @class */ (function (_super) {
        __extends(Fish07, _super);
        function Fish07() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish07.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish07;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish07 = Fish07;
    var Fish08 = /** @class */ (function (_super) {
        __extends(Fish08, _super);
        function Fish08() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish08.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish08;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish08 = Fish08;
    var Fish09 = /** @class */ (function (_super) {
        __extends(Fish09, _super);
        function Fish09() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish09.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish09;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish09 = Fish09;
    var Fish10 = /** @class */ (function (_super) {
        __extends(Fish10, _super);
        function Fish10() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish10.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish10;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish10 = Fish10;
    var Fish11 = /** @class */ (function (_super) {
        __extends(Fish11, _super);
        function Fish11() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish11.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish11;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish11 = Fish11;
    var Fish12 = /** @class */ (function (_super) {
        __extends(Fish12, _super);
        function Fish12() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish12.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish12;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish12 = Fish12;
    var Fish13 = /** @class */ (function (_super) {
        __extends(Fish13, _super);
        function Fish13() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish13.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish13;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish13 = Fish13;
    var Fish14 = /** @class */ (function (_super) {
        __extends(Fish14, _super);
        function Fish14() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish14.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish14;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish14 = Fish14;
    var Fish15 = /** @class */ (function (_super) {
        __extends(Fish15, _super);
        function Fish15() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish15.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish15;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish15 = Fish15;
    var Fish16 = /** @class */ (function (_super) {
        __extends(Fish16, _super);
        function Fish16() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish16.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        Fish16.prototype.GetFishSize = function () {
            return CommonConstant_1.default.OutWallOffset_shark;
        };
        return Fish16;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish16 = Fish16;
    var Fish17 = /** @class */ (function (_super) {
        __extends(Fish17, _super);
        function Fish17() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish17.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish17;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish17 = Fish17;
    var Fish18 = /** @class */ (function (_super) {
        __extends(Fish18, _super);
        function Fish18() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish18.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish18;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish18 = Fish18;
    var Fish19 = /** @class */ (function (_super) {
        __extends(Fish19, _super);
        function Fish19() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish19.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish19;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish19 = Fish19;
    var Fish20 = /** @class */ (function (_super) {
        __extends(Fish20, _super);
        function Fish20() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish20.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
            // this._firstChild.transform.localPosition = new Laya.Vector3(0, 0, 500);
            //this._firstChild.transform.localScale = new Laya.Vector3(51, 51, 51);
        };
        Fish20.prototype.GetFishSize = function () {
            return CommonConstant_1.default.OutWallOffset_shark;
        };
        return Fish20;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish20 = Fish20;
    var Fish21 = /** @class */ (function (_super) {
        __extends(Fish21, _super);
        function Fish21() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish21.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish21;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish21 = Fish21;
    var Fish22 = /** @class */ (function (_super) {
        __extends(Fish22, _super);
        function Fish22() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish22.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish22;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish22 = Fish22;
    var Fish23 = /** @class */ (function (_super) {
        __extends(Fish23, _super);
        function Fish23() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish23.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        /**
      * 鱼预警
      */
        Fish23.prototype.FishWarn = function () {
            _super.prototype.FishWarn.call(this);
            GameFacade_1.default.Instance.HuntSceneMng.warnShow(this._fishInfo._mFishType);
        };
        Fish23.prototype.GetFishSize = function () {
            return CommonConstant_1.default.OutWallOffset_shark;
        };
        return Fish23;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish23 = Fish23;
    var Fish24 = /** @class */ (function (_super) {
        __extends(Fish24, _super);
        function Fish24() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish24.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return Fish24;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish24 = Fish24;
    var Fish25 = /** @class */ (function (_super) {
        __extends(Fish25, _super);
        function Fish25() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish25.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
            Laya.timer.loop(6000, this, this.PlaySwimmingAction2);
        };
        /// <summary>鱼的动作逻辑</summary>
        /// <param name="enum_fish_state"></param>
        Fish25.prototype.PlayAction = function (enum_fish_state) {
            var self = this;
            if (null == self._Animator || null == self._FishAniClass)
                return;
            ////   if (self._fishActionState == enum_fish_state) return false;
            self._fishActionState = enum_fish_state;
            switch (enum_fish_state) {
                case EnumData_1.default.ENUM_FISH_STATE.SWIMMING:
                    return self.PlayAnimation(self._FishAniClass._SwimName);
                case EnumData_1.default.ENUM_FISH_STATE.SHOW: //停留动画（嬉戏）
                    self.mowner.transform.lookAt(self._cameraTrans.up, Laya.Vector3.Up, false);
                    return self.PlayAnimation(self._FishAniClass._StayName);
                case EnumData_1.default.ENUM_FISH_STATE.PAUSE:
                    return false;
                case EnumData_1.default.ENUM_FISH_STATE.HITTED:
                    return self.PlayAnimation(self._FishAniClass._HitName);
                case EnumData_1.default.ENUM_FISH_STATE.DEATH:
                    return self.PlayAnimation(self._FishAniClass._DeadName);
                default:
                    return false;
            }
        };
        Fish25.prototype.PlayAnimation = function (aniName) {
            if (aniName && aniName != "") {
                var aniStatesMap = this._Animator.getControllerLayer(0)._statesMap;
                var animatorState = aniStatesMap[aniName];
                if (animatorState)
                    this._Animator.crossFade(aniName, 0.5); //使用这个接口好像会造成鱼闪的bug
                return true;
            }
            return false;
        };
        /**
             * 鱼预警
             */
        Fish25.prototype.FishWarn = function () {
            _super.prototype.FishWarn.call(this);
            GameFacade_1.default.Instance.HuntSceneMng.warnShow(this._fishInfo._mFishType);
        };
        Fish25.prototype.GetFishSize = function () {
            return CommonConstant_1.default.OutWallOffset_mermaid;
        };
        Fish25.prototype.PlaySwimmingAction2 = function () {
            var self = this;
            if (self.PlayAnimation("Swim2")) {
                Laya.timer.once(3000, self, function () {
                    self.PlayAction(EnumData_1.default.ENUM_FISH_STATE.SWIMMING);
                });
            }
        };
        return Fish25;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish25 = Fish25;
    var Fish26 = /** @class */ (function (_super) {
        __extends(Fish26, _super);
        function Fish26() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish26.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        /**
       * 鱼预警
       */
        Fish26.prototype.FishWarn = function () {
            _super.prototype.FishWarn.call(this);
            GameFacade_1.default.Instance.HuntSceneMng.warnShow(this._fishInfo._mFishType);
        };
        Fish26.prototype.GetFishSize = function () {
            return CommonConstant_1.default.OutWallOffset_ship;
        };
        return Fish26;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish26 = Fish26;
    /** 炸弹鱼*/
    var Fish27 = /** @class */ (function (_super) {
        __extends(Fish27, _super);
        function Fish27() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Fish27.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        /**获取屏幕中，能被炸弹鱼炸到的鱼*/
        Fish27.prototype.GetRelatedFishsId = function () {
            var getFishRate = function (type) {
                for (var i = 0; i < fishInfo.length; i++) {
                    if (fishInfo[i].fish_type == type) {
                        return fishInfo[i].fish_rate;
                    }
                }
            };
            var relatedFishsIdArr = [];
            var fishObjDic = FishController_1.default.Instance.FishObjDict;
            var fishInfo = NetLogin_1.default.Instance._playerLoginInfo.fish_info;
            for (var key in fishObjDic) {
                var isInWall = fishObjDic[key].CheckIsFishInWall();
                var type = fishObjDic[key]._MFishInfo._mFishType;
                var rate = CommonUtil_1.utils.CommonUtils.numberFixed(getFishRate(type));
                if (rate <= 30 && isInWall) {
                    relatedFishsIdArr.push(fishObjDic[key]._MFishInfo._mFishId);
                }
            }
            return relatedFishsIdArr;
        };
        return Fish27;
    }(FishBase_1.FishBase));
    HF3DFishClasses.Fish27 = Fish27;
    var FishKing1 = /** @class */ (function (_super) {
        __extends(FishKing1, _super);
        function FishKing1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FishKing1.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return FishKing1;
    }(FishBase_1.FishBase));
    HF3DFishClasses.FishKing1 = FishKing1;
    var FishKing2 = /** @class */ (function (_super) {
        __extends(FishKing2, _super);
        function FishKing2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FishKing2.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return FishKing2;
    }(FishBase_1.FishBase));
    HF3DFishClasses.FishKing2 = FishKing2;
    var FishKing3 = /** @class */ (function (_super) {
        __extends(FishKing3, _super);
        function FishKing3() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FishKing3.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return FishKing3;
    }(FishBase_1.FishBase));
    HF3DFishClasses.FishKing3 = FishKing3;
    var FishKing4 = /** @class */ (function (_super) {
        __extends(FishKing4, _super);
        function FishKing4() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FishKing4.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return FishKing4;
    }(FishBase_1.FishBase));
    HF3DFishClasses.FishKing4 = FishKing4;
    var FishKing5 = /** @class */ (function (_super) {
        __extends(FishKing5, _super);
        function FishKing5() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FishKing5.prototype.Init = function (fishInfo) {
            _super.prototype.Init.call(this, fishInfo);
        };
        return FishKing5;
    }(FishBase_1.FishBase));
    HF3DFishClasses.FishKing5 = FishKing5;
})(HF3DFishClasses || (HF3DFishClasses = {}));
exports.default = HF3DFishClasses;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../../utils/CommonUtil":90,"./FishBase":18}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../GameFacade");
var CommonUtil_1 = require("../utils/CommonUtil");
var CommonConstant_1 = require("../constant/CommonConstant");
var GameStart = /** @class */ (function () {
    function GameStart() {
        GameFacade_1.default.Instance.Init();
        this.LoadLoadingRes();
    }
    /**
     * 预先加载 loading 界面资源
     */
    GameStart.prototype.LoadLoadingRes = function () {
        var self = this;
        Laya.loader.load([{ url: CommonConstant_1.default._fuiLoadingPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiLoadingPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._loadingBgPath, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiHelpPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiHelpPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._fuiHallPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiHallPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._fuiCommonUIPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiCommonUIPath.fui, type: Laya.Loader.BUFFER }], Laya.Handler.create(this, function () {
            fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiLoadingPath.Package);
            fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiHelpPath.Package);
            fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiHallPath.Package);
            fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiCommonUIPath.Package);
            GameFacade_1.default.Instance.SceneMng.EnterHallScene(self.GameEnter.bind(self));
        }));
    };
    /**
     * 连接服务器
     */
    GameStart.prototype.GameEnter = function () {
        window["g_RemoveSplash"]();
        this.registEvent();
        this.startConnect();
    };
    GameStart.prototype.registEvent = function () {
        GameFacade_1.default.Instance.SocketMng.AddEvent();
    };
    GameStart.prototype.startConnect = function () {
        CommonUtil_1.utils.CommonUtils.log("startConnect");
        var GameMng = GameFacade_1.default.Instance.GameMng;
        GameFacade_1.default.Instance.SocketMng.connenct(GameMng.serverIp, GameMng.serverPort, 0 /* GAME */, GameMng.token);
    };
    return GameStart;
}());
exports.default = GameStart;
},{"../GameFacade":3,"../constant/CommonConstant":7,"../utils/CommonUtil":90}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonConstant_1 = require("../../constant/CommonConstant");
var FishController_1 = require("../../controller/FishController");
var GameFacade_1 = require("../../GameFacade");
var BatteryController_1 = require("../../controller/BatteryController");
var BulletBase_1 = require("../Bullet/BulletBase");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var CannonConfig_1 = require("../../config/CannonConfig");
/**
 * 炮台
 */
var Cannon = /** @class */ (function () {
    function Cannon(cannon, info, waitImg, index) {
        this.m_gun3dDic = null;
        this.m_data = null;
        this.m_gunMultiIndex = 0;
        this.m_curGun3DIndex = 0;
        this.m_data = null;
        this.m_waitImg = waitImg;
        this.m_cannon = cannon;
        var controller = cannon.getController("c1");
        this.m_bInversion = false;
        if (index >= 2) { //0~3
            this.m_bInversion = true;
            controller.selectedIndex = 1;
        }
        this.m_position = index;
        // controller = this.m_info.getController("c1");
        // if (index % 2 == 0) {
        //     controller.selectedIndex = 1;
        // }
        //炮台底座为laya的UI，炮使用3d资源
        var fuiBaseBg = cannon.getChild("BaseBg");
        fuiBaseBg.visible = false;
        this.m_gun = cannon.getChild("Gun").asLoader;
        this.m_gun.visible = false;
        var fuiBaseBgPos = this.m_cannon.localToGlobal(fuiBaseBg.x, fuiBaseBg.y);
        this.m_baseBg = new Laya.Image(CommonConstant_1.default._baseBgPath); //炮的底座
        this.m_baseBg.anchorX = 0.5;
        this.m_baseBg.anchorY = 0.5;
        this.m_baseBg.pos(fuiBaseBgPos.x, fuiBaseBgPos.y);
        var huntPanel = GameFacade_1.default.Instance.SceneMng.GetPanelById(1 /* HuntPanel */);
        huntPanel.m_layaUINode.addChild(this.m_baseBg);
        //// this.m_gun3DNode = huntPanel.m_gunScene3D;
        //this.m_gun3DNode = huntPanel.m_awardScene3D;
        //炮台加减按钮
        this.m_loseBtn = cannon.getChild("LoseBtn");
        this.m_loseBtn.onClick(this, this.OnLossBtnClick);
        this.m_loseBtn.onClick(this, this.playSoundChangeGun);
        this.m_addBtn = cannon.getChild("AddBtn");
        this.m_addBtn.onClick(this, this.OnAddBtnClick);
        this.m_addBtn.onClick(this, this.playSoundChangeGun);
        this.m_gunMultiLabel = cannon.getChild("GunPowerLabel").asLabel;
        //炮台旁的信息框 用laya创建
        info.visible = false;
        var namePos = new Laya.Point(27, 25);
        //let namePos = new Laya.Point(44, 25);
        var coinFontPos = new Laya.Point(27, 66);
        var levelFont = new Laya.Point(2, 23);
        var coinImgPos = new Laya.Point(18, 74);
        var levelFontBgPos = new Laya.Point(22, 35);
        var walletBtnPos = new Laya.Point(196, 76);
        if (index % 2 == 1) {
            //namePos = new Laya.Point(11, 25);
            coinFontPos = new Laya.Point(14, 66);
            levelFont = new Laya.Point(176, 23);
            coinImgPos = new Laya.Point(191, 75);
            levelFontBgPos = new Laya.Point(196, 35);
            walletBtnPos = new Laya.Point(22, 76);
        }
        this.m_info = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoFrame, new Laya.Point(info.x, info.y), huntPanel.m_layaUINode, 0, 0); //炮台信息底框
        var labelBg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoLabelBg, new Laya.Point(4, 21), this.m_info, 0, 0); //玩家昵称底框
        this.m_userNameLabel = CommonUtil_1.utils.CommonUtils.CreatLayaLabel(namePos, 161, this.m_info, 22); //玩家昵称
        this.m_userNameLabel.color = "#FFFFFF";
        var levelFontBg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoLevelBg, levelFontBgPos, this.m_info); //玩家等级底框
        this.m_userLevelFont = CommonUtil_1.utils.CommonUtils.CreatFontClip(levelFont, CommonConstant_1.default._levelFont, "*+,-./0123456789", this.m_info, 51); //等级
        this.m_userLevelFont.scale(0.8, 0.8);
        levelFontBg.visible = false;
        this.m_userLevelFont.visible = false;
        var coinFontBg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoLabelBg, new Laya.Point(4, 60), this.m_info, 0, 0); //金币数字底框
        var coinImg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoCoin, coinImgPos, this.m_info); //金币icon
        this.m_coinNumFont = CommonUtil_1.utils.CommonUtils.CreatFontClip(coinFontPos, CommonConstant_1.default._coinFont, ".,0123456789", this.m_info, 173); //金币数字
        this.m_walletBnt = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoWallent, walletBtnPos, this.m_info); //金币icon
        this.m_wallentBtnMonitor = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._infoWallent, new Laya.Point(walletBtnPos.x + this.m_info.x, walletBtnPos.y + this.m_info.y), Laya.stage); //金币icon
        this.m_wallentBtnMonitor.alpha = 0;
        this.m_wallentBtnMonitor.on(Laya.Event.MOUSE_DOWN, this, this.OnWalletBtnClick);
        this.m_gunGpos = this.m_cannon.localToGlobal(this.m_gun.x, this.m_gun.y);
        var endPos = this.m_info.localToGlobal(new Laya.Point(coinImg.x, coinImg.y));
        this.m_coinEndPos = new Laya.Vector3(endPos.x, endPos.y, 0);
        this.m_changeEffect = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.ChangeCannonEffect);
    }
    Object.defineProperty(Cannon.prototype, "CoinEndPos", {
        get: function () {
            return this.m_coinEndPos;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cannon.prototype, "Gun3D", {
        get: function () {
            return this.m_gun3D;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cannon.prototype, "Gun", {
        get: function () {
            return this.m_gun;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cannon.prototype, "GunGpos", {
        get: function () {
            return new Laya.Vector3(this.m_gunGpos.x, this.m_gunGpos.y, 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Cannon.prototype, "Data", {
        get: function () {
            return this.m_data;
        },
        enumerable: true,
        configurable: true
    });
    Cannon.prototype.InitGun3D = function () {
        var self = this;
        if (this.m_gun3dDic == null) {
            this.m_gun3dDic = new Laya.WeakObject;
        }
        for (var i = 0; i < 3; i++) {
            var prefab = GameFacade_1.default.Instance.HuntSceneMng.GetCannonPrefab(i + 1);
            if (null == prefab)
                return;
            var cloneIns = Laya.Sprite3D.instantiate(prefab, prefab.parent);
            //cloneIns.active = true;
            cloneIns.transform.position = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, this.GunGpos);
            cloneIns.transform.rotationEuler = new Laya.Vector3(0, 0, 0);
            this.m_gun3dDic.set(i, cloneIns);
        }
        this.m_gun3D = this.m_gun3dDic.get(0);
        if (this.m_bInversion) {
            this.m_baseBg.scaleY = -1;
            this.m_gun3D.transform.rotationEuler = new Laya.Vector3(0, 0, 180);
        }
    };
    Cannon.prototype.OnLossBtnClick = function () {
        this.m_gunMultiIndex = (this.m_gunMultiIndex <= 0) ? NetRoom_1.default.Instance._curRoomInfo.battery.length - 1 : this.m_gunMultiIndex - 1;
        NetRoom_1.default.Instance.ChangeBatteryReq(this.m_gunMultiIndex, NetLogin_1.default.Instance.RoleInfo.roleId);
        this.ChangeGunBySelf(this.m_gunMultiIndex);
    };
    Cannon.prototype.OnAddBtnClick = function () {
        this.m_gunMultiIndex = (this.m_gunMultiIndex >= NetRoom_1.default.Instance._curRoomInfo.battery.length - 1) ? 0 : this.m_gunMultiIndex + 1;
        NetRoom_1.default.Instance.ChangeBatteryReq(this.m_gunMultiIndex, NetLogin_1.default.Instance.RoleInfo.roleId);
        this.ChangeGunBySelf(this.m_gunMultiIndex);
    };
    /**
     * 免转按钮点击
     * 最高层的fui不能点击穿透，所以炮台信息框上的免转按钮不能触发响应，只能起到一个显示功能，因此在stage上添加laya对象wallentBtnMonitor来监测响应
     */
    Cannon.prototype.OnWalletBtnClick = function (e) {
        switch (e.type) {
            case Laya.Event.MOUSE_DOWN:
                {
                    if (!GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn && this.m_walletBnt.visible) {
                        BatteryController_1.default.Instance.StopAutoAttack();
                        BatteryController_1.default.Instance.StopLockAttack();
                        GameFacade_1.default.Instance.WalletMng.mainWalletReq();
                    }
                }
        }
    };
    /**
     * 播放改变炮台声音
     */
    Cannon.prototype.playSoundChangeGun = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.changeGun);
    };
    Cannon.prototype.ChangeGunByServe = function () {
        this.m_gunMultiLabel.text = CommonUtil_1.utils.CommonUtils.numberFixed(this.m_data.bullet_multi * NetRoom_1.default.Instance._curRoomInfo.ante).toString(); //子弹倍率
        var bulletResID = BatteryController_1.default.Instance.GetBatteryResIdByMulti(this.m_data.bullet_multi) - 1;
        //this.m_gun.url = CommonConstant._preHunterPath + CommonConstant._gunPicArr[bulletResID];
        this.ChangeGun(bulletResID);
    };
    Cannon.prototype.ChangeGunBySelf = function (index) {
        var multi = NetRoom_1.default.Instance._curRoomInfo.battery[this.m_gunMultiIndex];
        this.m_data.bullet_multi = multi; //客户端更新自身炮台倍率
        this.m_gunMultiLabel.text = CommonUtil_1.utils.CommonUtils.numberFixed(multi * NetRoom_1.default.Instance._curRoomInfo.ante).toString(); //子弹倍率
        var bulletResID = BatteryController_1.default.Instance.GetBatteryResIdByMulti(multi) - 1;
        //this.m_gun.url = CommonConstant._preHunterPath + CommonConstant._gunPicArr[bulletResID];
        this.ChangeGun(bulletResID);
    };
    Cannon.prototype.ChangeGun = function (index) {
        var rotateZ = this.m_gun3D.transform.rotationEuler.z;
        if (index != this.m_curGun3DIndex) {
            this.m_gun3D.active = false;
            this.m_gun3D = this.m_gun3dDic.get(index);
            this.m_gun3D.active = true;
            this.m_gun3D.transform.rotationEuler = new Laya.Vector3(0, 0, rotateZ);
            this.m_curGun3DIndex = index;
            this.m_changeEffect.transform.position = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, new Laya.Vector3(this.m_gunGpos.x, this.m_gunGpos.y, 0));
            this.m_changeEffect.active = false;
            this.m_changeEffect.active = true;
            this.m_changeEffect.transform.localPositionZ = -2;
            this.PlayAnimation(CannonConfig_1.default._IdleAni);
        }
        // if(!BatteryController.Instance.m_bshoot)
        // {
        //     this.PlayAnimation(CannonConfig._IdleAni);
        // }
    };
    Cannon.prototype.GetBulletPos = function () {
        var outPos = new Laya.Vector3(0, 0, 0);
        //Laya.Vector3.add((this.m_gun3D.getChildByName("BulletPos") as Laya.Sprite3D).transform.position, this.m_gun3D.transform.position, outPos);
        //this.m_gunBulletPos = outPos;
        var worldPos = this.m_gun3D.getChildByName("BulletPos").transform.position;
        GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera.worldToViewportPoint(worldPos, outPos);
        return CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._HuntSceneCamera, outPos);
    };
    //#region 子弹逻辑
    /**
     * 创建子弹
     * @param data 子弹数据
     */
    Cannon.prototype.CreateBullet = function (data) {
        var tStartPos = this.GetBulletPos();
        var tStartAngle = this.GetGunAngle(data, tStartPos);
        this.Gun3D.transform.rotationEuler = tStartAngle; //创建子弹之前，先同步好炮台角度
        //utils.CommonUtils.log("CreateBullet data = ", data);
        var self = this;
        this.PlayAnimation(CannonConfig_1.default._AttackAni);
        this.PlayAttackFire();
        Laya.timer.once(0.3 * 1000, this, function () {
            self.PlayAnimation(CannonConfig_1.default._IdleAni);
        });
        // if (!(data.fishid > 0 && FishController.Instance.FishObjDict.has(data.fishid)))
        //     return;//子弹锁定了一个不存在的鱼
        if (data.uid.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString()) {
            BatteryController_1.default.Instance.ShootedBulletAmount += 1;
        }
        this.FGNumFont(data.jettonshow, data.uid);
        if (NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
            GameFacade_1.default.Instance.WalletMng.fgWalletValueAfterShoot = data.jettonshow;
        }
        var bulletResID = BatteryController_1.default.Instance.GetBatteryResIdByMulti(data.multi);
        var bullet = GameFacade_1.default.Instance.HuntSceneMng.InstantiateBullet(bulletResID);
        bullet.transform.rotationEuler = tStartAngle; //this.GetBulletRotate(data.angel);
        this.playSoundShoot(bulletResID);
        //bullet.transform.position = CommonConstant.PosVector[this.m_data.position - 1];
        //bullet.transform.position = utils.CommonUtils.ScreenToWorldPoint(GameFacade.Instance.HuntSceneMng._HuntSceneCamera, this.m_gunBulletPos);
        bullet.transform.position = tStartPos; //this.GetBulletPos();
        bullet.getChildAt(0).transform.localPosition = new Laya.Vector3(0, 0, 0);
        var bulletScript = bullet.getComponent(BulletBase_1.default);
        bulletScript.InitData(data.bulletid, data.multi, bulletResID, data.fishid, data.uid, data.fishid);
        //bulletScript.StartMoving();
    };
    /**
     * 获得炮台角度
     * @param data 子弹数据
     * @param beginPos 起始位置
     */
    Cannon.prototype.GetGunAngle = function (data, beginPos) {
        if (null != data) {
            if (data.fishid != 0) {
                var lockedFish = GameFacade_1.default.Instance.HuntSceneMng.GetFishPointById(data.fishid.toString()); //FishController.Instance.FishObjDict[data.fishid.toString()];
                if (null != lockedFish) {
                    this.UpdateAngleByPos(lockedFish.x, lockedFish.y);
                    return this.GetBulletRotate(this.UpdateAngleByPos(lockedFish.x, lockedFish.y));
                }
            }
            return this.GetBulletRotate(data.angel);
        }
    };
    /** 炮台 子弹的角度*/
    Cannon.prototype.GetBulletRotate = function (angel) {
        return new Laya.Vector3(0, 0, (this.m_bInversion ? 180 : 0) + angel);
    };
    /** 更新fg钱包*/
    Cannon.prototype.FGNumFont = function (value, uid) {
        this.m_coinNumFont.value = (CommonUtil_1.utils.CommonUtils.numberFixed(value)).toFixed(2); //金币数
        if (NetLogin_1.default.Instance.IsSelfUid(uid)) {
            GameFacade_1.default.Instance.WalletMng.setFgWalletValue(value);
            GameFacade_1.default.Instance.GameMng.userChips = value;
        }
    };
    /**
     * 根于子弹类型播放声音
     * @param num 子弹类型
     */
    Cannon.prototype.playSoundShoot = function (num) {
        switch (num) {
            case 1:
                GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.shoot1);
                break;
            case 2:
                GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.shoot2);
                break;
            case 3:
                GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.shoot3);
                break;
            default:
                break;
        }
    };
    Cannon.prototype.GetButtlePos = function (angel) {
        // if (this.m_data.position > 2) {
        //     angel = 180 + angel;
        // }
        // let x = Math.sin(angel)*1.048; //半径为60
        // let y = Math.cos(angel)*1.048;
        // utils.CommonUtils.log("------------------angel = " + angel);
        // utils.CommonUtils.log("------------------x = " + x);
        // utils.CommonUtils.log("------------------y = " + y);
        // let posCenter = CommonConstant.PosVector[this.m_data.position - 1];
        // let pos = new Laya.Vector3(posCenter.x+x, posCenter.y+y, 0);
        //return pos;
    };
    //#endregion
    /**
     * 更新玩家炮台UI信息展示
     */
    Cannon.prototype.UpdatePlayerInfoShow = function () {
        var info = null;
        if (this.m_data)
            info = NetRoom_1.default.Instance._RoomRoleInfoDict[this.m_data.uid.toString()];
        this.UpdateInfo(info);
        //// BatteryUpgrade();
    };
    Cannon.prototype.UpdateInfo = function (data) {
        this.m_data = data;
        var dataIsNotNull = (data != null);
        this.m_cannon.visible = dataIsNotNull;
        this.m_info.visible = dataIsNotNull;
        this.m_waitImg.visible = !dataIsNotNull;
        this.m_gun3D.active = dataIsNotNull;
        this.m_baseBg.visible = dataIsNotNull;
        this.m_walletBnt.visible = NetLogin_1.default.Instance.isOfficial;
        if (dataIsNotNull) {
            //if (data.uid.toString() != NetLogin.Instance.RoleInfo.roleId.toString()) {
            if (!NetLogin_1.default.Instance.IsSelfUid(data.uid)) {
                this.m_loseBtn.visible = false;
                this.m_addBtn.visible = false;
                this.m_walletBnt.visible = false;
            }
            else {
                GameFacade_1.default.Instance.GameMng.userAccount = this.m_userNameLabel.text;
            }
            this.m_position = data.position;
            this.PlayAnimation(CannonConfig_1.default._IdleAni);
            this.m_gunMultiIndex = BatteryController_1.default.Instance.GetBatteryIndexByMulti(this.m_data.bullet_multi);
            this.m_userNameLabel.text = CommonUtil_1.utils.CommonUtils.nickNameWithSymbol(this.m_data.nickname); //用户名
            this.m_userLevelFont.value = this.m_data.level.toString(); //等级数
            this.FGNumFont(this.m_data.jetton_show, data.uid);
            this.ChangeGunByServe();
        }
    };
    /** 更新金币*/
    Cannon.prototype.CoinFlyingFinish = function (uid, data) {
        var info = null;
        if (this.m_data) {
            //this.FGNumFont(this.m_data.jetton_show as number);
            // 金币数字
            var bounsFont_1 = FishController_1.default.Instance.CreatBounsFont(data.bonus, this.CoinEndPos, 0.3, uid);
            if (null == bounsFont_1)
                return;
            var bInversion = BatteryController_1.default.Instance.GetBatteryByUid(uid).m_bInversion;
            var offY = -CommonConstant_1.default.BounsFontOffY;
            if (bInversion) {
                offY = CommonConstant_1.default.BounsFontOffY;
            }
            //console.log("金币");
            GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.getCoin);
            Laya.Tween.to(bounsFont_1, { y: this.CoinEndPos.y + offY }, 500, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {
                bounsFont_1.visible = false;
                Laya.Pool.recover(FishController_1.default.Instance._PoolSign, bounsFont_1);
            }));
        }
    };
    /**
     * 更新子弹倍数
     * @param multi
     */
    Cannon.prototype.UpdateBulletMulti = function (multi) {
        this.m_data.bullet_multi = multi;
        this.ChangeGunByServe();
    };
    Cannon.prototype.UpdateAngleByAngle = function (angel) {
        this.m_cannon.rotation = angel;
    };
    /** 更新炮台角度，并返回*/
    Cannon.prototype.UpdateAngleByPos = function (posX, posY) {
        if (null == this.m_data)
            return;
        var diry = this.m_data.position <= 2 ? -1 : 1;
        var dir = new Laya.Vector2(posX - this.m_gunGpos.x, posY - this.m_gunGpos.y);
        var dirnor = new Laya.Vector2(0, 0);
        Laya.Vector2.normalize(dir, dirnor);
        var dot = Laya.Vector2.dot(new Laya.Vector2(0, diry), dirnor);
        var rAngle = Math.acos(dot) * 57.29578;
        //dot点乘为负数，则两向量夹角大于90度，点击无效
        // if (dot < 0) {
        //     return -1;
        // }
        // else {
        //     if (dirnor.x <= 0) {
        //         rAngle = -rAngle;
        //     }
        // }
        if (dirnor.x <= 0) {
            rAngle = -rAngle;
        }
        rAngle = this.m_data.position <= 2 ? rAngle : -rAngle;
        //this.m_gun.rotation = rAngle;
        this.m_gun3D.transform.rotationEuler = new Laya.Vector3(0, 0, rAngle);
        return rAngle;
    };
    //
    Cannon.prototype.PlayAnimation = function (aniName) {
        if (this.Gun3D == null) {
            CommonUtil_1.utils.CommonUtils.log("---3d炮资源为空");
            return;
        }
        var animator = this.Gun3D.getChildAt(0).getComponent(Laya.Animator);
        if (aniName != "") {
            var aniStatesMap = animator.getControllerLayer(0)._statesMap;
            var animatorState = aniStatesMap[aniName];
            if (animatorState)
                animator.play(aniName);
            //utils.CommonUtils.log("PlayAnimation aniName = ", aniName);
        }
    };
    Cannon.prototype.PlayAttackFire = function () {
        //3号炮台的喷火粒子效果
        var particle = this.Gun3D.getChildAt(0).getChildAt(0).getChildByName("huo");
        if (particle) {
            var particleSys = particle.particleSystem;
            particleSys.stop();
            particleSys.play();
        }
        //三个炮台的meshrenderer 喷火效果
        var fireSp3D = this.Gun3D.getChildAt(0).getChildAt(0).getChildByName("cannon01_1");
        if (fireSp3D == null) {
            fireSp3D = this.Gun3D.getChildAt(0).getChildByName("cannon01_1");
        }
        var fireMeshRenderer = fireSp3D.meshRenderer;
        var effectMaterial = fireMeshRenderer.material;
        Laya.Tween.to(effectMaterial, { colorA: 255 }, 45, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(effectMaterial, { colorA: 0 }, 45);
        }));
    };
    Cannon.prototype.Exit = function () {
        this.m_gun3D = null;
        this.m_data = null;
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        this.m_wallentBtnMonitor.off(Laya.Event.MOUSE_DOWN, this, this.OnWalletBtnClick);
        this.m_wallentBtnMonitor.removeSelf();
    };
    return Cannon;
}());
exports.default = Cannon;
},{"../../GameFacade":3,"../../config/CannonConfig":5,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetRoom":84,"../../utils/CommonUtil":90,"../Bullet/BulletBase":14}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonConstant_1 = require("../../constant/CommonConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var HuntedItem = /** @class */ (function () {
    function HuntedItem(owner, panel) {
        this.m_fishImg = owner.getChild("FishImg").asLoader;
        this.m_amount = owner.getChild("Amount").asLabel;
        this.m_amount.ensureSizeCorrect();
        this.m_value = owner.getChild("Value").asTextField;
        this.m_value.ensureSizeCorrect();
        this.m_huntedPanel = panel;
        this.GameObject = owner;
    }
    //id从1开始
    HuntedItem.prototype.InitUI = function (value, fishType) {
        this.m_amountNum = 1;
        this.m_valueNum = value;
        this.m_amount.text = this.m_amountNum.toString();
        this.m_value.text = this.m_valueNum.toFixed(2);
        this.m_fishImg.url = CommonConstant_1.default._preCommonPath + fishType;
    };
    HuntedItem.prototype.AddAmount = function (value) {
        this.m_amountNum++;
        this.m_valueNum += value;
        this.m_amount.text = this.m_amountNum.toString();
        this.m_value.text = this.m_valueNum.toFixed(2);
        CommonUtil_1.utils.CommonUtils.huntedItemValueFontSize(this.m_value);
    };
    return HuntedItem;
}());
exports.default = HuntedItem;
},{"../../constant/CommonConstant":7,"../../utils/CommonUtil":90}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 捕鱼场景菜单栏
 */
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var GameFacade_1 = require("../../GameFacade");
var TipManager_1 = require("../../manager/TipManager");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BatteryController_1 = require("../../controller/BatteryController");
var CommonConstant_1 = require("../../constant/CommonConstant");
var Menu = /** @class */ (function () {
    function Menu(menu, controller, parent) {
        this.m_menu = menu;
        this.m_panelController = controller;
        this.m_parent = parent;
        Laya.stage.on(Laya.Event.RESIZE, this, this.OnResize);
        this.init();
    }
    Menu.prototype.init = function () {
        var _this = this;
        this.m_panelController.selectedIndex = 0;
        if (CommonUtil_1.utils.CommonUtils.isApp() && CommonUtil_1.utils.CommonUtils.isIphonXAdapte()) {
            this.m_panelController.selectedIndex = 2;
        }
        this.m_selfController = this.m_menu.getController("c1");
        this.m_selfController.selectedIndex = 0;
        this.m_menu.getChild("MenuBtn").onClick(this, this.OnMenuBtnClick);
        this.m_menu.getChild("SetBtn").onClick(this, this.OnSetBtnClick);
        this.m_menu.getChild("ExcelBtn").onClick(this, this.OnExcelBtnClick);
        this.m_menu.getChild("HelpBtn").onClick(this, this.OnHelpBtnClick);
        this.m_menu.getChild("ExitBtn").onClick(this, this.OnExitBtnClick);
        this.m_menu.getChild("MenuBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClick); });
        this.m_menu.getChild("SetBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.m_menu.getChild("ExcelBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.m_menu.getChild("HelpBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.m_menu.getChild("ExitBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
    };
    /**
  *
  * 播放按钮点击声音
  */
    Menu.prototype.onPlaySound = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    /**
     * 设置按钮
     */
    Menu.prototype.OnSetBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(5 /* SettingPanel */);
    };
    Menu.prototype.OnHelpBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(6 /* HelpPanel */);
    };
    /**
     * 报表
     */
    Menu.prototype.OnExcelBtnClick = function () {
        if (GameFacade_1.default.Instance.GameMng.isPlay) {
            GameFacade_1.default.Instance.TipMng.createTip(CommonConstant_1.default._PromptContent.DemoAccTip, TipManager_1.TipType.ONECLOSE);
        }
        else {
            window.open(GameFacade_1.default.Instance.GameMng.reportUrl);
        }
    };
    Menu.prototype.OnExitBtnClick = function () {
        //GameFacade.Instance.SoundMng.stopMusic();
        BatteryController_1.default.Instance.StopAutoAttack();
        BatteryController_1.default.Instance.StopLockAttack();
        var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
        promptPanel.InitData(3 /* ExitHuntScene */, CommonConstant_1.default._PromptContent.ExitHuntScene);
    };
    /** 屏幕宽高、翻转变化检测*/
    Menu.prototype.OnResize = function () {
        if (CommonUtil_1.utils.CommonUtils.isApp() && CommonUtil_1.utils.CommonUtils.isIphonXAdapte()) {
            if (this.m_panelController.selectedIndex == 0) {
                this.m_panelController.selectedIndex = 2;
            }
            else if (this.m_panelController.selectedIndex == 1) {
                this.m_panelController.selectedIndex = 3;
            }
        }
        else {
            if (this.m_panelController.selectedIndex == 2) {
                this.m_panelController.selectedIndex = 0;
            }
            else if (this.m_panelController.selectedIndex == 3) {
                this.m_panelController.selectedIndex = 1;
            }
        }
    };
    Menu.prototype.OnMenuBtnClick = function () {
        if (CommonUtil_1.utils.CommonUtils.isApp() && CommonUtil_1.utils.CommonUtils.isIphonXAdapte()) {
            this.m_panelController.selectedIndex = this.m_panelController.selectedIndex == 2 ? 3 : 2; //有留海
        }
        else {
            this.m_panelController.selectedIndex = this.m_panelController.selectedIndex == 0 ? 1 : 0; //无留海
        }
        if (GameFacade_1.default.Instance.GameMng.sheet == 0) //隐藏报表按钮
         {
            this.m_selfController.selectedIndex = this.m_selfController.selectedIndex == 0 ? 2 : 0; //按钮显示、隐藏            
        }
        else {
            this.m_selfController.selectedIndex = this.m_selfController.selectedIndex == 0 ? 1 : 0; //按钮显示、隐藏 
        }
        GameFacade_1.default.Instance.GameMng.seeLog();
    };
    return Menu;
}());
exports.default = Menu;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../controller/BatteryController":12,"../../manager/TipManager":69,"../../utils/CommonUtil":90}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonConstant_1 = require("../../constant/CommonConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var SelectItem = /** @class */ (function () {
    function SelectItem(owner, panel) {
        this.m_fishImg = owner.getChild("FishImg").asLoader;
        this.m_value = owner.getChild("Value").asLabel;
        this.m_controller = owner.getController("c1");
        this.m_selectPanel = panel;
    }
    Object.defineProperty(SelectItem.prototype, "FishType", {
        get: function () {
            return this.m_type;
        },
        enumerable: true,
        configurable: true
    });
    SelectItem.prototype.ChangeUI = function (value, fishType) {
        if (value != 0) {
            this.m_value.text = (CommonUtil_1.utils.CommonUtils.numberFixed(value)).toFixed(2);
        }
        else {
            this.m_value.visible = false;
        }
        this.m_fishImg.url = CommonConstant_1.default._preCommonPath + fishType;
        this.m_type = fishType;
    };
    SelectItem.prototype.Onclicked = function () {
        var bclicked = this.m_controller.selectedIndex == 1 ? false : true;
        this.SetClicked(bclicked);
    };
    SelectItem.prototype.SetClicked = function (bClicked) {
        this.m_controller.selectedIndex = bClicked ? 1 : 0;
        //选中状态
        if (bClicked) {
            this.m_selectPanel.m_autoAttackArr[this.m_type] = true;
        }
        else {
            this.m_selectPanel.m_autoAttackArr[this.m_type] = false;
        }
    };
    return SelectItem;
}());
exports.default = SelectItem;
},{"../../constant/CommonConstant":7,"../../utils/CommonUtil":90}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../../GameFacade");
var EventConstantResponse_1 = require("../../../constant/EventConstantResponse");
var NetAct_1 = require("../../../net/ProtoHander/NetAct");
var EnumData_1 = require("../../../Enum/EnumData");
var STATUS = EnumData_1.default.ACTSTATUS;
var CommonUtil_1 = require("../../../utils/CommonUtil");
var RebateAct = /** @class */ (function (_super) {
    __extends(RebateAct, _super);
    function RebateAct() {
        var _this = _super.call(this) || this;
        /**活动状态 */
        _this.actS = STATUS.ACTSHOWSTARTBEFORE;
        return _this;
    }
    ;
    RebateAct.prototype.onAwake = function () {
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.ACTLISTRESP, this, this.actInfo);
        NetAct_1.default.Instance.actListReq();
    };
    RebateAct.prototype.setTimeLabel = function (com) {
        this.timeTex = com.getChild("time").asLabel;
        this.con = com.getController("c1");
        this.com = com;
        this.com.visible = false;
        this.timeTex.text = "00:00:00";
    };
    /**
     * 活动详情
     */
    RebateAct.prototype.actInfo = function (data) {
        CommonUtil_1.utils.CommonUtils.log(data);
        if (data.type != 7) {
            this.actClose();
            return;
        }
        this.showStartTime = data.show_start_time;
        this.showEndTime = data.show_end_time;
        this.actStartTime = data.start_time;
        this.actEndTime = data.end_time;
        if (CommonUtil_1.utils.CommonUtils.getNowActualTimeStamp() >= this.showStartTime * 1000) {
            this.actS = STATUS.ACTSHOWSTART_START;
            this.actshowStart();
        }
        if (CommonUtil_1.utils.CommonUtils.getNowActualTimeStamp() >= this.actStartTime * 1000) {
            this.actS = STATUS.ACTSTART_END;
            this.actStart();
        }
        if (CommonUtil_1.utils.CommonUtils.getNowActualTimeStamp() >= this.actEndTime * 1000) {
            this.actS = STATUS.ACTEND_SHOWEND;
            this.actClose();
        }
        if (CommonUtil_1.utils.CommonUtils.getNowActualTimeStamp() >= this.showEndTime * 1000) {
            this.actS = STATUS.ACTSHOWENDAFTER;
            this.actClose();
        }
        // console.log(this.actS);
        // console.log("showStartTime:" + this.showStartTime);
        // console.log("showEndTime:" + this.showEndTime);
        // console.log("actStartTime:" + this.actStartTime);
        // console.log("actEndTime:" + this.actEndTime);
        // console.log("nowTime:" + utils.CommonUtils.getNowActualTimeStamp());
    };
    /**
 * 打开活动前的提示图标
 */
    RebateAct.prototype.actshowStart = function () {
        this.com.visible = true;
        this.con.setSelectedIndex(1);
    };
    /**
     * 打开活动时的提示图标
     */
    RebateAct.prototype.actStart = function () {
        this.com.visible = true;
        this.con.setSelectedIndex(0);
    };
    /**
     * 关闭图标
     */
    RebateAct.prototype.actClose = function () {
        this.com.visible = false;
    };
    RebateAct.prototype.onUpdate = function () {
        if (this.actS == STATUS.ACTSHOWSTARTBEFORE || this.actS == STATUS.ACTSHOWENDAFTER || this.actS == STATUS.ACTEND_SHOWEND) {
            return;
        }
        else if (this.actS == STATUS.ACTSHOWSTART_START) {
            var str = CommonUtil_1.utils.CommonUtils.getTimeDifference(this.actStartTime);
            if (str != null) {
                this.timeTex.text = str;
            }
            else {
                this.actS = STATUS.ACTSTART_END;
                this.actStart();
            }
        }
        else if (this.actS == STATUS.ACTSTART_END) {
            var str = CommonUtil_1.utils.CommonUtils.getTimeDifference(this.actEndTime);
            if (str != null) {
                this.timeTex.text = str;
            }
            else {
                this.actS = STATUS.ACTSHOWENDAFTER;
                this.actClose();
            }
        }
    };
    RebateAct.prototype.onDisable = function () {
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.ACTLISTRESP, this, this.actInfo);
    };
    return RebateAct;
}(Laya.Script));
exports.default = RebateAct;
},{"../../../Enum/EnumData":1,"../../../GameFacade":3,"../../../constant/EventConstantResponse":8,"../../../net/ProtoHander/NetAct":76,"../../../utils/CommonUtil":90}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../../GameFacade");
var AddWebpage = /** @class */ (function () {
    function AddWebpage() {
    }
    /**
     * 返利活动创建内嵌弹框
     */
    AddWebpage.createIframe = function () {
        //点按钮的时候 游戏加上转菊花效果，然后执行以下代码
        var iframeDiv = document.createElement("div");
        document.body.appendChild(iframeDiv);
        iframeDiv.id = "iframeDiv";
        iframeDiv.style.position = "fixed";
        iframeDiv.style.width = "100%";
        iframeDiv.style.height = "100%";
        iframeDiv.style.overflow = "hidden";
        //iframeDiv.style.display = "none";
        var iframe = document.createElement("iframe");
        iframeDiv.appendChild(iframe);
        iframe.style.width = "100%";
        iframe.style.height = "100%";
        if (GameFacade_1.default.Instance.GameMng.actUrl.indexOf("?") > 0) {
            iframe.src = GameFacade_1.default.Instance.GameMng.actUrl + "&game_id=" + GameFacade_1.default.Instance.GameMng.game_id; //换成活动页面
        }
        iframe.src = GameFacade_1.default.Instance.GameMng.actUrl + "?game_id=" + GameFacade_1.default.Instance.GameMng.game_id; //换成活动页面
        iframe.style.zIndex = "9999999999";
        iframe.onload = function () {
            //iframeDiv.style.display = "inline";
        };
        var closeBtn = document.createElement("img");
        var obj = document.getElementById("gameVersion");
        if (obj) {
            var gameVersion = obj.getAttribute("value");
            closeBtn.src = "../fish_common/fullScreen/button_gb.png?v=" + gameVersion;
        }
        closeBtn.style.position = "absolute";
        closeBtn.style.right = "0";
        closeBtn.style.top = "0";
        iframeDiv.appendChild(closeBtn);
        closeBtn.onclick = function () {
            var div = document.getElementById("iframeDiv");
            div.parentElement.removeChild(div);
        };
        var onResize = function () {
            var isLandscape = document.body.clientWidth > document.body.clientHeight;
            var scaleX = document.body.clientWidth / (isLandscape ? 1920 : 1080);
            var scaleY = document.body.clientHeight / (isLandscape ? 1080 : 1920);
            var scale = scaleX > scaleY ? scaleY : scaleX;
            closeBtn.style.width = 94 * scale * 1.2 + "px"; //缩放
            closeBtn.style.height = 96 * scale * 1.2 + "px";
            closeBtn.style.right = 94 * scale * 0.5 + "px";
            closeBtn.style.top = 96 * scale * 0.5 + "px"; //留一点是防止点到Safari那些浏览器缩小
        };
        onResize();
        window.addEventListener("resize", onResize);
    };
    return AddWebpage;
}());
exports.AddWebpage = AddWebpage;
},{"../../../GameFacade":3}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cameraMove = /** @class */ (function (_super) {
    __extends(cameraMove, _super);
    function cameraMove() {
        return _super.call(this) || this;
    }
    ;
    cameraMove.prototype.onAwake = function () {
        this.camera = this.owner;
        this.camera.transform.rotationEuler = new Laya.Vector3(0, 180, -0);
        this.num = 0;
        Laya.timer.frameLoop(1, this, this.cameraMove);
    };
    /**
     * 摄像机移动
     */
    cameraMove.prototype.cameraMove = function () {
        var x = this.num++;
        var y = Math.sin(x * 0.01);
        this.camera.transform.rotationEuler = new Laya.Vector3(0, 180 + y, -0);
    };
    return cameraMove;
}(Laya.Script));
exports.cameraMove = cameraMove;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonUtil_1 = require("../../../utils/CommonUtil");
var Http = /** @class */ (function () {
    function Http() {
    }
    //用户发送请求的方法
    Http.httpSend = function (method, url, data, callback, failback) {
        var xmlhttprequest;
        xmlhttprequest = new XMLHttpRequest();
        if (xmlhttprequest.overrideMimeType) {
            xmlhttprequest.overrideMimeType("text/xml");
        }
        // if () {
        // } else if (window.ActiveXObject) {
        //     var activeName = ["MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
        //     for (var i = 0; i < activeName.length; i++) {
        //         try {
        //             xmlhttprequest = new ActiveXObject(activeName[i]);
        //             break;
        //         } catch (e) {
        //         }
        //     }
        // }
        if (xmlhttprequest == undefined || xmlhttprequest == null) {
            CommonUtil_1.utils.CommonUtils.log("XMLHttpRequest对象创建失败！！");
        }
        else {
            this.xmlhttp = xmlhttprequest;
        }
        try {
            if (this.xmlhttp != undefined && this.xmlhttp != null) {
                method = method.toUpperCase();
                if (method != "GET" && method != "POST") {
                    CommonUtil_1.utils.CommonUtils.log("HTTP的请求方法必须为GET或POST!!!");
                    return;
                }
                if (url == null || url == undefined) {
                    CommonUtil_1.utils.CommonUtils.log("HTTP的请求地址必须设置！");
                    return;
                }
                var tempxmlhttp = this.xmlhttp;
                this.xmlhttp.onreadystatechange = function () {
                    if (tempxmlhttp.readyState == 4) {
                        if (tempxmlhttp.status == 200) {
                            var responseText = tempxmlhttp.responseText;
                            var responseXML = tempxmlhttp.reponseXML;
                            if (callback == undefined || callback == null) {
                                CommonUtil_1.utils.CommonUtils.log("没有设置处理数据正确返回的方法");
                                CommonUtil_1.utils.CommonUtils.log("返回的数据：" + responseText);
                            }
                            else {
                                callback(responseText, responseXML);
                            }
                        }
                        else {
                            if (failback == undefined || failback == null) {
                                CommonUtil_1.utils.CommonUtils.log("没有设置处理数据返回失败的处理方法！");
                                CommonUtil_1.utils.CommonUtils.log("HTTP的响应码：" + tempxmlhttp.status + ",响应码的文本信息：" + tempxmlhttp.statusText);
                            }
                            else {
                                failback(tempxmlhttp.status, tempxmlhttp.statusText);
                            }
                        }
                    }
                };
                //解决跨域的问题
                if (url.indexOf("http://") >= 0) {
                    url.replace("?", "&");
                    url = "Proxy?url=" + url;
                }
                this.xmlhttp.open(method, url, false);
                //如果是POST方式，需要设置请求头
                // if (method == "POST") {
                //     this.xmlhttp.processReqChange("Content-type", "application/x-www-four-urlencoded");
                // }
                //this.xmlhttp.withCredentials = true;
                this.xmlhttp.send(data);
                //this.xmlhttp.send();
                this.xmlhttp.onerror = function (err) {
                    CommonUtil_1.utils.CommonUtils.log("connect error " + err);
                    failback(tempxmlhttp.status, tempxmlhttp.statusText);
                };
            }
            else {
                CommonUtil_1.utils.CommonUtils.log("XMLHttpRequest对象创建失败，无法发送数据！");
            }
        }
        catch (error) {
            CommonUtil_1.utils.CommonUtils.warn(error);
        }
    };
    /**
     * 关闭接口
     */
    Http.httpAbort = function () {
        if (this.xmlhttp != null || this.xmlhttp != undefined) {
            this.xmlhttp.abort();
        }
    };
    return Http;
}());
exports.Http = Http;
},{"../../../utils/CommonUtil":90}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetJpPool_1 = require("../../../net/ProtoHander/NetJpPool");
var GameFacade_1 = require("../../../GameFacade");
var EventConstantResponse_1 = require("../../../constant/EventConstantResponse");
var jpBeat = /** @class */ (function (_super) {
    __extends(jpBeat, _super);
    function jpBeat() {
        return _super.call(this) || this;
    }
    ;
    jpBeat.prototype.onAwake = function () {
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.JPNUMBER, this, this.jp);
    };
    /**
     * 设置jptext
     * @param jpText
     */
    jpBeat.prototype.setJpText = function (jpText) {
        this.jpTex = jpText;
    };
    /**
     * 监控获得jp
     * @param data
     */
    jpBeat.prototype.jp = function (data) {
        this.jpShowNum(data);
    };
    /**
     * 同步jp跳动
     */
    jpBeat.prototype.synJpData = function () {
        if (NetJpPool_1.default.Instance._JpAmount != null) {
            this.jpShowNum(NetJpPool_1.default.Instance._JpAmount);
        }
    };
    /**
     * 初始化jp 金额
     * @param data
     */
    jpBeat.prototype.jpShowNum = function (num) {
        this.jpTex.text = (Number(num) * 0.01).toFixed(2);
        if (num == 0)
            return;
        Laya.timer.loop(2000, this, this.jpNum);
    };
    /**
     * jp跳动
     */
    jpBeat.prototype.jpNum = function () {
        this.jpTex.text = (Number(this.jpTex.text) + 0.02).toFixed(2);
    };
    return jpBeat;
}(Laya.Script));
exports.default = jpBeat;
},{"../../../GameFacade":3,"../../../constant/EventConstantResponse":8,"../../../net/ProtoHander/NetJpPool":79}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../../GameFacade");
var EventConstantResponse_1 = require("../../../constant/EventConstantResponse");
var CommonUtil_1 = require("../../../utils/CommonUtil");
var MarqueeMove = /** @class */ (function (_super) {
    __extends(MarqueeMove, _super);
    function MarqueeMove() {
        var _this = _super.call(this) || this;
        _this.startX = 940; //公告开始移动的位置
        return _this;
    }
    ;
    MarqueeMove.prototype.onAwake = function () {
        this.arrMessageWorld = new Array();
        this.arrMessageRoom = new Array();
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.JPBCAST, this, this.jpBcast); //jp广播
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.BCASTMSGRESP, this, this.bcastMsg); //信息广播
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.BCASTWORLDRESP, this, this.bcastWorld); //全局广播
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.BCASTROOMRESP, this, this.bcastRoom); //房间广播
        //this.test();
    };
    /**
     * 测试使用
     */
    MarqueeMove.prototype.test = function () {
        var te1 = "测000100010001000100010011";
        var te = "测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用测试使用";
        this.arrMessageRoom.push(te + te1 + te);
    };
    /**
     * 设置主面板
     * @param mainCom
     */
    MarqueeMove.prototype.setMarqueeCom = function (mainCom, isRoom) {
        this.marqueeCom = mainCom;
        this.isRoom = isRoom;
        this.marqueeList = this.marqueeCom.getChild("contentList").asList;
    };
    MarqueeMove.prototype.bcastMsg = function (data) {
        this.arrMessageWorld.push(this.getMsgString(data));
    };
    MarqueeMove.prototype.bcastWorld = function (data) {
        this.arrMessageWorld.push(data.content);
    };
    MarqueeMove.prototype.bcastRoom = function (data) {
        this.arrMessageRoom.push(data.content);
    };
    MarqueeMove.prototype.jpBcast = function (data) {
        this.arrMessageWorld.push(this.getJpString(data));
    };
    /**
     * 获得msg
     * @param data
     */
    MarqueeMove.prototype.getMsgString = function (data) {
        var msg = data.msg.content;
        var char;
        var fishId;
        var num;
        for (var i = 0; i < msg.length; i++) {
            switch (msg[i].msg_type) {
                case "chars":
                    char = msg[i].chars;
                    break;
                case "fish_name":
                    fishId = msg[i].id;
                    break;
                case "number":
                    num = msg[i].number.toString();
                    break;
                default:
                    break;
            }
        }
        //var msgStr: string = "恭喜[color=#ffff00]{0}[/color]击杀 [color=#ffff00]{1}[/color]获得[color=#FFFF00]{2}[/color]倍金币奖励";
        var msgStr = "恭喜{0}击杀{1}获得{2}倍金币奖励";
        return msgStr.replace("{0}", char).replace("{1}", GameFacade_1.default.Instance.SoundMng.getSoundCofig()[fishId - 1]["fishname"].toString()).replace("{2}", num);
    };
    /**
     * 获得jp
     * @param data
     */
    MarqueeMove.prototype.getJpString = function (data) {
        var msg = data.content.content;
        var char1 = null;
        var num;
        var char2 = null;
        for (var i = 0; i < msg.length; i++) {
            switch (msg[i].msg_type) {
                case "chars":
                    if (char1 == null) {
                        char1 = msg[i].chars;
                    }
                    else {
                        char2 = msg[i].chars;
                    }
                    break;
                case "number":
                    num = Number(msg[i].number);
                    break;
                default:
                    break;
            }
        }
        var msgStr = "恭喜{0}获得JP大奖{1},奖励{2}金币";
        return msgStr.replace("{0}", char1).replace("{1}", CommonUtil_1.utils.CommonUtils.jpWinnerToType(data.score_level)).replace("{2}", char2);
    };
    MarqueeMove.prototype.onUpdate = function () {
        while (this.arrMessageRoom.length > 0 && !this.marqueeCom.visible && this.isRoom) {
            this.onShow(this.arrMessageRoom);
        }
        while (this.arrMessageWorld.length > 0 && !this.marqueeCom.visible) {
            this.onShow(this.arrMessageWorld);
        }
    };
    /**
    * 展示公告
    */
    MarqueeMove.prototype.onShow = function (arr) {
        this.marqueeCom.visible = true;
        this.marqueeList.removeChildrenToPool();
        var itemCom = this.marqueeList.addItemFromPool().asCom;
        var tex = itemCom.getChild("Text").asLabel;
        tex.text = arr.shift();
        var l = tex.text.length;
        tex.width = 26 * l;
        this.marqueeList.ensureBoundsCorrect();
        tex.x = this.startX;
        var w = tex.width;
        Laya.Tween.to(tex, { x: -(w) }, l * 50 + 4000, null, Laya.Handler.create(this, this.onHide));
    };
    /**
     * 隐藏公告
     */
    MarqueeMove.prototype.onHide = function () {
        this.marqueeCom.visible = false;
    };
    /**
     * 关闭公告
     */
    MarqueeMove.prototype.onClose = function () {
        this.onHide();
        this.marqueeList.removeChildrenToPool();
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.JPBCAST, this, this.bcastWorld);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.BCASTMSGRESP, this, this.bcastMsg); //信息广播
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.BCASTWORLDRESP, this, this.bcastWorld); //全局广播
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.BCASTROOMRESP, this, this.bcastRoom); //房间广播
    };
    return MarqueeMove;
}(Laya.Script));
exports.MarqueeMove = MarqueeMove;
},{"../../../GameFacade":3,"../../../constant/EventConstantResponse":8,"../../../utils/CommonUtil":90}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../../GameFacade");
var CommonConstant_1 = require("../../../constant/CommonConstant");
var MarqueeMove_1 = require("./MarqueeMove");
var BasePanel_1 = require("../../Panel/BasePanel");
var MarqueePanel = /** @class */ (function (_super) {
    __extends(MarqueePanel, _super);
    // public static get Instance(): Marquee {
    //     if (!this._instance) {
    //         this._instance = new Marquee();
    //     }
    //     return this._instance;
    // }
    function MarqueePanel(isRoom) {
        var _this = _super.call(this) || this;
        _this.isRoom = isRoom;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiMarqueePath.image, CommonConstant_1.default._fuiMarqueePath.fui, _this, _this.onLoadMarquee);
        return _this;
    }
    // /**
    //  * 创建公告
    //  * @param isRoom 是否是房间的公告
    //  */
    // public createMarquee(isRoom: boolean) {
    //     this.isRoom = isRoom;
    //     GameFacade.Instance.ResourceMng.loadUI(CommonConstant._fuiMarqueePath.image, CommonConstant._fuiMarqueePath.fui, this, this.onLoadMarquee);
    // }
    /**
     * 加载设置
     */
    MarqueePanel.prototype.onLoadMarquee = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiMarqueePath.Package, "Marquee", "MarqueeCom");
        var mar = this.m_fui.displayObject.addComponent(MarqueeMove_1.MarqueeMove);
        mar.setMarqueeCom(this.m_fui, this.isRoom);
        this.m_fui.visible = false;
    };
    /**
     * 关闭公告
     */
    MarqueePanel.prototype.disposeMarquee = function () {
        if (!this.m_fui)
            return;
        GameFacade_1.default.Instance.SceneMng.close(19 /* MarqueePanel */);
    };
    return MarqueePanel;
}(BasePanel_1.default));
exports.default = MarqueePanel;
},{"../../../GameFacade":3,"../../../constant/CommonConstant":7,"../../Panel/BasePanel":35,"./MarqueeMove":32}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BasePanel_1 = require("./BasePanel");
var SelectPanel_1 = require("./SelectPanel");
var GameFacade_1 = require("../../GameFacade");
var HuntedPanel_1 = require("./HuntedPanel");
var GameEvent_1 = require("../../constant/GameEvent");
var AutoAttackPanel = /** @class */ (function (_super) {
    __extends(AutoAttackPanel, _super);
    function AutoAttackPanel(id) {
        var _this = _super.call(this) || this;
        _this.m_fui = fairygui.UIPackage.createObject("HunterUI", "AutoAttackPanel").asCom;
        GameFacade_1.default.Instance.SceneMng.AddFUI(_this.m_fui);
        _this.m_selectPanel = new SelectPanel_1.default(_this.m_fui.getChild("SelectPanel").asCom, _this);
        _this.m_huntedPanel = new HuntedPanel_1.default(_this.m_fui.getChild("HuntedPanel").asCom, _this);
        _this.m_nameID = id;
        _this.m_fui.getChild("CloseBtn").asButton.onClick(_this, _this.OncloseBtnClick);
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.HUNT_HUNTEDFISH, _this.m_huntedPanel, _this.m_huntedPanel.OnHuntedFish);
        return _this;
    }
    AutoAttackPanel.prototype.init = function () {
        this.m_fui.visible = true;
        if (GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack) {
            this.ShowHuntedPanel();
        }
        else {
            this.ShowSelectPanel();
        }
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
    };
    AutoAttackPanel.prototype.ShowHuntedPanel = function () {
        this.m_huntedPanel.ShowSelf(true);
        this.m_selectPanel.ShowSelf(false);
    };
    /**
     * ShowSelectPanel
     */
    AutoAttackPanel.prototype.ShowSelectPanel = function () {
        this.m_huntedPanel.ShowSelf(false);
        this.m_selectPanel.ShowSelf(true);
    };
    AutoAttackPanel.prototype.OncloseBtnClick = function () {
        this.m_fui.visible = false;
        this.m_selectPanel.RemoveUnuseSelectedItem();
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
    };
    AutoAttackPanel.prototype.ClearHuntedPanel = function () {
        this.m_huntedPanel.ClearPanel();
    };
    AutoAttackPanel.prototype.RemoveAllEvents = function () {
        GameFacade_1.default.Instance.EventMng.remove(GameEvent_1.default.HUNT_HUNTEDFISH, this.m_huntedPanel, this.m_huntedPanel.OnHuntedFish);
    };
    return AutoAttackPanel;
}(BasePanel_1.default));
exports.default = AutoAttackPanel;
},{"../../GameFacade":3,"../../constant/GameEvent":9,"./BasePanel":35,"./HuntedPanel":43,"./SelectPanel":53}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var BasePanel = /** @class */ (function (_super) {
    __extends(BasePanel, _super);
    function BasePanel() {
        var _this = _super.call(this) || this;
        _this.m_fui = null;
        return _this;
    }
    BasePanel.prototype.RemoveAllEvents = function () {
    };
    BasePanel.prototype.Hide = function () {
        this.m_fui.visible = false;
    };
    BasePanel.prototype.Show = function () {
        if (!this.m_fui)
            return;
        this.m_fui.visible = true;
    };
    BasePanel.prototype.Close = function (bRemove, id) {
        if (bRemove === void 0) { bRemove = true; }
        if (id === void 0) { id = this.m_nameID; }
        GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.m_fui);
        GameFacade_1.default.Instance.SceneMng.destroy(id);
        this.RemoveAllEvents();
    };
    return BasePanel;
}(Laya.Sprite));
exports.default = BasePanel;
},{"../../GameFacade":3}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var NetRoleInfo_1 = require("../../net/ProtoHander/NetRoleInfo");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var NetAward_1 = require("../../net/ProtoHander/NetAward");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BasePanel_1 = require("./BasePanel");
var FundTipPanel = /** @class */ (function (_super) {
    __extends(FundTipPanel, _super);
    function FundTipPanel(data) {
        var _this = _super.call(this) || this;
        _this.cuurTipStatus = false;
        _this.data = null;
        _this.data = data;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiFundTipPath.image, CommonConstant_1.default._fuiFundTipPath.fui, _this, _this.onLoad);
        return _this;
    }
    /**
     * 加载设置
     */
    FundTipPanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiFundTipPath.Package, "FundTip", "FundTipCom");
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, this, this.actEndTime);
        this.timeTex = this.m_fui.getChild("timeTex").asLabel;
        this.currAmountTex = this.m_fui.getChild("currAmountTex").asLabel;
        this.hightestReceiveTex = this.m_fui.getChild("hightestReceiveTex").asLabel;
        this.isTipBtn = this.m_fui.getChild("isTip").asButton;
        this.isTipBtn.onClick(this, this.onIsTipClick);
        var goFund = this.m_fui.getChild("goBtn").asButton;
        goFund.onClick(this, this.onGoFundClick);
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
        NetRoom_1.default.Instance.SyncChipsReq();
        NetRoleInfo_1.default.Instance.lvInfoReq();
        this.initData();
        if (NetAward_1.default.Instance != null) {
            this.actEndTime();
        }
    };
    /**
    * 活动结束时间
    * @param data
    */
    FundTipPanel.prototype.actEndTime = function () {
        Laya.timer.loop(200, this, this.timeShow);
    };
    /**
     * 活动时间显示
     */
    FundTipPanel.prototype.timeShow = function () {
        console.log(NetAward_1.default.Instance.endTime);
        this.timeTex.text = CommonUtil_1.utils.CommonUtils.getTimeDifference(NetAward_1.default.Instance.endTime);
    };
    /**
     * 等级通知的金额
     */
    FundTipPanel.prototype.initData = function () {
        this.currAmountTex.text = (Number(this.data.award) * 0.01).toFixed(2);
        this.hightestReceiveTex.text = (Number(this.data.max_award) * 0.01).toFixed(2);
    };
    /**
     * 今日是否提示
     */
    FundTipPanel.prototype.onIsTipClick = function () {
        if (this.cuurTipStatus) {
            this.cuurTipStatus = false;
        }
        else {
            this.cuurTipStatus = true;
        }
    };
    /**
     * 去升级基金
     */
    FundTipPanel.prototype.onGoFundClick = function () {
        this.onClose();
        GameFacade_1.default.Instance.SceneMng.Create(14 /* GrowthFundPanel */);
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    FundTipPanel.prototype.onClose = function () {
        NetAward_1.default.Instance.isHaveFundTip = false;
        Laya.timer.clear(this, this.timeShow);
        NetAward_1.default.Instance.lvAwardNoticeSetReq(this.cuurTipStatus);
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, this, this.actEndTime);
        GameFacade_1.default.Instance.SceneMng.close(13 /* FundTipPanel */);
    };
    return FundTipPanel;
}(BasePanel_1.default));
exports.default = FundTipPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetAward":77,"../../net/ProtoHander/NetRoleInfo":83,"../../net/ProtoHander/NetRoom":84,"../../utils/CommonUtil":90,"./BasePanel":35}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetAward_1 = require("../../net/ProtoHander/NetAward");
var LanguageConstant_1 = require("../../constant/LanguageConstant");
var TipManager_1 = require("../../manager/TipManager");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BasePanel_1 = require("./BasePanel");
var GrowthFundPanel = /** @class */ (function (_super) {
    __extends(GrowthFundPanel, _super);
    function GrowthFundPanel() {
        var _this = _super.call(this) || this;
        _this.buyId = 0;
        /**当前等级 */
        _this.currFundId = 0;
        if (GameFacade_1.default.Instance.OthMng.isHaveGrowthFundPane)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveGrowthFundPane = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiGrowthFundPath.image, CommonConstant_1.default._fuiGrowthFundPath.fui, _this, _this.onLoad);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDCONFIGRESP, _this, _this.initInfoList);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDINFORESP, _this, _this.fundId);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, _this, _this.actEndTime);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDBUYRESP, _this, _this.growthFundBuyResp);
        return _this;
    }
    /**
     * 加载设置
     */
    GrowthFundPanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiGrowthFundPath.Package, "GrowthFund", "GrowthFundCom");
        this.infoList = this.m_fui.getChild("infoList").asList;
        this.timeTex = this.m_fui.getChild("timeTex").asLabel;
        var actDetailsBtn = this.m_fui.getChild("helpBtn").asButton;
        actDetailsBtn.onClick(this, this.onActDetailsClick);
        actDetailsBtn.onClick(this, this.soundPlay);
        var lvBonusBtn = this.m_fui.getChild("lvBonus").asButton;
        lvBonusBtn.onClick(this, this.onLvBonusClick);
        lvBonusBtn.onClick(this, this.soundPlay);
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
        NetAward_1.default.Instance.growthFundInfoReq();
        NetAward_1.default.Instance.growthFundStateReq();
        this.refrehFundConfig();
        NetAward_1.default.Instance.growthFundStateReq();
    };
    /**
     * 刷新配置
     */
    GrowthFundPanel.prototype.refrehFundConfig = function () {
        NetAward_1.default.Instance.growthFundConfigReq();
    };
    /**
     * 活动结束时间
     * @param data
     */
    GrowthFundPanel.prototype.actEndTime = function (data) {
        Laya.timer.loop(200, this, this.timeShow);
    };
    /**
     * 活动时间显示
     */
    GrowthFundPanel.prototype.timeShow = function () {
        this.timeTex.text = CommonUtil_1.utils.CommonUtils.getTimeDifference(NetAward_1.default.Instance.endTime);
    };
    /**
     * 成长基金购买反馈
     * @param data
     */
    GrowthFundPanel.prototype.growthFundBuyResp = function (data) {
        this.currFundId = data.fund_id;
        this.refrehFundConfig();
        this.awardCode(data.code);
    };
    /**
     * 当前基金档次
     * @param data
     */
    GrowthFundPanel.prototype.fundId = function (data) {
        this.currFundId = data.fund_id;
    };
    /**
     * 初始化配置信息
     * @param data
     */
    GrowthFundPanel.prototype.initInfoList = function (data) {
        this.infoList.removeChildrenToPool();
        var info = data.configs;
        for (var i = 0; i < info.length; i++) {
            var infoCom = this.infoList.addItemFromPool().asCom;
            var bgLoader = infoCom.getChild("bgLoader").asLoader;
            bgLoader.icon = "ui://GrowthFund/" + i;
            var bgLoader = infoCom.getChild("tipLoader").asLoader;
            bgLoader.icon = "ui://GrowthFund/" + "tip" + i;
            infoCom.getChild("timesTex").text = (info[i].rebate_per).toString();
            infoCom.getChild("priceTex").text = (Number(info[i].price) * 0.01).toString();
            infoCom.getChild("rebateTex").text = (Number(info[i].rebate) * 0.01).toString();
            var byStatusCom = infoCom.getChild("byStatusCom").asCom;
            var buy = byStatusCom.getChild("buyBtn").asButton;
            var c = byStatusCom.getController("c1");
            c.selectedIndex = 0;
            if (this.currFundId < 2) {
                c.selectedIndex = 0;
                var id = info[i].fund_id;
                var price = Number(info[i].price);
                this.byBtn(buy, id, price);
                //buy.onClick(this, () => { this.onBuyClick(id, price) });
            }
            else {
                var id = info[i].fund_id;
                if (id == this.currFundId) {
                    c.selectedIndex = 1;
                }
                else if (id > this.currFundId) {
                    c.selectedIndex = 3;
                    var price = Number(info[i].price);
                    var currPrice = Number(info[this.currFundId - 2].price); //等级是从1开始
                    this.byBtn(buy, id, price - currPrice);
                    // buy.onClick(this, () => this.onBuyClick(id, price - currPrice));
                }
                else {
                    c.selectedIndex = 2;
                }
            }
            this.infoList.ensureBoundsCorrect();
        }
    };
    /**
     * 购买按钮
     * @param byBtn
     * @param id
     * @param price
     */
    GrowthFundPanel.prototype.byBtn = function (byBtn, id, price) {
        var _this = this;
        switch (id) {
            case 1:
                var p = price;
                byBtn.onClick(this, function () { _this.onBuyClick(1, p); });
                break;
            case 2:
                var p = price;
                byBtn.onClick(this, function () { _this.onBuyClick(2, p); });
                break;
            case 3:
                var p = price;
                byBtn.onClick(this, function () { _this.onBuyClick(3, p); });
                break;
            case 4:
                var p = price;
                byBtn.onClick(this, function () { _this.onBuyClick(4, p); });
                break;
            case 5:
                var p = price;
                byBtn.onClick(this, function () { _this.onBuyClick(4, p); });
                break;
            default:
                break;
        }
    };
    /**
     * 购买基金弹框
     * @param id
     * @param price
     */
    GrowthFundPanel.prototype.onBuyClick = function (id, price) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClick);
        this.buyId = id;
        this.buyPrice = price;
        GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipsLevelBuy.replace("{0}", (price * 0.01).toString()), TipManager_1.TipType.YESNOCHOICE, function (isTrue) {
            if (isTrue) {
                NetAward_1.default.Instance.growtFundBuyReq(id);
            }
        });
    };
    /**
     * 是否确定购买
     * @param isTrue
     */
    GrowthFundPanel.prototype.isTrue = function (isTrue) {
        if (isTrue) {
            NetAward_1.default.Instance.growtFundBuyReq(this.buyId);
        }
    };
    /**
     * 活动说明
     */
    GrowthFundPanel.prototype.onActDetailsClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(20 /* LvDetailPanel */);
    };
    /**
     * 等级奖金
     */
    GrowthFundPanel.prototype.onLvBonusClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(15 /* LevelBonusPanel */);
        this.onClose();
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    GrowthFundPanel.prototype.onClose = function () {
        Laya.timer.clear(this, this.timeShow);
        GameFacade_1.default.Instance.OthMng.isHaveGrowthFundPane = false;
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDCONFIGRESP, this, this.initInfoList);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDINFORESP, this, this.fundId);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, this, this.actEndTime);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDBUYRESP, this, this.growthFundBuyResp);
        GameFacade_1.default.Instance.SceneMng.close(14 /* GrowthFundPanel */);
    };
    /**
     * 声音播放
     */
    GrowthFundPanel.prototype.soundPlay = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onOpen);
    };
    /**
     * 基金名字转化
     * @param id
     */
    GrowthFundPanel.prototype.numToFundName = function (id) {
        var str = null;
        switch (id) {
            case 1:
                str = "全民基金";
                break;
            case 2:
                str = "荣耀基金";
                break;
            case 3:
                str = "尊享基金";
                break;
            case 4:
                str = "豪华基金";
                break;
            case 5:
                str = "至臻基金";
                break;
            default:
                break;
        }
        return str;
    };
    GrowthFundPanel.prototype.awardCode = function (fundBuy) {
        var code = AwardMsg.award_code;
        switch (fundBuy) {
            case code.success:
                CommonUtil_1.utils.CommonUtils.log("购买：金币成功");
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipFundBuy.replace("{0}", (this.buyPrice * 0.01).toString()).replace("{1}", this.numToFundName(this.buyId)), TipManager_1.TipType.FLOATTIP);
                break;
            case code.fail:
                CommonUtil_1.utils.CommonUtils.log("购买：金币失败");
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipPurchaseFailed, TipManager_1.TipType.ONECLOSE);
                break;
            case code.out_of_cash:
                CommonUtil_1.utils.CommonUtils.log("购买：金币不足");
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipsGoldLess, TipManager_1.TipType.ONECLOSE);
                break;
            case code.top_fun_id:
                CommonUtil_1.utils.CommonUtils.log("购买：当前已经是最高档次基金");
                break;
            case code.lv_had_reward:
                CommonUtil_1.utils.CommonUtils.log("购买：当前奖励已经领取");
                break;
            case code.levelnot:
                CommonUtil_1.utils.CommonUtils.log("购买：当前奖励未满足领取条件");
                break;
            case code.prev_reward:
                CommonUtil_1.utils.CommonUtils.log("购买：前置奖励未领取");
                break;
            case code.had_bought:
                CommonUtil_1.utils.CommonUtils.log("购买：活动已经买了");
                break;
            case code.act_end:
                GameFacade_1.default.Instance.OthMng.isActEnd = true;
                break;
            default:
                break;
        }
    };
    return GrowthFundPanel;
}(BasePanel_1.default));
exports.default = GrowthFundPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/LanguageConstant":10,"../../constant/SoundNameConstant":11,"../../manager/TipManager":69,"../../net/ProtoHander/NetAward":77,"../../utils/CommonUtil":90,"./BasePanel":35}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var BasePanel_1 = require("./BasePanel");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var GuidePanel = /** @class */ (function (_super) {
    __extends(GuidePanel, _super);
    function GuidePanel() {
        var _this = _super.call(this) || this;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiGuidePath.image, CommonConstant_1.default._fuiGuidePath.fui, _this, _this.onLoadSetting);
        return _this;
    }
    /**
     * 加载设置
     */
    GuidePanel.prototype.onLoadSetting = function () {
        var _this = this;
        this.guideCom = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiGuidePath.Package, "Guide", "GuideCom");
        fairygui.GRoot.inst.setChildIndex(this.guideCom, +2);
        this.cl = this.guideCom.getController("GuideCl");
        var closeBtn = this.guideCom.getChild("close").asButton;
        closeBtn.onClick(this, function () { _this.onclose(); });
    };
    /**
     * 点击确认
     */
    GuidePanel.prototype.onclose = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClick);
        this.cl.selectedIndex = 1;
        this.sentNovice();
        Laya.timer.once(300, this, this.onGearStop);
    };
    /**
     * 动画结束删除引导界面
     */
    GuidePanel.prototype.onGearStop = function () {
        this.guideCom.dispose();
        GameFacade_1.default.Instance.ResourceMng.removeUIPackage(CommonConstant_1.default._fuiGuidePath.Package);
    };
    /**
     * 发送已经引导了给服务端
     */
    GuidePanel.prototype.sentNovice = function () {
        NetRoom_1.default.Instance.NovicePromptReq();
    };
    return GuidePanel;
}(BasePanel_1.default));
exports.default = GuidePanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetRoom":84,"./BasePanel":35}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BasePanel_1 = require("./BasePanel");
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var EventNetResponse_1 = require("../../net/ProtoHander/EventNetResponse");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var GameEvent_1 = require("../../constant/GameEvent");
var CameraMove_1 = require("../Login/Camera/CameraMove");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var JpBeat_1 = require("../Login/Jp/JpBeat");
var NetRoleInfo_1 = require("../../net/ProtoHander/NetRoleInfo");
var TipManager_1 = require("../../manager/TipManager");
var RebateAct_1 = require("../Login/Act/RebateAct");
var AddWebpage_1 = require("../Login/AddWebpages/AddWebpage");
var NetAward_1 = require("../../net/ProtoHander/NetAward");
var CommonUtil_1 = require("../../utils/CommonUtil");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var NetReport_1 = require("../../net/ProtoHander/NetReport");
var HallPanel = /** @class */ (function (_super) {
    __extends(HallPanel, _super);
    function HallPanel(id) {
        var _this = _super.call(this) || this;
        _this.m_islandArr = [];
        _this.m_direction = CommonConstant_1.default.DIRICTION.HORIZONTAL;
        _this.m_bHallPanelFinished = false;
        _this.m_sceneMng = GameFacade_1.default.Instance.SceneMng;
        _this.m_bMoving = false;
        _this.m_curIslandIndex = 0;
        _this.m_nameID = id;
        _this.m_bHallPanelFinished = false;
        return _this;
    }
    /**
     * 进入大厅
     * @param scene3D
     */
    HallPanel.prototype.EnterAfter = function (scene3D) {
        //this.ShowEffect();
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LOGINRESROLEINFO, this, this.InitRoleInfo);
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.GAME_RECONNECT, this, this.Reconnect);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.EnterRoomResp, this, this.EnterRoomResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SyncChipsResp, this, this.syncChip);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.MqSyncChipsResp, this, this.mqSyncChip);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVINFORESP, this, this.lvInfo);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, this, this.actEndTime);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.SWITCHRESP, this, this.onSwitch);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVAWARDRESP, this, this.synLvNew);
        this.InitScene(scene3D);
        this.InitFui();
        //this.InitRoleInfo();
        this.ChangePanelInfo(this.m_curIslandIndex);
        NetRoom_1.default.Instance.SyncChipsReq();
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
        NetReport_1.default.Instance.ScreenReportReq();
        Laya.stage.on(Laya.Event.RESIZE, this, this.onStageChange);
    };
    /**
     * 屏幕横竖屏切换，宽高变化
     */
    HallPanel.prototype.onStageChange = function () {
        var screenWidth = Laya.Browser.clientWidth;
        var screenHeight = Laya.Browser.clientHeight;
        if (this.m_direction === CommonConstant_1.default.DIRICTION.HORIZONTAL && screenWidth < screenHeight) {
            //this.onDirectionChangeToVertical();
            NetReport_1.default.Instance.ScreenReportReq();
            this.m_direction = CommonConstant_1.default.DIRICTION.VERTICAL;
            CommonUtil_1.utils.CommonUtils.log("--- onStageChange 竖屏");
        }
        else if (this.m_direction === CommonConstant_1.default.DIRICTION.VERTICAL && screenWidth >= screenHeight) {
            //this.onDirectionChangeToHorizontal();
            NetReport_1.default.Instance.ScreenReportReq();
            this.m_direction = CommonConstant_1.default.DIRICTION.HORIZONTAL;
            CommonUtil_1.utils.CommonUtils.log("--- onStageChange 横屏");
        }
    };
    /**
     * 初始化3D
     * @param scene3D
     */
    HallPanel.prototype.InitScene = function (scene3D) {
        this.m_scene3D = scene3D;
        this.m_scene3D.ambientColor = new Laya.Vector3(1, 1, 1);
        this.addChild(new Laya.Image(CommonConstant_1.default._hallBgPath));
        this.addChild(this.m_scene3D);
        //添加岛
        var Node = this.m_scene3D.getChildByName("Island");
        var camera = this.m_scene3D.getChildByName("Main Camera");
        camera.addComponent(CameraMove_1.cameraMove);
        var num = Node.numChildren;
        for (var i = 0; i < num; i++) {
            var sp3D = Node.getChildAt(i);
            this.m_islandArr.push(sp3D);
            if (i != 0) {
                sp3D.active = false;
            }
            else {
                sp3D.active = true;
            }
        }
    };
    /**
     * 初始化2D
     */
    HallPanel.prototype.InitFui = function () {
        fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiHallUIPath.Package);
        ////    fairygui.UIPackage.addPackage(CommonConstant._fuiHallPath.Package);
        this.m_fui = fairygui.UIPackage.createObject("HallUI", "HallPanel").asCom;
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_fui);
        this.nameText = this.m_fui.getChild("nameTex").asLabel;
        this.coinText = this.m_fui.getChild("coinTex").asTextField;
        this.lvText = this.m_fui.getChild("lvTex").asLabel;
        this.expProgress = this.m_fui.getChild("lvProgressBar").asProgress;
        this.expPer = this.m_fui.getChild("lvPer").asLabel;
        var jp = this.m_fui.getChild("jp").asCom;
        this.jpBtn = jp.getChild("jpBtn").asButton;
        this.jpBtn.onClick(this, this.onJpBtnClick);
        var jpb = jp.displayObject.addComponent(JpBeat_1.default);
        jpb.setJpText(jp.getChild("jpNumTex").asLabel);
        jpb.synJpData();
        this.backMainPageBtn = this.m_fui.getChild("backMainPageBtn").asButton;
        this.backMainPageBtn.onClick(this, this.onBackMainPage);
        this.backMainPagBtnShow();
        this.walletBtn = this.m_fui.getChild("walletBtn").asButton;
        this.walletBtn.visible = false;
        this.walletBtn.onClick(this, this.OnWalletBtnClick);
        this.settingBtn = this.m_fui.getChild("settingBtn").asButton;
        this.settingBtn.onClick(this, this.OnSetBtnClick);
        this.reportBtn = this.m_fui.getChild("reportBtn").asButton;
        this.reportBtn.onClick(this, this.OnExcelBtnClick);
        this.helpBtn = this.m_fui.getChild("helpBtn").asButton;
        this.helpBtn.onClick(this, this.OnHelpBtnClick);
        this.rankingBtn = this.m_fui.getChild("rankBtn").asButton;
        this.rankingBtn.onClick(this, this.OnRankBtnClick);
        this.preBtn = this.m_fui.getChild("preBtn").asButton;
        this.preBtn.onClick(this, this.OnLeftBtnClick);
        this.nextBtn = this.m_fui.getChild("nextBtn").asButton;
        this.nextBtn.onClick(this, this.OnRightBtnClick);
        this.fastBtn = this.m_fui.getChild("fastBtn").asButton;
        this.fastBtn.onClick(this, this.OnQuickGameClick);
        this.m_islandInfoPanel = this.m_fui.getChild("IslandInfoEffect").asCom;
        this.m_islandInfoPanel.getChild("RateBtn").onClick(this, this.OnGameBtnClick);
        this.m_fui.getChild("bgBtn").onClick(this, this.OnGameBtnClick);
        var contorller = this.m_fui.getController("c1");
        contorller.selectedIndex = GameFacade_1.default.Instance.GameMng.sheet == 0 ? 1 : 0;
        this.initActFui();
        this.role(GameFacade_1.default.Instance.GameMng.userAccount, GameFacade_1.default.Instance.GameMng.userChips); //默认值、记录的房间内的值
        GameFacade_1.default.Instance.SceneMng.Create(19 /* MarqueePanel */, false);
    };
    /**
     * 由于fui太多 分开act的单独处理
     */
    HallPanel.prototype.initActFui = function () {
        this.rebateCom = this.m_fui.getChild("rebateAct").asCom;
        this.rebateActBtn = this.rebateCom.getChild("rebateActBtn").asButton;
        this.rebateActBtn.onClick(this, this.onRebateActBtnClick);
        this.rebatwActShow();
        this.personnalInfoBtn = this.m_fui.getChild("personalInfoBtn").asButton;
        this.personnalInfoBtn.onClick(this, this.onPersonalInfoBtnClick);
        this.personnalInfoBtn.touchable = !GameFacade_1.default.Instance.GameMng.isPlay;
        this.lvCom = this.m_fui.getChild("lvCom").asCom;
        this.lvBonusBtn = this.lvCom.getChild("lvBtn").asButton;
        this.lvNew = this.lvCom.getChild("lvNew").asImage;
        this.lvNew.visible = false;
        this.lvBonusBtn.onClick(this, this.onLvBonusBtnClick);
        this.fundCom = this.m_fui.getChild("fundCom").asCom;
        this.endTimeTex = this.fundCom.getChild("timeTex").asLabel;
        this.growthFundBtn = this.fundCom.getChild("fundBtn").asButton;
        this.growthFundBtn.onClick(this, this.onGrowthFundBtnClick);
        this.fundCom.visible = false;
        this.lvCom.visible = false;
        this.synData();
        this.sound();
    };
    /**
     * 返回大厅按钮显示
     */
    HallPanel.prototype.backMainPagBtnShow = function () {
        if (!CommonUtil_1.utils.CommonUtils.isApp()) {
            if (GameFacade_1.default.Instance.GameMng.return == "0") {
                this.backMainPageBtn.visible = false;
            }
            else if ((GameFacade_1.default.Instance.GameMng.lobbyUrl == null || GameFacade_1.default.Instance.GameMng.lobbyUrl == "") && Laya.Browser.onPC) {
                this.backMainPageBtn.visible = false;
            }
        }
    };
    /**
     * 同步返利活动显示
     */
    HallPanel.prototype.rebatwActShow = function () {
        if (CommonUtil_1.utils.CommonUtils.isApp()) {
            this.rebateCom.visible = false;
        }
        else {
            var rbAct = this.rebateCom.displayObject.addComponent(RebateAct_1.default);
            rbAct.setTimeLabel(this.rebateCom);
        }
    };
    /**
   * 活动结束时间
   * @param data
   */
    HallPanel.prototype.actEndTime = function () {
        Laya.timer.loop(200, this, this.timeShow);
    };
    /**
     * 活动时间显示
     */
    HallPanel.prototype.timeShow = function () {
        this.lvCom.visible = NetLogin_1.default.Instance.isOnLvSw;
        if (CommonUtil_1.utils.CommonUtils.getTimeDifference(NetAward_1.default.Instance.endTime) == null) {
            this.fundCom.visible = false;
            GameFacade_1.default.Instance.OthMng.isActEnd = true;
            Laya.timer.clear(this, this.timeShow);
            return;
        }
        else {
            this.fundCom.visible = NetLogin_1.default.Instance.isOnLvSw;
            this.endTimeTex.text = CommonUtil_1.utils.CommonUtils.getTimeDifference(NetAward_1.default.Instance.endTime);
        }
    };
    /**
     * 开关
     */
    HallPanel.prototype.onSwitch = function () {
        ////  console.log("开关");
        ////  console.log(NetLogin.Instance.isOnLvSw);
    };
    /**
     * 同步数据
     * @param jpb
     */
    HallPanel.prototype.synData = function () {
        if (NetLogin_1.default.Instance.RoleInfo != null) {
            this.walletBtn.visible = NetLogin_1.default.Instance.isOfficial;
            this.onSwitch();
            this.refreshChip();
            this.refreshLv();
            this.refreshEndTime();
        }
    };
    /** 初始化角色信息*/
    HallPanel.prototype.InitRoleInfo = function () {
        var data = NetLogin_1.default.Instance.RoleInfo;
        if (data == null)
            return;
        this.walletBtn.visible = NetLogin_1.default.Instance.isOfficial;
        if (data.jetton_show == 0) {
            this.OnWalletBtnClick();
        }
        this.refreshLv();
        this.refreshEndTime();
        this.role(data.nickname, data.jetton_show);
        this.m_bHallPanelFinished = true;
    };
    /**
     * 刷新时间
     */
    HallPanel.prototype.refreshEndTime = function () {
        NetAward_1.default.Instance.growthFundStateReq();
    };
    /**
     * 刷新金币
     */
    HallPanel.prototype.refreshChip = function () {
        NetRoom_1.default.Instance.SyncChipsReq();
    };
    /**
     * 刷新等级
     */
    HallPanel.prototype.refreshLv = function () {
        NetRoleInfo_1.default.Instance.lvInfoReq();
    };
    /**
     * 获得同步金币
     * @param data
     */
    HallPanel.prototype.syncChip = function (data) {
        this.m_bHallPanelFinished = true;
        this.role(NetLogin_1.default.Instance.RoleInfo.nickname, data.chips);
    };
    /**
     * 获得同步金币(用于免转)
     * @param data
     */
    HallPanel.prototype.mqSyncChip = function (data) {
        this.role(NetLogin_1.default.Instance.RoleInfo.nickname, data.chips);
    };
    /**
     * 获得同步等级
     * @param data
     */
    HallPanel.prototype.lvInfo = function (data) {
        this.exp(data.need_exp, data.exp, data.lv); //与活动相关经验值
        this.lvNewShow(data.lv, data.reward_lv + 1); //初始化等级new标识
    };
    /**
     * 同步等级new标识
     */
    HallPanel.prototype.synLvNew = function (data) {
        if (data.code == AwardMsg.award_code.success) {
            this.lvNewShow(NetRoleInfo_1.default.Instance.lvInfo.lv, data.next_lv);
        }
    };
    /**
     * 等级里面的new 展示login
     */
    HallPanel.prototype.lvNewShow = function (currLv, nextLv) {
        if (currLv >= nextLv) //可领取
         {
            this.lvNew.visible = true;
        }
        else { //不可领取
            this.lvNew.visible = false;
        }
    };
    /**
     * 角色
     * @param name 名字
     * @param coin 金币
     * @param lv 等级
     */
    HallPanel.prototype.role = function (name, coin) {
        this.nameText.text = CommonUtil_1.utils.CommonUtils.nickNameWithSymbol(name);
        this.coinText.text = CommonUtil_1.utils.CommonUtils.numberFormat(Number(coin));
        CommonUtil_1.utils.CommonUtils.coinAutoFontSize(this.coinText);
    };
    /**
     * 经验值
     * @param needExp 需要的经验值
     * @param exp 当前经验值
     */
    HallPanel.prototype.exp = function (needExp, exp, lv) {
        this.lvText.text = lv.toString();
        if (needExp == 0) {
            this.expProgress.value = 0;
            this.expPer.text = "0.00%";
        }
        else {
            var e = Number(exp) / Number(needExp);
            this.expProgress.value = Number(exp);
            this.expProgress.max = Number(needExp);
            this.expPer.text = (e * 100).toFixed(0) + "%";
        }
    };
    /**
     * 声音
     */
    HallPanel.prototype.sound = function () {
        var _this = this;
        this.settingBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.reportBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.rebateActBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.helpBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.rankingBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.jpBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.walletBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.preBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.rateSelect); });
        this.nextBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.rateSelect); });
        this.fastBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClick); });
        this.backMainPageBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClick); });
        this.personnalInfoBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.lvBonusBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.growthFundBtn.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.m_fui.getChild("bgBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClick); });
        this.m_islandInfoPanel.getChild("RateBtn").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClick); });
        GameFacade_1.default.Instance.SoundMng.playMusic(SoundNameConstant_1.default.soundBgArr.hallBgMusic);
    };
    HallPanel.prototype.Reconnect = function () {
    };
    /**
     * 进房请求 （进房成功收到的消息）
     * @param data
     */
    HallPanel.prototype.EnterRoomResp = function (data) {
        GameFacade_1.default.Instance.SceneMng.EnterHuntScene();
    };
    /**
     *
     * 播放按钮点击声音
     */
    HallPanel.prototype.onPlaySound = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    /**
     * 设置
     */
    HallPanel.prototype.OnSetBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(5 /* SettingPanel */);
    };
    /**
     * 帮助
     */
    HallPanel.prototype.OnHelpBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(6 /* HelpPanel */);
    };
    /**
     * 报表
     */
    HallPanel.prototype.OnExcelBtnClick = function () {
        if (GameFacade_1.default.Instance.GameMng.isPlay) {
            GameFacade_1.default.Instance.TipMng.createTip(CommonConstant_1.default._PromptContent.DemoAccTip, TipManager_1.TipType.ONECLOSE);
        }
        else {
            window.open(GameFacade_1.default.Instance.GameMng.reportUrl);
        }
    };
    /**
     * 排行榜
     */
    HallPanel.prototype.OnRankBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(7 /* RankingPanel */);
    };
    /**
     * jp
     */
    HallPanel.prototype.onJpBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(11 /* JpPanel */);
    };
    /**
     * 免转
     */
    HallPanel.prototype.OnWalletBtnClick = function () {
        GameFacade_1.default.Instance.WalletMng.mainWalletReq();
    };
    /**
     * 返利活动
     */
    HallPanel.prototype.onRebateActBtnClick = function () {
        AddWebpage_1.AddWebpage.createIframe();
    };
    /**
     * 个人信息
     */
    HallPanel.prototype.onPersonalInfoBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(12 /* PersonalInfoPanel */);
    };
    /**
     * 等级奖金
     */
    HallPanel.prototype.onLvBonusBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(15 /* LevelBonusPanel */);
    };
    /**
     * 成长基金
     */
    HallPanel.prototype.onGrowthFundBtnClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(14 /* GrowthFundPanel */);
    };
    /**
     * 返回主页面
     * 返回逻辑参考  http://wiki.blizzmi.local/pages/viewpage.action?pageId=28213648
     */
    HallPanel.prototype.onBackMainPage = function () {
        if (CommonUtil_1.utils.CommonUtils.isApp()) {
            window.close();
        }
        else {
            if (GameFacade_1.default.Instance.GameMng.lobbyUrl != null && GameFacade_1.default.Instance.GameMng.lobbyUrl != "") {
                CommonUtil_1.utils.CommonUtils.log(" ----- 主界面返回 GameFacade.Instance.GameMng.lobbyUrl = ", GameFacade_1.default.Instance.GameMng.lobbyUrl);
                window.open(GameFacade_1.default.Instance.GameMng.lobbyUrl);
            }
            else {
                window.open("about:blank", "_self").close(); //关闭网页
            }
        }
        // if(Laya.Browser.onPC){
        //   AddWebpage.addBackMainPage();
        //   }
        //   else{
        //    AddWebpage.closePage();
        //   }
    };
    /**
     * 点击右按钮
     */
    HallPanel.prototype.OnRightBtnClick = function () {
        if (this.m_bMoving)
            return;
        this.m_bMoving = true;
        var index = this.m_curIslandIndex;
        if (++this.m_curIslandIndex >= CommonConstant_1.default.C_IslandAmount) {
            this.m_curIslandIndex = 0;
        }
        this.m_islandArr[this.m_curIslandIndex].transform.position = new Laya.Vector3(-CommonConstant_1.default.C_IslandMoveX, 0, 0);
        Laya.Tween.to(this.m_islandArr[this.m_curIslandIndex].transform, { localPositionX: 0 }, CommonConstant_1.default.C_IslandMoveTime, Laya.Ease.sineOut, Laya.Handler.create(this, this.ShowEffect));
        this.m_islandArr[this.m_curIslandIndex].active = true;
        Laya.Tween.to(this.m_islandArr[index].transform, { localPositionX: CommonConstant_1.default.C_IslandMoveX }, CommonConstant_1.default.C_IslandMoveTime, Laya.Ease.sineOut, null);
        this.m_islandInfoPanel.visible = false;
        this.ChangePanelInfo(this.m_curIslandIndex);
    };
    /**
     * 点击左按钮
     */
    HallPanel.prototype.OnLeftBtnClick = function () {
        if (this.m_bMoving)
            return;
        this.m_bMoving = true;
        var index = this.m_curIslandIndex;
        if (--this.m_curIslandIndex <= -1) {
            this.m_curIslandIndex = CommonConstant_1.default.C_IslandAmount - 1;
        }
        this.m_islandArr[this.m_curIslandIndex].transform.position = new Laya.Vector3(CommonConstant_1.default.C_IslandMoveX, 0, 0);
        Laya.Tween.to(this.m_islandArr[this.m_curIslandIndex].transform, { localPositionX: 0 }, CommonConstant_1.default.C_IslandMoveTime, Laya.Ease.sineOut, Laya.Handler.create(this, this.ShowEffect));
        this.m_islandArr[this.m_curIslandIndex].active = true;
        Laya.Tween.to(this.m_islandArr[index].transform, { localPositionX: -CommonConstant_1.default.C_IslandMoveX }, CommonConstant_1.default.C_IslandMoveTime, Laya.Ease.sineOut, null);
        this.m_islandInfoPanel.visible = false;
        this.ChangePanelInfo(this.m_curIslandIndex);
    };
    /**
     * 进入游戏
     */
    HallPanel.prototype.OnGameBtnClick = function () {
        if (this.m_bHallPanelFinished) {
            NetRoom_1.default.Instance.EnterRoomReq(this.m_curIslandIndex + 1, RoleMsg.msg_relogin_code.RELOGIN_NORMAL);
        }
    };
    /**
     * 快速游戏
     */
    HallPanel.prototype.OnQuickGameClick = function () {
        if (this.m_bHallPanelFinished) {
            NetRoom_1.default.Instance.EnterRoomReq(1, RoleMsg.msg_relogin_code.RELOGIN_NORMAL);
        }
    };
    HallPanel.prototype.ExitHallScene = function () {
        //卸载3d资源缓存
        Laya.stage.off(Laya.Event.RESIZE, this, this.onStageChange);
        GameFacade_1.default.Instance.SoundMng.stopAll();
        this.m_scene3D.destroy(true);
        GameFacade_1.default.Instance.WalletMng.CloseWalltPanel();
        //// fairygui.UIPackage.removePackage(CommonConstant._fuiHallUIPath.Package);
        ////  fairygui.UIPackage.removePackage(CommonConstant._fuiHallPath.Package);
        //GameFacade.Instance.ResourceMng.ReleaseAll3D(CommonConstant._hallScenePath_json);
        Laya.loader.clearRes(CommonConstant_1.default._hallPath_ls); // console.log("ExitHallScene clearRes = ", Laya.loader.getRes(CommonConstant._hallPath_ls));
        GameFacade_1.default.Instance.ResourceMng.ReleaseFuiResByGroupName(CommonConstant_1.default._groupName_fuiRes);
        this.m_islandArr = [];
        Laya.timer.clear(this, this.timeShow);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LOGINRESROLEINFO, this, this.InitRoleInfo);
        GameFacade_1.default.Instance.EventMng.remove(GameEvent_1.default.GAME_RECONNECT, this, this.Reconnect);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.EnterRoomResp, this, this.EnterRoomResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SyncChipsResp, this, this.syncChip);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.MqSyncChipsResp, this, this.mqSyncChip);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVINFORESP, this, this.lvInfo);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, this, this.actEndTime);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.SWITCHRESP, this, this.onSwitch);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVAWARDRESP, this, this.synLvNew);
    };
    /**
     * 岛屿面板信息
     * @param index
     */
    HallPanel.prototype.ChangePanelInfo = function (index) {
        var titleImg = this.m_islandInfoPanel.getChild("nameLoader").asLoader;
        var limitImg = this.m_islandInfoPanel.getChild("bulletLoader").asLoader;
        var rateLoader = this.m_islandInfoPanel.getChild("rateLoader").asLoader;
        var rateBtn = this.m_islandInfoPanel.getChild("RateBtn").asButton;
        titleImg.url = CommonConstant_1.default._prelandInfoPath + CommonConstant_1.default._islandInfoArr[index].title;
        limitImg.url = CommonConstant_1.default._prelandInfoPath + CommonConstant_1.default._islandInfoArr[index].limit;
        rateLoader.url = CommonConstant_1.default._prelandInfoPath + CommonConstant_1.default._islandInfoArr[index].rate;
    };
    /**
     * 岛屿移动效果
     */
    HallPanel.prototype.ShowEffect = function () {
        this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.rateWindow);
        this.m_bMoving = false;
        this.m_islandInfoPanel.visible = false;
        this.m_islandInfoPanel.visible = true;
    };
    return HallPanel;
}(BasePanel_1.default));
exports.default = HallPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/GameEvent":9,"../../constant/SoundNameConstant":11,"../../manager/TipManager":69,"../../net/ProtoHander/EventNetResponse":75,"../../net/ProtoHander/NetAward":77,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetReport":82,"../../net/ProtoHander/NetRoleInfo":83,"../../net/ProtoHander/NetRoom":84,"../../utils/CommonUtil":90,"../Login/Act/RebateAct":27,"../Login/AddWebpages/AddWebpage":28,"../Login/Camera/CameraMove":29,"../Login/Jp/JpBeat":31,"./BasePanel":35}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var EnumData_1 = require("../../Enum/EnumData");
var BasePanel_1 = require("./BasePanel");
var HelpPanel = /** @class */ (function (_super) {
    __extends(HelpPanel, _super);
    function HelpPanel() {
        var _this = _super.call(this) || this;
        if (GameFacade_1.default.Instance.OthMng.isHaveHelpPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveHelpPanel = true;
        // // Laya.loader.load([
        // //     { url: CommonConstant._fuiHelpPath.image, type: Loader.IMAGE },
        // //     { url: CommonConstant._fuiHelpPath.fui, type: Loader.BUFFER },
        // //     { url: CommonConstant._fuiCommonUIPath.image, type: Loader.IMAGE },
        // //     { url: CommonConstant._fuiCommonUIPath.fui, type: Loader.BUFFER },
        // // ], Handler.create(this, this.onLoadHelp));
        _this.onLoadHelp();
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
        return _this;
    }
    /**
     * 加载设置
     */
    HelpPanel.prototype.onLoadHelp = function () {
        var _this = this;
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiHelpPath.Package, "Help", "HelpPanel");
        ////  fairygui.UIPackage.addPackage(CommonConstant._fuiCommonUIPath.Package);
        this.m_fui.getChild("close").onClick(this, this.onClose);
        this.m_fui.getChild("n5").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.windowChange); });
        this.m_fui.getChild("n6").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.windowChange); });
        this.m_fui.getChild("n7").onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.windowChange); });
        this.fishIconList = this.m_fui.getChild("n53").asList;
        this.fishIconList.removeChildrenToPool();
        if (!NetLogin_1.default.Instance._playerLoginInfo)
            return;
        for (var i = 0; i < NetLogin_1.default.Instance._playerLoginInfo.fish_info.length; i++) {
            var num = NetLogin_1.default.Instance._playerLoginInfo.fish_info[i].fish_type;
            if (num >= EnumData_1.default.FishSubtype.King_fishf1 && num < 32) {
                return;
            }
            if (num > 32) {
                return;
            }
            var fishIconCom = this.fishIconList.addItemFromPool().asCom;
            var fishIcon = fishIconCom.getChild("fishIcon").asImage;
            var fishValue = fishIconCom.getChild("fishValue").asLabel;
            fishIcon.icon = "ui://CommonUI/" + (num);
            if (num == 26) {
                fishValue.text = "5-200";
            }
            else if (num == 32) {
                fishValue.text = "全屏炸弹";
            }
            else if (num == 27) {
                fishValue.text = "鱼王";
                fishIcon.icon = "ui://CommonUI/" + (num);
            }
            // else if (num == 21) {
            //     fishValue.text = "全屏冰冻";
            // }
            else {
                fishValue.text = (CommonUtil_1.utils.CommonUtils.numberFixed(NetLogin_1.default.Instance._playerLoginInfo.fish_info[i].fish_rate)).toFixed(2);
            }
            this.fishIconList.ensureBoundsCorrect();
        }
    };
    /**
       *
       * 播放按钮点击声音
       */
    HelpPanel.prototype.onPlaySound = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    HelpPanel.prototype.onClose = function () {
        this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClose);
        this.fishIconList.removeChildrenToPool();
        GameFacade_1.default.Instance.OthMng.isHaveHelpPanel = false;
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
        GameFacade_1.default.Instance.SceneMng.close(6 /* HelpPanel */);
    };
    return HelpPanel;
}(BasePanel_1.default));
exports.default = HelpPanel;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetLogin":80,"../../utils/CommonUtil":90,"./BasePanel":35}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EnumData_1 = require("../../Enum/EnumData");
var BatteryController_1 = require("../../controller/BatteryController");
var CommonUtil_1 = require("../../utils/CommonUtil");
var CommonConstant_1 = require("../../constant/CommonConstant");
/** 爆金币转盘特效*/
var HuntAwardPanel = /** @class */ (function (_super) {
    __extends(HuntAwardPanel, _super);
    function HuntAwardPanel(ownerUid, fishType, reward, bHalf) {
        var _this = _super.call(this) || this;
        _this.m_bPanelEffectFinished = false;
        _this.m_bAwardTextEffectFinished = false;
        _this.m_num = 0;
        _this.m_totalNum = CommonUtil_1.utils.CommonUtils.numberFixed(reward);
        _this.m_uid = ownerUid;
        var fishPath = CommonConstant_1.default._fish20Path;
        var fishPos = new Laya.Point(30, 6);
        switch (fishType) {
            case EnumData_1.default.FishSubtype.Fish_20: {
                fishPath = CommonConstant_1.default._fish20Path;
                fishPos = new Laya.Point(57, 16);
                break;
            }
            case EnumData_1.default.FishSubtype.Golden_Shark: {
                fishPath = CommonConstant_1.default._fish23Path;
                fishPos = new Laya.Point(30, 6);
                break;
            }
            case EnumData_1.default.FishSubtype.Mermaid: {
                fishPath = CommonConstant_1.default._fish25Path;
                fishPos = new Laya.Point(49, 79);
                break;
            }
        }
        _this.m_effectPos = new Laya.Vector3(640, 320, 0);
        _this.m_effectScale = 1;
        //半屏转盘
        if (bHalf) {
            _this.m_effectScale = 0.5;
            var playerPos = BatteryController_1.default.Instance.GetBatteryByUid(ownerUid).m_position;
            _this.m_effectPos = CommonConstant_1.default.HalfAwardPos[playerPos - 1];
        }
        //转盘后的红光
        _this.m_readLight = new Laya.Image(CommonConstant_1.default._zhuanpanLightPath);
        _this.m_readLight.anchorX = 0.5;
        _this.m_readLight.anchorY = 0.5;
        _this.m_readLight.scale(_this.m_effectScale, _this.m_effectScale);
        _this.m_readLight.pos(_this.m_effectPos.x, _this.m_effectPos.y);
        Laya.timer.loop(50, _this, function () {
            Laya.Tween.to(_this.m_readLight, { rotation: _this.m_readLight.rotation + 10 }, 50);
        });
        //转盘
        _this.m_award = new Laya.Image(CommonConstant_1.default._zhuanpanPath);
        _this.m_award.anchorX = 0.5;
        _this.m_award.anchorY = 0.5;
        _this.m_award.scale(_this.m_effectScale, _this.m_effectScale);
        _this.m_award.pos(_this.m_effectPos.x, _this.m_effectPos.y);
        _this.m_fishImg = new Laya.Image(fishPath);
        _this.m_fishImg.pos(fishPos.x, fishPos.y);
        _this.addChild(_this.m_readLight);
        _this.addChild(_this.m_award);
        _this.m_award.addChild(_this.m_fishImg);
        // 大转盘上的字体
        _this.m_awardFont = new Laya.FontClip(CommonConstant_1.default._awardFont, ".+0123456789");
        _this.m_awardFont.align = "center";
        _this.m_awardFont.pos(215, 260);
        _this.m_awardFont.anchorX = 0.5;
        _this.m_awardFont.anchorY = 0.5;
        _this.m_award.addChild(_this.m_awardFont);
        _this.ShowEffect();
        return _this;
    }
    HuntAwardPanel.prototype.PanelEffect = function () {
        var _this = this;
        this.m_award.scaleX = 0.1;
        this.m_award.scaleY = 0.1;
        var maxScale = this.m_effectScale + 0.4;
        var minScale = this.m_effectScale - 0.2;
        Laya.Tween.to(this.m_award, { scaleX: 1.1, scaleY: 1.1 }, 100, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(_this.m_award, { scaleX: 0.8, scaleY: 0.8 }, 100, null, Laya.Handler.create(_this, function () {
                Laya.Tween.to(_this.m_award, { scaleX: _this.m_effectScale, scaleY: _this.m_effectScale }, 100, null, Laya.Handler.create(_this, function () {
                    _this.m_bPanelEffectFinished = true;
                }));
            }));
        }));
    };
    HuntAwardPanel.prototype.AwardTextEffect = function () {
        Laya.timer.loop(30, this, this.ChangeNum);
    };
    HuntAwardPanel.prototype.ChangeNum = function () {
        this.m_num += this.m_totalNum / 20;
        if (this.m_num >= this.m_totalNum) {
            this.m_num = this.m_totalNum;
            CommonUtil_1.utils.CommonUtils.log("---------m_totalNum = ", this.m_totalNum);
            this.m_bAwardTextEffectFinished = true;
            Laya.timer.clear(this, this.ChangeNum);
        }
        this.m_awardFont.value = this.m_num.toFixed(2);
    };
    HuntAwardPanel.prototype.ShowEffect = function () {
        var awardLight = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.HalfScreenDrawReward);
        awardLight.transform.position = new Laya.Vector3(0, 0, 0);
        awardLight.active = true;
        this.PanelEffect();
        this.AwardTextEffect();
        this.RemoveAfterEffectFinished();
    };
    HuntAwardPanel.prototype.RemoveAfterEffectFinished = function () {
        var self = this;
        var Check = function () {
            var _this = this;
            if (this.m_bAwardTextEffectFinished && this.m_bPanelEffectFinished) {
                Laya.timer.clearAll(this);
                this.m_readLight.destroy(true);
                Laya.Tween.to(this.m_award, { scaleX: 0.5, scaleY: 0.5 }, 100, null, Laya.Handler.create(this, function () {
                    var endPos = BatteryController_1.default.Instance.GetBatteryByUid(_this.m_uid).GunGpos;
                    Laya.Tween.to(_this.m_award, { x: endPos.x, y: endPos.y }, 150, null, Laya.Handler.create(_this, function () {
                        //this.visible = false;
                        self.destroy(true);
                        _this.m_bPanelEffectFinished = false;
                        _this.m_bAwardTextEffectFinished = false;
                    }));
                }));
            }
        };
        Laya.timer.loop(500, this, Check);
    };
    return HuntAwardPanel;
}(Laya.Sprite));
exports.default = HuntAwardPanel;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../controller/BatteryController":12,"../../utils/CommonUtil":90}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Cannon_1 = require("../Item/Cannon");
var GuidePanel_1 = require("./GuidePanel");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var Menu_1 = require("../Item/Menu");
var BasePanel_1 = require("./BasePanel");
var EnumData_1 = require("../../Enum/EnumData");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var BatteryController_1 = require("../../controller/BatteryController");
var EventNetResponse_1 = require("../../net/ProtoHander/EventNetResponse");
var GameEvent_1 = require("../../constant/GameEvent");
var CommonUtil_1 = require("../../utils/CommonUtil");
var FishController_1 = require("../../controller/FishController");
var HuntAwardPanel_1 = require("./HuntAwardPanel");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var JpBeat_1 = require("../Login/Jp/JpBeat");
var NetReport_1 = require("../../net/ProtoHander/NetReport");
var HuntPanel = /** @class */ (function (_super) {
    __extends(HuntPanel, _super);
    function HuntPanel(id) {
        var _this = _super.call(this) || this;
        _this.m_scene3D = null;
        _this.m_gunScene3D = null; //炮的展示场景
        _this.m_awardScene3D = null; //爆金币的展示场景
        //  public m_huntSceneCamera: Laya.Camera;
        _this.m_isShoot = false;
        _this.m_isMoving = false;
        _this.m_direction = CommonConstant_1.default.DIRICTION.HORIZONTAL;
        _this.m_nameID = id;
        return _this;
    }
    /**
     * 添加引导界面
     */
    HuntPanel.prototype.Guide = function () {
        if (NetLogin_1.default.Instance.RoleInfo.is_new && CommonUtil_1.utils.CommonUtils.isFirstEnterRoom) {
            new GuidePanel_1.default();
        }
        CommonUtil_1.utils.CommonUtils.isFirstEnterRoom = false;
    };
    /**
     * 初始化ui信息
     */
    HuntPanel.prototype.InitFui = function () {
        this.Guide();
        GameFacade_1.default.Instance.SceneMng.Create(19 /* MarqueePanel */, true);
        GameFacade_1.default.Instance.SoundMng.playMusicRoom(NetLogin_1.default.Instance._curRoomIndex);
        ////  fairygui.UIPackage.addPackage(CommonConstant._fuiHallPath.Package);
        fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiHunterUIPath.Package);
        ////  fairygui.UIPackage.addPackage(CommonConstant._fuiCommonUIPath.Package);
        this.m_fui = fairygui.UIPackage.createObject("HunterUI", "HunterPanel").asCom;
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_fui);
        var jp = this.m_fui.getChild("jp").asCom;
        var jpb = jp.displayObject.addComponent(JpBeat_1.default);
        jpb.setJpText(jp.getChild("jpNumTex").asLabel);
        jpb.synJpData();
        //左侧菜单
        this.m_menu = this.m_fui.getChild("Menu").asCom;
        var controller = this.m_fui.getController("c1");
        new Menu_1.default(this.m_menu, controller, this);
        //炮台
        for (var i = 0; i < 4; i++) {
            var waitImg = this.m_fui.getChild("WaitImg" + i).asImage;
            waitImg.visible = false;
            var cannonSeat = this.m_fui.getChild("Cannon" + i).asCom;
            var cannonInfo = this.m_fui.getChild("CannonInfo" + i).asCom;
            var cannon = new Cannon_1.default(cannonSeat, cannonInfo, waitImg, i);
            cannon.InitGun3D();
            cannon.UpdatePlayerInfoShow();
            BatteryController_1.default.Instance.BatteryArr.push(cannon);
        }
        //自动攻击、锁定攻击
        this.m_fui.getChild("AutoBtn").asButton.onClick(this, this.OnAutoBtnClick);
        this.m_autoBtnMask = this.m_fui.getChild("AutoDownImg").asImage;
        this.m_autoBtnMask.visible = false;
        this.m_fui.getChild("LockBtn").asButton.onClick(this, this.OnLockBtnClick);
        this.m_lockBtnMask = this.m_fui.getChild("LockDownImg").asImage;
        this.m_lockBtnMask.visible = false;
        var lockText = this.m_fui.getChild("LockImg").asLoader;
        var autoText = this.m_fui.getChild("AutoImg").asLoader;
        //fui的锁定攻击和自动捕鱼攻击按钮与特效的层级没法调整，使用laya的ui来显示
        var lockBtn = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._lockImgPath, new Laya.Point(this.m_lockBtnMask.x, this.m_lockBtnMask.y), this.m_layaUINode);
        lockBtn.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        var autoBtn = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._autoImgPath, new Laya.Point(this.m_autoBtnMask.x, this.m_autoBtnMask.y), this.m_layaUINode);
        autoBtn.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        this.m_lockMaskImg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._lockImgMaskPath, new Laya.Point(this.m_lockBtnMask.x, this.m_lockBtnMask.y), this.m_layaUINode);
        this.m_lockMaskImg.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        this.m_autoMaskImg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._autoImgMaskPath, new Laya.Point(this.m_autoBtnMask.x, this.m_autoBtnMask.y), this.m_layaUINode);
        this.m_autoMaskImg.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        this.m_lockMaskImg.visible = false;
        this.m_autoMaskImg.visible = false;
        this.m_autoTextImg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._autoTextImgPath, new Laya.Point(autoText.x, autoText.y), this.m_layaUINode);
        this.m_autoTextImg.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        this.m_lockTextImg = CommonUtil_1.utils.CommonUtils.CreatLayaImg(CommonConstant_1.default._lockTextImgPath, new Laya.Point(lockText.x, lockText.y), this.m_layaUINode);
        this.m_lockTextImg.zOrder = EnumData_1.default.SCREEN_ZODER.HuntPanelUI;
        //特效
        this.m_lockBtnEffect = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.LockButtonEffect);
        this.m_autoBtnEffect = GameFacade_1.default.Instance.HuntSceneMng.InstantiateEffect(CommonConstant_1.default._huntSceneEffectArray.LockButtonEffect);
    };
    HuntPanel.prototype.InitMouseEvent = function () {
        var monitor = this.m_fui.getChild("Monitor").asImage;
        monitor.on(Laya.Event.MOUSE_DOWN, this, this.MouseHandler);
        monitor.on(Laya.Event.MOUSE_UP, this, this.MouseHandler);
        monitor.on(Laya.Event.MOUSE_MOVE, this, this.MouseHandler);
        monitor.on(Laya.Event.MOUSE_OUT, this, this.MouseHandler);
    };
    HuntPanel.prototype.EnterAfter = function (scene3D) {
        this.m_awardEffectArr = [];
        this.m_scene3D = scene3D;
        // this.m_huntSceneCamera = this.m_scene3D.getChildByName("Main Camera") as Laya.Camera;
        this.m_bg1 = new Laya.Image(CommonConstant_1.default._hunterBgPath1); //背景图
        this.m_bg2 = new Laya.Image(CommonConstant_1.default._hunterBgPath2);
        this.m_bg2.pos(CommonConstant_1.default.BGwidth, 0); //背景图
        var bgNode = new Laya.Sprite();
        bgNode.addChild(this.m_bg1);
        bgNode.addChild(this.m_bg2);
        this.addChild(bgNode);
        this.addChild(scene3D); //鱼的3d资源
        //this.m_awardNode = new Laya.Sprite(); //爆金币节点
        //this.addChild(this.m_awardNode);
        this.m_layaUINode = new Laya.Sprite(); //炮台的底座node
        this.addChild(this.m_layaUINode);
        this.m_gunScene3D = Laya.loader.getRes(CommonConstant_1.default._gunScenePath); //炮台3d资源
        this.addChild(this.m_gunScene3D);
        GameFacade_1.default.Instance.HuntSceneMng.EnterRoomInit(this.m_scene3D, this.m_gunScene3D);
        this.InitFui(); //最上层的fui
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.GAME_RECONNECT, this, this.Reconnect);
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.HUNT_AUTOATTACK, this, this.OnAutoAttackEvent);
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.HUNT_LOCKATTACK, this, this.OnLockAttackEvent);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.ReadyRoomResp, this, this.ReadyRoomResp);
        NetRoom_1.default.Instance.ReadyRoomReq();
        NetReport_1.default.Instance.ScreenReportReq();
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
        //Laya.loader.create(CommonConstant._topScenePath, Laya.Handler.create(this, (scene:Laya.Scene3D)=>{
        //this.addChild(scene);
        //}), null);
        Laya.timer.loop(0.1, this, this.MoveBg);
        Laya.stage.on(Laya.Event.RESIZE, this, this.onStageChange);
    };
    /**
     * 移动背景图
     */
    HuntPanel.prototype.MoveBg = function () {
        if (this.m_bg1.x < -CommonConstant_1.default.BGOffSetMax) {
            this.m_bg1.x = this.m_bg2.x + CommonConstant_1.default.BGwidth - 6;
        }
        if (this.m_bg2.x < -CommonConstant_1.default.BGOffSetMax) {
            this.m_bg2.x = this.m_bg1.x + CommonConstant_1.default.BGwidth;
        }
        Laya.Tween.to(this.m_bg1, { x: this.m_bg1.x - 0.3 }, 0.1);
        Laya.Tween.to(this.m_bg2, { x: this.m_bg2.x - 0.3 }, 0.1);
    };
    /**
     * 屏幕横竖屏切换，宽高变化
     */
    HuntPanel.prototype.onStageChange = function () {
        var screenWidth = Laya.Browser.clientWidth;
        var screenHeight = Laya.Browser.clientHeight;
        if (this.m_direction === CommonConstant_1.default.DIRICTION.HORIZONTAL && screenWidth < screenHeight) {
            //this.onDirectionChangeToVertical();
            NetReport_1.default.Instance.ScreenReportReq();
            this.m_direction = CommonConstant_1.default.DIRICTION.VERTICAL;
            CommonUtil_1.utils.CommonUtils.log("--- onStageChange 竖屏");
        }
        else if (this.m_direction === CommonConstant_1.default.DIRICTION.VERTICAL && screenWidth >= screenHeight) {
            //this.onDirectionChangeToHorizontal();
            NetReport_1.default.Instance.ScreenReportReq();
            this.m_direction = CommonConstant_1.default.DIRICTION.HORIZONTAL;
            CommonUtil_1.utils.CommonUtils.log("--- onStageChange 横屏");
        }
    };
    HuntPanel.prototype.MouseHandler = function (e) {
        switch (e.type) {
            case Laya.Event.MOUSE_DOWN:
                {
                    if (GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack) {
                        BatteryController_1.default.Instance.MouseDownPoint = new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY);
                        BatteryController_1.default.Instance.bAutoAttackMouseDown = true;
                        //正在捕猎选中的鱼
                        if (GameFacade_1.default.Instance.HuntSceneMng._bSelectedFish) {
                            var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                            promptPanel.InitData(0 /* StopAutoAttack */, CommonConstant_1.default._PromptContent.StopAutoAttack);
                        }
                    }
                    else if (GameFacade_1.default.Instance.HuntSceneMng._bLockAttack) {
                        var fishid = GameFacade_1.default.Instance.HuntSceneMng.GetFishId(Laya.stage.mouseX, Laya.stage.mouseY);
                        if (fishid.toString() != "0") {
                            BatteryController_1.default.Instance.LockedFishID = fishid;
                        }
                    }
                    else {
                        BatteryController_1.default.Instance.Shoot(true);
                    }
                    break;
                }
            case Laya.Event.MOUSE_MOVE:
                {
                    break;
                }
            case Laya.Event.MOUSE_OUT:
                {
                    if (!GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack && !GameFacade_1.default.Instance.HuntSceneMng._bLockAttack) {
                        BatteryController_1.default.Instance.Shoot(false);
                    }
                    break;
                }
            case Laya.Event.MOUSE_UP:
                {
                    if (!GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack && !GameFacade_1.default.Instance.HuntSceneMng._bLockAttack) {
                        BatteryController_1.default.Instance.Shoot(false);
                    }
                    // 自动攻击
                    if (GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack) {
                        BatteryController_1.default.Instance.bAutoAttackMouseDown = false;
                        BatteryController_1.default.Instance.MouseDownPoint = new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY);
                    }
                    break;
                }
        }
    };
    HuntPanel.prototype.AwardEffect = function (ownerUid, fishType, reward, bHalf) {
        var len = this.m_awardEffectArr.length;
        var award = null;
        award = new HuntAwardPanel_1.default(ownerUid, fishType, reward, bHalf);
        award.zOrder = EnumData_1.default.SCREEN_ZODER.AwardPanel;
        this.m_layaUINode.addChild(award);
    };
    //#endregion 锁定攻击、自动攻击
    HuntPanel.prototype.OnAutoBtnClick = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onOpen);
        if (!GameFacade_1.default.Instance.WalletMng.IsfgWalletEnough()) {
            return;
        }
        var autoAttackPanel = GameFacade_1.default.Instance.SceneMng.Create(9 /* AutoAttackPanel */);
        autoAttackPanel.init();
    };
    HuntPanel.prototype.OnLockBtnClick = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClick);
        if (!GameFacade_1.default.Instance.WalletMng.IsfgWalletEnough()) {
            return;
        }
        if (GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack) {
            var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
            promptPanel.InitData(0 /* StopAutoAttack */, CommonConstant_1.default._PromptContent.StopAutoAttack);
        }
        else {
            this.OnLockAttackEvent(GameFacade_1.default.Instance.HuntSceneMng._bLockAttack ? false : true);
        }
    };
    HuntPanel.prototype.OnAutoAttackEvent = function (bAuto) {
        GameFacade_1.default.Instance.HuntSceneMng._bAutoAttack = bAuto;
        this.m_autoMaskImg.visible = bAuto;
        if (!bAuto) {
            BatteryController_1.default.Instance.LockedFishID = 0;
            BatteryController_1.default.Instance.HideLockLineEffect();
        }
        var res = bAuto ? CommonConstant_1.default._cancleAutoTextImgPath : CommonConstant_1.default._autoTextImgPath;
        this.m_autoTextImg.skin = res;
        BatteryController_1.default.Instance.ShootMode = bAuto ? 1 /* SHOOT_AUTO */ : 0 /* SHOOT_NORMAL */;
        BatteryController_1.default.Instance.Shoot(bAuto);
        this.m_autoBtnEffect.active = bAuto;
        if (bAuto) {
            this.m_autoBtnEffect.transform.position = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, new Laya.Vector3(this.m_autoBtnMask.x, this.m_autoBtnMask.y, 0));
        }
    };
    HuntPanel.prototype.OnLockAttackEvent = function (bLock) {
        GameFacade_1.default.Instance.HuntSceneMng._bLockAttack = bLock;
        this.m_lockMaskImg.visible = bLock;
        if (!bLock) {
            BatteryController_1.default.Instance.LockedFishID = 0;
            BatteryController_1.default.Instance.HideLockLineEffect();
        }
        // let lockImg = this.m_fui.getChild("LockImg").asLoader;
        // let res: string = bLock ? "quxiaosuoding" : "suodinggongji";
        // lockImg.url = CommonConstant._preHunterPath + res;
        // 更换纹理
        var res = bLock ? CommonConstant_1.default._cancleLockTextImgPath : CommonConstant_1.default._lockTextImgPath;
        this.m_lockTextImg.skin = res;
        BatteryController_1.default.Instance.ShootMode = bLock ? 2 /* SHOOT_LOCK */ : 0 /* SHOOT_NORMAL */;
        BatteryController_1.default.Instance.Shoot(bLock);
        this.m_lockBtnEffect.active = bLock;
        if (bLock) {
            this.m_lockBtnEffect.transform.position = CommonUtil_1.utils.CommonUtils.ScreenToWorldPoint(GameFacade_1.default.Instance.HuntSceneMng._GunSceneCamera, new Laya.Vector3(this.m_lockBtnMask.x, this.m_lockBtnMask.y, 0));
        }
    };
    //#endregion
    //#endregion 断线重连
    HuntPanel.prototype.Reconnect = function () {
        FishController_1.default.Instance.Reconnect();
        BatteryController_1.default.Instance.Reconnect();
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.EnterRoomResp, this, this.EnterRoomResp);
        NetRoom_1.default.Instance.EnterRoomReq(NetLogin_1.default.Instance._curRoomIndex, RoleMsg.msg_relogin_code.RELOGIN_RECONNECT);
        //  NetRoom.Instance.ReadyRoomReq();
    };
    HuntPanel.prototype.EnterRoomResp = function () {
        this.OnAutoAttackEvent(false);
        this.OnLockAttackEvent(false);
        NetRoom_1.default.Instance.ReadyRoomReq();
    };
    /** 准备房间完成*/
    HuntPanel.prototype.ReadyRoomResp = function () {
        CommonUtil_1.utils.CommonUtils.log("---准备房间完成---");
        this.InitMouseEvent();
    };
    //#endregion
    HuntPanel.prototype.ExitHuntScene = function () {
        NetRoom_1.default.Instance.LeaveRoomReq();
        //// fairygui.UIPackage.removePackage(CommonConstant._fuiHallPath.Package);
        ////  fairygui.UIPackage.removePackage(CommonConstant._fuiHunterUIPath.Package);
        ////  fairygui.UIPackage.removePackage(CommonConstant._fuiCommonUIPath.Package);
        GameFacade_1.default.Instance.EventMng.remove(GameEvent_1.default.GAME_RECONNECT, this, this.Reconnect);
        GameFacade_1.default.Instance.EventMng.remove(GameEvent_1.default.HUNT_LOCKATTACK, this, this.OnLockAttackEvent);
        GameFacade_1.default.Instance.EventMng.remove(GameEvent_1.default.HUNT_AUTOATTACK, this, this.OnAutoAttackEvent);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.EnterRoomResp, this, this.EnterRoomResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.ReadyRoomResp, this, this.ReadyRoomResp);
        GameFacade_1.default.Instance.SceneMng.close(9 /* AutoAttackPanel */);
        //GameFacade.Instance.SoundMng.stopMusic();
        Laya.stage.off(Laya.Event.RESIZE, this, this.onStageChange);
        Laya.stage.releaseMouseEvent();
        GameFacade_1.default.Instance.HuntSceneMng.ExitHuntScene();
        //卸载3d资源缓存
        // // this.m_scene3D.destroy(true);
        // // this.m_gunScene3D.destroy(true);
        // // Laya.loader.clearRes(CommonConstant._gunScenePath);
        // // Laya.loader.clearRes(CommonConstant._huntScenePath);
        // // Laya.loader.clearRes(CommonConstant._hunterBgPath);
    };
    return HuntPanel;
}(BasePanel_1.default));
exports.default = HuntPanel;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/GameEvent":9,"../../constant/SoundNameConstant":11,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/EventNetResponse":75,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetReport":82,"../../net/ProtoHander/NetRoom":84,"../../utils/CommonUtil":90,"../Item/Cannon":23,"../Item/Menu":25,"../Login/Jp/JpBeat":31,"./BasePanel":35,"./GuidePanel":38,"./HuntAwardPanel":41}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BasePanel_1 = require("./BasePanel");
var GameFacade_1 = require("../../GameFacade");
var GameEvent_1 = require("../../constant/GameEvent");
var HuntedItem_1 = require("../Item/HuntedItem");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BatteryController_1 = require("../../controller/BatteryController");
var FishController_1 = require("../../controller/FishController");
/**
 * 捕猎界面自动攻击面板--显示已自动捕到的鱼的面板
*/
var HuntedPanel = /** @class */ (function (_super) {
    __extends(HuntedPanel, _super);
    function HuntedPanel(owner, control) {
        var _this = _super.call(this) || this;
        owner.getChild("CancelBtn").asButton.onClick(_this, _this.OnCancelBtnClick);
        owner.getChild("ChangeBtn").asButton.onClick(_this, _this.OnChangeBtnClick);
        _this.m_list = owner.getChild("List").asList;
        _this.m_control = control;
        _this.m_fui = owner;
        _this.m_huntedItemDic = {};
        return _this;
    }
    HuntedPanel.prototype.ShowSelf = function (visible) {
        this.m_fui.visible = visible;
    };
    HuntedPanel.prototype.OnChangeBtnClick = function () {
        this.m_control.ShowSelectPanel();
    };
    HuntedPanel.prototype.OnCancelBtnClick = function () {
        this.m_list.removeChildrenToPool();
        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_AUTOATTACK, false);
        this.m_control.OncloseBtnClick();
        this.ClearPanel();
    };
    /**
     *
     * @param args
     */
    HuntedPanel.prototype.OnHuntedFish = function (args) {
        if (this.m_list == null || this.m_list == undefined)
            return;
        var bouns = args[0];
        var type = args[1];
        if (GameFacade_1.default.Instance.HuntSceneMng._bSelectedFish) {
            //存在一种特殊情况，刚重新选择了要自动攻击的鱼的同时，之前自动攻击状态的鱼被打死，所以在此处要多一层判断
            if (BatteryController_1.default.Instance.gAutoAttackArr[type] != true) {
                return;
            }
        }
        else {
            //鱼王不处理
            if (FishController_1.default.Instance.IsFishKing(type))
                return;
        }
        var huntedItem = null;
        if (this.m_huntedItemDic[type]) {
            huntedItem = this.m_huntedItemDic[type];
            huntedItem.AddAmount(CommonUtil_1.utils.CommonUtils.numberFixed(bouns));
        }
        else {
            CommonUtil_1.utils.CommonUtils.log("this.m_list = ", this.m_list);
            var item = this.m_list.addItemFromPool().asCom;
            huntedItem = new HuntedItem_1.default(item, this);
            var fishInfo = NetLogin_1.default.Instance._playerLoginInfo.fish_info;
            for (var i = 0; i < fishInfo.length; i++) {
                if (type == fishInfo[i].fish_type) {
                    //var rate = fishInfo[i].fish_rate;
                    huntedItem.InitUI(CommonUtil_1.utils.CommonUtils.numberFixed(bouns), type);
                    this.m_huntedItemDic[type] = huntedItem;
                    return;
                }
            }
        }
    };
    HuntedPanel.prototype.ClearPanel = function () {
        this.m_list.removeChildrenToPool();
        this.m_huntedItemDic = {};
    };
    return HuntedPanel;
}(BasePanel_1.default));
exports.default = HuntedPanel;
},{"../../GameFacade":3,"../../constant/GameEvent":9,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../../utils/CommonUtil":90,"../Item/HuntedItem":24,"./BasePanel":35}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var NetWanners_1 = require("../../net/ProtoHander/NetWanners");
var CommonUtil_1 = require("../../utils/CommonUtil");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var JpPanel = /** @class */ (function (_super) {
    __extends(JpPanel, _super);
    function JpPanel() {
        var _this = _super.call(this) || this;
        if (GameFacade_1.default.Instance.OthMng.isHaveJpPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveJpPanel = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiJpPath.image, CommonConstant_1.default._fuiJpPath.fui, _this, _this.onLoadJp);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.WINNERRESP, _this, _this.jpListInfo);
        return _this;
    }
    /**
     * 加载设置
     */
    JpPanel.prototype.onLoadJp = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiJpPath.Package, "Jp", "jpPanel");
        this.m_fui.getChild("close").onClick(this, this.onClose);
        this.jpList = this.m_fui.getChild("jpList").asList;
        NetWanners_1.default.Instance.winnersReq();
    };
    JpPanel.prototype.jpListInfo = function (data) {
        this.jpList.removeChildrenToPool();
        for (var i = 0; i < data.role.length; i++) {
            var itemCom = this.jpList.addItemFromPool().asCom;
            itemCom.getChild("data").text = CommonUtil_1.utils.CommonUtils.numberToDataTime(data.role[i].date);
            itemCom.getChild("name").text = data.role[i].nickname;
            itemCom.getChild("grade").text = CommonUtil_1.utils.CommonUtils.jpWinnerToType(data.role[i].awardLevel);
            itemCom.getChild("amount").text = (Number(data.role[i].award) / 100).toString();
            this.jpList.ensureBoundsCorrect();
        }
    };
    /**
     *
     * 播放按钮点击声音
     */
    JpPanel.prototype.onPlaySound = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    /**
     * 关闭
     */
    JpPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.OthMng.isHaveJpPanel = false;
        this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClose);
        this.jpList.removeChildrenToPool();
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.WINNERRESP, this, this.jpListInfo);
        GameFacade_1.default.Instance.SceneMng.close(11 /* JpPanel */);
    };
    return JpPanel;
}(BasePanel_1.default));
exports.default = JpPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetWanners":86,"../../utils/CommonUtil":90,"./BasePanel":35}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetRoleInfo_1 = require("../../net/ProtoHander/NetRoleInfo");
var LanguageConstant_1 = require("../../constant/LanguageConstant");
var TipManager_1 = require("../../manager/TipManager");
var NetAward_1 = require("../../net/ProtoHander/NetAward");
var CommonUtil_1 = require("../../utils/CommonUtil");
var BasePanel_1 = require("./BasePanel");
var LevelBonusPanel = /** @class */ (function (_super) {
    __extends(LevelBonusPanel, _super);
    function LevelBonusPanel() {
        var _this = _super.call(this) || this;
        if (GameFacade_1.default.Instance.OthMng.isHaveLevelBonusPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveLevelBonusPanel = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiLevelBonusPath.image, CommonConstant_1.default._fuiLevelBonusPath.fui, _this, _this.onLoad);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVCONFIGRESP, _this, _this.initInfoList);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVAWARDRESP, _this, _this.reLvAwardData);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVINFORESP, _this, _this.initLvAwardData);
        return _this;
    }
    /**
     * 加载设置
     */
    LevelBonusPanel.prototype.onLoad = function () {
        var _this = this;
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiLevelBonusPath.Package, "LevelBonus", "LevelBonus");
        var tipCom = this.m_fui.getChild("tipCom").asCom;
        this.tipContr = tipCom.getController("c1");
        this.buyMoneyTex = tipCom.getChild("buyMoneyTex").asLabel;
        var upgradeCom = this.m_fui.getChild("upgradeCom").asCom;
        this.upgradeContr = upgradeCom.getController("c1");
        upgradeCom.getChild("upgradeBtn").onClick(this, this.onUpgradeClick);
        upgradeCom.getChild("upgradeBtn").onClick(this, function () { _this.soundPlay(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        var receiveCom = this.m_fui.getChild("receiveCom").asCom;
        this.lvReContr = receiveCom.getController("c1");
        this.reBtn = receiveCom.getChild("reBtn").asButton;
        this.expList = this.m_fui.getChild("ExpList").asList;
        this.preBtn = this.m_fui.getChild("preBtn").asButton;
        this.nextBtn = this.m_fui.getChild("nextBtn").asButton;
        this.preBtn.onClick(this, function () { _this.onlvConfigReqClick(_this.currFundId - 1); });
        this.nextBtn.onClick(this, function () { _this.onlvConfigReqClick(_this.currFundId + 1); });
        this.currTotalReTex = this.m_fui.getChild("allBounsTex").asLabel;
        this.currReLvTex = this.m_fui.getChild("lvTex").asLabel;
        this.currReRewardTex = this.m_fui.getChild("bounsTex").asLabel;
        this.m_fui.getChild("recordBtn").onClick(this, this.onRecordClick);
        this.m_fui.getChild("recordBtn").onClick(this, function () { _this.soundPlay(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        this.m_fui.getChild("detailsBtn").onClick(this, this.onHelpClick);
        this.m_fui.getChild("detailsBtn").onClick(this, function () { _this.soundPlay(SoundNameConstant_1.default.soundKeyArr.onOpen); });
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
        this.refresh();
    };
    /**
     *初始、失败之后重新刷新
     */
    LevelBonusPanel.prototype.refresh = function () {
        NetRoleInfo_1.default.Instance.lvInfoReq();
    };
    /**
     * 初始化奖金数据
     */
    LevelBonusPanel.prototype.initLvAwardData = function () {
        var info = NetRoleInfo_1.default.Instance.lvInfo;
        this.currFundId = NetRoleInfo_1.default.Instance.lvInfo.fund_id;
        NetRoleInfo_1.default.Instance.lvConfigReq(this.currFundId);
        this.currLv = info.lv;
        this.m_fui.getChild("expLvTex").text = info.lv + "级";
        var expPre = this.m_fui.getChild("expPreTex").asLabel;
        var expSli = this.m_fui.getChild("expSli").asSlider;
        var needExp = info.need_exp;
        var exp = info.exp;
        if (needExp == 0) {
            expPre.text = "0.00%";
            expSli.value = 0;
        }
        else {
            expSli.max = needExp;
            expSli.value = exp;
            expPre.text = (exp / needExp * 100).toFixed(0) + "%";
        }
        this.m_fui.getChild("disNextExpTex").text = (needExp - exp).toString();
        this.m_fui.getChild("nextBounsTex").text = (Number(info.next_reward) * 0.01).toString();
        this.currTotalReTex.text = (Number(info.total_reward) * 0.01).toString();
        this.currTotalRe = info.total_reward;
        this.awardRe(info.lv, info.next_reward_lv, Number(info.reward));
    };
    /**
     * 领取等级反馈结果
     * @param data
     */
    LevelBonusPanel.prototype.reLvAwardData = function (data) {
        if (this.awardCode(data.code)) {
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipLevelReceived.replace("{0}", (this.currReReward * 0.01).toString()), TipManager_1.TipType.FLOATTIP);
            this.currTotalRe = Number(this.currTotalRe) + Number(this.currReReward);
            this.currTotalReTex.text = (this.currTotalRe * 0.01).toString();
            this.awardRe(data.lv, data.next_lv, Number(data.reward));
        }
        else {
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipReceiveFailed, TipManager_1.TipType.FLOATTIP);
            this.refresh();
        }
    };
    /**
     * 领取等奖奖金
     * @param lv
     * @param nextLv
     * @param reward
     */
    LevelBonusPanel.prototype.awardRe = function (lv, nextLv, reward) {
        this.currReLv = lv;
        this.nextLv = nextLv;
        this.currReReward = reward;
        this.currReLvTex.text = nextLv.toString();
        this.currReRewardTex.text = Number(reward * 0.01).toString();
        if (nextLv == 0) { //已经领取最高等级
            this.lvReContr.setSelectedIndex(3);
            return;
        }
        else {
            if (this.currLv >= nextLv) //可领取
             {
                this.lvReContr.setSelectedIndex(2);
                this.reBtn.onClick(this, this.onReLvAwardClick);
            }
            else { //不可领取
                this.lvReContr.setSelectedIndex(0);
            }
        }
    };
    /**
     * 领取等级
     */
    LevelBonusPanel.prototype.onReLvAwardClick = function () {
        this.lvReContr.selectedIndex = 1;
        Laya.timer.once(1000, this, this.onPlayAwardAni);
    };
    /**
     * 播放领取动画
     */
    LevelBonusPanel.prototype.onPlayAwardAni = function () {
        NetAward_1.default.Instance.lvAwardReq(this.nextLv);
    };
    /**
     *基金奖金数据列表
     * @param data
     */
    LevelBonusPanel.prototype.initInfoList = function (data) {
        var tip = this.m_fui.getChild("tipLoader").asLoader;
        this.currFundId = data.fund_id;
        this.isShowMoney(data.fund_id);
        this.isBuy(data.buy_mark);
        this.buyMoneyTex.text = (Number(data.price) * 0.01).toString();
        this.expList.removeChildrenToPool();
        var configs = data.configs;
        tip.icon = "ui://LevelBonus/" + "tip" + (Number(data.fund_id) - 1);
        for (var i = 0; i < configs.length; i++) {
            var infoCom = this.expList.addItemFromPool().asCom;
            infoCom.getChild("lvTex").text = configs[i].lv.toString();
            infoCom.getChild("expTex").text = configs[i].exp.toString();
            infoCom.getChild("awardTex").text = (Number(configs[i].award) * 0.01).toString();
            this.expList.ensureBoundsCorrect();
        }
    };
    /**
     * 点击请求基金显示
     */
    LevelBonusPanel.prototype.onlvConfigReqClick = function (id) {
        this.soundPlay(SoundNameConstant_1.default.soundKeyArr.onClick);
        if (id > 5) {
            return;
        }
        NetRoleInfo_1.default.Instance.lvConfigReq(id);
    };
    /**
     * 是不是全民等级
     * @param id
     */
    LevelBonusPanel.prototype.isShowMoney = function (id) {
        if (id == 1) {
            this.tipContr.setSelectedIndex(1);
        }
        else {
            this.tipContr.setSelectedIndex(0);
        }
    };
    /**
     * 是否已经购买
     * @param buyMark
     */
    LevelBonusPanel.prototype.isBuy = function (buyMark) {
        if (buyMark == 0) {
            this.upgradeContr.setSelectedIndex(0);
            if (this.currFundId == 5) {
                this.nextBtn.visible = false;
            }
            else {
                this.nextBtn.visible = true;
                this.preBtn.visible = true;
            }
        }
        else if (buyMark == 1) {
            this.upgradeContr.setSelectedIndex(1);
            this.preBtn.visible = false;
        }
        else {
            this.upgradeContr.setSelectedIndex(1);
        }
    };
    /**
     * 帮助按钮
     */
    LevelBonusPanel.prototype.onHelpClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(20 /* LvDetailPanel */);
    };
    /**
     * 前往升级
     */
    LevelBonusPanel.prototype.onUpgradeClick = function () {
        if (GameFacade_1.default.Instance.OthMng.isActEnd) {
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.lvFundCh.tipActEnd, TipManager_1.TipType.FLOATTIP);
        }
        else {
            GameFacade_1.default.Instance.SceneMng.Create(14 /* GrowthFundPanel */);
            this.onClose();
        }
    };
    /**
     * 领取记录
     */
    LevelBonusPanel.prototype.onRecordClick = function () {
        GameFacade_1.default.Instance.SceneMng.Create(16 /* LvRecordsPanel */);
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    LevelBonusPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.OthMng.isHaveLevelBonusPanel = false;
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVCONFIGRESP, this, this.initInfoList);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVAWARDRESP, this, this.reLvAwardData);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVINFORESP, this, this.initLvAwardData);
        GameFacade_1.default.Instance.SceneMng.close(15 /* LevelBonusPanel */);
    };
    /**
     * 声音播放
     */
    LevelBonusPanel.prototype.soundPlay = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    /**
     * 奖金领取状态
     * @param receLvBonus
     */
    LevelBonusPanel.prototype.awardCode = function (receLvBonus) {
        var award_code = AwardMsg.award_code;
        var isTrue = false;
        switch (receLvBonus) {
            case award_code.success:
                CommonUtil_1.utils.CommonUtils.log("领取：金币成功");
                isTrue = true;
                break;
            case award_code.fail:
                CommonUtil_1.utils.CommonUtils.log("领取：金币失败"); //更新整个面板         
                break;
            case award_code.out_of_cash:
                CommonUtil_1.utils.CommonUtils.log("领取：金币不足");
                break;
            case award_code.top_fun_id:
                CommonUtil_1.utils.CommonUtils.log("领取：当前已经是最高档次基金");
                break;
            case award_code.lv_had_reward:
                CommonUtil_1.utils.CommonUtils.log("领取：当前奖励已经领取");
                break;
            case award_code.levelnot:
                CommonUtil_1.utils.CommonUtils.log("领取：当前奖励未满足领取条件");
                break;
            case award_code.prev_reward:
                CommonUtil_1.utils.CommonUtils.log("领取：前置奖励未领取");
                break;
            case award_code.had_bought:
                CommonUtil_1.utils.CommonUtils.log("领取：活动已经结束");
                break;
            case award_code.act_end:
                CommonUtil_1.utils.CommonUtils.log("活动已经结束");
                break;
            default:
                break;
        }
        return isTrue;
    };
    return LevelBonusPanel;
}(BasePanel_1.default));
exports.default = LevelBonusPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/LanguageConstant":10,"../../constant/SoundNameConstant":11,"../../manager/TipManager":69,"../../net/ProtoHander/NetAward":77,"../../net/ProtoHander/NetRoleInfo":83,"../../utils/CommonUtil":90,"./BasePanel":35}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var LoadingPanel = /** @class */ (function (_super) {
    __extends(LoadingPanel, _super);
    function LoadingPanel(id) {
        var _this = _super.call(this) || this;
        ////fairygui.UIPackage.addPackage(CommonConstant._fuiLoadingPath.Package);
        _this.m_content = "";
        _this.m_fui = fairygui.UIPackage.createObject("Loading", "LoadingPanel").asCom;
        _this.m_LoadingProgress = _this.m_fui.getChild("LoadingBar").asProgress;
        _this.m_progressTitle = _this.m_fui.getChild("value").asLabel;
        _this.m_progressLoader = _this.m_fui.getChild("loader").asLoader;
        _this.m_nameID = id;
        _this.InitUI();
        return _this;
    }
    LoadingPanel.prototype.InitUI = function () {
        this.addChild(new Laya.Image(CommonConstant_1.default._loadingBgPath));
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_fui);
        this.SetProgress(0);
        var r = Math.round(Math.random() * 10 + 1);
        this.m_progressLoader.icon = "ui://Loading/" + "tishi_" + ((r > 5) ? 4 : r);
    };
    LoadingPanel.prototype.SetProgress = function (value) {
        this.m_LoadingProgress.value = Math.round(value * 100);
        this.m_progressTitle.text = Math.round(value * 100) + "%";
        if (this.m_LoadingProgress.value > this.m_LoadingProgress.max) {
            this.m_LoadingProgress.value = this.m_LoadingProgress.max;
        }
    };
    LoadingPanel.prototype.SetContent = function (content) {
        this.m_content = content;
    };
    return LoadingPanel;
}(BasePanel_1.default));
exports.default = LoadingPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"./BasePanel":35}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var LvDetailPanel = /** @class */ (function (_super) {
    __extends(LvDetailPanel, _super);
    function LvDetailPanel() {
        var _this = _super.call(this) || this;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiLvDetailsPath.image, CommonConstant_1.default._fuiLvDetailsPath.fui, _this, _this.onLoad);
        return _this;
    }
    /**
     * 加载设置
     */
    LvDetailPanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiLvDetailsPath.Package, "LvDetails", "lvDetailsCom");
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
    };
    /**
    *
    * @param targentCom 关闭目标
    */
    LvDetailPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.SceneMng.close(20 /* LvDetailPanel */);
    };
    return LvDetailPanel;
}(BasePanel_1.default));
exports.default = LvDetailPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"./BasePanel":35}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var Http_1 = require("../Login/Http/Http");
var BasePanel_1 = require("./BasePanel");
var LvRecordsPanel = /** @class */ (function (_super) {
    __extends(LvRecordsPanel, _super);
    function LvRecordsPanel() {
        var _this = _super.call(this) || this;
        _this.currPage = 1;
        _this.maxPage = 12;
        _this.totalPage = 0;
        _this.numPage = 1;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiLvRecordsPath.image, CommonConstant_1.default._fuiLvRecordsPath.fui, _this, _this.onLoad);
        return _this;
    }
    /**
     * 加载设置
     */
    LvRecordsPanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiLvRecordsPath.Package, "LvRecords", "lvRecordsCom");
        this.list = this.m_fui.getChild("infoList").asList;
        this.list.removeChildrenToPool();
        //this.list.on(fairygui.Events.PULL_DOWN_RELEASE,this,this.onPullDownRelease);
        this.list.on(fairygui.Events.PULL_UP_RELEASE, this, this.onPullUpRelease);
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
        ////  console.log("加载");
        this.HttpRecord(this.currPage, this.maxPage);
    };
    LvRecordsPanel.prototype.onPullDownRelease = function () {
        ////  console.log("上拉");
        if (this.currPage <= 1) {
            return;
        }
        else {
            this.currPage -= 1;
            this.HttpRecord(this.currPage, this.maxPage);
        }
    };
    LvRecordsPanel.prototype.onPullUpRelease = function () {
        ////  console.log("下拉");
        if (this.currPage >= this.numPage) {
            return;
        }
        else {
            this.currPage += 1;
            this.HttpRecord(this.currPage, this.maxPage);
        }
    };
    /**
     * 请求数据
     */
    LvRecordsPanel.prototype.HttpRecord = function (page, maX) {
        ////console.log(GameFacade.Instance.GameMng.historyUrl);
        var dataUrl = "?api_type=fund_got_awards&page=" + page + "&size=" + maX;
        if (GameFacade_1.default.Instance.GameMng.historyUrl.indexOf('?') > 0) {
            dataUrl = "$api_type=fund_got_awards&page=" + page + "&size=" + maX;
        }
        CommonUtil_1.utils.CommonUtils.log("dataUrl: " + dataUrl);
        CommonUtil_1.utils.CommonUtils.log("requestUrl: " + GameFacade_1.default.Instance.GameMng.historyUrl + dataUrl);
        Http_1.Http.httpSend("GET", GameFacade_1.default.Instance.GameMng.historyUrl + dataUrl, null, this.successCallBack.bind(this), this.failCallBack.bind(this));
    };
    /**
     * 成功返回数据
     * @param data
     */
    LvRecordsPanel.prototype.successCallBack = function (data) {
        ////console.log("历史记录数据");
        var j = {
            "info": {
                "status": 0, "data": [{ "id": "0", "user_id": 0, "action": 0, "game_id": 0, "current_awards": "", "current_got_lev_id": 0, "create_time": 0 }],
                "page_info": { "total": 0, "page_num": 0 }
            }, "page": 0, "game_list_info": [], "timezone": -4
        };
        ////console.log(data);
        if (data != null) {
            j = null;
            j = JSON.parse(data);
        }
        var info = j.info;
        var page = info.page_info;
        var datas = info.data;
        this.numPage = page.page_num;
        // this. list.removeChildrenToPool();
        for (var i = 0; i < datas.length; i++) {
            var infoCom = this.list.addItemFromPool().asCom;
            infoCom.getChild("lvTex").text = datas[i].current_got_lev_id.toString();
            infoCom.getChild("amountTex").text = datas[i].current_awards.toString();
            infoCom.getChild("accountNumTex").text = datas[i].id.toString();
            infoCom.getChild("timeTex").text = CommonUtil_1.utils.CommonUtils.numberToDataTime(Number(datas[i].create_time)).toString();
            this.list.ensureBoundsCorrect();
        }
    };
    /**
     * 失败返回数据
     */
    LvRecordsPanel.prototype.failCallBack = function () {
        this.list.removeChildrenToPool();
        ////console.log("抱歉，你已经失去信息");
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    LvRecordsPanel.prototype.onClose = function () {
        Http_1.Http.httpAbort();
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.SceneMng.close(16 /* LvRecordsPanel */);
    };
    return LvRecordsPanel;
}(BasePanel_1.default));
exports.default = LvRecordsPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../utils/CommonUtil":90,"../Login/Http/Http":30,"./BasePanel":35}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var NetRoleInfo_1 = require("../../net/ProtoHander/NetRoleInfo");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var EventNetResponse_1 = require("../../net/ProtoHander/EventNetResponse");
var BasePanel_1 = require("./BasePanel");
var PersonalInfoPanel = /** @class */ (function (_super) {
    __extends(PersonalInfoPanel, _super);
    function PersonalInfoPanel() {
        var _this = _super.call(this) || this;
        if (GameFacade_1.default.Instance.OthMng.isHavePersonInfoPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHavePersonInfoPanel = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiPersonalInfoPath.image, CommonConstant_1.default._fuiPersonalInfoPath.fui, _this, _this.onLoad);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.LVINFORESP, _this, _this.lvInfo);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SyncChipsResp, _this, _this.syncChip);
        return _this;
    }
    /**
     * 加载设置
     */
    PersonalInfoPanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiPersonalInfoPath.Package, "PersonalInfo", "PersonalInfo");
        var playNameTex = this.m_fui.getChild("nameTex").asLabel;
        playNameTex.text = NetLogin_1.default.Instance.RoleInfo.nickname;
        var idTex = this.m_fui.getChild("idTex").asLabel;
        idTex.text = NetLogin_1.default.Instance.RoleInfo.account;
        this.introGroup = this.m_fui.getChild("introGr").asGroup;
        this.introGroup.visible = false;
        this.introTs = this.m_fui.getTransition("t0");
        var helpBtn = this.m_fui.getChild("intrBtn").asButton;
        helpBtn.onClick(this, this.onHelp);
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
        NetRoom_1.default.Instance.SyncChipsReq();
        NetRoleInfo_1.default.Instance.lvInfoReq();
    };
    /**
    * 获得同步金币
    * @param data
    */
    PersonalInfoPanel.prototype.syncChip = function (data) {
        var coinTex = this.m_fui.getChild("coinTex").asLabel;
        coinTex.text = (Number(data.chips) / 100).toFixed(2);
    };
    /**
     * 等级信息
     */
    PersonalInfoPanel.prototype.lvInfo = function () {
        var lvTex = this.m_fui.getChild("lvTex").asLabel;
        lvTex.text = NetRoleInfo_1.default.Instance.lvInfo.lv + "级";
        this.expFormat();
    };
    /**
     * 经验值
     */
    PersonalInfoPanel.prototype.expFormat = function () {
        var v1 = NetRoleInfo_1.default.Instance.lvInfo.exp;
        var v2 = NetRoleInfo_1.default.Instance.lvInfo.need_exp;
        var currExpTex = this.m_fui.getChild("currExpTex").asLabel;
        currExpTex.text = v1 + "/" + v2;
        var currExpSli = this.m_fui.getChild("expSli").asSlider;
        var currExpPreTex = this.m_fui.getChild("expPreTex").asLabel;
        if (NetLogin_1.default.Instance.RoleInfo.need_exp == 0) {
            currExpSli.value = 0;
            currExpPreTex.text = "0.00%";
        }
        else {
            currExpSli.value = v1;
            currExpSli.max = v2;
            currExpPreTex.text = (v1 / v2 * 100).toFixed(0) + "%";
        }
    };
    /**
     * 帮助按钮
     */
    PersonalInfoPanel.prototype.onHelp = function () {
        this.introGroup.visible = true;
        this.introTs.play();
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    PersonalInfoPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.OthMng.isHavePersonInfoPanel = false;
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.LVINFORESP, this, this.lvInfo);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SyncChipsResp, this, this.syncChip);
        GameFacade_1.default.Instance.SceneMng.close(12 /* PersonalInfoPanel */);
    };
    return PersonalInfoPanel;
}(BasePanel_1.default));
exports.default = PersonalInfoPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/EventNetResponse":75,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetRoleInfo":83,"../../net/ProtoHander/NetRoom":84,"./BasePanel":35}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var BasePanel_1 = require("../Panel/BasePanel");
var GameEvent_1 = require("../../constant/GameEvent");
/**
 * 提示弹框
*/
var PromptPanel = /** @class */ (function (_super) {
    __extends(PromptPanel, _super);
    function PromptPanel(id) {
        var _this = _super.call(this) || this;
        _this.m_nameID = id;
        _this.m_fui = fairygui.UIPackage.createObject("Hall", "ReconnectTip").asCom;
        _this.m_confirmBtn = _this.m_fui.getChild("ConfirmBtn").asButton;
        _this.m_confirmBtn.onClick(_this, _this.OnConfirmBtnClick);
        _this.m_cancelBtn = _this.m_fui.getChild("CancelBtn").asButton;
        _this.m_cancelBtn.onClick(_this, _this.OnCancelBtnClick);
        _this.m_content = _this.m_fui.getChild("ContentLabel").asLabel;
        GameFacade_1.default.Instance.SceneMng.AddFUI(_this.m_fui);
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
        return _this;
    }
    PromptPanel.prototype.InitData = function (type, text) {
        this.m_type = type;
        switch (type) {
            case 3 /* ExitHuntScene */: //退出捕猎场景
            case 0 /* StopAutoAttack */: //停止自动捕鱼
                {
                    this.m_cancelBtn.visible = true;
                    this.m_confirmBtn.x = 680;
                    break;
                }
            case 4 /* RefeshGame */: //异地登录提示框
                {
                    this.m_cancelBtn.visible = false;
                    this.m_confirmBtn.x = 563;
                    break;
                }
        }
        this.m_content.text = text;
    };
    PromptPanel.prototype.OnConfirmBtnClick = function () {
        switch (this.m_type) {
            case 3 /* ExitHuntScene */: //退出捕猎场景
                {
                    GameFacade_1.default.Instance.SceneMng.EnterHallScene(function () { });
                    break;
                }
            case 0 /* StopAutoAttack */: //停止自动捕鱼
                {
                    GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_AUTOATTACK, false);
                    break;
                }
            case 4 /* RefeshGame */: //异地登录提示框
                {
                    GameFacade_1.default.Instance.SocketMng.refreshGame();
                    break;
                }
        }
        this.Close();
    };
    PromptPanel.prototype.OnCancelBtnClick = function () {
        // if (manager.TouchMoveFullScreen.instance.isAndroidApp) {
        //     window.close();
        // } else {
        //     window.location.href = GameFacade.Instance.GameMng.lobbyUrl;
        // }
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
        this.Close();
    };
    return PromptPanel;
}(BasePanel_1.default));
exports.default = PromptPanel;
},{"../../GameFacade":3,"../../constant/GameEvent":9,"../Panel/BasePanel":35}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var NetRanking_1 = require("../../net/ProtoHander/NetRanking");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var CommonUtil_1 = require("../../utils/CommonUtil");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var RankingPanel = /** @class */ (function (_super) {
    __extends(RankingPanel, _super);
    function RankingPanel() {
        var _this = _super.call(this) || this;
        _this.currPage = 1;
        _this.isEndPage = false;
        _this.iSCanClick = true;
        if (GameFacade_1.default.Instance.OthMng.isHaveRankPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveRankPanel = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiRankingPath.image, CommonConstant_1.default._fuiRankingPath.fui, _this, _this.onLoadRanking);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.RANKRESP, _this, _this.rankResp);
        return _this;
    }
    /**
     * 加载设置
     */
    RankingPanel.prototype.onLoadRanking = function () {
        var _this = this;
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiRankingPath.Package, "Ranking", "RankingPanel");
        this.tabC = this.m_fui.getController("tab");
        this.m_fui.getChild("close").onClick(this, this.onClose);
        this.thisRankBut = this.m_fui.getChild("thisWeekBut").asButton;
        this.lastRankBut = this.m_fui.getChild("lastWeekBut").asButton;
        this.thisRankBut.onClick(this, this.onClickThisRank);
        this.lastRankBut.onClick(this, this.onClickLastRank);
        this.thisRankBut.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.windowChange); });
        this.lastRankBut.onClick(this, function () { _this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.windowChange); });
        this.thisRankList = this.m_fui.getChild("thisWeekList").asList;
        this.thisRankList.removeChildrenToPool();
        this.lastRankList = this.m_fui.getChild("lastWeekList").asList;
        this.lastRankList.removeChildrenToPool();
        this.selfRankTex = this.m_fui.getChild("selfHaveRankng").asLabel;
        this.selfRankImag = this.m_fui.getChild("selfNoRanking").asImage;
        this.selfCoin = this.m_fui.getChild("selfCoin").asCom.getChild("coinTex").asLabel;
        this.selfCoin.text = "0";
        var nameTxt = this.m_fui.getChild("selfName").asCom.getChild("playNameTex").asTextField;
        if (!NetLogin_1.default.Instance.RoleInfo)
            return;
        nameTxt.text = NetLogin_1.default.Instance.RoleInfo.nickname;
        CommonUtil_1.utils.CommonUtils.nameAutoFontSize(nameTxt);
        this.rankThisWeekReq();
        //this.tabC.selectedIndex = 0;
    };
    /**
     * 点击本周
     */
    RankingPanel.prototype.onClickThisRank = function () {
        if (this.iSCanClick) {
            this.iSCanClick = false;
            Laya.timer.once(500, this, this.waitResh);
            this.currPage = 1;
            this.rankThisWeekReq();
            this.thisRankList.removeChildrenToPool();
        }
    };
    /**
     * 点击上周
     */
    RankingPanel.prototype.onClickLastRank = function () {
        if (this.iSCanClick) {
            this.iSCanClick = false;
            Laya.timer.once(500, this, this.waitResh);
            this.currPage = 1;
            this.rankLastWeekReq();
            this.lastRankList.removeChildrenToPool();
        }
    };
    /**
     * 等待刷新
     */
    RankingPanel.prototype.waitResh = function () {
        this.iSCanClick = true;
    };
    /**
     * 本周数据请求
     */
    RankingPanel.prototype.rankThisWeekReq = function () {
        NetRanking_1.default.Instance.rankReq(this.currPage, RankMsg.rank_type.rank_this_week);
    };
    /**
     * 上周数据请求
     */
    RankingPanel.prototype.rankLastWeekReq = function () {
        NetRanking_1.default.Instance.rankReq(this.currPage, RankMsg.rank_type.rank_last_week);
    };
    /**
     * 排行榜数据
     * @param data
     */
    RankingPanel.prototype.rankResp = function (data) {
        //// console.log(data);
        if (this.tabC.selectedIndex == 0) {
            this.listInfo(data, this.thisRankList, true);
        }
        else if (this.tabC.selectedIndex == 1) {
            this.listInfo(data, this.lastRankList, false);
        }
    };
    /**
     * 下拉
     */
    RankingPanel.prototype.onPullUpRelease = function () {
        if (this.isEndPage) {
            return;
        }
        ////  console.log("下拉");
        this.currPage += 1;
        this.refreshData();
    };
    /**
     * 上拉
     */
    RankingPanel.prototype.onPullDownRelease = function () {
        //// console.log("上拉");
        // this.currPage -= 1;
        // if (this.currPage == 0) {
        //     this.currPage = 1;
        // }
        // this.refreshData();
    };
    /**
     * 拖拽刷新数据
     */
    RankingPanel.prototype.refreshData = function () {
        if (this.tabC.selectedIndex == 0) {
            this.rankThisWeekReq();
        }
        else if (this.tabC.selectedIndex == 1) {
            this.rankLastWeekReq();
        }
    };
    /**
     * 排行榜列表
     * @param data 排行榜数据
     * @param list 排行榜列表
     * @param isThisWeek 是否是本周数据
     */
    RankingPanel.prototype.listInfo = function (data, list, isThisWeek) {
        list.on(fairygui.Events.PULL_DOWN_RELEASE, this, this.onPullDownRelease);
        list.on(fairygui.Events.PULL_UP_RELEASE, this, this.onPullUpRelease);
        if (data.self_rank == 0) {
            this.selfRankImag.visible = true;
            this.selfRankTex.visible = false;
        }
        else {
            this.selfRankImag.visible = false;
            this.selfRankTex.visible = true;
            this.m_fui.getChild("selfRanking").text = data.self_rank.toString();
        }
        if (isThisWeek) {
            this.selfCoin.text = CommonUtil_1.utils.CommonUtils.numberFormat(Number(data.score));
        }
        else {
            this.selfCoin.text = CommonUtil_1.utils.CommonUtils.numberFormat(Number(data.last_score));
        }
        if (data.role.length == 0) {
            return;
        }
        else {
            if (data.role.length < 10) {
                this.isEndPage = true;
            }
            else {
                this.isEndPage = false;
            }
            //list.removeChildrenToPool();
            for (var i = 0; i < data.role.length; i++) {
                var rankingItemCom = list.addItemFromPool().asCom;
                var rankingTex = rankingItemCom.getChild("rankingTex").asGroup;
                var rankingImag = rankingItemCom.getChild("rankingImg").asImage;
                var playNameCom = rankingItemCom.getChild("playName").asCom;
                var coinNumCom = rankingItemCom.getChild("coinNum").asCom;
                var playName = playNameCom.getChild("playNameTex").asLabel;
                var coinNum = coinNumCom.getChild("coinTex").asLabel;
                var num = i + ((this.currPage - 1) * 10);
                if (num < 3) {
                    rankingImag.visible = true;
                    rankingTex.visible = false;
                    rankingImag.icon = "ui://Ranking/" + "ranking" + (num + 1);
                }
                else {
                    rankingImag.visible = false;
                    rankingTex.visible = true;
                    rankingItemCom.getChild("ranking").text = (num + 1).toString();
                }
                playName.text = data.role[i].nickname;
                coinNum.text = CommonUtil_1.utils.CommonUtils.numberFormat(Number(data.role[i].score));
                list.ensureBoundsCorrect();
            }
        }
    };
    /**
     *
     * 播放按钮点击声音
     */
    RankingPanel.prototype.onPlaySound = function (str) {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, str);
    };
    /**
     * 关闭
     */
    RankingPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.OthMng.isHaveRankPanel = false;
        this.onPlaySound(SoundNameConstant_1.default.soundKeyArr.onClose);
        this.thisRankList.removeChildrenToPool();
        this.lastRankList.removeChildrenToPool();
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.RANKRESP, this, this.rankResp);
        GameFacade_1.default.Instance.SceneMng.close(7 /* RankingPanel */);
    };
    return RankingPanel;
}(BasePanel_1.default));
exports.default = RankingPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetRanking":81,"../../utils/CommonUtil":90,"./BasePanel":35}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var BasePanel_1 = require("../Panel/BasePanel");
/**
 * 断线自动重连的ui
 */
var ReconnecttingTip = /** @class */ (function (_super) {
    __extends(ReconnecttingTip, _super);
    function ReconnecttingTip(id) {
        var _this = _super.call(this) || this;
        _this.m_fui = fairygui.UIPackage.createObject("Hall", "ReconnectUI").asCom;
        var trans = _this.m_fui.getTransition("t0");
        trans.play();
        _this.m_fui.name = "ReconnecttingTip";
        _this.m_nameID = id;
        GameFacade_1.default.Instance.SceneMng.AddFUI(_this.m_fui);
        return _this;
    }
    return ReconnecttingTip;
}(BasePanel_1.default));
exports.default = ReconnecttingTip;
},{"../../GameFacade":3,"../Panel/BasePanel":35}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BasePanel_1 = require("./BasePanel");
var SelectItem_1 = require("../Item/SelectItem");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var GameFacade_1 = require("../../GameFacade");
var EnumData_1 = require("../../Enum/EnumData");
var GameEvent_1 = require("../../constant/GameEvent");
var BatteryController_1 = require("../../controller/BatteryController");
var FishController_1 = require("../../controller/FishController");
/**
 * 捕猎界面自动攻击面板--选择面板
*/
var SelectPanel = /** @class */ (function (_super) {
    __extends(SelectPanel, _super);
    function SelectPanel(owner, control) {
        var _this = _super.call(this) || this;
        _this.m_selectItemDic = new Laya.WeakObject();
        owner.getChild("ReSelectBtn").asButton.onClick(_this, _this.OnReSelectBtnClick);
        owner.getChild("SelectAllBtn").asButton.onClick(_this, _this.OnSelectAllBtnClick);
        owner.getChild("StartHuntBtn").asButton.onClick(_this, _this.OnStartHuntBtnClick);
        owner.getChild("LoadLastSetBtn").asButton.onClick(_this, _this.OnLoadLastSetBtnClick);
        _this.m_fui = owner;
        _this.m_list = owner.getChild("List").asList;
        _this.m_list.on(fairygui.Events.CLICK_ITEM, _this, _this.onClickItem);
        _this.m_list.foldInvisibleItems = true; //item不可见时，list不显示
        _this.m_control = control;
        _this.m_autoAttackArr = new Array(28);
        _this.LoadSelectFishConfig();
        return _this;
    }
    SelectPanel.prototype.ChangeItemUI = function (item, type, rate) {
        var selectItem = this.GetSelectItem(item);
        selectItem.ChangeUI(rate, type);
    };
    SelectPanel.prototype.GetSelectItem = function (item) {
        var key = this.m_list.getChildIndex(item);
        var selectItem = null;
        if (this.m_selectItemDic.has(key)) {
            selectItem = this.m_selectItemDic.get(key);
        }
        else {
            selectItem = new SelectItem_1.default(item, this);
            this.m_selectItemDic.set(key, selectItem);
        }
        return selectItem;
    };
    /**
     * 加载鱼的配置信息
    */
    SelectPanel.prototype.LoadSelectFishConfig = function () {
        var fishInfo = NetLogin_1.default.Instance._playerLoginInfo.fish_info;
        for (var i = 0; i < fishInfo.length; i++) {
            var type = fishInfo[i].fish_type;
            // //if(type > EnumData.FishSubtype.King_fishf1 && type <= EnumData.FishSubtype.King_fishf5) //27~31 为5个鱼王，只显示一个即可
            // if (type >= EnumData.FishSubtype.King_fishf1 && type <= EnumData.FishSubtype.King_fishf5) //27~31 为5个鱼王，都不显示
            // {
            //     continue;
            // }
            if (FishController_1.default.Instance.IsFishKing(type))
                continue;
            else if (type > EnumData_1.default.FishSubtype.Bomb_fish) {
                return;
            }
            var rate = fishInfo[i].fish_rate;
            var item = this.m_list.addItemFromPool().asCom;
            this.ChangeItemUI(item, type, rate);
        }
    };
    //#region  按钮响应事件
    SelectPanel.prototype.OnReSelectBtnClick = function () {
        for (var i = 0; i < this.m_list._children.length; i++) {
            var selectItem = this.m_selectItemDic.get(i);
            selectItem.SetClicked(false);
        }
    };
    SelectPanel.prototype.OnSelectAllBtnClick = function () {
        for (var i = 0; i < this.m_list._children.length; i++) {
            var selectItem = this.m_selectItemDic.get(i);
            selectItem.SetClicked(true);
        }
    };
    SelectPanel.prototype.OnStartHuntBtnClick = function () {
        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_LOCKATTACK, false);
        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.HUNT_AUTOATTACK, true);
        BatteryController_1.default.Instance.sAutoAttackArr = [];
        GameFacade_1.default.Instance.HuntSceneMng._bSelectedFish = false;
        for (var i = 0; i < this.m_autoAttackArr.length; i++) {
            BatteryController_1.default.Instance.gAutoAttackArr.push(this.m_autoAttackArr[i]);
            if (this.m_autoAttackArr[i]) {
                GameFacade_1.default.Instance.HuntSceneMng._bSelectedFish = true;
            }
        }
        this.m_control.OncloseBtnClick();
        this.m_control.ClearHuntedPanel();
    };
    SelectPanel.prototype.OnLoadLastSetBtnClick = function () {
        for (var i = 0; i < this.m_list._children.length; i++) {
            var selectItem = this.m_selectItemDic.get(i);
            selectItem.SetClicked(BatteryController_1.default.Instance.gAutoAttackArr[selectItem.FishType]);
        }
    };
    /** 点关闭按钮时，不保存选择信息*/
    SelectPanel.prototype.RemoveUnuseSelectedItem = function () {
        this.OnLoadLastSetBtnClick();
    };
    //#endregion
    SelectPanel.prototype.onClickItem = function (item) {
        var selectItem = this.GetSelectItem(item);
        selectItem.Onclicked();
    };
    SelectPanel.prototype.ShowSelf = function (visible) {
        this.m_fui.visible = visible;
    };
    return SelectPanel;
}(BasePanel_1.default));
exports.default = SelectPanel;
},{"../../Enum/EnumData":1,"../../GameFacade":3,"../../constant/GameEvent":9,"../../controller/BatteryController":12,"../../controller/FishController":13,"../../net/ProtoHander/NetLogin":80,"../Item/SelectItem":26,"./BasePanel":35}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var Setting = /** @class */ (function (_super) {
    __extends(Setting, _super);
    function Setting() {
        var _this = _super.call(this) || this;
        if (GameFacade_1.default.Instance.OthMng.isHaveSettingPanel)
            return _this;
        else
            GameFacade_1.default.Instance.OthMng.isHaveSettingPanel = true;
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiSettingPath.image, CommonConstant_1.default._fuiSettingPath.fui, _this, _this.onLoadSetting);
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
        return _this;
    }
    /**
     * 加载设置
     */
    Setting.prototype.onLoadSetting = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiSettingPath.Package, "Setting", "SettingPanel");
        var closeBtn = this.m_fui.getChild("close").asButton;
        closeBtn.onClick(this, this.onClose);
        this.musicSli = this.m_fui.getChild("musicSli").asSlider;
        this.soundSli = this.m_fui.getChild("soundSli").asSlider;
        this.musicSli.value = GameFacade_1.default.Instance.SoundMng.getMusicVolume();
        this.soundSli.value = GameFacade_1.default.Instance.SoundMng.getSoundVolume();
        this.musicSli.on(fairygui.Events.STATE_CHANGED, this, this.onMusicChange);
        this.soundSli.on(fairygui.Events.STATE_CHANGED, this, this.onSoundChange);
    };
    /**
     *
     * @param targentCom 关闭目标
     */
    Setting.prototype.onClose = function () {
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
        GameFacade_1.default.Instance.OthMng.isHaveSettingPanel = false;
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.SceneMng.close(5 /* SettingPanel */);
    };
    /**
     * 改变音乐滑动条
     */
    Setting.prototype.onMusicChange = function () {
        GameFacade_1.default.Instance.SoundMng.setMusicVolume(this.musicSli.value);
    };
    /**
     * 改变音效滑动条
     */
    Setting.prototype.onSoundChange = function () {
        GameFacade_1.default.Instance.SoundMng.setSoundVolume(this.soundSli.value);
    };
    return Setting;
}(BasePanel_1.default));
exports.default = Setting;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"./BasePanel":35}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var Handler = laya.utils.Handler;
var Loader = laya.net.Loader;
var GameFacade_1 = require("../../GameFacade");
var CommonConstant_1 = require("../../constant/CommonConstant");
var NetRoleInfo_1 = require("../../net/ProtoHander/NetRoleInfo");
var BasePanel_1 = require("./BasePanel");
var UpgradePanel = /** @class */ (function (_super) {
    __extends(UpgradePanel, _super);
    function UpgradePanel(data) {
        var _this = _super.call(this) || this;
        _this.num = 3;
        _this.data = data;
        Laya.loader.load([
            { url: CommonConstant_1.default._fuiUpgradePath1.image, type: Loader.IMAGE },
            { url: CommonConstant_1.default._fuiUpgradePath2.image, type: Loader.IMAGE },
            { url: CommonConstant_1.default._fuiUpgradePath1.fui, type: Loader.BUFFER },
        ], Handler.create(_this, _this.onLoad));
        return _this;
        // GameFacade.Instance.ResourceMng.loadUI(CommonConstant._fuiUpgradePath1.image, CommonConstant._fuiUpgradePath2.fui, this, null);
        // GameFacade.Instance.ResourceMng.loadUI(CommonConstant._fuiUpgradePath1.image, CommonConstant._fuiUpgradePath1.fui, this, this.onLoad);
    }
    /**
     * 加载设置
     */
    UpgradePanel.prototype.onLoad = function () {
        this.m_fui = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiUpgradePath1.Package, "upgradePanel", "upgradeCom");
        this.timeTex = this.m_fui.getChild("timeTex").asLabel;
        this.timeTex.text = this.num.toString();
        this.tran1 = this.m_fui.getTransition("t0");
        this.m_fui.getChild("lvTex").text = this.data.new_lv.toString();
        Laya.timer.loop(1000, this, this.timeShow);
        var closeBtn = this.m_fui.getChild("closeBtn").asButton;
        closeBtn.onClick(this, this.onClose);
    };
    /**
     * 倒计时显示
     */
    UpgradePanel.prototype.timeShow = function () {
        this.num -= 1;
        this.timeTex.text = this.num.toString();
        if (this.num == 0) {
            this.onClose();
        }
    };
    /**
    *
    * @param targentCom 关闭目标
    */
    UpgradePanel.prototype.onClose = function () {
        this.tran1.stop();
        Laya.timer.clear(this, this.timeShow);
        NetRoleInfo_1.default.Instance.isHaveNotion = false;
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        GameFacade_1.default.Instance.SceneMng.close(17 /* UpgradePanel */);
    };
    return UpgradePanel;
}(BasePanel_1.default));
exports.default = UpgradePanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../net/ProtoHander/NetRoleInfo":83,"./BasePanel":35}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var CommonUtil_1 = require("../../utils/CommonUtil");
var WalletKey = /** @class */ (function () {
    function WalletKey(max) {
        this.max_ = CommonUtil_1.utils.CommonUtils.numberFixed(max);
        this.walletKeyCom = fairygui.UIPackage.createObject("FreeTranWallet", "KeyNumberPanel").asCom;
        this.walletKeyCom.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.walletKeyCom);
        this.inputShow = this.walletKeyCom.getChild("inputShow").asLabel;
        this.walletKeyCom.getChild("no").onClick(this, this.onClickNo);
        this.walletKeyCom.getChild("yes").onClick(this, this.onClickYes);
        this.listNum = this.walletKeyCom.getChild("listNum").asList;
        //this.listNum.setVirtual();
        this.listNum.itemRenderer = new Laya.Handler(this, this.RenderListItem, null, false);
        this.listNum.numItems = 12;
        this.listNum.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
    }
    WalletKey.prototype.RenderListItem = function (index, obj) {
        var button = obj.asButton;
        if (index < 9) {
            button.icon = fairygui.UIPackage.getItemURL("FreeTranWallet", (index + 1).toString());
        }
        if (index == 9) {
            button.icon = fairygui.UIPackage.getItemURL("FreeTranWallet", "dot");
        }
        if (index == 10) {
            button.icon = fairygui.UIPackage.getItemURL("FreeTranWallet", "0");
        }
        if (index == 11) {
            button.icon = fairygui.UIPackage.getItemURL("FreeTranWallet", "back");
        }
    };
    /**
     * 点击数值
     * @param obj
     */
    WalletKey.prototype.onClickItem = function (obj) {
        var str = this.inputShow.text;
        // if (Number(str) >= this.max_) {
        //     this.inputShow.text = this.max_.toString();
        // }
        // else {
        //     this.inputShow.text = this.GetTextString(str, this.listNum.getChildIndex(obj));
        // }
        this.inputShow.text = this.GetTextString(str, this.listNum.getChildIndex(obj));
    };
    /**
     * 通过点击获取转变的字符
     * @param str
     * @param i
     */
    WalletKey.prototype.GetTextString = function (content, i) {
        switch (i) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
                {
                    content = content + (i + 1);
                    break;
                }
            case 9: // .
                {
                    if (i == 9) {
                        if (content.indexOf(".") != -1) {
                            return content;
                        }
                        content = content + ".";
                    }
                    break;
                }
            case 10: // 0
                {
                    content = content + "0";
                    break;
                }
            case 11: // delete
                {
                    if (content != null) {
                        if (content.length > 1) {
                            content = content.substring(0, content.length - 1);
                        }
                        else if (content.length == 1) {
                            content = "";
                        }
                    }
                    break;
                }
        }
        CommonUtil_1.utils.CommonUtils.log(" -- str = ", content);
        //return utils.CommonUtils.check_Phone_Text(content, this.max_);
        //this.max_ = 2456.77;
        content = CommonUtil_1.utils.CommonUtils.just_num(content);
        CommonUtil_1.utils.CommonUtils.log("Number(content) = ", Number(content));
        if (Number(content) > this.max_) {
            content = this.max_.toString();
        }
        return CommonUtil_1.utils.CommonUtils.check_Phone_Text(content);
    };
    /**
     * no 点击
     */
    WalletKey.prototype.onClickNo = function () {
        this.walletKeyCom.dispose();
    };
    /**
     * yes 点击 要带回数据 call
     */
    WalletKey.prototype.onClickYes = function () {
        this.onClickNo();
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.WALLETKEYNUM, this.inputShow.text);
    };
    return WalletKey;
}());
exports.default = WalletKey;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8,"../../utils/CommonUtil":90}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var NetWallet_1 = require("../../net/ProtoHander/NetWallet");
var CommonUtil_1 = require("../../utils/CommonUtil");
var WallerKeyPanel_1 = require("./WallerKeyPanel");
var BasePanel_1 = require("./BasePanel");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var CommonConstant_1 = require("../../constant/CommonConstant");
var EventNetResponse_1 = require("../../net/ProtoHander/EventNetResponse");
var NetRoom_1 = require("../../net/ProtoHander/NetRoom");
var LanguageConstant_1 = require("../../constant/LanguageConstant");
var TipManager_1 = require("../../manager/TipManager");
var NetLogin_1 = require("../../net/ProtoHander/NetLogin");
var WalletPanel = /** @class */ (function (_super) {
    __extends(WalletPanel, _super);
    function WalletPanel(id) {
        var _this = _super.call(this) || this;
        _this.ratio = 0.05;
        /** 中心钱包*/
        _this.certerWalletValue = 0;
        /** fg钱包*/
        _this.fgWalletValue = null;
        /** 您要追加到..*/
        _this.addToValue = 0;
        /** 实际充值额度*/
        _this.addValue = 0;
        _this.m_nameID = id;
        //GameFacade.Instance.ResourceMng.loadUI(CommonConstant._fuiFreeTranWalletPath.image, CommonConstant._fuiFreeTranWalletPath.fui, this, this.onLoadWallet);
        GameFacade_1.default.Instance.EventMng.add(EventConstantResponse_1.default.WALLETKEYNUM, _this, _this.walletKeyNum);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.SyncChipsResp, _this, _this.syncChip); //
        //GameFacade.Instance.EventMng.add(EventConstantResponse.SYNCWALLETFG, this, this.syncWelletFG); //
        _this.initFui();
        _this.addListerOnClick();
        NetRoom_1.default.Instance.SyncChipsReq();
        return _this;
    }
    WalletPanel.prototype.initData = function (data) {
        this.certerWalletValue = Number(data.chips);
        this.isAutoServer = data.auto_wallet == 0 ? false : true;
        this.isAutoLocal = this.isAutoServer;
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = true;
        this.updateUIValue();
    };
    WalletPanel.prototype.initFui = function () {
        fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiFreeTranWalletPath.Package);
        this.m_fui = fairygui.UIPackage.createObject("FreeTranWallet", "FreeTranWalletPanel").asCom;
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_fui);
        fairygui.UIConfig.defaultFont = "幼圆";
        this.m_fui.getChild("playAccText").text = CommonUtil_1.utils.CommonUtils.nickNameWithSymbol(NetLogin_1.default.Instance.RoleInfo.nickname);
        this.m_fui.getChild("certerWalletText").text = CommonUtil_1.utils.CommonUtils.numberFormat(this.certerWalletValue);
        this.m_fui.getChild("fgWalletText").text = CommonUtil_1.utils.CommonUtils.numberFormat(this.fgWalletValue);
        this.m_fui.getChild("autoAddBut").asButton.selected = this.isAutoServer;
        this.isAutoLocal = this.isAutoServer;
        this.walletInput = this.m_fui.getChild("input").asTextInput;
        this.walletKeyText = this.m_fui.getChild("keyText").asLabel;
        this.walletKeyBtn = this.m_fui.getChild("keyBtn").asButton;
        this.walletSli = this.m_fui.getChild("walletSli").asSlider;
        this.walletSli.on(fairygui.Events.STATE_CHANGED, this, this.onWalletSliderDragEnd);
        if (Laya.Browser.onPC) {
            if (this.fgWalletValue == 0) {
                this.walletInput.text = "0";
            }
            else {
                this.walletInput.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.addToValue);
            }
            this.walletInput.on(Laya.Event.INPUT, this, this.onInput);
            this.walletKeyText.visible = false;
            this.walletKeyBtn.visible = false;
        }
        else {
            this.walletInput.visible = false;
            this.walletKeyText.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.fgWalletValue);
            this.walletKeyBtn.on(Laya.Event.MOUSE_DOWN, this, this.createWalletKey);
        }
    };
    WalletPanel.prototype.updateUIValue = function () {
        if ((this.certerWalletValue + this.fgWalletValue) == 0) {
            CommonUtil_1.utils.CommonUtils.log("-----initUI this.fgWalletValue = ", this.fgWalletValue);
            this.walletSli.enabled = false;
        }
        else {
            this.walletSli.max = this.certerWalletValue + this.fgWalletValue;
        }
        this.m_fui.getChild("autoAddBut").asButton.selected = this.isAutoServer;
        this.isAutoLocal = this.isAutoServer;
        this.m_fui.getChild("certerWalletText").text = CommonUtil_1.utils.CommonUtils.numberFormat(this.certerWalletValue);
        this.m_fui.getChild("fgWalletText").text = CommonUtil_1.utils.CommonUtils.numberFormat(this.fgWalletValue);
        this.walletInput.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.addToValue);
        this.walletKeyText.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.fgWalletValue);
        this.walletSli.value = this.fgWalletValue;
    };
    /**
     * 请求同步FG钱包
     * @param data
     */
    WalletPanel.prototype.syncChip = function (data) {
        //假设已发射2发子弹，但都没碰到鱼，此时客户端已经扣钱但是服务端是没有扣钱的
        //这时面板的数据应该与客户端同步
        CommonUtil_1.utils.CommonUtils.log("  syncChip this.fgWalletValue = ", this.fgWalletValue);
        CommonUtil_1.utils.CommonUtils.log("  syncChip Number(data.chips) = ", Number(data.chips));
        GameFacade_1.default.Instance.GameMng.seeLog();
        if (null == this.fgWalletValue) {
            this.fgWalletValue = Number(data.chips);
        }
        this.addToValue = this.fgWalletValue;
        this.updateUIValue();
    };
    /** 发射子弹、打死鱼时同步FG钱包*/
    WalletPanel.prototype.syncWelletFG = function (chips) {
        if (this.m_fui != null) {
            console.log("---syncWelletFG", chips);
            this.fgWalletValue = Number(chips);
            this.updateUIValue();
        }
    };
    /**
     *
     * @param str 小键盘输入的值
     */
    WalletPanel.prototype.walletKeyNum = function (str) {
        CommonUtil_1.utils.CommonUtils.log(str);
        this.walletKeyText.text = str;
        var v = Number(CommonUtil_1.utils.CommonUtils.just_num(str));
        // if (v <= this.fgWalletValue) return;
        // if (v > this.certerWalletValue + this.fgWalletValue) {
        //     v = this.certerWalletValue + this.fgWalletValue;
        // }
        this.onClickMeanwhileChange(v * 100);
    };
    /**
     * 对按钮进行监控
     */
    WalletPanel.prototype.addListerOnClick = function () {
        this.m_fui.getChild("addBut").onClick(this, this.onClickAdd);
        this.m_fui.getChild("subBut").onClick(this, this.onClickSub);
        this.m_fui.getChild("autoAddBut").onClick(this, this.onClickIsAuto);
        this.m_fui.getChild("startBut").onClick(this, this.onClickStart);
        this.m_fui.getChild("close").onClick(this, this.OnClose);
    };
    /**
     * 创建小键盘
     */
    WalletPanel.prototype.createWalletKey = function () {
        new WallerKeyPanel_1.default(this.fgWalletValue + this.certerWalletValue);
    };
    /**
     * 输入值
     */
    WalletPanel.prototype.onInput = function () {
        CommonUtil_1.utils.CommonUtils.log("this.walletInput.text" + this.walletInput.text);
        var content = CommonUtil_1.utils.CommonUtils.just_num(this.walletInput.text);
        var max = CommonUtil_1.utils.CommonUtils.numberFixed(this.fgWalletValue + this.certerWalletValue);
        if (Number(content) > max) {
            content = max.toString();
        }
        this.walletSli.value = Number(content) * 100;
        this.addToValue = Number(content) * 100;
        this.walletInput.text = CommonUtil_1.utils.CommonUtils.check_Phone_Text(content);
    };
    /**
     * 点击加号
     */
    WalletPanel.prototype.onClickAdd = function () {
        var add = this.addToValue + this.certerWalletValue * this.ratio;
        var all = this.certerWalletValue + this.fgWalletValue;
        if (this.certerWalletValue > 0 && this.addToValue < all) {
            if (add >= all) {
                this.onClickMeanwhileChange(all);
            }
            else {
                this.onClickMeanwhileChange(add);
            }
        }
    };
    /**
     *点击减号
     */
    WalletPanel.prototype.onClickSub = function () {
        //if (this.addToValue < this.certerWalletValue && this.addToValue > this.fgWalletValue) {
        this.onClickMeanwhileChange(this.addToValue - this.certerWalletValue * this.ratio);
        //}
    };
    /**
     * 点击是否自动加钱
     */
    WalletPanel.prototype.onClickIsAuto = function () {
        if (this.isAutoLocal) {
            this.isAutoLocal = false;
        }
        else {
            this.isAutoLocal = true;
        }
    };
    /**
     * 拖拽滑动条
     */
    WalletPanel.prototype.onWalletSliderDragEnd = function () {
        this.m_fui.on(Laya.Event.MOUSE_UP, this, function () {
            var v = this.walletSli.value;
            if (this.walletSli.value <= this.fgWalletValue) {
                this.walletSli.value = this.fgWalletValue;
            }
            this.addToValue = this.walletSli.value;
            this.walletInput.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.walletSli.value);
            this.walletKeyText.text = CommonUtil_1.utils.CommonUtils.numberFormat(this.walletSli.value);
        });
    };
    /**
     * 点击加钱减钱是同时改变滑动条及加的钱数
     */
    WalletPanel.prototype.onClickMeanwhileChange = function (num) {
        if (num <= this.fgWalletValue) {
            num = this.fgWalletValue;
        }
        this.addToValue = num;
        this.walletInput.text = CommonUtil_1.utils.CommonUtils.numberFormat(num).toString();
        this.walletKeyText.text = CommonUtil_1.utils.CommonUtils.numberFormat(num).toString();
        this.walletSli.value = num;
    };
    /**
     * 点击start游戏
     */
    WalletPanel.prototype.onClickStart = function () {
        if (this.certerWalletValue == 0) {
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.centerNotEnough, TipManager_1.TipType.FLOATTIP);
            return;
        }
        if (this.addToValue == 0) {
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.setMoney, TipManager_1.TipType.FLOATTIP);
            return;
        }
        else if (this.addToValue == this.fgWalletValue && this.isAutoLocal == this.isAutoServer || this.addToValue < this.fgWalletValue) {
            //else if(this.addToValue < this.fgWalletValue){
            GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.operationInvalid, TipManager_1.TipType.FLOATTIP);
            return;
        }
        GameFacade_1.default.Instance.WalletMng.addToValue = this.addToValue;
        GameFacade_1.default.Instance.WalletMng.isAutoLocal = this.isAutoLocal;
        GameFacade_1.default.Instance.WalletMng.fgWalletValueByPanel = this.fgWalletValue;
        NetWallet_1.default.Instance.walletReq(this.addToValue, this.isAutoLocal);
        this.OnClose();
    };
    WalletPanel.prototype.OnClose = function () {
        this.fgWalletValue = null;
        GameFacade_1.default.Instance.EventMng.remove(EventConstantResponse_1.default.WALLETKEYNUM, this, this.walletKeyNum);
        //GameFacade.Instance.EventMng.remove(EventConstantResponse.SYNCWALLETFG, this, this.syncWelletFG);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.SyncChipsResp, this, this.syncChip);
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        //this.m_fui.dispose();
        GameFacade_1.default.Instance.SceneMng.bProhibitWalletBtn = false;
        GameFacade_1.default.Instance.WalletMng.walletPanel = null;
        this.Close();
    };
    return WalletPanel;
}(BasePanel_1.default));
exports.default = WalletPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/LanguageConstant":10,"../../constant/SoundNameConstant":11,"../../manager/TipManager":69,"../../net/ProtoHander/EventNetResponse":75,"../../net/ProtoHander/NetLogin":80,"../../net/ProtoHander/NetRoom":84,"../../net/ProtoHander/NetWallet":85,"../../utils/CommonUtil":90,"./BasePanel":35,"./WallerKeyPanel":56}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = laya.utils.Handler;
var Loader = laya.net.Loader;
var GameFacade_1 = require("../../GameFacade");
var SoundNameConstant_1 = require("../../constant/SoundNameConstant");
var CommonUtil_1 = require("../../utils/CommonUtil");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BasePanel_1 = require("./BasePanel");
var WinnerPanel = /** @class */ (function (_super) {
    __extends(WinnerPanel, _super);
    function WinnerPanel() {
        var _this = _super.call(this) || this;
        Laya.loader.load([
            { url: CommonConstant_1.default._fuiWinningPath.image, type: Loader.IMAGE },
            { url: CommonConstant_1.default._fuiWinningPath.fui, type: Loader.BUFFER },
        ], Handler.create(_this, _this.onLoadWinner));
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.luckAward);
        return _this;
    }
    /**
     * 加载设置
     */
    WinnerPanel.prototype.onLoadWinner = function () {
        fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiWinningPath.Package);
        this.m_fui = fairygui.UIPackage.createObject("Winning", "winningPanel").asCom;
        this.m_fui.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_fui);
        this.m_fui.getChild("GradeLoader").icon = "ui://Winning/" + this.bcastJpInfo.score_level;
        this.m_fui.getChild("clipText").text = "+" + (CommonUtil_1.utils.CommonUtils.numberFixed(Number(this.bcastJpInfo.score))).toFixed(2);
        Laya.timer.once(2000, this, this.onClose);
    };
    /**
     * 关闭
     */
    WinnerPanel.prototype.onClose = function () {
        GameFacade_1.default.Instance.SceneMng.close(18 /* WinnerPanel */);
    };
    return WinnerPanel;
}(BasePanel_1.default));
exports.default = WinnerPanel;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/SoundNameConstant":11,"../../utils/CommonUtil":90,"./BasePanel":35}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager = /** @class */ (function () {
    function BaseManager() {
    }
    BaseManager.prototype.Init = function () {
    };
    /** 清空还原数据*/
    BaseManager.prototype.ClearData = function () {
    };
    return BaseManager;
}());
exports.default = BaseManager;
},{}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../GameFacade");
var BaseManager_1 = require("./BaseManager");
var FishBaseConfigData_1 = require("../game/Fish/FishBaseConfigData");
var CommonUtil_1 = require("../utils/CommonUtil");
var ConfigManager = /** @class */ (function (_super) {
    __extends(ConfigManager, _super);
    function ConfigManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._fishPathConfig = {}; //正常鱼路径
        _this._fishPathConfigTranform = {}; // 转换x y后的鱼路径
        _this._fishOffsetConfig = new Laya.WeakObject();
        _this._fishPathLengthConfig = {};
        /** 是否执行了init*/
        _this._bCompleteInit = false;
        return _this;
    }
    Object.defineProperty(ConfigManager.prototype, "FishBaseConfig", {
        /** 鱼基础数据配置*/
        get: function () {
            return this._fishBaseConfig;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConfigManager.prototype, "FishPathConfig", {
        /** 鱼路劲数据配置(key:fishPathID   value:FishWayPoint)*/
        get: function () {
            return GameFacade_1.default.Instance.HuntSceneMng._bTransform ? this._fishPathConfigTranform : this._fishPathConfig;
            // if (!GameFacade.Instance.HuntSceneMng._bTransform) {
            //     return this._fishPathConfig;
            // }
            // else {
            //     utils.CommonUtils.log("------------------- _fishPathConfigTranform --------------------");
            //     return this._fishPathConfigTranform;
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConfigManager.prototype, "FishOffsetConfig", {
        /** 鱼位置偏移数据配置(key:fishTypeID   value:FishWayPoint)*/
        get: function () {
            return this._fishOffsetConfig;
        },
        enumerable: true,
        configurable: true
    });
    ConfigManager.prototype.GetfishPathLengthKey = function (fishType, pathID) {
        return fishType * 1000000 + pathID;
    };
    ConfigManager.prototype.Init = function () {
        if (false == this._bCompleteInit) {
            this._bCompleteInit = true;
            var self_1 = this;
            GameFacade_1.default.Instance.ResourceMng.PreloadingRes("configfile/fishBaseConfig.json", Laya.Loader.JSON, function (loadedRes) {
                self_1._fishBaseConfig = loadedRes;
                FishBaseConfigData_1.default.FishSwimConfig.ParseFishBehaviorData();
            });
            GameFacade_1.default.Instance.ResourceMng.PreloadingRes("configfile/fishPathConfig.json", Laya.Loader.JSON, function (loadedRes) {
                for (var iterator in loadedRes) {
                    var fwp = new FishWayPoint(iterator, self_1.GetPathLength(loadedRes[iterator]));
                    var fwp2 = new FishWayPoint(iterator, self_1.GetPathLength(loadedRes[iterator]));
                    self_1._fishPathConfig[iterator] = fwp;
                    self_1._fishPathConfigTranform[iterator] = fwp2;
                }
                TransformFishConfig();
            });
            GameFacade_1.default.Instance.ResourceMng.PreloadingRes("configfile/fishOffsetConfig.json", Laya.Loader.JSON, function (loadedRes) {
                for (var iterator in loadedRes) {
                    var fwp = new FishWayPoint(iterator, self_1.GetPathLength(loadedRes[iterator]));
                    self_1._fishOffsetConfig.set(iterator, fwp);
                }
            });
            var TransformFishConfig = function () {
                var fishConfig = self_1._fishPathConfigTranform;
                for (var key in fishConfig) {
                    var points = fishConfig[key]._points;
                    for (var i = 0; i < points.length; i++) {
                        points[i].x = -points[i].x;
                        points[i].y = -points[i].y;
                    }
                }
                CommonUtil_1.utils.CommonUtils.log("-----------  self._fishPathConfig = ", self_1._fishPathConfig);
                CommonUtil_1.utils.CommonUtils.log("-----------  self._fishPathConfigTranform = ", self_1._fishPathConfigTranform);
            };
        }
    };
    /**
     * 计算并返回路径长度
     * @param waypoints 路径上所有的点
     */
    ConfigManager.prototype.GetPathLength = function (waypoints) {
        var totalLength = 0;
        var vector3Arr = new Array();
        for (var index = 0; index < waypoints.length - 1; index++) {
            var arr = waypoints[index].replace('(', '').replace(')', '').split(',');
            /** x轴乘以-1是因为json数据从unity引擎导出来的，其坐标系与laya坐标系x值正好相反*/
            var vec = new Laya.Vector3(-1 * Number(arr[0]), Number(arr[1]), Number(arr[2]));
            var arr1 = waypoints[index + 1].replace('(', '').replace(')', '').split(',');
            var vec1 = new Laya.Vector3(-1 * Number(arr1[0]), Number(arr1[1]), Number(arr1[2]));
            vector3Arr.push(vec);
            if (1 + index == waypoints.length - 1)
                vector3Arr.push(vec1);
            totalLength += Laya.Vector3.distance(vec, vec1);
        }
        return new Array(vector3Arr, totalLength);
    };
    return ConfigManager;
}(BaseManager_1.default));
exports.default = ConfigManager;
var FishWayPoint = /** @class */ (function () {
    function FishWayPoint(key, objs) {
        this._key = key;
        this._points = objs[0];
        this._wayLength = objs[1];
    }
    return FishWayPoint;
}());
exports.FishWayPoint = FishWayPoint;
var FishPathLength = /** @class */ (function () {
    function FishPathLength(point, speed, length) {
        this._nodeBeginPoint = point;
        this._SpeedRate = speed;
        this._pathLength = length;
    }
    return FishPathLength;
}());
exports.FishPathLength = FishPathLength;
},{"../GameFacade":3,"../game/Fish/FishBaseConfigData":19,"../utils/CommonUtil":90,"./BaseManager":59}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
/**
 * 事件管理
 */
var EventManager = /** @class */ (function (_super) {
    __extends(EventManager, _super);
    function EventManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EventManager.prototype.Init = function () {
        this._event = new laya.events.EventDispatcher();
    };
    /**
     * 添加一般游戏逻辑事件（不包含协议回调事件） 要防止重复添加，否则会重复调用
     */
    EventManager.prototype.add = function (type, thisObject, listener, once) {
        if (once === void 0) { once = false; }
        if (!once)
            this._event.on(type, thisObject, listener);
        else
            this._event.once(type, thisObject, listener);
    };
    /**
     * 派发一般游戏逻辑事件（不包含协议回调事件）
     */
    EventManager.prototype.dispatch = function (type) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this._event.event(type, args);
    };
    /**
     * 移除一般游戏逻辑事件（不包含协议回调事件）
     */
    EventManager.prototype.remove = function (type, thisObject, listener, onceOnly) {
        if (onceOnly === void 0) { onceOnly = false; }
        this._event.off(type, thisObject, listener, onceOnly);
    };
    return EventManager;
}(BaseManager_1.default));
exports.default = EventManager;
},{"./BaseManager":59}],62:[function(require,module,exports){
"use strict";
/**
* 玩家数据
*/
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var CommonUtil_1 = require("../utils/CommonUtil");
var BatteryController_1 = require("../controller/BatteryController");
var NetRoom_1 = require("../net/ProtoHander/NetRoom");
var CommonConstant_1 = require("../constant/CommonConstant");
var GameManger = /** @class */ (function (_super) {
    __extends(GameManger, _super);
    function GameManger() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.lang = "zh-cn"; //多语言 	(暂时定义 无用)	
        _this.game_id = 5006;
        _this.isShowTip = true;
        _this.bReconnect = false;
        _this.serverPort = 50062;
        _this.sip = null;
        /** 弱网情况下从房间返回大厅，则记录的房间的值*/
        _this.userAccount = "null";
        _this.userChips = 0;
        /** 账号登录的token*/
        _this.token = "123";
        _this.historyUrl = "";
        _this.myVersion = "";
        _this.client = ""; //客户端设备
        _this.isLoacalDev = false; //是否本地调试
        _this.reportUrl = null;
        _this.actUrl = null;
        _this.playType = "2"; //正式玩1  试玩2
        _this.isPlay = true; //是否是试玩
        return _this;
    }
    GameManger.prototype.Init = function () {
        this.sip = JSON.parse(CommonUtil_1.utils.CommonUtils.decode("sip", "value"));
        this.serverIp = CommonUtil_1.utils.CommonUtils.decode("serverIp", "value");
        //this.lobbyUrl = utils.CommonUtils.decode("lobbyUrl", "value");
        this.serverPort = CommonUtil_1.utils.CommonUtils.decode("serverPort", "value");
        this.token = CommonUtil_1.utils.CommonUtils.decode("token", "value");
        //this.historyUrl = utils.CommonUtils.decode("historyUrl", "value");
        this.myVersion = CommonUtil_1.utils.CommonUtils.decode("myVersion", "value");
        this.client = CommonUtil_1.utils.CommonUtils.decode("client", "value");
        this.return = CommonUtil_1.utils.CommonUtils.decode("return", "value");
        this.sheet = CommonUtil_1.utils.CommonUtils.decode("sheet", "value");
        this.playType = CommonUtil_1.utils.CommonUtils.getValue("play_type");
        this.isPlay = this.playType == "2" ? true : false;
        this.reportUrl = CommonUtil_1.utils.CommonUtils.getValue("gameWebLog");
        this.actUrl = CommonUtil_1.utils.CommonUtils.getValue("actUrl");
        this.lobbyUrl = CommonUtil_1.utils.CommonUtils.getValue("lobbyUrl");
        this.historyUrl = CommonUtil_1.utils.CommonUtils.getValue("historyUrl");
    };
    /**
      * 获取运行设备
      * 1:PC，2:IOS横，3:IOS竖，4:安卓横，5:安卓竖，6:其它横，7:其它
      */
    GameManger.prototype.getDeviceType = function () {
        var isHorizontal = Laya.Browser.clientWidth > Laya.Browser.clientHeight;
        var media = 1;
        if (Laya.Browser.onPC) {
            media = 1;
        }
        else if (Laya.Browser.onIOS) {
            media = isHorizontal ? 2 : 3;
        }
        else if (Laya.Browser.onAndroid) //onAndriod 
         {
            media = isHorizontal ? 4 : 5;
        }
        else {
            media = isHorizontal ? 6 : 7;
        }
        return media;
    };
    GameManger.prototype.seeLog = function () {
        CommonUtil_1.utils.CommonUtils.log(" ");
        CommonUtil_1.utils.CommonUtils.log("-----------------------------log结果------------------------------");
        for (var key in BatteryController_1.default.Instance.m_uselessBulletIdDict) {
            CommonUtil_1.utils.CommonUtils.log(" 无用子弹 bulletId = ", BatteryController_1.default.Instance.m_uselessBulletIdDict[key].bulletid.toString());
        }
        for (var key in BatteryController_1.default.Instance.m_totalBulletIdDict) {
            CommonUtil_1.utils.CommonUtils.log(" 异常子弹 bulletId = ", BatteryController_1.default.Instance.m_totalBulletIdDict[key].bulletid.toString());
        }
        for (var key in BatteryController_1.default.Instance.m_reqBulletIdDict) {
            CommonUtil_1.utils.CommonUtils.log(" 请求但未收到回复的子弹 bulletId = ", BatteryController_1.default.Instance.m_reqBulletIdDict[key].bulletid.toString());
        }
        CommonUtil_1.utils.CommonUtils.log("shootBulletReq = ", CommonConstant_1.default._huntSceneTestArry.shootBulletReq);
        CommonUtil_1.utils.CommonUtils.log("shootBulletResp = ", CommonConstant_1.default._huntSceneTestArry.shootBulletResp);
        CommonUtil_1.utils.CommonUtils.log("BulletPassResp = ", CommonConstant_1.default._huntSceneTestArry.BulletPassResp);
        CommonUtil_1.utils.CommonUtils.log("ShootErrorResp = ", CommonConstant_1.default._huntSceneTestArry.ShootErrorResp);
        CommonUtil_1.utils.CommonUtils.log("-----------------------------");
        CommonUtil_1.utils.CommonUtils.log("uselessBulletReq = ", CommonConstant_1.default._huntSceneTestArry.uselessBulletReq);
        CommonUtil_1.utils.CommonUtils.log("uselessBulletResp = ", CommonConstant_1.default._huntSceneTestArry.uselessBulletResp);
        CommonUtil_1.utils.CommonUtils.log("-----------------------------");
        CommonUtil_1.utils.CommonUtils.log("hitFishReq = ", CommonConstant_1.default._huntSceneTestArry.hitFishReq);
        CommonUtil_1.utils.CommonUtils.log("hitFishResp = ", CommonConstant_1.default._huntSceneTestArry.hitFishResp);
        CommonUtil_1.utils.CommonUtils.log("fishDeadResp = ", CommonConstant_1.default._huntSceneTestArry.fishDeadResp);
    };
    GameManger.prototype.getFlyingBulletChips = function () {
        var chips = 0;
        for (var key in BatteryController_1.default.Instance.m_totalBulletIdDict) {
            chips += BatteryController_1.default.Instance.m_totalBulletIdDict[key].multi * NetRoom_1.default.Instance._curRoomInfo.ante;
        }
        return chips;
    };
    return GameManger;
}(BaseManager_1.default));
exports.default = GameManger;
},{"../constant/CommonConstant":7,"../controller/BatteryController":12,"../net/ProtoHander/NetRoom":84,"../utils/CommonUtil":90,"./BaseManager":59}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonConstant_1 = require("../constant/CommonConstant");
var GameFacade_1 = require("../GameFacade");
var FishController_1 = require("../controller/FishController");
var EnumData_1 = require("../Enum/EnumData");
var FishBase_1 = require("../game/Fish/FishBase");
var BaseManager_1 = require("./BaseManager");
var BulletBase_1 = require("../game/Bullet/BulletBase");
var HF3DBulletClasses_1 = require("../game/Bullet/HF3DBulletClasses");
var HF3DFishClasses_1 = require("../game/Fish/HF3DFishClasses");
var BatteryController_1 = require("../controller/BatteryController");
var CommonUtil_1 = require("../utils/CommonUtil");
var SoundNameConstant_1 = require("../constant/SoundNameConstant");
var HuntSceneManager = /** @class */ (function (_super) {
    __extends(HuntSceneManager, _super);
    function HuntSceneManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._bSelectedFish = false;
        _this._bAutoAttack = false;
        _this._bLockAttack = false;
        _this._bTransform = false;
        /** 存放实例化的鱼对象*/
        //private _FishInstanceDict: Laya.WeakObject;
        _this._FishInstanceDict = {};
        /** 存放实例化的子弹对象*/
        _this._BulletInstanceDict = {};
        /**预警面板 */
        _this.warnCom = null;
        _this.isHaveWarnEffect = false;
        _this.warnArr = new Array(); //当前预警个数
        return _this;
    }
    HuntSceneManager.prototype.Init = function () {
        //this._HuntScene = new Laya.Scene3D();
    };
    /** 清空还原数据*/
    HuntSceneManager.prototype.ClearData = function () {
        this._FishInstanceDict = null;
        //this.DeleteAllFishsIns();
        this._BulletInstanceDict = null;
        //this.DeleteAllBulletsIns();
        //this.onExitWarn();
        this._GunScene = null;
        this._HuntScene = null;
        this._HuntSceneCamera = null;
        this._FishPrefabDict = null;
        this._bulletPrefabDict = null;
        this._effectPrefabDict = null;
        this._awardffectPrefabDict = null;
        this._cannonPrefabDict = null;
        this._effectInstanceDict = null;
        this._bSelectedFish = false;
        this._bAutoAttack = false;
        this._bLockAttack = false;
        this._bTransform = false;
    };
    /**
     * 进入捕猎房间
     */
    HuntSceneManager.prototype.EnterRoomInit = function (scene, gunScene) {
        this._GunScene = gunScene;
        this._GunSceneCamera = gunScene.getChildByName("Main Camera");
        this._HuntScene = scene;
        this._HuntSceneCamera = scene.getChildByName("Main Camera");
        //this._HuntSceneCamera.fieldOfView = 80;
        this._HuntSceneCamera.clearFlag = 3;
        // camera.cullingMask = (1 << 8);
        this._HuntSceneCamera.transform.position = new Laya.Vector3(0, 0, -10);
        this.SetFishModels();
        this.SetBulletModels();
        this.SetEffectModels();
        this.SetAwardEffectModels();
        this.SetCannonModels();
        FishController_1.default.Instance.Init();
        BatteryController_1.default.Instance.Init();
    };
    /** 退出捕猎场景并回收相关资源*/
    HuntSceneManager.prototype.ExitHuntScene = function () {
        FishController_1.default.Instance.Uninit();
        BatteryController_1.default.Instance.Uninit();
        //卸载3d资源缓存
        this._HuntScene.destroy(true);
        this.onExitWarn();
        this._GunScene.destroy(true);
        GameFacade_1.default.Instance.SoundMng.stopAll();
        this.ClearData();
        Laya.loader.clearRes(CommonConstant_1.default._gunScenePath);
        Laya.loader.clearRes(CommonConstant_1.default._huntScenePath);
        Laya.loader.clearRes(CommonConstant_1.default._hunterBgPath1);
        Laya.loader.clearRes(CommonConstant_1.default._hunterBgPath2);
        GameFacade_1.default.Instance.ResourceMng.ReleaseFuiResByGroupName(CommonConstant_1.default._groupName_fuiRes);
    };
    /**
     * 获取碰撞鱼的脚本信息
     */
    HuntSceneManager.prototype.GetFishBase = function (node) {
        var parent = node.parent.parent; //其他鱼
        if (parent == null) {
            parent = node.parent; //美人鱼
        }
        var fish = parent.getComponent(FishBase_1.FishBase);
        return fish;
    };
    //#region 鱼对象的实例化、回收与移除鱼
    HuntSceneManager.prototype.SetFishModels = function () {
        if (null == this._FishPrefabDict) {
            this._FishPrefabDict = new Laya.WeakObject();
            var fishNode = this._HuntScene.getChildByName("FishModels");
            fishNode.active = true;
            var numChildren = fishNode.numChildren;
            for (var index = 0; index < numChildren; index++) {
                var nd = fishNode.getChildAt(index);
                nd.active = false;
                this._FishPrefabDict.set(nd.name, nd);
            }
        }
    };
    /**
       * 获取鱼模型资源
       * @param fishModelType 鱼的模型类型ID
       */
    HuntSceneManager.prototype.GetFishModel = function (fishModelType) {
        var key;
        if (fishModelType >= 10)
            key = "Fish" + fishModelType;
        else
            key = "Fish0" + fishModelType;
        if (this._FishPrefabDict.has(key)) {
            return this._FishPrefabDict.get(key);
        }
        else
            CommonUtil_1.utils.CommonUtils.warn("not find fish model of fishId" + fishModelType);
        return null;
    };
    HuntSceneManager.prototype.InstantiateFish = function (fishSubType, parent) {
        var fishModelType = GameFacade_1.default.Instance.HuntSceneMng.GetFishModelType(fishSubType);
        if (null == this._FishInstanceDict)
            this._FishInstanceDict = {}; //new Laya.WeakObject();
        var fishIns;
        var fishArray;
        if (this._FishInstanceDict[fishModelType]) {
            fishArray = this._FishInstanceDict[fishModelType]; // as Array<Laya.Sprite3D>;
            var tarray = fishArray.filter(function (value, index, array) { return value.active == false; });
            if (null != tarray && tarray.length > 0)
                return tarray[0];
        }
        else
            fishArray = new Array();
        var prefab = this.GetFishModel(fishModelType);
        fishIns = Laya.Sprite3D.instantiate(prefab, parent == null ? prefab.parent : parent);
        fishArray.push(fishIns);
        this._FishInstanceDict[fishModelType] = fishArray;
        switch (fishSubType) {
            case EnumData_1.default.FishSubtype.Fish_1:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish01);
                break;
            case EnumData_1.default.FishSubtype.Fish_2:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish02);
                break;
            case EnumData_1.default.FishSubtype.Fish_3:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish03);
                break;
            case EnumData_1.default.FishSubtype.Fish_4:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish04);
                break;
            case EnumData_1.default.FishSubtype.Fish_5:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish05);
                break;
            case EnumData_1.default.FishSubtype.Fish_6:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish06);
                break;
            case EnumData_1.default.FishSubtype.Fish_7:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish07);
                break;
            case EnumData_1.default.FishSubtype.Fish_8:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish08);
                break;
            case EnumData_1.default.FishSubtype.Fish_9:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish09);
                break;
            case EnumData_1.default.FishSubtype.Fish_10:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish10);
                break;
            case EnumData_1.default.FishSubtype.Fish_11:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish11);
                break;
            case EnumData_1.default.FishSubtype.Fish_12:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish12);
                break;
            case EnumData_1.default.FishSubtype.Fish_13:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish13);
                break;
            case EnumData_1.default.FishSubtype.Fish_14:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish14);
                break;
            case EnumData_1.default.FishSubtype.Fish_15:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish15);
                break;
            case EnumData_1.default.FishSubtype.Fish_16:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish16);
                break;
            case EnumData_1.default.FishSubtype.Fish_17:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish17);
                break;
            case EnumData_1.default.FishSubtype.Fish_18:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish18);
                break;
            case EnumData_1.default.FishSubtype.Fish_19:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish19);
                break;
            case EnumData_1.default.FishSubtype.Fish_20:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish20);
                break;
            case EnumData_1.default.FishSubtype.Frozen_fish:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish21);
                break;
            case EnumData_1.default.FishSubtype.Fish_22:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish22);
                break;
            case EnumData_1.default.FishSubtype.Golden_Shark:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish23);
                break;
            case EnumData_1.default.FishSubtype.Golden_Dragon:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish24);
                break;
            case EnumData_1.default.FishSubtype.Mermaid:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish25);
                break;
            case EnumData_1.default.FishSubtype.Ship:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish26);
                break;
            case EnumData_1.default.FishSubtype.King_fishf1:
                fishIns.addComponent(HF3DFishClasses_1.default.FishKing1);
                break;
            case EnumData_1.default.FishSubtype.King_fishf2:
                fishIns.addComponent(HF3DFishClasses_1.default.FishKing2);
                break;
            case EnumData_1.default.FishSubtype.King_fishf3:
                fishIns.addComponent(HF3DFishClasses_1.default.FishKing3);
                break;
            case EnumData_1.default.FishSubtype.King_fishf4:
                fishIns.addComponent(HF3DFishClasses_1.default.FishKing4);
                break;
            case EnumData_1.default.FishSubtype.King_fishf5:
                fishIns.addComponent(HF3DFishClasses_1.default.FishKing5);
                break;
            case EnumData_1.default.FishSubtype.Bomb_fish:
                fishIns.addComponent(HF3DFishClasses_1.default.Fish27);
                break;
            default:
                fishIns.addComponent(FishBase_1.FishBase);
                break;
        }
        return fishIns;
    };
    /**
     * 根据鱼数据类型获取对应的模型ID( 修改type 从27(炸弹鱼) 以后 开始 对应的是 1 2 3 4 5类型鱼模型的鱼王)
     * @param fishType 鱼的子类型
     */
    HuntSceneManager.prototype.GetFishModelType = function (fishType) {
        switch (fishType) {
            case EnumData_1.default.FishSubtype.Bomb_fish:
                fishType = 27;
                break;
            case EnumData_1.default.FishSubtype.King_fishf1:
                fishType = 1;
                break;
            case EnumData_1.default.FishSubtype.King_fishf2:
                fishType = 2;
                break;
            case EnumData_1.default.FishSubtype.King_fishf3:
                fishType = 3;
                break;
            case EnumData_1.default.FishSubtype.King_fishf4:
                fishType = 4;
                break;
            case EnumData_1.default.FishSubtype.King_fishf5:
                fishType = 5;
                break;
            default:
                break;
        }
        return fishType;
    };
    /**
     * 销毁所有缓存的鱼资源
     */
    HuntSceneManager.prototype.DeleteAllFishsIns = function () {
        if (null == this._FishInstanceDict)
            return;
        for (var key in this._FishInstanceDict) {
            if (this._FishInstanceDict.hasOwnProperty(key)) {
                var element = this._FishInstanceDict[key];
                for (var index = 0; index < element.length; index++) {
                    var tins = element[index];
                    tins.destroy();
                }
            }
        }
        this._FishInstanceDict = null;
    };
    //#endregion
    //#region  子弹对象的实例化  缓存与回收
    /** 缓存炮台预制件列表*/
    HuntSceneManager.prototype.SetCannonModels = function () {
        if (null == this._cannonPrefabDict) {
            this._cannonPrefabDict = new Laya.WeakObject();
            var node = this._GunScene.getChildByName("Cannons");
            var numChildren = null != node ? node.numChildren : 0;
            for (var index = 0; index < numChildren; index++) {
                var nd = node.getChildAt(index);
                nd.active = false;
                this._cannonPrefabDict.set(nd.name, nd);
            }
        }
    };
    /**
     * 获取炮台预制件资源
     * @param cannonResType 炮台资源类型ID(1\2\3)
     */
    HuntSceneManager.prototype.GetCannonPrefab = function (cannonResType) {
        var key;
        key = "Cannon" + cannonResType;
        if (this._cannonPrefabDict.has(key)) {
            return this._cannonPrefabDict.get(key);
        }
        else
            CommonUtil_1.utils.CommonUtils.warn("not find prefab model of cannonResType " + cannonResType);
        return null;
    };
    /** 缓存子弹预制件列表*/
    HuntSceneManager.prototype.SetBulletModels = function () {
        if (null == this._bulletPrefabDict) {
            this._bulletPrefabDict = new Laya.WeakObject();
            var bulletNode = this._HuntScene.getChildByName("Bullets");
            var numChildren = bulletNode.numChildren;
            for (var index = 0; index < numChildren; index++) {
                var nd = bulletNode.getChildAt(index);
                // nd.getChildAt(0).getChildAt(0).active = false;
                nd.active = false;
                this._bulletPrefabDict.set(nd.name, nd);
            }
        }
    };
    /**
       * 获取子弹预制件资源
       * @param bulletResType 子弹资源类型ID
       */
    HuntSceneManager.prototype.GetBulletPrefab = function (bulletResType) {
        var key;
        key = "BulletPrefab" + bulletResType;
        if (this._bulletPrefabDict.has(key)) {
            return this._bulletPrefabDict.get(key);
        }
        else
            CommonUtil_1.utils.CommonUtils.warn("not find BulletPrefab model of bulletResType " + bulletResType);
        return null;
    };
    /**
     *
     * @param bulletType 子弹资源类型
     */
    HuntSceneManager.prototype.InstantiateBullet = function (bulletType) {
        if (null == this._BulletInstanceDict)
            this._BulletInstanceDict = {}; //new Laya.WeakObject();
        var cloneIns;
        var cloneArray;
        if (this._BulletInstanceDict[bulletType]) {
            cloneArray = this._BulletInstanceDict[bulletType]; // as Array<Laya.Sprite3D>;
            var tarray = cloneArray.filter(function (value, index, array) { return value.active == false; });
            if (null != tarray && tarray.length > 0)
                return tarray[0];
        }
        else
            cloneArray = new Array();
        var prefab = this.GetBulletPrefab(bulletType);
        if (null == prefab)
            return;
        cloneIns = Laya.Sprite3D.instantiate(prefab, prefab.parent);
        cloneArray.push(cloneIns);
        this._BulletInstanceDict[bulletType] = cloneArray;
        switch (bulletType) {
            case 1:
                cloneIns.addComponent(HF3DBulletClasses_1.default.Bullet01);
                break;
            case 2:
                cloneIns.addComponent(HF3DBulletClasses_1.default.Bullet02);
                break;
            case 3:
                cloneIns.addComponent(HF3DBulletClasses_1.default.Bullet03);
                break;
            default:
                cloneIns.addComponent(BulletBase_1.default);
                break;
        }
        return cloneIns;
    };
    /**
     * 销毁所有缓存的子弹资源
     */
    HuntSceneManager.prototype.DeleteAllBulletsIns = function () {
        if (null == this._BulletInstanceDict)
            return;
        for (var key in this._BulletInstanceDict) {
            if (this._BulletInstanceDict.hasOwnProperty(key)) {
                var element = this._BulletInstanceDict[key];
                for (var index = 0; index < element.length; index++) {
                    var tins = element[index];
                    tins.destroy();
                }
            }
        }
        BatteryController_1.default.Instance.ShootedBulletAmount = 0;
        this._BulletInstanceDict = null;
    };
    //#endregion
    //#region  特效对象的实例化  缓存与回收
    /** 缓存特效预制件列表*/
    HuntSceneManager.prototype.SetEffectModels = function () {
        if (null == this._effectPrefabDict) {
            this._effectPrefabDict = new Laya.WeakObject();
            var node = this._HuntScene.getChildByName("Effects");
            var numChildren = node.numChildren;
            for (var index = 0; index < numChildren; index++) {
                var nd = node.getChildAt(index);
                nd.active = false;
                this._effectPrefabDict.set(nd.name, nd);
            }
        }
    };
    /**
       * 获取捕猎场景特效资源预制件
       * @param effectResPath 捕猎场景特效资源
       */
    HuntSceneManager.prototype.GetEffectPrefab = function (effectResPath) {
        var key = effectResPath;
        if (this._effectPrefabDict.has(key)) {
            return this._effectPrefabDict.get(key);
        }
        else
            CommonUtil_1.utils.CommonUtils.warn("not find effectRes model of path " + effectResPath);
        return null;
    };
    /** 缓存爆金币特效预制件列表*/
    HuntSceneManager.prototype.SetAwardEffectModels = function () {
        if (null == this._awardffectPrefabDict) {
            this._awardffectPrefabDict = new Laya.WeakObject();
            var node = this._GunScene.getChildByName("Effects");
            var numChildren = node.numChildren;
            for (var index = 0; index < numChildren; index++) {
                var nd = node.getChildAt(index);
                nd.active = false;
                this._awardffectPrefabDict.set(nd.name, nd);
            }
        }
    };
    /**
       * 获取捕猎场景爆金币特效资源预制件
       * @param effectResPath 捕猎场景特效资源
       */
    HuntSceneManager.prototype.GetAwardEffectPrefab = function (effectResPath) {
        var key = effectResPath;
        if (this._awardffectPrefabDict.has(key)) {
            return this._awardffectPrefabDict.get(key);
        }
        else
            CommonUtil_1.utils.CommonUtils.warn("not find effectRes model of path " + effectResPath);
        return null;
    };
    /**
     * 实例化捕猎场景中的特效对象
     * @param effectResPath 特效资源名称
     */
    HuntSceneManager.prototype.InstantiateEffect = function (effectResPath) {
        if (null == this._effectInstanceDict)
            this._effectInstanceDict = new Laya.WeakObject();
        var cloneIns;
        var cloneArray;
        if (this._effectInstanceDict.has(effectResPath)) {
            cloneArray = this._effectInstanceDict.get(effectResPath);
            var tarray = cloneArray.filter(function (value, index, array) { return value.active == false; });
            if (null != tarray && tarray.length > 0)
                return tarray[0];
        }
        else {
            cloneArray = new Array();
        }
        cloneIns = this.CreateEffect(effectResPath, cloneArray);
        return cloneIns;
    };
    HuntSceneManager.prototype.CreateEffect = function (effectResPath, cloneArray) {
        var cloneIns;
        var prefab = this.GetEffectPrefab(effectResPath);
        if (prefab == null) {
            prefab = this.GetAwardEffectPrefab(effectResPath);
        }
        if (null == prefab)
            return;
        cloneIns = Laya.Sprite3D.instantiate(prefab, prefab.parent);
        cloneArray.push(cloneIns);
        this._effectInstanceDict.set(effectResPath, cloneArray);
        return cloneIns;
    };
    //#endregion
    //#region 锁定捕鱼
    HuntSceneManager.prototype.GetFishId = function (posX, posY) {
        //从屏幕空间生成射线
        var ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));
        this._HuntSceneCamera.viewportPointToRay(new Laya.Vector2(posX, posY), ray);
        //拿到射线碰撞的物体
        var outHitInfo = new Laya.HitResult();
        this._HuntScene.physicsSimulation.rayCast(ray, outHitInfo);
        //如果碰撞到物体
        if (outHitInfo.succeeded) {
            var colLayer = outHitInfo.collider.owner;
            if (colLayer.layer == CommonConstant_1.default.Layer.Fish) {
                var fish = this.GetFishBase(outHitInfo.collider.owner);
                return fish ? fish._MFishInfo._mFishId : 0;
            }
        }
        return 0;
    };
    HuntSceneManager.prototype.GetFishPointById = function (id) {
        var script = FishController_1.default.Instance.FishObjDict[id];
        if (script != null) {
            var outPos = new Laya.Vector3();
            this._HuntSceneCamera.viewport.project(script._OwnerPos, this._HuntSceneCamera.projectionViewMatrix, outPos);
            return new Laya.Point(outPos.x, outPos.y);
        }
        return null;
    };
    /**
    * 预警显示
    * @param type
    */
    HuntSceneManager.prototype.warnShow = function (type) {
        CommonUtil_1.utils.CommonUtils.log("预警显示");
        if (!Laya.stage.isVisibility)
            return; //切换到后台，停止表现效果
        if (null == this._GunScene)
            return;
        if (type == 0) {
            GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.wave);
        }
        else {
            GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.warn);
        }
        if (this.warnCom == null) {
            this.type = type;
            GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiWarnPath.image, CommonConstant_1.default._fuiWarnPath.fui, this, this.onLoadWarning);
            Laya.Sprite3D.load(CommonConstant_1.default._warnPath_lh, Laya.Handler.create(this, function (s) {
                this.warnEffect = s;
                this._GunScene.addChild(s);
            }));
        }
        else { //如果当前有预警正在播放延迟播放
            if (this.isHaveWarnEffect) {
                this.warnArr.push(type);
            }
            else {
                try {
                    this.isHaveWarnEffect = true;
                    this.type = type;
                    this._GunScene.addChild(this.warnEffect);
                    fairygui.GRoot.inst.addChild(this.warnCom);
                    this.IconUrl();
                }
                catch (error) {
                    this.warnCom = null;
                    this.isHaveWarnEffect = false;
                    CommonUtil_1.utils.CommonUtils.log(error);
                }
            }
        }
    };
    /**
     * 加载预警资源
     */
    HuntSceneManager.prototype.onLoadWarning = function () {
        this.warnCom = GameFacade_1.default.Instance.ResourceMng.getMainCom(CommonConstant_1.default._fuiWarnPath.Package, "Warning", "warningPanel");
        this.warnTran = this.warnCom.getTransition("t0");
        this.fishIconGLoader = this.warnCom.getChild("fishIconLoader").asLoader;
        this.warnGLoader = this.warnCom.getChild("warnLoader").asLoader;
        this.IconUrl();
    };
    /**
     * 预警图标
     */
    HuntSceneManager.prototype.IconUrl = function () {
        fairygui.GRoot.inst.setChildIndex(this.warnCom, -1);
        this.fishIconGLoader.icon = fairygui.UIPackage.getItemURL("Warning", "fish" + this.type);
        this.warnGLoader.icon = fairygui.UIPackage.getItemURL("Warning", "warn" + this.type);
        this.warnTran.play(Laya.Handler.create(this, this.onCloseWarn));
    };
    /**
     * 关闭预警
     */
    HuntSceneManager.prototype.onCloseWarn = function () {
        fairygui.GRoot.inst.removeChild(this.warnCom);
        this._GunScene.removeChild(this.warnEffect);
        this.isHaveWarnEffect = false;
        if (this.warnArr.length > 0) {
            this.warnShow(this.warnArr.shift());
        }
    };
    /**
     * 退房剔除预警
     */
    HuntSceneManager.prototype.onExitWarn = function () {
        this.warnArr.length = 0;
        this.onCloseWarn();
    };
    return HuntSceneManager;
}(BaseManager_1.default));
exports.default = HuntSceneManager;
},{"../Enum/EnumData":1,"../GameFacade":3,"../constant/CommonConstant":7,"../constant/SoundNameConstant":11,"../controller/BatteryController":12,"../controller/FishController":13,"../game/Bullet/BulletBase":14,"../game/Bullet/HF3DBulletClasses":16,"../game/Fish/FishBase":18,"../game/Fish/HF3DFishClasses":21,"../utils/CommonUtil":90,"./BaseManager":59}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var OtherManager = /** @class */ (function (_super) {
    __extends(OtherManager, _super);
    function OtherManager() {
        var _this = _super.call(this) || this;
        /**活动是否结束 */
        _this.isActEnd = false;
        /**是否有成长基金面板 */
        _this.isHaveGrowthFundPane = false;
        /**是否有等级基金面板 */
        _this.isHaveLevelBonusPanel = false;
        /**是否有个人成长信息面板 */
        _this.isHavePersonInfoPanel = false;
        /**是否有帮助界面 */
        _this.isHaveHelpPanel = false;
        /**是否有排行榜界面 */
        _this.isHaveRankPanel = false;
        /**是否有设置面板 */
        _this.isHaveSettingPanel = false;
        /**是否有jp面板 */
        _this.isHaveJpPanel = false;
        return _this;
    }
    ;
    OtherManager.prototype.Init = function () {
    };
    return OtherManager;
}(BaseManager_1.default));
exports.default = OtherManager;
},{"./BaseManager":59}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var GameFacade_1 = require("../GameFacade");
var Handler = laya.utils.Handler;
var Loader = laya.net.Loader;
var CommonConstant_1 = require("../constant/CommonConstant");
/**
* name
*/
var ResourceManger = /** @class */ (function (_super) {
    __extends(ResourceManger, _super);
    function ResourceManger() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResourceManger.prototype.LoadAssets2D = function (resUrl, callBack) {
        Laya.loader.load(resUrl, Laya.Handler.create(this, callBack));
    };
    //释放2d资源     assetsUrl：图集资源路径
    ResourceManger.prototype.ReleaseAll2D = function (assetsUrl) {
        Laya.loader.clearRes(assetsUrl);
    };
    /**
     * 加载UI资源
     * @param image
     * @param fui
     * @param load
     */
    ResourceManger.prototype.loadUI = function (image, fui, call, load) {
        Laya.loader.load([
            { url: image, type: Loader.IMAGE },
            { url: fui, type: Loader.BUFFER },
        ], Handler.create(call, load));
    };
    /**
     * 加载主面板
     * @param pack
     * @param panel
     */
    ResourceManger.prototype.getMainCom = function (pack, packName, panel) {
        fairygui.UIPackage.addPackage(pack);
        var mainCom = null;
        // // console.log("packName");
        // // console.log(packName);
        // // console.log(panel);
        mainCom = fairygui.UIPackage.createObject(packName, panel).asCom;
        mainCom.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        GameFacade_1.default.Instance.SceneMng.AddFUI(mainCom);
        return mainCom;
    };
    /**
     * 移除UI包
     */
    ResourceManger.prototype.removeUIPackage = function (pack) {
        fairygui.UIPackage.removePackage(pack);
    };
    /**
     * 从对象池中获得对象 没有该对象 自动创建对象池
     * @param s
     * @param cla
     */
    ResourceManger.prototype.getPoolObject = function (s, cla) {
        Laya.Pool.getItemByClass(s, cla);
    };
    /**
     * 回收到对象池中
     * @param obj
     * @param s
     */
    ResourceManger.prototype.removePoolObject = function (obj, s) {
        Laya.stage.removeChild(obj);
        Laya.Pool.recover(s, obj);
    };
    /**
     * 预加载资源
     * @param resUrl 资源路劲
     * @param loadResCallback 加载完成的回调
     */
    ResourceManger.prototype.PreloadingRes = function (resUrl, resType, loadResCallback) {
        Laya.loader.load([{ url: resUrl, type: resType }], Laya.Handler.create(this, function (url) {
            var loadedRes = Laya.loader.getRes(url);
            loadResCallback(loadedRes);
        }, [resUrl]));
    };
    ResourceManger.prototype.LoadAssets3D = function (resUrl, loadResCallback, param) {
        if (param === void 0) { param = null; }
        Laya.Scene3D.load(resUrl, Laya.Handler.create(this, function (res) {
            loadResCallback(res, param);
        }));
    };
    //加载模型接口（预加载）
    ResourceManger.prototype.LoadSprite3D = function (resUrl, loadResCallback, param) {
        if (param === void 0) { param = null; }
        Laya.Sprite3D.load(resUrl, Laya.Handler.create(this, function (res) {
            loadResCallback(res, param);
        }));
    };
    //实例化缓存对象
    ResourceManger.prototype.CloneSprite3D = function (Sp3D, parent) {
        var s3D = Laya.Sprite3D.instantiate(Sp3D, parent);
        s3D.transform.localPosition = new Laya.Vector3(0, 0, 0);
        s3D.transform.localRotationEuler = new Laya.Vector3(0, 0, 0);
        s3D.transform.localScale = Laya.Vector3.ONE;
        return s3D;
    };
    /**
     * 释放场景所有资源     assetsUrl：场景的json文件路径
     * @param assetsUrl
     */
    ResourceManger.prototype.ReleaseAll3D = function (assetsUrl) {
        //加载盘释放的资源配置表
        Laya.loader.load([{ url: assetsUrl, type: Laya.Loader.JSON }], Laya.Handler.create(this, this.OnAssetsOK, [assetsUrl]));
    };
    ResourceManger.prototype.OnAssetsOK = function (assetsUrl) {
        //获取加载的数据（Json数组转化成数组）
        var arr = Laya.loader.getRes(assetsUrl);
        for (var i = arr.length - 1; i > -1; i--) {
            //根据资源路径获取资源（Resource为材质、贴图、网格等的基类）
            var resource = Laya.loader.getRes(arr[i].url);
            //资源释放
            if (resource) {
                resource.destroy();
            }
        }
    };
    /**
     * 加载新场景
     * @param newfuiArr
     * @param newLs
     * @param callBack
     */
    ResourceManger.prototype.LoadNewScene = function (newfuiArr, newLs, callBack) {
        var self = this;
        //GameFacade.Instance.SceneMng.ClearBeforUI(); //清理上个scene的ui
        //加载2d资源  Laya.loader.load
        //let loading:LoadingPanel = new LoadingPanel();
        var loading = GameFacade_1.default.Instance.SceneMng.Create(2 /* LoadingPanel */);
        loading.SetContent("加载2d资源 ");
        Laya.loader.load(newfuiArr, Laya.Handler.create(this, function () {
            Load3DRes();
        }), Laya.Handler.create(this, function (value) {
            if (null != loading) {
                loading.SetProgress(value);
            }
        }), null, 1, true, CommonConstant_1.default._groupName_fuiRes);
        //预加载3d资源  Laya.loader.create
        function Load3DRes() {
            loading.SetContent("加载3d资源 ");
            Laya.loader.create(newLs, Laya.Handler.create(this, function (sc) {
                if (newLs == CommonConstant_1.default._huntScenePath) {
                    Laya.loader.create(CommonConstant_1.default._gunScenePath, Laya.Handler.create(this, function () {
                        GameFacade_1.default.Instance.SceneMng.close(2 /* LoadingPanel */);
                        callBack(sc);
                    }), null);
                }
                else {
                    GameFacade_1.default.Instance.SceneMng.close(2 /* LoadingPanel */);
                    callBack(sc);
                }
            }), Laya.Handler.create(this, function (value) {
                if (null != loading) {
                    loading.SetProgress(value);
                }
            }), null);
        }
    };
    /**
     * 通过资源组名字释放资源
     * @param groupName 资源组名字
     */
    ResourceManger.prototype.ReleaseFuiResByGroupName = function (groupName) {
        Laya.loader.clearResByGroup(groupName);
    };
    /**
     * 加载贴图资源
     */
    ResourceManger.prototype.LoadTexture2D = function (path, callBack) {
        Laya.Texture2D.load("unityRes/Texture/" + path, Laya.Handler.create(this, function (t) {
            callBack(t);
        }));
    };
    return ResourceManger;
}(BaseManager_1.default));
exports.default = ResourceManger;
},{"../GameFacade":3,"../constant/CommonConstant":7,"./BaseManager":59}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoadingPanel_1 = require("../game/Panel/LoadingPanel");
var CommonConstant_1 = require("../constant/CommonConstant");
var GameFacade_1 = require("../GameFacade");
var ReconnecttingTip_1 = require("../game/Panel/ReconnecttingTip");
var HuntPanel_1 = require("../game/Panel/HuntPanel");
var HallPanel_1 = require("../game/Panel/HallPanel");
var AutoAttackPanel_1 = require("../game/Panel/AutoAttackPanel");
var PromptPanel_1 = require("../game/Panel/PromptPanel");
var WalletPanel_1 = require("../game/Panel/WalletPanel");
var LvRecordsPanel_1 = require("../game/Panel/LvRecordsPanel");
var SettingPanel_1 = require("../game/Panel/SettingPanel");
var HelpPanel_1 = require("../game/Panel/HelpPanel");
var RankingPanel_1 = require("../game/Panel/RankingPanel");
var GuidePanel_1 = require("../game/Panel/GuidePanel");
var JpPanel_1 = require("../game/Panel/JpPanel");
var PersonalInfoPanel_1 = require("../game/Panel/PersonalInfoPanel");
var FundTipPanel_1 = require("../game/Panel/FundTipPanel");
var GrowthFundPanel_1 = require("../game/Panel/GrowthFundPanel");
var LevelBonusPanel_1 = require("../game/Panel/LevelBonusPanel");
var UpgradePanel_1 = require("../game/Panel/UpgradePanel");
var WinnerPanel_1 = require("../game/Panel/WinnerPanel");
var MarqueePanel_1 = require("../game/Login/Marquee/MarqueePanel");
var LvDetailPanel_1 = require("../game/Panel/LvDetailPanel");
var SceneManager = /** @class */ (function () {
    function SceneManager() {
        /** 是否禁止免转按钮*/
        this.bProhibitWalletBtn = false; //有弹窗时禁止免转按钮
    }
    SceneManager.prototype.init = function () {
        this.PanelDic = new Laya.WeakObject();
        this.FUILayer = new Laya.Sprite();
        this.PanelLayer = new Laya.Sprite();
        Laya.stage.addChild(this.PanelLayer);
        Laya.stage.addChild(this.FUILayer);
        this.FUILayer.addChild(fairygui.GRoot.inst.displayObject);
    };
    SceneManager.prototype.AddFUI = function (fui) {
        fairygui.GRoot.inst.addChild(fui);
    };
    SceneManager.prototype.RemoveFUI = function (fui) {
        fui.removeFromParent();
        fui.dispose();
    };
    SceneManager.prototype.GetPanel = function (id, data) {
        if (data === void 0) { data = null; }
        var panel = null;
        if (this.PanelDic.has(id)) {
            panel = this.PanelDic.get(id);
        }
        else {
            switch (id) {
                case 0 /* HallPanel */:
                    panel = new HallPanel_1.default(id);
                    break;
                case 1 /* HuntPanel */:
                    panel = new HuntPanel_1.default(id);
                    break;
                case 2 /* LoadingPanel */:
                    panel = new LoadingPanel_1.default(id);
                    break;
                case 3 /* PromptPanel */:
                    panel = new PromptPanel_1.default(id);
                    break;
                case 4 /* Reconnectting */:
                    panel = new ReconnecttingTip_1.default(id);
                    break;
                case 5 /* SettingPanel */:
                    panel = new SettingPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 6 /* HelpPanel */:
                    panel = new HelpPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 7 /* RankingPanel */:
                    panel = new RankingPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 8 /* GuidePanel */:
                    panel = new GuidePanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 9 /* AutoAttackPanel */:
                    panel = new AutoAttackPanel_1.default(id);
                    break;
                case 10 /* WalletPanel */:
                    panel = new WalletPanel_1.default(id);
                    break;
                case 11 /* JpPanel */:
                    panel = new JpPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 12 /* PersonalInfoPanel */:
                    panel = new PersonalInfoPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 13 /* FundTipPanel */:
                    panel = new FundTipPanel_1.default(data);
                    panel.m_nameID = id;
                    break;
                case 14 /* GrowthFundPanel */:
                    panel = new GrowthFundPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 15 /* LevelBonusPanel */:
                    panel = new LevelBonusPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 16 /* LvRecordsPanel */:
                    panel = new LvRecordsPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 17 /* UpgradePanel */:
                    panel = new UpgradePanel_1.default(data);
                    panel.m_nameID = id;
                    break;
                case 18 /* WinnerPanel */:
                    panel = new WinnerPanel_1.default();
                    panel.m_nameID = id;
                    break;
                case 19 /* MarqueePanel */:
                    panel = new MarqueePanel_1.default(data);
                    panel.m_nameID = id;
                    break;
                case 20 /* LvDetailPanel */:
                    panel = new LvDetailPanel_1.default();
                    panel.m_nameID = id;
                    break;
                default:
                    break;
            }
            this.PanelDic.set(id, panel);
        }
        return panel;
    };
    /**
     * 1.这里panel的添加到PanelLayer层暂时是没有显示的，显示的ui是panel内部的fui
     * 2.new一个panel的同时，在panel内部new fui并添加在fui层
     * */
    SceneManager.prototype.Create = function (id, data) {
        if (data === void 0) { data = null; }
        var panel = this.GetPanel(id, data);
        this.PanelLayer.addChild(panel);
        if (!panel)
            return;
        return panel;
    };
    SceneManager.prototype.close = function (id, bRemove) {
        if (bRemove === void 0) { bRemove = true; }
        if (!this.PanelDic.has(id))
            return null;
        var panel = this.GetPanel(id);
        if (!panel)
            return;
        panel.Close(bRemove, id);
    };
    SceneManager.prototype.destroy = function (id) {
        if (!this.PanelDic.has(id))
            return null;
        this.bProhibitWalletBtn = false;
        var panel = this.GetPanel(id);
        this.PanelDic.del(id);
        if (!panel)
            return;
        panel.removeSelf();
        panel.destroy(true);
    };
    SceneManager.prototype.GetPanelById = function (id) {
        if (this.PanelDic.has(id)) {
            var panel = this.PanelDic.get(id);
            if (!panel)
                return;
            return panel;
        }
        return null;
    };
    /**
     * 清除掉所有的panel
     */
    SceneManager.prototype.clearAllPanel = function () {
        this.close(19 /* MarqueePanel */);
        this.close(13 /* FundTipPanel */);
        this.close(15 /* LevelBonusPanel */);
        this.close(14 /* GrowthFundPanel */);
        this.close(6 /* HelpPanel */);
        this.close(5 /* SettingPanel */);
        this.close(12 /* PersonalInfoPanel */);
        this.close(7 /* RankingPanel */);
        GameFacade_1.default.Instance.TipMng.close();
    };
    SceneManager.prototype.EnterHuntScene = function () {
        this.clearAllPanel();
        //清理上一个场景的ui、缓存
        var id = 0 /* HallPanel */;
        if (this.PanelDic.has(id)) {
            var panel = this.PanelDic.get(id);
            panel.ExitHallScene();
            this.close(id);
        }
        var hallFuiArr = [{ url: CommonConstant_1.default._fuiHunterUIPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiHunterUIPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._hunterBgPath1, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._hunterBgPath2, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiFreeTranWalletPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiFreeTranWalletPath.fui, type: Laya.Loader.BUFFER }
            // { url: CommonConstant._fuiHallPath.image, type: Laya.Loader.IMAGE },
            // { url: CommonConstant._fuiHallPath.fui, type: Laya.Loader.BUFFER },
            //  { url: CommonConstant._fuiCommonUIPath.image, type: Laya.Loader.IMAGE },
            //   { url: CommonConstant._fuiCommonUIPath.fui, type: Laya.Loader.BUFFER }
        ];
        GameFacade_1.default.Instance.ResourceMng.LoadNewScene(hallFuiArr, CommonConstant_1.default._huntScenePath, Loaded);
        function Loaded(scene) {
            var panel = GameFacade_1.default.Instance.SceneMng.Create(1 /* HuntPanel */);
            panel.EnterAfter(scene);
            // 加载完有黑屏
            // Laya.loader.create(CommonConstant._gunScenePath,
            //     Laya.Handler.create(this, function (sc: Laya.Scene3D): void {
            //         var panel = GameFacade.Instance.SceneMng.Create(EnumData.EnumPanelType.HuntPanel) as HuntPanel;
            //          panel.EnterAfter(scene);
            //     }),
            // null,);
        }
    };
    SceneManager.prototype.EnterHallScene = function (callBack) {
        this.clearAllPanel();
        var id = 1 /* HuntPanel */;
        if (this.PanelDic.has(id)) {
            var panel = this.PanelDic.get(id);
            panel.ExitHuntScene();
            this.close(id);
        }
        var hallFuiArr = [
            // { url: CommonConstant._fuiHallPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._fuiHallUIPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiHallUIPath.fui, type: Laya.Loader.BUFFER },
            { url: CommonConstant_1.default._fuiFreeTranWalletPath.image, type: Laya.Loader.IMAGE },
            { url: CommonConstant_1.default._fuiFreeTranWalletPath.fui, type: Laya.Loader.BUFFER }
        ];
        GameFacade_1.default.Instance.ResourceMng.LoadNewScene(hallFuiArr, CommonConstant_1.default._hallPath_ls, Loaded);
        function Loaded(scene) {
            var panel = GameFacade_1.default.Instance.SceneMng.Create(0 /* HallPanel */);
            panel.EnterAfter(scene);
            callBack();
        }
    };
    return SceneManager;
}());
exports.default = SceneManager;
},{"../GameFacade":3,"../constant/CommonConstant":7,"../game/Login/Marquee/MarqueePanel":33,"../game/Panel/AutoAttackPanel":34,"../game/Panel/FundTipPanel":36,"../game/Panel/GrowthFundPanel":37,"../game/Panel/GuidePanel":38,"../game/Panel/HallPanel":39,"../game/Panel/HelpPanel":40,"../game/Panel/HuntPanel":42,"../game/Panel/JpPanel":44,"../game/Panel/LevelBonusPanel":45,"../game/Panel/LoadingPanel":46,"../game/Panel/LvDetailPanel":47,"../game/Panel/LvRecordsPanel":48,"../game/Panel/PersonalInfoPanel":49,"../game/Panel/PromptPanel":50,"../game/Panel/RankingPanel":51,"../game/Panel/ReconnecttingTip":52,"../game/Panel/SettingPanel":54,"../game/Panel/UpgradePanel":55,"../game/Panel/WalletPanel":57,"../game/Panel/WinnerPanel":58}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("./../GameFacade");
var SocketServer_1 = require("./../net/SocketServer");
var GameEvent_1 = require("./../constant/GameEvent");
var ProtoBuf_1 = require("../net/ProtoBuf");
var NetLogin_1 = require("../net/ProtoHander/NetLogin");
var NetJpPool_1 = require("../net/ProtoHander/NetJpPool");
var BaseManager_1 = require("./BaseManager");
var NetWallet_1 = require("../net/ProtoHander/NetWallet");
var NetRanking_1 = require("../net/ProtoHander/NetRanking");
var NetRoom_1 = require("../net/ProtoHander/NetRoom");
var CommonUtil_1 = require("../utils/CommonUtil");
var NetWanners_1 = require("../net/ProtoHander/NetWanners");
var NetRoleInfo_1 = require("../net/ProtoHander/NetRoleInfo");
var NetBroadcast_1 = require("../net/ProtoHander/NetBroadcast");
var NetAct_1 = require("../net/ProtoHander/NetAct");
var NetAward_1 = require("../net/ProtoHander/NetAward");
var CommonConstant_1 = require("../constant/CommonConstant");
var BatteryController_1 = require("../controller/BatteryController");
var SocketManager = /** @class */ (function (_super) {
    __extends(SocketManager, _super);
    function SocketManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.clientHeartBeatCount = 0;
        _this.serverHeartBeatCount = 0;
        return _this;
    }
    SocketManager.prototype.Init = function () {
        this.socketDict = new Laya.WeakObject();
        this.cmdDict = new Laya.WeakObject();
        this.addHandleByCMD(NetCodeMsg.cmd.msg_base, BaseMsg.c_cmd.heartbeat_resp, BaseMsg.heartbeat_resp, Laya.Handler.create(this, this.receivesHeartBeatResp, null, false));
        //所有协议业务逻辑处理类的初始化在这里添加
        NetLogin_1.default.Instance.Init();
        NetRoom_1.default.Instance.Init();
        NetJpPool_1.default.Instance.Init();
        NetWallet_1.default.Instance.Init();
        NetRanking_1.default.Instance.Init();
        NetWanners_1.default.Instance.Init();
        NetRoleInfo_1.default.Instance.Init();
        NetBroadcast_1.default.Instance.Init();
        NetAct_1.default.Instance.Init();
        NetAward_1.default.Instance.Init();
        Laya.stage.on(laya.events.Event.BLUR, this, this.onStageBlur); //退到后台
        Laya.stage.on(laya.events.Event.FOCUS, this, this.onStageFocus); //返回到前台
    };
    /** 注册监听socket状态的事件（连接、断开）*/
    SocketManager.prototype.AddEvent = function () {
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.CONNECT, this, this.connectGame);
        GameFacade_1.default.Instance.EventMng.add(GameEvent_1.default.SOCKET_CLOSE, this, this.reConnect);
    };
    SocketManager.prototype.addHandleByCMD = function (cmd, ccmd, data, callBack) {
        this.addHandle(ProtoBuf_1.default.build(cmd, ccmd), data, callBack);
    };
    /**添加网络事件回调**/
    SocketManager.prototype.addHandle = function (cmd, data, callBack) {
        this.cmdDict.set(cmd, callBack);
        ProtoBuf_1.default.registerCMD(cmd, data);
    };
    /**网络事件分发**/
    SocketManager.prototype.dispatchMessage = function (cmd, data) {
        var handle = this.cmdDict.get(cmd);
        if (handle) {
            handle.runWith([cmd, data]);
            if (cmd != 0 && cmd != 1) {
                var msgCode = ProtoBuf_1.default.Resolve(cmd);
                //utils.CommonUtils.log(`协议 cmd=${msgCode[0]},ccmd=${msgCode[1]},` + " data=", data);
            }
        }
        else {
            {
                var msgCode = ProtoBuf_1.default.Resolve(cmd);
                //utils.CommonUtils.log(`协议 cmd=${msgCode[0]},ccmd=${msgCode[1]} 未处理`);
            }
        }
    };
    /**连接socket**/
    SocketManager.prototype.connenct = function (ip, port, type, token) {
        var socket = this.socketDict.get(type);
        if (socket == null) {
            socket = new SocketServer_1.default(type);
            this.socketDict.set(type, socket);
        }
        socket.connect(ip, port, token);
    };
    /**
     * 发送消息
     * @param cmd 消息协议大头（取二进制数据的前7位）
     * @param ccmd 消息协议小头（取二进制数据的前8到16位）
     * @param data 协议数据类
     * @param param 数据参数（暂未使用）
     * @param type socket类型
     */
    SocketManager.prototype.sendGameData = function (cmd, ccmd, data, param, type) {
        if (param === void 0) { param = null; }
        if (type === void 0) { type = 0 /* GAME */; }
        var socket = this.socketDict.get(type);
        if (socket) {
            var headCmd = ProtoBuf_1.default.build(cmd, ccmd);
            socket.send(headCmd, data);
        }
    };
    /**
     * 发送请求登陆
     */
    SocketManager.prototype.sendLoginReq = function (code, token) {
        var loginReq = new LoginMsg.login_req();
        NetLogin_1.default.Instance._LoginModeCode = code;
        loginReq.code = code;
        loginReq.token = token;
        loginReq.lang = GameFacade_1.default.Instance.GameMng.lang;
        this.sendGameData(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.login_req, loginReq);
    };
    /**
     * 发送心跳包
     * **/
    SocketManager.prototype.sendBeatHeartRes = function () {
        //    utils.CommonUtils.log(`clientHeartBeatCount = ${this.clientHeartBeatCount} , serverHeartBeatCount = ${this.serverHeartBeatCount}`);
        if (this.clientHeartBeatCount - this.serverHeartBeatCount > 20) //断线了
         {
            CommonUtil_1.utils.CommonUtils.log("---心跳超时---");
            this.closeSocket();
        }
        else {
            var msg = new BaseMsg.heartbeat_req();
            msg.id = this.clientHeartBeatCount;
            this.clientHeartBeatCount++;
            this.sendGameData(NetCodeMsg.cmd.msg_base, BaseMsg.c_cmd.heartbeat_req, msg);
        }
    };
    /**
     * 处理心跳包
     * @param clientData
     * @param msgID
     * @param pbData
     */
    SocketManager.prototype.receivesHeartBeatResp = function (cmd, pbData) {
        this.serverHeartBeatCount = pbData.id;
    };
    /**
     * 连接成功
     */
    SocketManager.prototype.connectGame = function () {
        CommonUtil_1.utils.CommonUtils.log("连接成功开始登陆 connectGame");
        /**开始执行心跳包 */
        Laya.timer.loop(1000, this, this.sendBeatHeartRes);
        switch (NetLogin_1.default.Instance._LoginModeCode) {
            //正常登录
            case LoginMsg.login_mode_code.normal: {
                if (GameFacade_1.default.Instance.GameMng.isLoacalDev) {
                    NetLogin_1.default.Instance.LoginAccountReq(GameFacade_1.default.Instance.GameMng.token, "zhanghao", GameFacade_1.default.Instance.GameMng.lang);
                }
                else {
                    CommonUtil_1.utils.CommonUtils.log("-- 正常登录请求");
                    this.sendLoginReq(LoginMsg.login_mode_code.normal, GameFacade_1.default.Instance.GameMng.token);
                }
                break;
            }
            //重连登录
            case LoginMsg.login_mode_code.reconnect: {
                GameFacade_1.default.Instance.SceneMng.close(4 /* Reconnectting */);
                if (GameFacade_1.default.Instance.GameMng.isLoacalDev) {
                    NetLogin_1.default.Instance.LoginAccountReq(GameFacade_1.default.Instance.GameMng.token, "zhanghao", GameFacade_1.default.Instance.GameMng.lang);
                }
                else {
                    CommonUtil_1.utils.CommonUtils.log("-- 重连登录请求");
                    this.sendLoginReq(LoginMsg.login_mode_code.reconnect, GameFacade_1.default.Instance.GameMng.token);
                }
                break;
            }
        }
    };
    /**
     * 重连
     */
    SocketManager.prototype.reConnect = function () {
        NetLogin_1.default.Instance._LoginModeCode = LoginMsg.login_mode_code.reconnect;
        var gameManager = GameFacade_1.default.Instance.GameMng;
        if (!this.connectCountOut(0 /* GAME */)) {
            //重连动画
            CommonUtil_1.utils.CommonUtils.log("自动重连 ReconnecttingTip");
            GameFacade_1.default.Instance.SceneMng.Create(4 /* Reconnectting */);
            this.connenct(gameManager.serverIp, gameManager.serverPort, 0 /* GAME */, gameManager.token);
        }
        else {
            CommonUtil_1.utils.CommonUtils.log("重连超时 reConnect time out!!!");
            this.closeSocket();
            //重连弹框
            GameFacade_1.default.Instance.SceneMng.close(4 /* Reconnectting */);
            var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
            promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.Reconnect);
            BatteryController_1.default.Instance.StopLockAttack();
            BatteryController_1.default.Instance.StopAutoAttack();
        }
    };
    /**重连接超时**/
    SocketManager.prototype.connectCountOut = function (type) {
        var socket = this.socketDict.get(type);
        return socket.connectCountOut();
    };
    /**关闭socketl连接**/
    SocketManager.prototype.closeSocket = function (type) {
        if (type === void 0) { type = 0 /* GAME */; }
        var socket = this.socketDict.get(type);
        if (socket) {
            socket.close();
        }
        Laya.timer.clear(this, this.sendBeatHeartRes); //停止心跳
    };
    /**
     * 刷新游戏
     */
    SocketManager.prototype.refreshGame = function () {
        if (CommonUtil_1.utils.CommonUtils.isApp()) {
            window.close(); //关闭游戏
        }
        else {
            history.go(0); //刷新网页
        }
    };
    /**
     * 游戏切到后台
    */
    SocketManager.prototype.onStageBlur = function () {
        CommonUtil_1.utils.CommonUtils.log("---切到后台---");
    };
    /**
     * 游戏切回前台
    */
    SocketManager.prototype.onStageFocus = function () {
        CommonUtil_1.utils.CommonUtils.log("---切回前台---");
        var socket = this.socketDict.get(0 /* GAME */);
        if (socket && socket != null) {
            if (!socket.isConnected() && socket.closeReason == "") {
                socket.curReconnetCount = 0;
                this.reConnect();
            }
        }
    };
    return SocketManager;
}(BaseManager_1.default));
exports.default = SocketManager;
},{"../constant/CommonConstant":7,"../controller/BatteryController":12,"../net/ProtoBuf":74,"../net/ProtoHander/NetAct":76,"../net/ProtoHander/NetAward":77,"../net/ProtoHander/NetBroadcast":78,"../net/ProtoHander/NetJpPool":79,"../net/ProtoHander/NetLogin":80,"../net/ProtoHander/NetRanking":81,"../net/ProtoHander/NetRoleInfo":83,"../net/ProtoHander/NetRoom":84,"../net/ProtoHander/NetWallet":85,"../net/ProtoHander/NetWanners":86,"../utils/CommonUtil":90,"./../GameFacade":3,"./../constant/GameEvent":9,"./../net/SocketServer":87,"./BaseManager":59}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundManager = Laya.SoundManager;
var Handler = Laya.Handler;
var SoundNameConstant_1 = require("../constant/SoundNameConstant");
var CommonUtil_1 = require("../utils/CommonUtil");
var SoundsManager = /** @class */ (function () {
    function SoundsManager() {
        this._musicChannel = null;
        this._soundChannelList = {};
        this._soundVolume = 100;
        this._musicVolume = 100;
        this._isBlur = false;
        this._musicBgName = null;
        var self = this;
        var url = "configfile/soundConfig.json";
        Laya.loader.load(url, Handler.create(this, function () {
            self._soundConfig = Laya.loader.getRes(url);
        }));
        // SoundManager.autoStopMusic = true;
        // //Laya.Browser.onIPhone||
        // if (Laya.Browser.onIOS || Laya.Browser.onIPhone || Laya.Browser.onIPad) {
        //     var musicButton: Laya.Sprite = new Laya.Sprite();
        //     musicButton.x = 0;
        //     musicButton.y = 0;
        //     musicButton.size(GameConfig.width, GameConfig.height);
        //     musicButton.alpha = 0;
        //     Laya.stage.addChild(musicButton);
        //     musicButton.on(Laya.Event.CLICK, this, () => { this.onClickIOS(musicButton) });
        // }
        Laya.stage.on("blur", this, this._stageOnBlur);
        Laya.stage.on("focus", this, this._stageOnFocus);
        Laya.stage.on("visibilitychange", this, this._visibilityChange);
    }
    /**
     * 在3D场景中 ios 适配声音 用于自带的背景声音
     * @param obj
     */
    SoundsManager.prototype.onClickIOS = function (obj) {
        CommonUtil_1.utils.CommonUtils.log("ios");
        Laya.stage.removeChild(obj);
        obj.onDisable();
        this.playMusic(SoundNameConstant_1.default.soundHeadArr.bgSoundHead + SoundNameConstant_1.default.soundBgArr.hallBgMusic);
    };
    /**
     * 声音配置
     */
    SoundsManager.prototype.getSoundCofig = function () {
        return this._soundConfig;
    };
    /**
     *
     * @param v 设置背景音乐
     */
    SoundsManager.prototype.setMusicVolume = function (v) {
        this._musicVolume = v;
        this._musicChannel.volume = this._musicVolume / 100;
    };
    /**
     *
     * @param v 设置音效
     */
    SoundsManager.prototype.setSoundVolume = function (v) {
        this._soundVolume = v;
        this.updateSoundVolume(v / 100);
    };
    /**
     * 获得背景音乐的声音大小
     */
    SoundsManager.prototype.getMusicVolume = function () {
        return this._musicVolume;
    };
    /**
     * 获得音效的声音大小
     */
    SoundsManager.prototype.getSoundVolume = function () {
        return this._soundVolume;
    };
    /**
     *
     * @param str 背景音乐名称
     */
    SoundsManager.prototype.playMusic = function (str) {
        if (this._musicChannel)
            this._musicChannel.stop();
        this._musicBgName = str;
        this._musicChannel = SoundManager.playSound("sounds/SceneSound/" + str + ".mp3", 0);
        if (this._musicChannel == null)
            return;
        this._musicChannel.volume = this._musicVolume / 100;
    };
    /**
     *
     * @param roomType 房间类型
     */
    SoundsManager.prototype.playMusicRoom = function (roomType) {
        switch (roomType) {
            case 1:
                this.playMusic(SoundNameConstant_1.default.soundBgArr.playBgMusic1);
                break;
            case 2:
                this.playMusic(SoundNameConstant_1.default.soundBgArr.playBgMusic2);
                break;
            case 3:
                this.playMusic(SoundNameConstant_1.default.soundBgArr.playBgMusic3);
                break;
            default:
                break;
        }
    };
    /**
     *
     * @param head 是按钮还是鱼
     * @param str 对应的音效
     */
    SoundsManager.prototype.playSound = function (head, str) {
        var _this = this;
        var soundName = head + str;
        if (this._isBlur || this._soundVolume == 0)
            return;
        var channel;
        channel = SoundManager.playSound(soundName + ".wav", 1, new Handler(this, function () { _this.onComplete(head + str); }));
        if (channel)
            channel.volume = this._soundVolume / 100;
        else
            return;
        if (!this._soundChannelList[soundName])
            this._soundChannelList[soundName] = new Array();
        this._soundChannelList[soundName].push(channel);
    };
    /**
     *
     * @param type 鱼对应的声音列表
     */
    SoundsManager.prototype.fishTypeToSoundNum = function (type) {
        //if (type == 32) { type = 27 };
        //if (type > 26 && type < 32) { type = type % 26 };
        return this._soundConfig[type - 1]["soundid"];
    };
    /**
     *
     * @param str 播放完成的那个音效
     */
    SoundsManager.prototype.onComplete = function (str) {
        this.stopSoundName(str);
    };
    /**
     * 停止音乐
     */
    SoundsManager.prototype.stopMusic = function () {
        if (this._musicChannel) {
            this._musicChannel.stop();
            this._musicChannel.offAll();
            this._musicChannel = null;
        }
    };
    /**
     * 停止音效
     */
    SoundsManager.prototype.stopSound = function () {
        for (var key in this._soundChannelList)
            this.stopSoundName(key);
    };
    /**
      * 更新声音音量
      * @param v
      */
    SoundsManager.prototype.updateSoundVolume = function (v) {
        for (var key in this._soundChannelList) {
            if (this._soundChannelList.hasOwnProperty(key)) {
                var array = this._soundChannelList[key];
                for (var i = 0; i < array.length; i++) {
                    if (array[i])
                        array[i].volume = v;
                }
            }
        }
    };
    /**
     * 根据声音名字关闭声音
     * @param soundName
     */
    SoundsManager.prototype.stopSoundName = function (soundName) {
        if (!soundName)
            return;
        if (this._soundChannelList[soundName]) {
            var array = this._soundChannelList[soundName];
            for (var i = 0; i < array.length; i++) {
                if (array[i]) {
                    array[i].stop();
                    array[i].offAll();
                    array[i] = null;
                }
            }
            this._soundChannelList[soundName].length = 0;
        }
        Laya.SoundManager.destroySound(soundName);
    };
    /**
     * 停止所有的声音
     */
    SoundsManager.prototype.stopAll = function () {
        SoundManager.stopAll();
    };
    /**
     * 暂停背景音乐
     */
    SoundsManager.prototype.pauseMusic = function () {
        this._musicChannel && this._musicChannel.pause();
    };
    /**
     * 继续播放背景音乐
     */
    SoundsManager.prototype.resumeMusic = function () {
        if (this._musicChannel)
            this._musicChannel.resume();
        else
            this.playMusic(this._musicBgName);
        // this._musicChannel && this._musicChannel.resume();
    };
    /**
     * 前后台切换
     */
    SoundsManager.prototype._visibilityChange = function () {
        if (Laya.stage.isVisibility) {
            this._stageOnFocus();
        }
        else {
            this._stageOnBlur();
        }
    };
    /**
     * 失去焦点
     */
    SoundsManager.prototype._stageOnBlur = function () {
        this._isBlur = true;
        this.pauseMusic();
        this.stopSound();
    };
    /**
     * 获取焦点
     */
    SoundsManager.prototype._stageOnFocus = function () {
        this._isBlur = false;
        this.resumeMusic();
    };
    return SoundsManager;
}());
exports.SoundsManager = SoundsManager;
},{"../constant/SoundNameConstant":11,"../utils/CommonUtil":90}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseManager_1 = require("./BaseManager");
var GameFacade_1 = require("../GameFacade");
var CommonConstant_1 = require("../constant/CommonConstant");
var CommonUtil_1 = require("../utils/CommonUtil");
var SoundNameConstant_1 = require("../constant/SoundNameConstant");
var TipType;
(function (TipType) {
    TipType[TipType["QUITGAME"] = 0] = "QUITGAME";
    TipType[TipType["REFRESHGAME"] = 1] = "REFRESHGAME";
    TipType[TipType["YESNOCHOICE"] = 2] = "YESNOCHOICE";
    TipType[TipType["ONECLOSE"] = 3] = "ONECLOSE";
    TipType[TipType["STOPAUTOHUNTFISH"] = 4] = "STOPAUTOHUNTFISH";
    TipType[TipType["FLOATTIP"] = 5] = "FLOATTIP";
    TipType[TipType["FLOATTIPDELAY"] = 6] = "FLOATTIPDELAY";
})(TipType = exports.TipType || (exports.TipType = {}));
var TipManager = /** @class */ (function (_super) {
    __extends(TipManager, _super);
    function TipManager() {
        var _this = _super.call(this) || this;
        _this.isHaveText = false;
        _this.texArray = new Array();
        _this.m_tipFloat = null;
        _this._tran = null;
        return _this;
    }
    ;
    TipManager.prototype.Init = function () {
        GameFacade_1.default.Instance.ResourceMng.loadUI(CommonConstant_1.default._fuiTipPath.image, CommonConstant_1.default._fuiTipPath.fui, this, this.onLoadPublic);
    };
    TipManager.prototype.onLoadPublic = function () {
        fairygui.UIPackage.addPackage(CommonConstant_1.default._fuiTipPath.Package);
    };
    /**
     * 创建提示框
     * @param str 提示内容
     * @param type 提示类型
     */
    TipManager.prototype.createTip = function (str, type, call) {
        if (call === void 0) { call = null; }
        if (this.currTip != null) {
            this.onClose();
        }
        switch (type) {
            case TipType.YESNOCHOICE:
                this.currTip = this.yesAndNoCreateTip(str, call);
                break;
            case TipType.QUITGAME:
                this.currTip = this.onlyYesCreateTip(str);
                this.currTip.getChild("yes").onClick(this, this.quitGame);
                break;
            case TipType.REFRESHGAME:
                this.currTip = this.onlyYesCreateTip(str);
                this.currTip.getChild("yes").onClick(this, this.onClose);
                break;
            case TipType.ONECLOSE:
                this.currTip = this.onlyYesCreateTip(str);
                this.currTip.getChild("yes").onClick(this, this.onClose);
                break;
            case TipType.STOPAUTOHUNTFISH:
                this.currTip = this.onlyYesCreateTip(str);
                this.currTip.getChild("yes").onClick(this, this.onClose);
                break;
            case TipType.FLOATTIP:
                this.floatTip(str);
                break;
            case TipType.FLOATTIPDELAY:
                this.floatTipDelay(str);
                break;
            default:
                break;
        }
    };
    /**
     * 只有一个yes
     */
    TipManager.prototype.onlyYesCreateTip = function (str) {
        var tip1 = fairygui.UIPackage.createObject("Public", "tip1").asCom;
        tip1.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        GameFacade_1.default.Instance.SceneMng.AddFUI(tip1);
        var c = tip1.getController("c1");
        c.setSelectedIndex(1);
        tip1.getChild("text").text = str;
        tip1.getChild("yes").onClick(this, this.onClose);
        return tip1;
    };
    /**
     * 有yes和no
     */
    TipManager.prototype.yesAndNoCreateTip = function (str, call) {
        var _this = this;
        var tip1 = fairygui.UIPackage.createObject("Public", "tip1").asCom;
        tip1.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        GameFacade_1.default.Instance.SceneMng.AddFUI(tip1);
        tip1.getChild("text").text = str;
        tip1.getChild("yes").onClick(this, function () { _this.callBack(call); });
        tip1.getChild("no").onClick(this, this.onClose);
        return tip1;
    };
    /**
     * 反馈
     */
    TipManager.prototype.callBack = function (call) {
        this.onClose();
        return call(true);
    };
    /**
     * 飘字延迟型
     */
    TipManager.prototype.floatTipDelay = function (str) {
        var _this = this;
        if (this.isHaveText) {
            this.texArray.push(str);
        }
        else {
            this.isHaveText = true;
            if (this.m_tipFloat != null) {
                GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.m_tipFloat);
            }
            this.m_tipFloat = fairygui.UIPackage.createObject("Public", "tipFloat").asCom;
            this.m_tipFloat.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
            GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_tipFloat);
            this.m_tipFloat.getChild("text").text = str;
            this._tran = this.m_tipFloat.getTransition("t0");
            this._tran.play(new Laya.Handler(this, function () {
                _this.isHaveText = false;
                if (_this.texArray.length > 0) {
                    _this.floatTip(_this.texArray.shift());
                }
                else {
                    GameFacade_1.default.Instance.SceneMng.RemoveFUI(_this.m_tipFloat);
                }
            }));
        }
    };
    /**
     * 飘字不延迟
     */
    TipManager.prototype.floatTip = function (str) {
        var _this = this;
        if (this.m_tipFloat != null) {
            GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.m_tipFloat);
        }
        this.m_tipFloat = fairygui.UIPackage.createObject("Public", "tipFloat").asCom;
        GameFacade_1.default.Instance.SceneMng.AddFUI(this.m_tipFloat);
        this.m_tipFloat.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        this.m_tipFloat.getChild("text").text = str;
        this._tran = this.m_tipFloat.getTransition("t0");
        this._tran.play(new Laya.Handler(this, function () {
            GameFacade_1.default.Instance.SceneMng.RemoveFUI(_this.m_tipFloat);
        }));
    };
    /**
     * 退出游戏 返回大厅
     */
    TipManager.prototype.quitGame = function () {
        this.onClose();
        window.close();
    };
    /**
     * 刷新游戏
     */
    TipManager.prototype.refeshGame = function () {
        window.open(CommonUtil_1.utils.CommonUtils.getLocalHref());
        this.onClose();
    };
    /**
     * 关闭弹框
     */
    TipManager.prototype.onClose = function () {
        GameFacade_1.default.Instance.SoundMng.playSound(SoundNameConstant_1.default.soundHeadArr.keySoundHead, SoundNameConstant_1.default.soundKeyArr.onClose);
        if (this.currTip != null) {
            GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.currTip);
        }
    };
    /**
     * 外部因素关闭
     */
    TipManager.prototype.close = function () {
        if (this.currTip != null) {
            GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.currTip);
        }
        if (this.m_tipFloat != null) {
            this._tran.stop();
            GameFacade_1.default.Instance.SceneMng.RemoveFUI(this.m_tipFloat);
        }
    };
    return TipManager;
}(BaseManager_1.default));
exports.default = TipManager;
},{"../GameFacade":3,"../constant/CommonConstant":7,"../constant/SoundNameConstant":11,"../utils/CommonUtil":90,"./BaseManager":59}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//免转钱包管理类
var GameFacade_1 = require("./../GameFacade");
var CommonUtil_1 = require("./../utils/CommonUtil");
var BaseManager_1 = require("./BaseManager");
var NetLogin_1 = require("../net/ProtoHander/NetLogin");
var NetRoom_1 = require("../net/ProtoHander/NetRoom");
var NetWallet_1 = require("../net/ProtoHander/NetWallet");
var LanguageConstant_1 = require("../constant/LanguageConstant");
var TipManager_1 = require("./TipManager");
var BatteryController_1 = require("../controller/BatteryController");
var EventNetResponse_1 = require("../net/ProtoHander/EventNetResponse");
var WalletManager = /** @class */ (function (_super) {
    __extends(WalletManager, _super);
    function WalletManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //private walletSliValue: number;//滑动条滑动的值
        _this.isHavePanel = false;
        /** 是否打开面板请求加钱*/
        _this.bReqWalletPanel = false;
        /**fg钱包的显示余额 最新 */
        _this.fgWalletValueByPanel = null;
        /**fg钱包在发射子弹后的余额 不记录打死鱼的钱*/
        _this.fgWalletValueAfterShoot = 0;
        _this.addToValue = null;
        _this.walletPanel = null;
        return _this;
    }
    WalletManager.prototype.Init = function () {
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.MainWalletResp, this, this.mainWalletResp);
        GameFacade_1.default.Instance.EventMng.add(EventNetResponse_1.default.WalletResp, this, this.walletResp);
    };
    WalletManager.prototype.UnInit = function () {
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.WalletResp, this, this.walletResp);
        GameFacade_1.default.Instance.EventMng.remove(EventNetResponse_1.default.MainWalletResp, this, this.mainWalletResp);
    };
    /**
     * 加钱请求返回
     * @param data
     */
    WalletManager.prototype.walletResp = function (data) {
        CommonUtil_1.utils.CommonUtils.log("加钱  walletResp pbData = ", data);
        var code = WalletMsg.msg_wallet_code;
        switch (data.code) {
            case code.SUCCESS:
                var addValue = this.addToValue - this.fgWalletValueAfterShoot;
                if (this.bReqWalletPanel) {
                    this.bReqWalletPanel = false;
                    addValue = this.addToValue - this.fgWalletValueByPanel;
                }
                if (addValue == 0)
                    return;
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.autoAddWallet.replace("{0}", (CommonUtil_1.utils.CommonUtils.numberFixed(addValue)).toFixed(2)), TipManager_1.TipType.FLOATTIP);
                BatteryController_1.default.Instance.StopAutoAttack();
                BatteryController_1.default.Instance.StopLockAttack();
                break;
            case code.FAIL:
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.reqFail, TipManager_1.TipType.FLOATTIP);
                break;
            case code.FREQUENT:
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.reqTooFast, TipManager_1.TipType.FLOATTIP);
                break;
            case code.FREQUENTY:
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.conServer, TipManager_1.TipType.FLOATTIP);
                break;
            default:
                break;
        }
    };
    WalletManager.prototype.mainWalletResp = function (data) {
        // this.walletPanel.certerWalletValue = Number(data.chips);
        // this.walletPanel.isAutoServer = GameFacade.Instance.WalletMng.changeNumToBool(data.auto_wallet);
        // this.walletPanel.initData();
        CommonUtil_1.utils.CommonUtils.log("钱包弹框请求返回 mainWalletResp pbData = ", data);
        var enumCode = WalletMsg.msg_wallet_code;
        switch (data.code) {
            case enumCode.SUCCESS:
                {
                    //manager.SceneManager.instance.DialogLayer.addChild(new game.MoneySupplyDialog(data.chips));
                    //GameFacade.Instance.WalletMng.ShowWallet(data);
                    this.walletPanel = GameFacade_1.default.Instance.SceneMng.Create(10 /* WalletPanel */);
                    this.walletPanel.initData(data);
                    this.bReqWalletPanel = true;
                    break;
                }
            case enumCode.FAIL:
                {
                    GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.reqFail, TipManager_1.TipType.FLOATTIP);
                    break;
                }
            case enumCode.FREQUENTY:
                {
                    GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.conServer, TipManager_1.TipType.FLOATTIP);
                    break;
                }
            case enumCode.FREQUENT:
                {
                    GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.reqTooFast, TipManager_1.TipType.FLOATTIP);
                    break;
                }
            // case enumCode.NOT_ENOUGH:{
            // 	manager.SceneManager.instance.DialogLayer.addChild(new game.TipDialog(proxys.LanguageProxy.instance.getTextById(20007)/*中心钱包余额不足*/, 300));
            // 	break;
            // }
        }
    };
    /** 同步FG钱包*/
    WalletManager.prototype.setFgWalletValue = function (chips) {
        if (null != this.walletPanel) {
            this.walletPanel.syncWelletFG(chips);
        }
    };
    WalletManager.prototype.mainWalletReq = function () {
        if (NetLogin_1.default.Instance.isOfficial) {
            NetWallet_1.default.Instance.mainWalletReq();
            return true;
        }
        return false;
    };
    WalletManager.prototype.CloseWalltPanel = function () {
        if (this.walletPanel != null) {
            this.walletPanel.OnClose();
            this.walletPanel = null;
        }
    };
    // 余额不足
    WalletManager.prototype.IsfgWalletEnough = function () {
        if (!BatteryController_1.default.Instance)
            return;
        var selfCannon = BatteryController_1.default.Instance.selfCannon;
        if (null == selfCannon || null == selfCannon.Data)
            return false;
        var jettonShow = CommonUtil_1.utils.CommonUtils.numberFixed(selfCannon.Data.jetton_show);
        var bulletMulti = CommonUtil_1.utils.CommonUtils.numberFixed(selfCannon.Data.bullet_multi * NetRoom_1.default.Instance._curRoomInfo.ante);
        if (jettonShow < bulletMulti) {
            if (NetLogin_1.default.Instance.isOfficial) {
                // 自动加钱 todo
                // 如果 addToValue > fg余额服务端会自动推送加钱, 否则要给提示
                if (this.isAutoLocal) {
                    //if (utils.CommonUtils.numberFixed(this.addToValue) < bulletMulti) {
                    //fg>=子弹额度，此时点击炮台的＋按钮，这是无法自动加钱，只能给提示
                    GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.clipNoMoney, TipManager_1.TipType.FLOATTIP);
                    //}
                }
                // 弹框加钱
                else {
                    //射出的子弹还在移动则给提示，不弹框
                    if (BatteryController_1.default.Instance.ShootedBulletAmount > 0) {
                        GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.clipNoMoney, TipManager_1.TipType.FLOATTIP);
                    }
                    else {
                        GameFacade_1.default.Instance.WalletMng.mainWalletReq();
                    }
                }
            }
            else {
                GameFacade_1.default.Instance.TipMng.createTip(LanguageConstant_1.default.freeTranWalletCh.clipNoMoney, TipManager_1.TipType.FLOATTIP);
            }
            return false;
        }
        return true;
    };
    return WalletManager;
}(BaseManager_1.default));
exports.default = WalletManager;
},{"../constant/LanguageConstant":10,"../controller/BatteryController":12,"../net/ProtoHander/EventNetResponse":75,"../net/ProtoHander/NetLogin":80,"../net/ProtoHander/NetRoom":84,"../net/ProtoHander/NetWallet":85,"./../GameFacade":3,"./../utils/CommonUtil":90,"./BaseManager":59,"./TipManager":69}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("./../GameFacade");
/**
 * NetReader
 */
var NetReader = /** @class */ (function () {
    function NetReader() {
        this._packages = new Array();
    }
    NetReader.prototype.setPassword = function () {
    };
    NetReader.prototype.decode = function () {
    };
    NetReader.prototype.addPackage = function (pkg) {
        this._packages.unshift(pkg);
    };
    NetReader.prototype.hasNext = function () {
        return this._packages.length > 0;
    };
    NetReader.prototype.handleNext = function () {
        var pkg = this._packages.pop();
        // 由NetWorkManager处理
    };
    NetReader.prototype.notify = function () {
        var pkgIn;
        while (this._packages.length > 0) {
            pkgIn = this._packages.pop();
            GameFacade_1.default.Instance.SocketMng.dispatchMessage(pkgIn.code, pkgIn.data);
        }
    };
    return NetReader;
}());
exports.default = NetReader;
},{"./../GameFacade":3}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProtoBuf_1 = require("./ProtoBuf");
/**
 * PackageIn
 */
var PackageIn = /** @class */ (function (_super) {
    __extends(PackageIn, _super);
    function PackageIn(source, start) {
        if (start === void 0) { start = 0; }
        var _this = _super.call(this) || this;
        _this._validLength = 0;
        _this._code = -1;
        _this.endian = Laya.Socket.BIG_ENDIAN;
        // 提取协议号
        _this.writeArrayBuffer(source, start, 2);
        _this.pos = 0;
        _this._ReadHeader();
        _this.clear();
        _this.writeArrayBuffer(source, 2);
        return _this;
    }
    Object.defineProperty(PackageIn.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (v) {
            this._data = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PackageIn.prototype, "start", {
        get: function () {
            return this._start;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PackageIn.prototype, "validLength", {
        // 实际有效长度
        get: function () {
            return this._validLength;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PackageIn.prototype, "code", {
        get: function () {
            return this._code;
        },
        enumerable: true,
        configurable: true
    });
    PackageIn.prototype._ReadHeader = function () {
        this._code = this.getUint16();
    };
    PackageIn.prototype.unpack = function () {
        var buffer = this.buffer;
        this.data = this.decode(ProtoBuf_1.default.decode(this.code), new Uint8Array(buffer));
    };
    /**
    * 解码
    */
    PackageIn.prototype.decode = function (cls, data) {
        // console.log(` cls:${cls}`);
        if (!cls)
            return null;
        return cls.decode(data);
    };
    return PackageIn;
}(Laya.Byte));
exports.default = PackageIn;
},{"./ProtoBuf":74}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
* PackageOut
*/
var PackageOut = /** @class */ (function (_super) {
    __extends(PackageOut, _super);
    function PackageOut() {
        var _this = _super.call(this) || this;
        _this.endian = Laya.Socket.BIG_ENDIAN;
        return _this;
    }
    Object.defineProperty(PackageOut.prototype, "code", {
        get: function () {
            return this._code;
        },
        enumerable: true,
        configurable: true
    });
    /** 数据包初始化 */
    PackageOut.prototype.init = function (code) {
        // 清除数据
        this.clear();
        this.writeUint16(code);
        this._code = code;
    };
    PackageOut.prototype.pack = function (data) {
        this.writeArrayBuffer(data["__proto__"].constructor.encode(data).finish());
    };
    PackageOut._packageIndex = 0;
    return PackageOut;
}(laya.utils.Byte));
exports.default = PackageOut;
},{}],74:[function(require,module,exports){
"use strict";
//protobuf数据包的前16字节，大头占前7个字节 小头占后9个字节
Object.defineProperty(exports, "__esModule", { value: true });
var ProtoBuf = /** @class */ (function () {
    function ProtoBuf() {
    }
    /** 根据大头和小头组合成文件的头*/
    ProtoBuf.build = function (cmd, ccmd) {
        var headCmd = cmd << 9;
        headCmd += ccmd;
        return headCmd;
    };
    /** 根据数据头（16位字节数据），拆解出大头（前7位字节）与小头（后9位字节）*/
    ProtoBuf.Resolve = function (headCmd) {
        var cmd = headCmd >> 9;
        var ccmd = headCmd << 23;
        var ccmd = ccmd >> 23;
        return [cmd, ccmd];
    };
    /**
     * 根据数据头，得到数据体对应的类
     * @param headCmd 数据头
     */
    ProtoBuf.decode = function (headCmd) {
        // var value = this.ProtoDic.get(headCmd);
        // var cmd = headCmd >> 9;
        // var ccmd = headCmd << 23;
        // var ccmd = ccmd >> 23;
        return this.ProtoDic.get(headCmd);
    };
    ProtoBuf.registerCMD = function (cmd, data) {
        if (null == this.ProtoDic)
            this.ProtoDic = new Laya.WeakObject();
        this.ProtoDic.set(cmd, data);
    };
    return ProtoBuf;
}());
exports.default = ProtoBuf;
},{}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 服务器数据处理之后的事件分发
 */
var EventNetResponse = /** @class */ (function () {
    function EventNetResponse() {
    }
    /** 进入房间*/
    EventNetResponse.EnterRoomResp = "EnterRoomResp";
    /** 获得捕猎人的信息，房间准备好了*/
    EventNetResponse.ReadyRoomResp = "ReadyRoomResp";
    /** 同步房间内所有的玩家信息*/
    EventNetResponse.SynRoleResp = "SynRoleResp";
    /** 同步出鱼信息*/
    EventNetResponse.SynFishResp = "SynFishResp";
    /** 改变炮台倍率 消息返回*/
    EventNetResponse.ChangeBatteryResp = "ChangeBatteryResp";
    /** 子弹的射击 消息返回*/
    EventNetResponse.ShootBulletResp = "ShootBulletResp";
    /** 子弹的射击 消息返回*/
    EventNetResponse.ShootErrorResp = "ShootErrorResp";
    /** 有玩家离开房间 消息返回*/
    EventNetResponse.LeaveRoomResp = "LeaveRoomResp";
    /** 刷新金币 消息返回*/
    EventNetResponse.UpdateChipResp = "UpdateChipResp";
    /** 同步玩家自己金币 消息返回*/
    EventNetResponse.SyncChipsResp = "SyncChipsResp";
    /**用于免转同步金币 */
    EventNetResponse.MqSyncChipsResp = "MqSyncChipsResp";
    /** 子弹无效 消息返回*/
    EventNetResponse.BulletUselessResp = "BulletUselessResp";
    /** 子弹无效 消息返回*/
    EventNetResponse.BulletPassResp = "BulletPassResp";
    /** 子弹无效 消息返回*/
    EventNetResponse.SyncJpJettonResp = "SyncJpJettonResp";
    /** 鱼死亡 消息返回*/
    EventNetResponse.FishDeadResp = "FishDeadResp";
    /** 从世界Boss身上掉下金币 消息返回*/
    EventNetResponse.OnePieceResp = "OnePieceResp";
    /**加钱信息反馈 */
    EventNetResponse.WalletResp = "WalletResp";
    /**钱包弹框信息反馈 */
    EventNetResponse.MainWalletResp = "MainWalletResp";
    return EventNetResponse;
}());
exports.default = EventNetResponse;
},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var TipManager_1 = require("../../manager/TipManager");
var NetAct = /** @class */ (function () {
    function NetAct() {
    }
    Object.defineProperty(NetAct, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetAct();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetAct.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_act, ActMsg.c_cmd.act_list_resp, ActMsg.act_list_resp, Laya.Handler.create(this, this.actListResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_act, ActMsg.c_cmd.act_detail_info_resp, ActMsg.act_detail_info_resp, Laya.Handler.create(this, this.actDetailResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_act, ActMsg.c_cmd.top_12_notice_resp, ActMsg.top_12_notice_resp, Laya.Handler.create(this, this.topNoticeResp, null, false));
    };
    /**
     * 活动列表请求
     */
    NetAct.prototype.actListReq = function () {
        var req = new ActMsg.act_list_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_act, ActMsg.c_cmd.act_list_req, req);
    };
    /**
     * 活动详情请求
     * @param fundId
     */
    NetAct.prototype.actDetailReq = function (id) {
        var req = new ActMsg.act_detail_info_req();
        req.uid = id;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_act, ActMsg.c_cmd.act_detail_info_req, req);
    };
    /**
     * 获得活动列表
     * @param cmd
     * @param pbData
     */
    NetAct.prototype.actListResp = function (cmd, pbData) {
        //// console.log(pbData);
        var actInfo = pbData.info;
        for (var i = 0; i < actInfo.length; i++) {
            this.uid = actInfo[0].uid;
            GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.ACTLISTRESP, actInfo[0]);
        }
        //this.actDetailReq(this.uid);//暂时没有用到活动详情
    };
    /**
    * 获得活动详情
    * @param cmd
    * @param pbData
    */
    NetAct.prototype.actDetailResp = function (cmd, pbData) {
    };
    /**
     * 返利活动飘字
     * @param cmd
     * @param pbData
     */
    NetAct.prototype.topNoticeResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.TipMng.createTip(pbData.content, TipManager_1.TipType.FLOATTIPDELAY);
    };
    return NetAct;
}());
exports.default = NetAct;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8,"../../manager/TipManager":69}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetAward = /** @class */ (function () {
    function NetAward() {
        this.isHaveFundTip = false; //是否有等级提示
    }
    Object.defineProperty(NetAward, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetAward();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetAward.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_info_resp, AwardMsg.growth_fund_info_resp, Laya.Handler.create(this, this.growthFundInfoResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_config_resp, AwardMsg.growth_fund_config_resp, Laya.Handler.create(this, this.growthFundConfigResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_buy_resp, AwardMsg.growth_fund_buy_resp, Laya.Handler.create(this, this.growthFundBuyResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_resp, AwardMsg.lv_award_resp, Laya.Handler.create(this, this.lvAwardResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_notice_resp, AwardMsg.lv_award_notice_resp, Laya.Handler.create(this, this.lvAwardNoticeResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_state_resp, AwardMsg.growth_fund_state_resp, Laya.Handler.create(this, this.growthFundStateResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_state_resp, AwardMsg.lv_award_state_resp, Laya.Handler.create(this, this.lvAwardStateResp, null, false));
    };
    /**
     * 请求基金档次
     */
    NetAward.prototype.growthFundInfoReq = function () {
        var req = new AwardMsg.growth_fund_info_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_info_req, req);
    };
    /**
      * 请求基金配置
      */
    NetAward.prototype.growthFundConfigReq = function () {
        var req = new AwardMsg.growth_fund_config_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_config_req, req);
    };
    /**
      * 请求购买基金档次
      */
    NetAward.prototype.growtFundBuyReq = function (id) {
        var req = new AwardMsg.growth_fund_buy_req();
        req.fund_id = id;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_buy_req, req);
    };
    /**
      * 请求领取等级奖励
      */
    NetAward.prototype.lvAwardReq = function (lv) {
        var req = new AwardMsg.lv_award_req();
        req.lv = lv;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_req, req);
    };
    /**
     * 请求通知设置
     * @param isNotice 是否今天通知
     */
    NetAward.prototype.lvAwardNoticeSetReq = function (isNotice) {
        var req = new AwardMsg.lv_award_notice_set_req();
        req.not_today = isNotice;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_notice_set_req, req);
    };
    /**
      * 请求成长基金的状态
      */
    NetAward.prototype.growthFundStateReq = function () {
        ////console.log("请求");
        var req = new AwardMsg.growth_fund_state_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.growth_fund_state_req, req);
    };
    /**
     * 请求等级奖金领取状态
     */
    NetAward.prototype.lvAwardStateReq = function () {
        var req = new AwardMsg.lv_award_state_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_award, AwardMsg.c_cmd.lv_award_state_req, req);
    };
    /**
     * 购买的成长基金档次
     * @param cmd
     * @param pbData
     */
    NetAward.prototype.growthFundInfoResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.GROWTHFUNDINFORESP, pbData);
    };
    /**
  * 成长基金config
  * @param cmd
  * @param pbData
  */
    NetAward.prototype.growthFundConfigResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.GROWTHFUNDCONFIGRESP, pbData);
    };
    /**
     * 购买基金返回状态
     * @param cmd
     * @param pbData
     */
    NetAward.prototype.growthFundBuyResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.GROWTHFUNDBUYRESP, pbData);
    };
    /**
  * 等级基金领取返回
  * @param cmd
  * @param pbData
  */
    NetAward.prototype.lvAwardResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LVAWARDRESP, pbData);
    };
    /**
  * 等级提示框
  * @param cmd
  * @param pbData
  */
    NetAward.prototype.lvAwardNoticeResp = function (cmd, pbData) {
        if (!this.isHaveFundTip) {
            this.isHaveFundTip = true;
            GameFacade_1.default.Instance.SceneMng.Create(13 /* FundTipPanel */, pbData);
        }
        // GameFacade.Instance.EventMng.dispatch(EventConstantResponse.LVAWARDNOTICERESP, pbData);
    };
    /**
    * 成长基金状态
    * @param cmd
    * @param pbData
    */
    NetAward.prototype.growthFundStateResp = function (cmd, pbData) {
        this.endTime = pbData.end_time;
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.GROWTHFUNDSTATERESP, pbData);
    };
    /**
  * 等级奖励状态
  * @param cmd
  * @param pbData
  */
    NetAward.prototype.lvAwardStateResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LVAWARDSTATERESP, pbData);
    };
    return NetAward;
}());
exports.default = NetAward;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetBroadcast = /** @class */ (function () {
    function NetBroadcast() {
    }
    Object.defineProperty(NetBroadcast, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetBroadcast();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetBroadcast.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_broadcast, BroadCastMsg.c_cmd.bcast_world_resp, BroadCastMsg.bcast_world_resp, Laya.Handler.create(this, this.bcastWorldResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_broadcast, BroadCastMsg.c_cmd.bcast_room_resp, BroadCastMsg.bcast_room_resp, Laya.Handler.create(this, this.bcastRoomResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_broadcast, BroadCastMsg.c_cmd.bcast_msg_resp, BroadCastMsg.bcast_msg_resp, Laya.Handler.create(this, this.bcastMsgResp, null, false));
    };
    /**
     * 全局广播
     * @param cmd
     * @param pbData
     */
    NetBroadcast.prototype.bcastWorldResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.BCASTWORLDRESP, pbData);
    };
    /**
     * 房间广播
     * @param cmd
     * @param pbData
     */
    NetBroadcast.prototype.bcastRoomResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.BCASTROOMRESP, pbData);
    };
    /**
   * 广播消息
   * @param cmd
   * @param pbData
   */
    NetBroadcast.prototype.bcastMsgResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.BCASTMSGRESP, pbData);
    };
    return NetBroadcast;
}());
exports.default = NetBroadcast;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetLogin_1 = require("./NetLogin");
var NetJpPool = /** @class */ (function () {
    function NetJpPool() {
        this._JpAmount = 0;
    }
    Object.defineProperty(NetJpPool, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetJpPool();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetJpPool.prototype.Init = function () {
        this._JpAmount = 0;
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_pool, PoolMsg.c_cmd.bcast_jp_resp, PoolMsg.bcast_jp_resp, Laya.Handler.create(this, this.receiveBcastJPResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_pool, PoolMsg.c_cmd.amount_jp_resp, PoolMsg.amount_jp_resp, Laya.Handler.create(this, this.receiveAmountJPResp, null, false));
    };
    /**
     * 广播中奖
     * @param cmd
     * @param pbData
     */
    NetJpPool.prototype.receiveBcastJPResp = function (cmd, pbData) {
        if (pbData.uid.toString() == NetLogin_1.default.Instance.RoleInfo.roleId.toString()) {
            var win = GameFacade_1.default.Instance.SceneMng.Create(5 /* SettingPanel */);
            win.bcastJpInfo = pbData;
        }
        if (pbData.content != null) {
            GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.JPBCAST, pbData);
        }
        this._JpAmount = pbData.amount;
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.JPNUMBER, pbData.amount);
    };
    /**
     * jp金额
     * @param cmd
     * @param pbData
     */
    NetJpPool.prototype.receiveAmountJPResp = function (cmd, pbData) {
        this._JpAmount = pbData.amount;
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.JPNUMBER, pbData.amount);
    };
    return NetJpPool;
}());
exports.default = NetJpPool;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8,"./NetLogin":80}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var GameEvent_1 = require("../../constant/GameEvent");
var CommonUtil_1 = require("../../utils/CommonUtil");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var CommonConstant_1 = require("../../constant/CommonConstant");
var BatteryController_1 = require("../../controller/BatteryController");
var NetLogin = /** @class */ (function () {
    function NetLogin() {
        /**等级开关 */
        this.isOnLvSw = false;
        /**
         * 游戏token 用于重连
         */
        this._JwtToken = "";
        /**
         * 登录模式，正常1 重连2
         */
        this._LoginModeCode = LoginMsg.login_mode_code.normal;
        this.bLoginFaile = false;
        this.bAutoTransfer = false;
        /**和服务器的时间偏移量 */
        this._timeOffset = 0;
        this.nRaceId = 0;
        //#endregion  socket request
    }
    NetLogin.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.login_resp, LoginMsg.login_resp, Laya.Handler.create(this, this.LoginResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.time_resp, LoginMsg.time_resp, Laya.Handler.create(this, this.TimeResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.kictout_resp, LoginMsg.kictout_resp, Laya.Handler.create(this, this.KictoutResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.switch_resp, LoginMsg.switch_resp, Laya.Handler.create(this, this.switchResp, null, false));
    };
    Object.defineProperty(NetLogin, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetLogin();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NetLogin.prototype, "RoleInfo", {
        /**
        * 玩家角色信息
        */
        get: function () {
            if (null == this._playerLoginInfo)
                return null;
            return this._playerLoginInfo.role;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NetLogin.prototype, "RoomInfoList", {
        /**
         * 房间基本信息列表
         */
        get: function () {
            if (null == this._playerLoginInfo || null == this._playerLoginInfo.room_info)
                return null;
            return this._playerLoginInfo.room_info;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 鱼配置列表
     */
    NetLogin.prototype.FishInfoList = function (fishType) {
        if (null == this._fishConfigDict || !this._fishConfigDict.has(fishType))
            return null;
        return this._fishConfigDict.get(fishType);
    };
    /**
     * 是否是自己的uid
     * @param uid 玩家uid
     */
    NetLogin.prototype.IsSelfUid = function (uid) {
        return this.RoleInfo.roleId.toString() == uid.toString();
    };
    //#region socket response
    /**
        * 处理登陆请求回复
        */
    NetLogin.prototype.LoginResp = function (cmd, data) {
        var _this = this;
        var reconnect = "正常连接";
        if (NetLogin.Instance._LoginModeCode == LoginMsg.login_mode_code.reconnect) {
            //if (data.reconnect && data.reconnect!=null) {
            GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.GAME_RECONNECT);
            reconnect = "断线重连";
        }
        CommonUtil_1.utils.CommonUtils.log("------------------ LoginResp " + reconnect + " data = ", data);
        switch (data.code) {
            case LoginMsg.login_code.SUCCESS:
                {
                    if (NetLogin.Instance._LoginModeCode == LoginMsg.login_mode_code.reconnect) {
                        GameFacade_1.default.Instance.EventMng.dispatch(GameEvent_1.default.GAME_RECONNECT);
                    }
                    GameFacade_1.default.Instance.GameMng.token = data.jwt_token;
                    this._playerLoginInfo = data;
                    this.isOfficial = data.role.is_wallet;
                    this._JwtToken = data.jwt_token;
                    this._fishConfigDict = new Laya.WeakObject();
                    GameFacade_1.default.Instance.WalletMng.addToValue = data.role.auto_wallet;
                    GameFacade_1.default.Instance.WalletMng.isAutoLocal = data.role.auto_wallet > 0 ? true : false;
                    data.fish_info.forEach(function (element) {
                        _this._fishConfigDict.set(element.fish_type, element);
                    });
                    this.LoginTimeReq();
                    GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LOGINRESROLEINFO, data.role);
                    break;
                }
            case LoginMsg.login_code.FAIL: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginFail);
                break;
            }
            case LoginMsg.login_code.ERR_ACCOUNT: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.AccountError);
                break;
            }
            case LoginMsg.login_code.TOKEN_TIMEOUT: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.TokeTimeOut);
                break;
            }
            case LoginMsg.login_code.TOKEN_ERROR: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.TokeError);
                break;
            }
            case LoginMsg.login_code.OTHER_LOGIN: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginOther);
                break;
            }
            case LoginMsg.login_code.FORCE_KICTOUT: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginOther);
                break;
            }
            case LoginMsg.login_code.MAINTAIN_KICTOUT: {
                var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                if (data.err_msg && data.err_msg != "") {
                    promptPanel.InitData(4 /* RefeshGame */, data.err_msg);
                }
                else {
                    promptPanel.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.ForceKictout);
                }
                break;
            }
        }
    };
    /**
     * 服务端时间同步处理
     * @param data 返回结果
     */
    NetLogin.prototype.TimeResp = function (cmd, data) {
        var curDate = new Date().getTime();
        this._timeOffset = Number(data.time) - curDate;
    };
    /**
     * 踢人同步处理
     * 这里不是服务端直接推送，是在onclose时接收服务端传递的参数reason进行解析，自己调用onmessage派发过来
     * @param data 返回结果
     */
    NetLogin.prototype.KictoutResp = function (cmd, data) {
        CommonUtil_1.utils.CommonUtils.log("--------KictoutResp-----");
        var promptPanel = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
        switch (data.code) {
            case LoginMsg.login_code.FAIL: {
                var promptPanel_1 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_1.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginFail);
                break;
            }
            case LoginMsg.login_code.ERR_ACCOUNT: {
                var promptPanel_2 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_2.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.AccountError);
                break;
            }
            case LoginMsg.login_code.TOKEN_TIMEOUT: {
                var promptPanel_3 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_3.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.TokeTimeOut);
                break;
            }
            case LoginMsg.login_code.TOKEN_ERROR: {
                var promptPanel_4 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_4.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.TokeError);
                break;
            }
            case LoginMsg.login_code.OTHER_LOGIN: {
                var promptPanel_5 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_5.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginOther);
                break;
            }
            case LoginMsg.login_code.FORCE_KICTOUT: {
                var promptPanel_6 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                promptPanel_6.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.LoginOther);
                break;
            }
            case LoginMsg.login_code.MAINTAIN_KICTOUT: {
                var promptPanel_7 = GameFacade_1.default.Instance.SceneMng.Create(3 /* PromptPanel */);
                if (data.err_msg && data.err_msg != "") {
                    promptPanel_7.InitData(4 /* RefeshGame */, data.err_msg);
                }
                else {
                    promptPanel_7.InitData(4 /* RefeshGame */, CommonConstant_1.default._PromptContent.ForceKictout);
                }
                break;
            }
            default:
                break;
        }
        GameFacade_1.default.Instance.SocketMng.closeSocket();
        BatteryController_1.default.Instance.StopLockAttack();
        BatteryController_1.default.Instance.StopAutoAttack();
    };
    /**
     * 开关
     * @param cmd
     * @param data
     */
    NetLogin.prototype.switchResp = function (cmd, data) {
        var info = data.switch;
        for (var i = 0; i < info.length; i++) {
            if (info[i].type == 2) { //等级开关
                this.isOnLvSw = info[i].is_on;
                GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.SWITCHRESP);
            }
            if (info[i].type == 3) { //幸运宝箱开关
            }
        }
    };
    // // /**
    // //  * 更新游戏token处理
    // //  * @param data 返回结果
    // //  */
    // // UpdateToeknpHandle(data: any): void {
    // //     let msg = MsgProtoBuff.update_token_resp.decode(data);
    // //     this.sRoomToken = msg.jwtToken;
    // //     Emitter.emit(MessageConst.login_UpdateTokenMess);
    // // }
    //#endregion socket response
    //#region  socket request
    /**
     * 申请登录
     * @param token
     * @param account 账号
     * @param lang 语言
     */
    NetLogin.prototype.LoginAccountReq = function (token, account, lang) {
        var req = new LoginMsg.login_account_req();
        req.token = "123"; //token;//用账号方式登录的时候，token固定死，保持与服务器一致
        //req.account = "abc3398";//account;
        req.account = "acc_abc5419" + CommonUtil_1.utils.CommonUtils.random(1, 10000); //account;
        req.lang = lang;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.login_account_req, req);
    };
    /**
     * 发送时间校准请求
    */
    NetLogin.prototype.LoginTimeReq = function () {
        var req = new LoginMsg.time_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_login, LoginMsg.c_cmd.time_req, req);
    };
    return NetLogin;
}());
exports.default = NetLogin;
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../constant/EventConstantResponse":8,"../../constant/GameEvent":9,"../../controller/BatteryController":12,"../../utils/CommonUtil":90}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetRanking = /** @class */ (function () {
    function NetRanking() {
    }
    Object.defineProperty(NetRanking, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetRanking();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetRanking.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_rank, RankMsg.c_cmd.rank_resp, RankMsg.rank_resp, Laya.Handler.create(this, this.rankResp, null, false));
    };
    /**
     * 排行榜请求
     * @param type 是本周还是上周
     */
    NetRanking.prototype.rankReq = function (index, type) {
        var req = new RankMsg.rank_req();
        req.index = index;
        req.type = type;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_rank, RankMsg.c_cmd.rank_req, req);
    };
    /**
     * 排行榜返回数据
     * @param cmd
     * @param pbData
     */
    NetRanking.prototype.rankResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.RANKRESP, pbData);
    };
    return NetRanking;
}());
exports.default = NetRanking;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var NetReport = /** @class */ (function () {
    function NetReport() {
    }
    Object.defineProperty(NetReport, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetReport();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetReport.prototype.Init = function () { };
    /**
     * 请求获得中奖名单
     * @param type
     */
    NetReport.prototype.ScreenReportReq = function () {
        var req = new ReportMsg.screen_report_req();
        req.srceen = GameFacade_1.default.Instance.GameMng.getDeviceType();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_report, ReportMsg.c_cmd.screen_report_req, req);
    };
    return NetReport;
}());
exports.default = NetReport;
},{"../../GameFacade":3}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var CommonUtil_1 = require("../../utils/CommonUtil");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetLogin_1 = require("./NetLogin");
var NetRoleInfo = /** @class */ (function () {
    function NetRoleInfo() {
        this.lvInfo = null;
        this.isHaveNotion = false;
    }
    Object.defineProperty(NetRoleInfo, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetRoleInfo();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetRoleInfo.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_role_info, RoleInfoMsg.c_cmd.lv_info_resp, RoleInfoMsg.lv_info_resp, Laya.Handler.create(this, this.lvInfoResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_role_info, RoleInfoMsg.c_cmd.lv_config_resp, RoleInfoMsg.lv_config_resp, Laya.Handler.create(this, this.lvConfigResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_role_info, RoleInfoMsg.c_cmd.lv_notice_resp, RoleInfoMsg.lv_notice_resp, Laya.Handler.create(this, this.lvNoticeResp, null, false));
    };
    /**
     * 请求等级信息
     */
    NetRoleInfo.prototype.lvInfoReq = function () {
        var req = new RoleInfoMsg.lv_info_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_role_info, RoleInfoMsg.c_cmd.lv_info_req, req);
    };
    /**
     * 请求等级配置
     * @param fundId
     */
    NetRoleInfo.prototype.lvConfigReq = function (fundId) {
        var req = new RoleInfoMsg.lv_config_req();
        req.fund_id = fundId;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_role_info, RoleInfoMsg.c_cmd.lv_config_req, req);
    };
    /**
     * 等级信息返回
     * @param cmd
     * @param pbData
     */
    NetRoleInfo.prototype.lvInfoResp = function (cmd, pbData) {
        this.lvInfo = pbData;
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LVINFORESP, pbData);
    };
    /**
    * 等级配置返回
    * @param cmd
    * @param pbData
    */
    NetRoleInfo.prototype.lvConfigResp = function (cmd, pbData) {
        CommonUtil_1.utils.CommonUtils.log("等级配置");
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LVCONFIGRESP, pbData);
    };
    /**
  * 等级通知
  * @param cmd
  * @param pbData
  */
    NetRoleInfo.prototype.lvNoticeResp = function (cmd, pbData) {
        CommonUtil_1.utils.CommonUtils.log("等级通知");
        if (NetLogin_1.default.Instance.RoleInfo.roleId.toString() == pbData.uid.toString()) {
            if (!this.isHaveNotion) {
                this.isHaveNotion = true;
                GameFacade_1.default.Instance.SceneMng.Create(17 /* UpgradePanel */, pbData);
            }
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.LVNOTICERESP, pbData);
    };
    return NetRoleInfo;
}());
exports.default = NetRoleInfo;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8,"../../utils/CommonUtil":90,"./NetLogin":80}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var CommonUtil_1 = require("../../utils/CommonUtil");
var NetLogin_1 = require("./NetLogin");
var EventNetResponse_1 = require("./EventNetResponse");
var CommonConstant_1 = require("../../constant/CommonConstant");
var TipManager_1 = require("../../manager/TipManager");
var BatteryController_1 = require("../../controller/BatteryController");
var NetRoom = /** @class */ (function () {
    function NetRoom() {
        /**房间内的人物信息列表 */
        this._RoomRoleInfoDict = {};
        /**房间内鱼的信息列表 */
        this._FishDict = {};
        //#endregion
    }
    Object.defineProperty(NetRoom, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetRoom();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    ;
    NetRoom.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.enter_room_resp, RoomMsg.enter_room_resp, Laya.Handler.create(this, this.EnterRoomResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.ready_room_resp, RoomMsg.ready_room_resp, Laya.Handler.create(this, this.ReadyRoomResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.syn_fish_resp, RoomMsg.syn_fish_resp, Laya.Handler.create(this, this.SynFishResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.hit_fish_resp, RoomMsg.hit_fish_resp, Laya.Handler.create(this, this.HitFishResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.shoot_bullet_resp, RoomMsg.shoot_bullet_resp, Laya.Handler.create(this, this.ShootBulletResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.shoot_err_resp, RoomMsg.shoot_err_resp, Laya.Handler.create(this, this.ShootErrResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.change_battery_resp, RoomMsg.change_battery_resp, Laya.Handler.create(this, this.ChangeBatteryResp, null, false));
        //  GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.update_fish_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.fish_dead_resp, RoomMsg.fish_dead_resp, Laya.Handler.create(this, this.FishDeadResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.leave_room_resp, RoomMsg.leave_room_resp, Laya.Handler.create(this, this.LeaveRoomResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.update_chips_resp, RoomMsg.update_chips_resp, Laya.Handler.create(this, this.UpdateChipResp, null, false));
        //   GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.shoot_err_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.battery_err_resp, RoomMsg.battery_err_resp, Laya.Handler.create(this, this.BatteryErrResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.sync_chips_resp, RoomMsg.sync_chips_resp, Laya.Handler.create(this, this.SyncChipsResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.room_status_resp, RoomMsg.room_status_resp, Laya.Handler.create(this, this.RoomStatusResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.syn_role_resp, RoomMsg.syn_role_resp, Laya.Handler.create(this, this.SynRoleResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.bullet_useless_resp, RoomMsg.bullet_useless_resp, Laya.Handler.create(this, this.BulletUselessResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.bullet_pass_resp, RoomMsg.bullet_pass_resp, Laya.Handler.create(this, this.BulletPassResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.sync_jp_jetton_resp, RoomMsg.sync_jp_jetton_resp, Laya.Handler.create(this, this.SyncJpJettonResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.fish_matrix_resp, RoomMsg.fish_matrix_resp, Laya.Handler.create(this, this.FishMatrixResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.clean_wave_resp, RoomMsg.clean_wave_resp, Laya.Handler.create(this, this.CleanWaveResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.one_piece_resp, RoomMsg.one_piece_resp, Laya.Handler.create(this, this.OnePieceResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.hit_result_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.extra_reward_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.wave_matrix_resp, RoomMsg.wave_matrix_resp, Laya.Handler.create(this, this.WaveMatrixResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.mq_sync_chips_resp, RoomMsg.mq_sync_chips_resp, Laya.Handler.create(this, this.MqSyncChipsResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.fish_select_save_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.fish_select_resp, RoomMsg.fish_select_resp, Laya.Handler.create(this, this.FishSelectResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.update_valentine_score, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.rotate_canvas_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
        // GameFacade.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.weapon_chip_resp, Laya.Handler.create(this, this.receiveLoginResp, null, false));
    };
    //#region socket response
    /**
     * 进入房间回复
     * @param data 协议数据类
     */
    NetRoom.prototype.EnterRoomResp = function (cmd, data) {
        CommonUtil_1.utils.CommonUtils.log("\u8FDB\u5165\u623F\u95F4msg_room_code = " + data.code);
        switch (data.code) {
            case RoomMsg.msg_room_code.SUCCESS_ENTER:
                {
                    //this.ReadyRoomReq();
                    CommonUtil_1.utils.CommonUtils.warn("------------进入房间成功------------");
                    GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.EnterRoomResp, data);
                    break;
                }
            case RoomMsg.msg_room_code.FALSE_ENTER:
                {
                    CommonUtil_1.utils.CommonUtils.warn("------------进入房间失败------------");
                    GameFacade_1.default.Instance.TipMng.createTip(CommonConstant_1.default._PromptContent.EnterRoomFail, TipManager_1.TipType.FLOATTIP);
                    break;
                }
        }
    };
    /**房间内角色信息 */
    NetRoom.prototype.ReadyRoomResp = function (cmd, data) {
        CommonUtil_1.utils.CommonUtils.log("ReadyRoomResp data = ", data);
        var roleInfo = data.role;
        var bSelfuid = false;
        for (var _i = 0, roleInfo_1 = roleInfo; _i < roleInfo_1.length; _i++) {
            var value = roleInfo_1[_i];
            this._RoomRoleInfoDict[value.uid.toString()] = value;
            if (NetLogin_1.default.Instance.IsSelfUid(value.uid)) {
                bSelfuid = true;
            }
        }
        if (bSelfuid) {
            this.SynSeatReq();
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.ReadyRoomResp, data.role);
    };
    /**同步鱼池中鱼的信息 */
    NetRoom.prototype.SynFishResp = function (cmd, data) {
        //utils.CommonUtils.log("同步鱼信息 SynFishResp data = ", data);
        var fishList = data.fish_list;
        for (var _i = 0, fishList_1 = fishList; _i < fishList_1.length; _i++) {
            var value = fishList_1[_i];
            this._FishDict[value.id.toString()] = value;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.SynFishResp, data);
    };
    /**击中鱼 消息返回 */
    NetRoom.prototype.HitFishResp = function (cmd, data) {
        if (RoomMsg.msg_room_code.ERR_CHIPS == data.code) {
            CommonUtil_1.utils.CommonUtils.log("HitFishResp error data = ", data);
        }
        CommonConstant_1.default._huntSceneTestArry.hitFishResp++;
    };
    /**子弹的射击 消息返回 */
    NetRoom.prototype.ShootBulletResp = function (cmd, data) {
        if (this._RoomRoleInfoDict[data.uid.toString()]) {
            this._RoomRoleInfoDict[data.uid.toString()].jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.ShootBulletResp, data);
    };
    /**发射子弹报错返回 */
    NetRoom.prototype.ShootErrResp = function (cmd, data) {
        CommonUtil_1.utils.CommonUtils.log("发射子弹报错 data:", data);
    };
    /**改变炮台倍率 消息返回 */
    NetRoom.prototype.ChangeBatteryResp = function (cmd, data) {
        if (this._RoomRoleInfoDict[data.uid.toString()]) {
            this._RoomRoleInfoDict[data.uid.toString()].bullet_multi = data.multi;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.ChangeBatteryResp, data);
    };
    /**鱼死亡 消息返回 */
    NetRoom.prototype.FishDeadResp = function (cmd, data) {
        if (this._RoomRoleInfoDict[data.uid.toString()]) {
            this._RoomRoleInfoDict[data.uid.toString()].jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.FishDeadResp, data);
    };
    /**离开房间 消息返回 */
    NetRoom.prototype.LeaveRoomResp = function (cmd, data) {
        if (this._RoomRoleInfoDict[data.uid.toString()]) {
            delete this._RoomRoleInfoDict[data.uid.toString()];
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.LeaveRoomResp, data);
    };
    /**刷新金币 消息返回 */
    NetRoom.prototype.UpdateChipResp = function (cmd, data) {
        if (this._RoomRoleInfoDict[data.uid.toString()]) {
            this._RoomRoleInfoDict[data.uid.toString()].jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.UpdateChipResp, data);
    };
    /**切换炮台错误 消息返回 */
    NetRoom.prototype.BatteryErrResp = function (cmd, msg) {
        CommonUtil_1.utils.CommonUtils.log("切换炮台错误 " + msg.code);
    };
    ;
    /**同步玩家自己金币 消息返回 */
    NetRoom.prototype.SyncChipsResp = function (cmd, data) {
        //utils.CommonUtils.log("sync_chips_resp 跟新金币");
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.SyncChipsResp, data);
    };
    /**中心钱包 消息返回 */
    NetRoom.prototype.MqSyncChipsResp = function (cmd, msg) {
        var selfID = NetLogin_1.default.Instance.RoleInfo.roleId;
        var role = this._RoomRoleInfoDict[selfID.toString()];
        if (role) {
            role.jetton_show = msg.chips;
        }
        //console.log("mq_sync_chips_resp 跟新金币");
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.MqSyncChipsResp, msg);
    };
    /**冰冻效果等 消息返回 */
    NetRoom.prototype.RoomStatusResp = function (cmd, msg) {
        CommonUtil_1.utils.CommonUtils.log("冰冻效果等 " + msg.status);
    };
    /**同步角色信息 消息返回 */
    NetRoom.prototype.SynRoleResp = function (cmd, data) {
        for (var key in this._RoomRoleInfoDict) {
            delete this._RoomRoleInfoDict[key];
        }
        var roleInfo = data.role;
        for (var _i = 0, roleInfo_2 = roleInfo; _i < roleInfo_2.length; _i++) {
            var value = roleInfo_2[_i];
            this._RoomRoleInfoDict[value.uid.toString()] = value;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.SynRoleResp, data.role);
    };
    /**子弹无效 消息返回 */
    NetRoom.prototype.BulletUselessResp = function (cmd, data) {
        var role = this._RoomRoleInfoDict[data.uid.toString()];
        if (role) {
            role.jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.BulletUselessResp, data);
    };
    /**子弹无效 消息返回 */
    NetRoom.prototype.BulletPassResp = function (cmd, data) {
        var role = this._RoomRoleInfoDict[data.uid.toString()];
        if (role) {
            role.jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.BulletPassResp, data);
    };
    /**服务器主动推送，同步玩家(可能是自己也可能是别人)jp中奖金币（筹码）额度 消息返回 */
    NetRoom.prototype.SyncJpJettonResp = function (cmd, data) {
        var role = this._RoomRoleInfoDict[data.uid.toString()];
        if (role) {
            role.jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.SyncJpJettonResp, data);
    };
    /**鱼矩阵信息 消息返回 */
    NetRoom.prototype.FishMatrixResp = function (cmd, msg) {
        CommonUtil_1.utils.CommonUtils.log("鱼阵来临 ");
    };
    /**波浪来袭 消息返回 */
    NetRoom.prototype.CleanWaveResp = function (cmd, msg) {
        CommonUtil_1.utils.CommonUtils.log("波浪来袭 ");
        GameFacade_1.default.Instance.HuntSceneMng.warnShow(0);
    };
    /**从世界Boss身上掉下金币 消息返回 */
    NetRoom.prototype.OnePieceResp = function (cmd, data) {
        var role = this._RoomRoleInfoDict[data.uid.toString()];
        if (role) {
            role.jetton_show = data.jettonshow;
        }
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.OnePieceResp, data);
    };
    /**波浪矩阵来临 消息返回 */
    NetRoom.prototype.WaveMatrixResp = function (cmd, msg) {
        CommonUtil_1.utils.CommonUtils.log("波浪矩阵来临 ");
    };
    /**自动捕鱼加载上次设置 消息返回 */
    NetRoom.prototype.FishSelectResp = function (cmd, data) {
        CommonUtil_1.utils.CommonUtils.log("自动捕鱼加载上次设置 ");
    };
    //#endregion
    //#region  socket request
    /**
     * 请求进入房间
     * @param roomType 房间类型
     * @param reLoginCode 连接类型
     */
    NetRoom.prototype.EnterRoomReq = function (roomType, reLoginCode) {
        var req = new RoomMsg.enter_room_req();
        req.type = roomType;
        req.code = reLoginCode;
        NetLogin_1.default.Instance._curRoomIndex = roomType;
        this._curRoomInfo = NetLogin_1.default.Instance.RoomInfoList[req.type - 1]; //服务端是 1 2 3。客户端数组下标0开始
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.enter_room_req, req);
    };
    /** 请求同步房间内正在打鱼的玩家信息*/
    NetRoom.prototype.ReadyRoomReq = function () {
        var req = new RoomMsg.ready_room_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.ready_room_req, req);
    };
    /** 同步座位消息信号，开始出鱼*/
    NetRoom.prototype.SynSeatReq = function () {
        var req = new RoomMsg.syn_seat_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.syn_seat_req, req);
    };
    /**
     * 通知服务器击中了鱼
     * @param multi 子弹倍率
     * @param fishid 击中的鱼ID列表
     * @param relateFish 关联的鱼ID列表
     * @param bulletId 子弹ID
     */
    NetRoom.prototype.HitFishReq = function (multi, fishid, relateFish, bulletId) {
        var req = new RoomMsg.hit_fish_req();
        req.bullet_multi = multi;
        req.fish_id = [fishid];
        req.related_fish = relateFish;
        req.bulletid = bulletId;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.hit_fish_req, req);
        CommonUtil_1.utils.CommonUtils.log("--- HitFishReq bulletid = ", bulletId, " reqData = ", req);
    };
    /**
     * 发射子弹请求
     * @param uid
     * @param multi
     * @param angle
     * @param time
     * @param fishid
     * @param bulletid
     */
    NetRoom.prototype.ShootBulletReq = function (uid, multi, angle, time, fishid, bulletid) {
        var req = new RoomMsg.shoot_bullet_req();
        req.uid = uid;
        req.multi = multi;
        req.angel = angle;
        req.time = time;
        req.fishid = fishid; //鱼ID（锁定状态使用）有鱼传ID 没有传0; 
        req.bulletid = bulletid;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.shoot_bullet_req, req);
        CommonConstant_1.default._huntSceneTestArry.shootBulletReq++;
        BatteryController_1.default.Instance.m_reqBulletIdDict[bulletid] = req;
        CommonUtil_1.utils.CommonUtils.log("-- ShootBulletReq bulletID = ", bulletid.toString(), " bullet_multi = ", multi);
    };
    /**
     * 切换炮台倍率
     * @param batteryMulti 炮台倍率
     * @param roleId 玩家ID
     */
    NetRoom.prototype.ChangeBatteryReq = function (batteryMultiIndex, roleId) {
        var req = new RoomMsg.change_battery_req();
        req.multi = NetRoom.Instance._curRoomInfo.battery[batteryMultiIndex];
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.change_battery_req, req);
        this._RoomRoleInfoDict[roleId.toString()].bullet_multi = NetRoom.Instance._curRoomInfo.battery[batteryMultiIndex];
        for (var iterator in this._RoomRoleInfoDict) {
        }
    };
    /** 离开房间*/
    NetRoom.prototype.LeaveRoomReq = function () {
        var req = new RoomMsg.leave_room_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.leave_room_req, req);
    };
    /** 同步金币请求*/
    NetRoom.prototype.SyncChipsReq = function () {
        var req = new RoomMsg.sync_chips_rep();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.sync_chips_rep, req);
    };
    /** 同步新用户进入过打鱼场景*/
    NetRoom.prototype.NovicePromptReq = function () {
        var req = new RoomMsg.novice_prompt_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.novice_prompt_req, req);
    };
    NetRoom.prototype.BulletUseLessReq = function (userid, bulletMulti, bulletId) {
        var req = new RoomMsg.bullet_useless_req();
        req.uid = userid;
        req.multi = bulletMulti;
        req.bulletid = bulletId;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_room, RoomMsg.c_cmd.bullet_useless_req, req);
        CommonUtil_1.utils.CommonUtils.log("--- 子弹飞出边界 BulletUseLessReq bulletId = ", bulletId);
    };
    return NetRoom;
}());
exports.default = NetRoom;
// export class LockInfo {
//     public LockFishId: string = null;               //锁定鱼的ID
//     public IsLockState: boolean = false;            //是否开启锁定状态
//     public LockFishPos: cc.Vec2 = null;             //锁定鱼的坐标
//     public LockNodeSize: cc.Vec2 = null;            //锁定鱼尺寸
//     public PreLockPos: cc.Vec2 = null;              //锁定鱼尺寸
// }
},{"../../GameFacade":3,"../../constant/CommonConstant":7,"../../controller/BatteryController":12,"../../manager/TipManager":69,"../../utils/CommonUtil":90,"./EventNetResponse":75,"./NetLogin":80}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventNetResponse_1 = require("./EventNetResponse");
var NetWallet = /** @class */ (function () {
    function NetWallet() {
    }
    Object.defineProperty(NetWallet, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetWallet();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetWallet.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_wallet, WalletMsg.c_cmd.main_wallet_resp, WalletMsg.main_wallet_resp, Laya.Handler.create(this, this.mianWalletResp, null, false));
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_wallet, WalletMsg.c_cmd.wallet_resp, WalletMsg.wallet_resp, Laya.Handler.create(this, this.walletResp, null, false));
    };
    /**
     * 钱包弹框返回
     * @param cmd
     * @param pbData
     */
    NetWallet.prototype.mianWalletResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.MainWalletResp, pbData);
        //this.walletCode(pbData.code);
    };
    /**
     * 加钱返回
     * @param cmd
     * @param pbData
     */
    NetWallet.prototype.walletResp = function (cmd, pbData) {
        //GameFacade.Instance.WalletMng.walletCode(pbData.code);
        GameFacade_1.default.Instance.EventMng.dispatch(EventNetResponse_1.default.WalletResp, pbData);
    };
    /**
    * 请求钱包弹框
    */
    NetWallet.prototype.mainWalletReq = function () {
        var req = new WalletMsg.main_wallet_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_wallet, WalletMsg.c_cmd.main_wallet_req, req);
    };
    /**
     * 发送设置的钱
     * @param chip
     * @param auto
     */
    NetWallet.prototype.walletReq = function (chip, auto) {
        var req = new WalletMsg.wallet_req();
        req.chips = chip;
        req.auto = auto;
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_wallet, WalletMsg.c_cmd.wallet_req, req);
    };
    return NetWallet;
}());
exports.default = NetWallet;
},{"../../GameFacade":3,"./EventNetResponse":75}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFacade_1 = require("../../GameFacade");
var EventConstantResponse_1 = require("../../constant/EventConstantResponse");
var NetWanners = /** @class */ (function () {
    function NetWanners() {
    }
    Object.defineProperty(NetWanners, "Instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new NetWanners();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    NetWanners.prototype.Init = function () {
        GameFacade_1.default.Instance.SocketMng.addHandleByCMD(NetCodeMsg.cmd.msg_winners, WinnerMsg.c_cmd.winners_resp, WinnerMsg.winners_resp, Laya.Handler.create(this, this.winnersResp, null, false));
    };
    /**
     * 请求获得中奖名单
     * @param type
     */
    NetWanners.prototype.winnersReq = function () {
        var req = new WinnerMsg.winners_req();
        GameFacade_1.default.Instance.SocketMng.sendGameData(NetCodeMsg.cmd.msg_winners, WinnerMsg.c_cmd.winners_req, req);
    };
    /**
     * 中奖名单返回
     * @param cmd
     * @param pbData
     */
    NetWanners.prototype.winnersResp = function (cmd, pbData) {
        GameFacade_1.default.Instance.EventMng.dispatch(EventConstantResponse_1.default.WINNERRESP, pbData);
    };
    return NetWanners;
}());
exports.default = NetWanners;
},{"../../GameFacade":3,"../../constant/EventConstantResponse":8}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 */
var NetReader_1 = require("./NetReader");
var GameFacade_1 = require("./../GameFacade");
var GameEvent_1 = require("./../constant/GameEvent");
var PackageOut_1 = require("./PackageOut");
var PackageIn_1 = require("./PackageIn");
var CommonUtil_1 = require("../utils/CommonUtil");
var BatteryController_1 = require("../controller/BatteryController");
var SocketServe = /** @class */ (function () {
    function SocketServe(_type) {
        this._PACKAGE_OUT_NAME = "_PACKAGE_OUT_NAME_";
        this.curReconnetCount = 0;
        this.closeReason = "";
        this.netReader = new NetReader_1.default();
        this.EventManager = GameFacade_1.default.Instance.EventMng;
        this.socket = new laya.net.Socket();
        this.socket.endian = Laya.Byte.LITTLE_ENDIAN;
        this.socket.on(laya.events.Event.OPEN, this, this.onConnect);
        this.socket.on(laya.events.Event.CLOSE, this, this.onClose, []);
        this.socket.on(laya.events.Event.ERROR, this, this.onError);
        this.socket.on(laya.events.Event.MESSAGE, this, this.onMessage);
        this.type = _type;
        this.Init();
    }
    SocketServe.prototype.Init = function () {
        var gameMng = GameFacade_1.default.Instance.GameMng;
        if (gameMng.sip != null) {
            gameMng.sip.push(gameMng.serverIp);
            gameMng.sip.reverse();
            SocketServe.MAX_RECONNET_COUT = gameMng.sip.length;
        }
        else {
            gameMng.sip = new Array();
            for (var i = 0; i < SocketServe.MAX_RECONNET_COUT; i++) {
                gameMng.sip.push(gameMng.serverIp);
            }
        }
    };
    SocketServe.prototype.connect = function (host, port, token) {
        CommonUtil_1.utils.CommonUtils.log(host, port, token);
        if (this.socket.connected) {
            console.debug("socket已连接" + "_" + this.type);
            return;
        }
        if (token != undefined) {
            this.socket.connectByUrl(host + ":" + port);
        }
        else {
            this.socket.connect(host, port);
        }
        Laya.timer.once(5000, this, this.checkErroHandle);
    };
    /** 连接超时*/
    SocketServe.prototype.checkErroHandle = function () {
        CommonUtil_1.utils.CommonUtils.log("checkErroHandle");
        this.curReconnetCount = SocketServe.MAX_RECONNET_COUT;
        this.EventManager.dispatch(GameEvent_1.default.SOCKET_CLOSE + this.getSocketTypeStr());
    };
    SocketServe.prototype.close = function () {
        this.socket.close();
    };
    SocketServe.prototype.isConnected = function () {
        return this.socket.connected;
    };
    SocketServe.prototype.onConnect = function () {
        this.EventManager.dispatch(GameEvent_1.default.CONNECT + this.getSocketTypeStr());
        this.curReconnetCount = -1;
        CommonUtil_1.utils.CommonUtils.log("onConnect 正常建立连接:curReconnetCount = ", this.curReconnetCount);
        Laya.timer.clear(this, this.checkErroHandle);
    };
    SocketServe.prototype.onClose = function (ev) {
        CommonUtil_1.utils.CommonUtils.log("onClose 关闭连接:curReconnetCount = ", this.curReconnetCount + "  ev = ", ev);
        this.closeReason = ev.reason;
        //断线关闭自动射击、清除子弹
        BatteryController_1.default.Instance.StopAutoAttack();
        BatteryController_1.default.Instance.StopLockAttack();
        GameFacade_1.default.Instance.HuntSceneMng.DeleteAllBulletsIns();
        GameFacade_1.default.Instance.SceneMng.close(4 /* Reconnectting */);
        //网络问题，正常掉线
        if (ev.reason == "") {
            this.curReconnetCount++;
            this.EventManager.dispatch(GameEvent_1.default.SOCKET_CLOSE + this.getSocketTypeStr());
            //GameFacade.Instance.HuntSceneMng.DeleteAllFishsIns();
        }
        //被踢下线
        else {
            var arrbuf = this.NetCloseReasonHandle(ev.reason);
            // var byte:Laya.Byte = new Laya.Byte(arrbuf);
            // let reason:string = byte.getString();
            this.onMessage(arrbuf); //KictoutResp
        }
    };
    SocketServe.prototype.onError = function () {
        this.curReconnetCount++;
        CommonUtil_1.utils.CommonUtils.log("onError 连接出错:curReconnetCount = ", this.curReconnetCount);
        this.EventManager.dispatch(GameEvent_1.default.SOCKET_CLOSE + this.getSocketTypeStr());
    };
    /**
     * 网络关闭原因处理
     * @param reason 网络关闭 断开原因
     */
    SocketServe.prototype.NetCloseReasonHandle = function (reason) {
        //踢人消息
        var uint8ar = new TextEncoder().encode(reason); //①此处爆红不用处理 ②laya自带的解析有问题
        //var byte:Laya.Byte = new Laya.Byte();
        //byte.writeUTFString(reason);
        // byte.writeArrayBuffer();
        //var uint8ar = byte.getUint8Array(0, byte.length);
        //utils.CommonUtils.log("------------byte = ", byte);
        //utils.CommonUtils.log("------------uint8ar = ", uint8ar);
        var len = uint8ar.length;
        if (len <= 5) {
            len = 6;
        }
        var arrayBuff = new ArrayBuffer(len);
        var u8a = new Uint8Array(arrayBuff);
        for (var i = 0; i < len; i++) {
            u8a[i] = uint8ar[i] ? uint8ar[i] : 0;
        }
        return arrayBuff;
    };
    /**
     * 发送请求
     */
    SocketServe.prototype.send = function (code, data) {
        if (!this.socket.connected)
            return;
        // if (0 != code)
        //     utils.CommonUtils.log("send", code, data);
        if (this.socket != null) {
            var pkg = Laya.Pool.getItemByClass(this._PACKAGE_OUT_NAME, PackageOut_1.default);
            pkg.init(code);
            pkg.pack(data);
            pkg.pos = 0;
            // pkg.writeInt32(pkg.buffer.byteLength);
            this.socket.send(pkg.buffer);
            this.socket.flush();
            Laya.Pool.recover(this._PACKAGE_OUT_NAME, pkg);
            // utils.CommonUtils.log("发送数据code=",code,JSON.stringify(data) );  
        }
        else {
        }
    };
    SocketServe.prototype.connectCountOut = function () {
        var gameManager = GameFacade_1.default.Instance.GameMng;
        if (this.curReconnetCount >= SocketServe.MAX_RECONNET_COUT) {
            return true;
        }
        // 轮询
        else {
            CommonUtil_1.utils.CommonUtils.log("轮询 this.curReconnetCount = ", this.curReconnetCount);
            gameManager.serverIp = gameManager.sip[this.curReconnetCount];
            CommonUtil_1.utils.CommonUtils.log("connectCountOut gameManager.serverIp = ", gameManager.serverIp);
            return false;
        }
    };
    /**
     * 收到服务器数据
     */
    SocketServe.prototype.onMessage = function (message) {
        if (message.byteLength <= 0)
            return;
        var packageIn = new PackageIn_1.default(message);
        packageIn.unpack();
        //  utils.CommonUtils.log("onMessage", packageIn.code, packageIn.data);
        this.netReader.addPackage(packageIn);
        this.netReader.notify();
    };
    SocketServe.prototype.getSocketTypeStr = function () {
        return this.type == 0 /* GAME */ ? "" : String(1 /* USER_BEHAVIOR */);
    };
    SocketServe.MAX_RECONNET_COUT = 5;
    return SocketServe;
}());
exports.default = SocketServe;
},{"../controller/BatteryController":12,"../utils/CommonUtil":90,"./../GameFacade":3,"./../constant/GameEvent":9,"./NetReader":71,"./PackageIn":72,"./PackageOut":73}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AutoDestroy = /** @class */ (function (_super) {
    __extends(AutoDestroy, _super);
    function AutoDestroy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._delayTime = 5;
        return _this;
    }
    /**
     *
     * @param dt 延时销毁时间
     * @param bDel 是否删除该节点
     */
    AutoDestroy.prototype.InitData = function (dt, bDel) {
        this._delayTime = dt;
        this._bDelete = bDel;
        this.owner.active = true;
        Laya.timer.once(this._delayTime, this, this.DestroySelf);
    };
    AutoDestroy.prototype.DestroySelf = function () {
        if (this._bDelete)
            this.owner.destroy();
        else
            this.owner.active = false;
    };
    return AutoDestroy;
}(Laya.Script3D));
exports.default = AutoDestroy;
},{}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BezierCurvers = /** @class */ (function () {
    function BezierCurvers() {
    }
    /**
 * 根据贝塞尔公式求曲线上的点
 * @param gizmoPoints 点集
 * @param t (取值范围0-1)
 */
    BezierCurvers.GetPoint = function (gizmoPoints, t) {
        var numSections = gizmoPoints.length - 3;
        var tSec = Math.floor(t * numSections);
        var currPt = numSections - 1;
        if (currPt > tSec) {
            currPt = tSec;
        }
        var u = t * numSections - currPt;
        var a = gizmoPoints[currPt];
        var b = gizmoPoints[currPt + 1];
        var c = gizmoPoints[currPt + 2];
        var d = gizmoPoints[currPt + 3];
        var newPoint = new Laya.Vector3(0, 0, 0);
        var au = new Laya.Vector3(0, 0, 0);
        var bu = new Laya.Vector3(0, 0, 0);
        var cu = new Laya.Vector3(0, 0, 0);
        var du = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.scale(a, -1 * u * u * u, au);
        Laya.Vector3.scale(b, 3 * u * u * u, bu);
        Laya.Vector3.scale(c, -3 * u * u * u, cu);
        Laya.Vector3.scale(d, 1 * u * u * u, du);
        Laya.Vector3.add(au, bu, newPoint);
        Laya.Vector3.add(newPoint, cu, newPoint);
        Laya.Vector3.add(newPoint, du, newPoint);
        Laya.Vector3.scale(a, 2 * u * u, au);
        Laya.Vector3.scale(b, -5 * u * u, bu);
        Laya.Vector3.scale(c, 4 * u * u, cu);
        Laya.Vector3.scale(d, -1 * u * u, du);
        Laya.Vector3.add(newPoint, au, newPoint);
        Laya.Vector3.add(newPoint, bu, newPoint);
        Laya.Vector3.add(newPoint, cu, newPoint);
        Laya.Vector3.add(newPoint, du, newPoint);
        Laya.Vector3.scale(a, -1 * u, au);
        Laya.Vector3.scale(c, 1 * u, cu);
        Laya.Vector3.add(newPoint, au, newPoint);
        Laya.Vector3.add(newPoint, cu, newPoint);
        Laya.Vector3.scale(b, 2, bu);
        Laya.Vector3.add(newPoint, bu, newPoint);
        Laya.Vector3.scale(newPoint, 0.5, newPoint);
        return newPoint;
    };
    return BezierCurvers;
}());
exports.BezierCurvers = BezierCurvers;
},{}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EnumData_1 = require("../Enum/EnumData");
var NetLogin_1 = require("../net/ProtoHander/NetLogin");
var GameFacade_1 = require("../GameFacade");
/**
* name
*/
var utils;
(function (utils) {
    var CommonUtils = /** @class */ (function () {
        function CommonUtils() {
        }
        /**
         * 获得平台需要的value 数据
         * @param id id名字
         */
        CommonUtils.getValue = function (id) {
            if (document.getElementById(id) == null)
                return;
            var v = document.getElementById(id).getAttribute("value");
            var v2 = this.utf8to16(this.decodeByBase64(v));
            return v2;
        };
        /**
         * 获得当前网页的地址
         */
        CommonUtils.getLocalHref = function () {
            return window.location.href;
        };
        CommonUtils.decodeByBase64 = function (input) {
            var output = [], chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (i < input.length) {
                enc1 = CommonUtils.KEYSTR64.indexOf(input.charAt(i++));
                enc2 = CommonUtils.KEYSTR64.indexOf(input.charAt(i++));
                enc3 = CommonUtils.KEYSTR64.indexOf(input.charAt(i++));
                enc4 = CommonUtils.KEYSTR64.indexOf(input.charAt(i++));
                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;
                output.push(String.fromCharCode(chr1));
                if (enc3 !== 64) {
                    output.push(String.fromCharCode(chr2));
                }
                if (enc4 !== 64) {
                    output.push(String.fromCharCode(chr3));
                }
            }
            return output.join('');
        };
        /**
         * utf8转utf16
         * @param {Object} str
         */
        CommonUtils.utf8to16 = function (str) {
            var out, i, len, c;
            var char2, char3;
            out = "";
            len = str.length;
            i = 0;
            while (i < len) {
                c = str.charCodeAt(i++);
                switch (c >> 4) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        out += str.charAt(i - 1);
                        break;
                    case 12:
                    case 13:
                        char2 = str.charCodeAt(i++);
                        out += String.fromCharCode(((c & 0xF) << 6) | (char2 & 0x3F));
                        break;
                    case 14:
                        char2 = str.charCodeAt(i++);
                        char3 = str.charCodeAt(i++);
                        out += String.fromCharCode(((c & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F) << 0));
                        break;
                }
            }
            return out;
        };
        ;
        //GameMng.serverIp = "ws://192.168.10.93"; GameMng.serverPort = 27070; GameFacade.Instance.GameMng.isLoacalDev = true; //国强
        //GameMng.serverIp = "ws://192.168.10.43"; GameMng.serverPort = 27070; GameFacade.Instance.GameMng.isLoacalDev = true; //家乐
        //GameMng.serverIp = "ws://dev-by-1.blizzmi.local"; GameMng.serverPort = 50062; GameFacade.Instance.GameMng.isLoacalDev = true; //dev
        CommonUtils.decode = function (id, value) {
            var element = document.getElementById(id);
            if (element) {
                var attribute = element.getAttribute(value);
                if (id === "myVersion") {
                    return attribute;
                }
                return this.decodeByBase64(attribute);
            }
            switch (id) {
                case "sip":
                    return utils.CommonUtils.decodeByBase64("WyJ3c3M6XC9cL2Zpc2gteHh4LmRldi5ibGl6em1pLmNuMTIzIiwid3NzOlwvXC9maXNoLWFiYy5kZXYuYmxpenptaS5jbjEyMyIsIndzczpcL1wvZmlzaC0xMjMuZGV2LmJsaXp6bWkuY24xMjMiLCJ3c3M6XC9cL2Zpc2gtYWJjLmRldi5ibGl6em1pLmNuIiwid3NzOlwvXC9maXNoLWJsaXp6bWkuY25zIiwid3NzOlwvXC9maXNoLWJsaXp6bWkuY25zIiwid3NzOlwvXC9maXNoLWFiYi5ibGl6em1pLmNuIl0=");
                case "serverIp":
                    GameFacade_1.default.Instance.GameMng.isLoacalDev = true;
                    //return "ws://192.168.10.93"; // 国强
                    //return "ws://192.168.10.43"; // 家乐
                    return "ws://dev-by-1.blizzmi.local"; //dev
                case "lobbyUrl":
                    return utils.CommonUtils.decodeByBase64("aHR0cHM6Ly9sb2JieS53YW50Z2FtZS5vcmcvP3R5cGU9aDU=");
                case "serverPort":
                    //	return 27070;
                    return 50062;
                case "token":
                    return utils.CommonUtils.decodeByBase64("ODAxQjY5NEQ0QTYxNUYyNA==");
                case "historyUrl":
                    return utils.CommonUtils.decodeByBase64("aHR0cHM6Ly9jZG4ubHZ5ZXRvd24uY29tL2hpc3Rvcnk/c2VydmVyX2lkPTI1JmNsaWVudD1oNQ==");
                case "return":
                    return utils.CommonUtils.decodeByBase64("MQ==");
                case "play_type":
                    return 0;
                case "sheet":
                    return 0;
            }
            return "";
        };
        CommonUtils.dateformat = function (time, fmt) {
            var date = new Date(time);
            var o = {
                "M+": date.getMonth() + 1,
                "d+": date.getDate(),
                "h+": date.getHours(),
                "m+": date.getMinutes(),
                "s+": date.getSeconds(),
                "q+": Math.floor((date.getMonth() + 3) / 3),
                "S": date.getMilliseconds() //毫秒
            };
            if (/(y+)/.test(fmt))
                fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
        };
        ;
        /**
         * 数据转换 数据转化成千元符（用于金币格式）
         * @param num 钱
         */
        CommonUtils.numberFormat = function (num) {
            var coinStr = (num / 100).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,');
            return coinStr;
        };
        /**
       * 金币字体设置自动大小
       */
        CommonUtils.coinAutoFontSize = function (coinText) {
            var coinLeng = coinText.text.length;
            var coinFontSize = 22;
            if (coinLeng > 10) {
                coinFontSize = 28 - coinLeng;
            }
            coinText.fontSize = coinFontSize;
        };
        /**
           * 名字字体设置自动大小
           */
        CommonUtils.nameAutoFontSize = function (coinText) {
            var coinLeng = coinText.text.length;
            var coinFontSize = 25;
            if (coinLeng > 13) {
                coinFontSize = 25 - (coinLeng - 13) * 1.5;
            }
            coinText.fontSize = coinFontSize;
        };
        CommonUtils.huntedItemValueFontSize = function (value) {
            var len = value.text.length;
            var fontSize = 18;
            if (len >= 7) {
                fontSize = 16 - (len - 7);
            }
            value.fontSize = fontSize;
        };
        /** 服务器的数值面额转换*/
        CommonUtils.numberFixed = function (num) {
            return num / 100;
        };
        /**
           * 金币字体设置自动大小
           */
        CommonUtils.coinGunAutoFontSize = function (coinText) {
            var coinLeng = coinText.value.length;
            var coinFontSize = 12;
            if (coinLeng > 13) {
                coinFontSize = 25 - coinLeng;
            }
        };
        /**
         * 时间戳的转化
         * @param timeStamp
         */
        CommonUtils.numberToDataTime = function (timeStamp) {
            var d = new Date(timeStamp);
            if (timeStamp.toString().length == 10) {
                d = new Date(timeStamp * 1000);
            }
            var str = d.getFullYear() + '-';
            str += (d.getMonth() + 1) >= 10 ? (d.getMonth() + 1) : "0" + (d.getMonth() + 1);
            str += '-';
            str += d.getDate() >= 10 ? d.getDate() : "0" + d.getDate();
            str += " ";
            str += d.getHours() >= 10 ? d.getHours() : "0" + d.getHours();
            str += ':';
            str += d.getMinutes() >= 10 ? d.getMinutes() : "0" + d.getMinutes();
            str += ':';
            str += d.getSeconds() >= 10 ? d.getSeconds() : "0" + d.getSeconds();
            return str;
        };
        /**
         * 获得时间戳差（一般用于活动）
         * @param t
         */
        CommonUtils.getTimeDifference = function (t) {
            var budgetTime = new Date(t * 1000);
            var nowTime = new Date(this.getNowActualTimeStamp());
            var dataDiff = budgetTime.getTime() - nowTime.getTime();
            var str = null;
            if (t * 1000 >= this.getNowActualTimeStamp()) {
                var day = dataDiff / (1000 * 60 * 60 * 24);
                day = Math.floor(day);
                str = day > 0 ? day + "D " : "";
                var hours = (dataDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60);
                hours = Math.floor(hours);
                str += hours >= 10 ? hours : "0" + hours;
                str += ":";
                var minutes = (dataDiff % (1000 * 60 * 60)) / (1000 * 60);
                minutes = Math.floor(minutes);
                str += minutes >= 10 ? minutes : "0" + minutes;
                str += ":";
                var seconds = (dataDiff % (1000 * 60)) / 1000;
                seconds = Math.round(seconds);
                str += seconds >= 10 ? seconds : "0" + seconds;
            }
            else {
                str = null;
            }
            return str;
        };
        /**
         * 实际同步服务端的时间（现在时间同步服务端的时间）
         */
        CommonUtils.getNowActualTimeStamp = function () {
            return this.getNowTimeStamp() + this.getOffsetTime();
        };
        /**
         * 现在时间戳
         */
        CommonUtils.getNowTimeStamp = function () {
            return Date.now();
        };
        /**
         * 获得偏移时间
         */
        CommonUtils.getOffsetTime = function () {
            return NetLogin_1.default.Instance._timeOffset;
        };
        /**
         * 昵称格式的转化
         * @param name
         */
        CommonUtils.nickNameToFormat = function (name) {
            var n = name;
            if (n.length > 10) {
                n = n.substr(0, 10);
            }
            return n;
        };
        CommonUtils.nickNameWithSymbol = function (name) {
            var n = name;
            if (n.length > 10) {
                n = n.substr(0, 10) + "...";
            }
            return n;
        };
        /**
        * jp转类型
        * @param num 中奖等级
        */
        CommonUtils.jpWinnerToType = function (num) {
            var str;
            switch (num) {
                case 1:
                    str = "一等奖";
                    break;
                case 2:
                    str = "二等奖";
                    break;
                case 3:
                    str = "三等奖";
                    break;
                case 4:
                    str = "四等奖";
                    break;
            }
            return str;
        };
        // public static check_MoneyText(exInput: Laya.TextInput, max: number, min: number, slider: Laya.HSlider = null, MoneySupply: game.MoneySupplyDialog = null): void {
        // 	let str = exInput.text;
        // 	var end: string = "";
        // 	let arr: Array<any> = [];
        // 	// console.log(str + "str");
        // 	if (str.indexOf(".") != -1) {
        // 		end = str.substr(str.indexOf("."), str.length);
        // 		if (end.length > 3)
        // 			end = end.substr(0, 3);
        // 		// console.log(end + "^^^");
        // 		arr = str.substr(0, str.indexOf(".")).split("");
        // 	}
        // 	else
        // 		arr = str.split("");
        // 	var len: number = str.length;
        // 	var a: Array<number> = [];
        // 	for (var i = 0; i < arr.length; i++) {
        // 		if (Number(arr[i]) || arr[i] == "0") {
        // 			var n: number = Number(arr[i]);
        // 			a.push(n)
        // 		}
        // 	}
        // 	var money: number = Number(a.join(""));
        // 	var n: number = 10;
        // 	var x: number = 0;
        // 	if (end != "" && end.length > 1) {
        // 		if (end.length == 3) n = 100;
        // 		x = Number(end.substr(1, end.length)) / n;
        // 	}
        // 	// console.log(money + "money");
        // 	if (money + x > max / 100) {
        // 		money = max / 100;
        // 		exInput.text = String(max / 100);
        // 		this.check_MoneyText(exInput, max, min, slider);
        // 	} else if (money + x < min / 100) {
        // 		money = min / 100;
        // 		exInput.text = String(min / 100);
        // 		this.check_MoneyText(exInput, max, min, slider);
        // 	}
        // 	else
        // 		exInput.text = this.formatNum_00(money) + end;
        // 	if (slider != null) { //进度条有问题。
        // 		var num: number = Number(money + end) / max;
        // 		if (MoneySupply)
        // 			MoneySupply.isSliderEvent = false;
        // 		slider.value = num * 10000;
        // 	}
        // }
        CommonUtils.formatNum_00 = function (num, insertSign) {
            if (insertSign === void 0) { insertSign = ","; }
            var s = num.toString();
            var n;
            var arr;
            if (s.indexOf(".") == -1)
                n = "";
            else {
                arr = s.split("");
                arr.splice(arr.indexOf("."), 1);
                n = "." + arr.splice(arr.length - 2, 2).join("");
                s = arr.join("");
            }
            arr = [];
            var str = Number(num).toString();
            var idx = 0;
            for (var i = str.length - 1; i >= 0; i--) {
                idx++;
                if (idx == 3 && i != 0) {
                    idx = 1;
                    str = str.substring(0, i) + insertSign + str.substr(i);
                    i--;
                }
            }
            return str + n;
        };
        CommonUtils.check_Phone_Text = function (inputString) {
            var str = inputString;
            var end = "";
            var arr = [];
            // console.log(str + "str");
            if (str.indexOf(".") != -1) {
                end = str.substr(str.indexOf("."), str.length);
                if (end.length > 3)
                    end = end.substr(0, 3);
                if (end.indexOf(".") > -1 && end.lastIndexOf(".") > -1 && end.indexOf(".") != end.lastIndexOf(".")) {
                    end = ".0";
                }
                // console.log(end + "^^^");
                arr = str.substr(0, str.indexOf(".")).split("");
            }
            else
                arr = str.split("");
            var len = str.length;
            var a = [];
            for (var i = 0; i < arr.length; i++) {
                if (Number(arr[i]) || arr[i] == "0") {
                    var n = Number(arr[i]);
                    a.push(n);
                }
            }
            var money = Number(a.join(""));
            var n = 10;
            var x = 0;
            if (end != "" && end.length > 1) {
                if (end.length == 3)
                    n = 100;
                x = Number(end.substr(1, end.length)) / n;
            }
            return this.formatNum_00(money) + end;
        };
        CommonUtils.Check_Input = function (text) {
            if (text == "00" || text == "." || text.match(/[^0-9.]/g)) {
                text = text.substring(0, text.length - 1);
            }
            if (text.match(/./g) && text.match(/./g).length > 1 || text.match(/[^0-9.]/g)) {
                text = text.substring(0, text.length - 1);
            }
            if (text.split(/./)[1] && text.split(/./)[1].length == 3) {
                text = text.substring(0, text.length - 1);
            }
            if (isNaN(text) || text == null || text == "") {
                if (text.length > 1)
                    text = 0;
            }
            else {
                text = text >= 0 ? text : 0;
            }
            return text;
        };
        CommonUtils.getLimitString = function (str, limitLen) {
            var curName = '';
            var curNameSize = 0;
            while (curNameSize < limitLen && str[curName.length] != null) {
                curNameSize += str.charCodeAt(curName.length) <= 126 ? 1 : 2;
                curName += str[curName.length];
            }
            if (curName.length < str.length) {
                curName = curName.substr(0, (curName.charCodeAt(curName.length - 1) <= 126 ? curName.length - 2 : curName.length - 1));
                curName += '...';
            }
            return curName;
        };
        ;
        CommonUtils.stringFormat = function (content, args) {
            for (var i = 0; i < args.length; i++) {
                var regexp = new RegExp('\\{' + i + '\\}', 'gi');
                content = content.replace(regexp, args[i]);
            }
            return content;
        };
        CommonUtils.getDateStr = function (year, month, day, config) {
            config = config || { minDate: "1900-01-01", maxDate: "2099-12-31" };
            utils.CommonUtils.log(utils.CommonUtils.stringFormat("year: {0}, month: {1}, day: {2}", [year, month, day]));
            var arry = [];
            //计算某年某月有多少天,如果是二月，闰年28天否则29天
            var setMonthDays = function (year, month) {
                var er = year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ? 29 : 28;
                return [31, er, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];
            };
            //得到指定月的上个月最后一天传进来按12月算
            var getPervMonthLastDay = function (year, month) {
                return new Date(year, month - 1, 0).getDate();
            };
            //补齐数位
            var digit = function (num) {
                return num < 10 ? "0" + num : num.toString();
            };
            //当前月第一天是星期几
            var date = setMonthDays(year, month);
            var weekday = new Date(year, month - 1, 1).getDay();
            //根据这个星期算前面几天的上个月最后几天
            var prevLastDay = weekday !== 0 ? weekday : weekday + 7;
            //得到上个月最后一天
            var pervMonthlastDay = getPervMonthLastDay(year, month);
            var currentMonthDays = getPervMonthLastDay(year, month + 1);
            //上月最后几天循环
            var lastdays = pervMonthlastDay - prevLastDay;
            //判断是否超出允许的日期范围
            var startDay = 1;
            var minArr = config.minDate.split("-");
            var maxArr = config.maxDate.split("-");
            var endDay = currentMonthDays;
            var thisDate = new Date(year, month, day);
            var firstDate = new Date(year, month, 1);
            var lastDate = new Date(year, month, currentMonthDays);
            var minTime = new Date(minArr[0], minArr[1], minArr[2]);
            var maxTime = new Date(maxArr[0], maxArr[1], maxArr[2]);
            var minDateDay = minTime.getDate();
            if (minTime > lastDate) {
                startDay = currentMonthDays + 1;
            }
            else if (minTime >= firstDate && minTime <= lastDate) {
                startDay = minDateDay;
            }
            else if (minTime >= firstDate) {
            }
            if (maxTime) {
                var maxDateDay = maxTime.getDate();
                if (maxTime < firstDate) {
                    endDay = startDay;
                }
                else if (maxTime >= firstDate && maxTime <= lastDate) {
                    endDay = maxDateDay;
                }
            }
            //循环上月剩余的天数
            for (var p = prevLastDay - 1; p >= 0; p--) {
                var py = 0;
                var pm = 0;
                var preCls = 0;
                var preDays = digit(pervMonthlastDay - p);
                month === 1 ? (py = year - 1, pm = 13) : (py = year, pm = month);
                var thatpretm = parseInt(py.toString() + digit(pm - 1).toString() + preDays.toString());
                var minpretm = parseInt(minArr[0].toString() + digit(minArr[1]).toString() + digit(minArr[2]).toString());
                var maxnexttm = parseInt(maxArr[0].toString() + digit(maxArr[1]).toString() + digit(maxArr[2]).toString());
                var inTime = thatpretm >= minpretm && thatpretm <= maxnexttm ? "prevdate" : "disabled";
                arry.push({
                    inTime: inTime,
                    py: py,
                    pm: pm - 1,
                    pd: preDays
                });
            }
            //循环本月的天数,将日期按允许的范围分三段拼接
            for (var i = 1; i < startDay; i++) {
                i = digit(i);
                arry.push({
                    inTime: "disabled",
                    py: year,
                    pm: month,
                    pd: i
                });
            }
            for (var j = startDay; j <= endDay; j++) {
                j = digit(j);
                arry.push({
                    inTime: day == j ? "action" : "normal",
                    py: year,
                    pm: month,
                    pd: j
                });
            }
            for (var k = endDay + 1; k <= currentMonthDays; k++) {
                k = digit(k);
                arry.push({
                    inTime: "disabled",
                    py: year,
                    pm: month,
                    pd: k
                });
            }
            //循环补上下个月的开始几天
            var nextDayArr = [], nextMonthStartDays = 42 - prevLastDay - setMonthDays(year, month);
            for (var n = 1; n <= nextMonthStartDays; n++) {
                var ny, nm, nextCls;
                n = digit(n);
                month >= 12 ? (ny = year + 1, nm = 0) : (ny = year, nm = month);
                var thatnexttm = parseInt(ny.toString() + digit(parseInt(nm) + 1).toString() + digit(n).toString()), minnexttm = parseInt(minArr[0].toString() + digit(minArr[1]).toString() + digit(minArr[2]).toString()), maxnexttm = parseInt(maxArr[0].toString() + digit(maxArr[1]).toString() + digit(maxArr[2]).toString());
                nextCls = thatnexttm <= maxnexttm && thatnexttm >= minnexttm ? "nextdate" : nextCls = "disabled";
                arry.push({
                    inTime: nextCls,
                    py: ny,
                    pm: nm + 1,
                    pd: n
                });
            }
            // utils.CommonUtils.log(JSON.stringify(arry));
            return arry;
        };
        CommonUtils.formatNumber = function (num) {
            num = num / 100;
            var sign = num >= 0;
            num = Math.abs(num);
            var str = num.toString();
            if (str.indexOf(".") > -1 && str.split(".")[1].length > 2) {
                var index = str.indexOf(".");
                var len = str.length;
                str = str.substring(0, index + 3);
            }
            var value = str.replace(/(^|\s)\d+/g, function (m) {
                return m.replace(/(?=(?!\b)(\d{3})+$)/g, ',');
            });
            return sign ? value : "-" + value;
        };
        ;
        CommonUtils.formatNumberWith00 = function (num) {
            var value = this.formatNumber(num);
            utils.CommonUtils.log("value = ", value);
            var i = value.indexOf(".");
            if (i == -1) //没有.
             {
                value += "." + "00";
            }
            else if (i == value.length - 2) {
                value += "0";
            }
            return value;
        };
        CommonUtils.just_num = function (exInput) {
            var str = exInput;
            var end = "";
            var arr = [];
            // console.log(str + "str");
            if (str.indexOf(".") != -1) {
                end = str.substr(str.indexOf("."), str.length);
                if (end.length > 3)
                    end = end.substr(0, 3);
                arr = str.substr(0, str.indexOf(".")).split("");
            }
            else
                arr = str.split("");
            var len = str.length;
            var a = [];
            for (var i = 0; i < arr.length; i++) {
                if (Number(arr[i]) || arr[i] == "0") {
                    var n = Number(arr[i]);
                    a.push(n);
                }
            }
            var money = Number(a.join(""));
            if (end != "" && end.length > 1) {
                var endTemp = ".";
                var endArr = [];
                endArr = end.substr(1, end.length).split("");
                for (var i = 0; i < endArr.length; i++) {
                    if (Number(endArr[i]) || endArr[i] == "0") {
                        endTemp += Number(endArr[i]);
                    }
                }
                end = endTemp;
            }
            return money + end;
        };
        CommonUtils.log = function (message) {
            var optionalParams = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                optionalParams[_i - 1] = arguments[_i];
            }
            if (CommonUtils.isDebug) {
                console.log.apply(console, [message].concat(optionalParams));
            }
        };
        CommonUtils.warn = function (message) {
            var optionalParams = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                optionalParams[_i - 1] = arguments[_i];
            }
            if (CommonUtils.isDebug) {
                console.warn.apply(console, [message].concat(optionalParams));
            }
        };
        CommonUtils.random = function (min, max) {
            return Math.floor(Math.random() * (max - min)) + min;
        };
        CommonUtils.randomFloat = function (min, max) {
            return Math.random() * (max - min) + min;
        };
        CommonUtils.distance = function (x1, y1, x2, y2) {
            return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
        };
        CommonUtils.setItem = function (key, value) {
            Laya.LocalStorage.setItem(key, value);
        };
        CommonUtils.getItem = function (key) {
            return Laya.LocalStorage.getItem(key);
        };
        CommonUtils.getTimeByTimeZone = function (time, index) {
            if (typeof index !== 'number')
                return;
            var d = new Date();
            //本地时间与GMT时间的时间偏移差
            var offset = d.getTimezoneOffset() * 60000;
            //得到现在的格林尼治时间
            var utcTime = time + offset;
            return utcTime + 3600000 * index;
        };
        CommonUtils.httpRequest = function (url, context, onCompleteHandler, onErrorHandler, onProcessHandler, data, method, responseType, headers) {
            if (context === void 0) { context = null; }
            if (onCompleteHandler === void 0) { onCompleteHandler = null; }
            if (onErrorHandler === void 0) { onErrorHandler = null; }
            if (onProcessHandler === void 0) { onProcessHandler = null; }
            if (data === void 0) { data = null; }
            if (method === void 0) { method = "post"; }
            if (responseType === void 0) { responseType = "json"; }
            if (headers === void 0) { headers = null; }
            var xhr = new Laya.HttpRequest();
            xhr.once(Laya.Event.COMPLETE, context, (function (request) {
                return function (e) {
                    onCompleteHandler.apply(context, [e, request.data]);
                };
            })(xhr));
            xhr.once(Laya.Event.ERROR, context, onErrorHandler);
            xhr.once(Laya.Event.PROGRESS, context, onProcessHandler);
            xhr.send(url, data, "get", responseType, []);
            return xhr;
        };
        /***
         *  是否为app版本
         */
        CommonUtils.isApp = function () {
            var userAgent = navigator.userAgent.toLowerCase();
            return userAgent.indexOf("browser_type/android_app") != -1;
        };
        /** 是否需要适配*/
        CommonUtils.isIphonXAdapte = function () {
            var angle = 0;
            //如果是APP大厅,设备是iphoneX 刘海的高度44pt
            //横屏 左旋：90  右旋：-90
            if (window.orientation) {
                angle = window.orientation;
            }
            // else if (screen.msOrientation) {
            // 	angle = screen.msOrientation.;
            // }
            //utils.CommonUtils.log("----------screen.msOrientation = ", screen.msOrientation);
            //utils.CommonUtils.log("----------angle = ", angle);
            if (navigator.userAgent.indexOf("Devcice_Type/iPhoneX") > -1) {
                //utils.CommonUtils.log("----isIphonX 是也");
                if (angle >= 0) {
                    return true;
                }
            }
            return false;
        };
        /**
         * 将屏幕坐标转换到世界坐标
         * @param cam 相机
         * @param sourcePos 视口坐标
         */
        CommonUtils.ScreenToWorldPoint = function (cam, sourcePos) {
            var bOrthographic = cam.orthographic;
            cam.orthographic = true;
            cam.orthographicVerticalSize = 11.5;
            var outPos = new Laya.Vector3(0, 0, 0);
            cam.convertScreenCoordToOrthographicCoord(sourcePos, outPos);
            outPos.z = 0;
            cam.orthographic = bOrthographic;
            return outPos;
        };
        /**
         * 给对象添加组件并返回添加的组件
         * @param trans 待添加组件的对象
         * @param type 组件类型
         */
        CommonUtils.CustomAddComponent = function (trans, type) {
            var component = trans.getComponent(type);
            if (null == component)
                component = trans.addComponent(type);
            return component;
        };
        CommonUtils.CreatLayaImg = function (path, pos, parent, anchorX, anchorY) {
            if (anchorX === void 0) { anchorX = 0.5; }
            if (anchorY === void 0) { anchorY = 0.5; }
            var img = new Laya.Image(path);
            img.anchorX = anchorX;
            img.anchorY = anchorY;
            img.pos(pos.x, pos.y);
            //img.mouseThrough = false;
            //img.mouseEnabled = true;
            parent.addChild(img);
            return img;
        };
        CommonUtils.CreatLayaLabel = function (pos, width, parent, fontSize) {
            var label = new Laya.Label(""); //info.getChild("UserNameLabel").asLabel;
            label.pos(pos.x, pos.y);
            label.align = "center";
            label.width = width;
            label.fontSize = fontSize;
            parent.addChild(label);
            return label;
        };
        CommonUtils.CreatFontClip = function (pos, skin, sheet, parent, width) {
            var fontclip = new Laya.FontClip(skin, sheet);
            fontclip.align = "center";
            fontclip.width = width;
            fontclip.pos(pos.x, pos.y);
            fontclip.spaceX = -3;
            fontclip.zOrder = EnumData_1.default.SCREEN_ZODER.BounsFont;
            parent.addChild(fontclip);
            return fontclip;
        };
        CommonUtils.isDebug = true;
        CommonUtils.KEYSTR64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        /**
         * 是否是首次进房
         */
        CommonUtils.isFirstEnterRoom = true;
        return CommonUtils;
    }());
    utils.CommonUtils = CommonUtils;
})(utils = exports.utils || (exports.utils = {}));
},{"../Enum/EnumData":1,"../GameFacade":3,"../net/ProtoHander/NetLogin":80}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL1Rvb2xzL0xheWFBaXJJREUvcmVzb3VyY2VzL2FwcC9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwic3JjL0VudW0vRW51bURhdGEudHMiLCJzcmMvR2FtZUNvbmZpZy50cyIsInNyYy9HYW1lRmFjYWRlLnRzIiwic3JjL01haW4udHMiLCJzcmMvY29uZmlnL0Nhbm5vbkNvbmZpZy50cyIsInNyYy9jb25maWcvRmlzaEJhc2VDb25maWcudHMiLCJzcmMvY29uc3RhbnQvQ29tbW9uQ29uc3RhbnQudHMiLCJzcmMvY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlLnRzIiwic3JjL2NvbnN0YW50L0dhbWVFdmVudC50cyIsInNyYy9jb25zdGFudC9MYW5ndWFnZUNvbnN0YW50LnRzIiwic3JjL2NvbnN0YW50L1NvdW5kTmFtZUNvbnN0YW50LnRzIiwic3JjL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXIudHMiLCJzcmMvY29udHJvbGxlci9GaXNoQ29udHJvbGxlci50cyIsInNyYy9nYW1lL0J1bGxldC9CdWxsZXRCYXNlLnRzIiwic3JjL2dhbWUvQnVsbGV0L0J1bGxldEluZm8udHMiLCJzcmMvZ2FtZS9CdWxsZXQvSEYzREJ1bGxldENsYXNzZXMudHMiLCJzcmMvZ2FtZS9Db2luRWZmZWN0L0NvaW5GbHlpbmcudHMiLCJzcmMvZ2FtZS9GaXNoL0Zpc2hCYXNlLnRzIiwic3JjL2dhbWUvRmlzaC9GaXNoQmFzZUNvbmZpZ0RhdGEudHMiLCJzcmMvZ2FtZS9GaXNoL0Zpc2hJbmZvLnRzIiwic3JjL2dhbWUvRmlzaC9IRjNERmlzaENsYXNzZXMudHMiLCJzcmMvZ2FtZS9HYW1lU3RhcnQudHMiLCJzcmMvZ2FtZS9JdGVtL0Nhbm5vbi50cyIsInNyYy9nYW1lL0l0ZW0vSHVudGVkSXRlbS50cyIsInNyYy9nYW1lL0l0ZW0vTWVudS50cyIsInNyYy9nYW1lL0l0ZW0vU2VsZWN0SXRlbS50cyIsInNyYy9nYW1lL0xvZ2luL0FjdC9SZWJhdGVBY3QudHMiLCJzcmMvZ2FtZS9Mb2dpbi9BZGRXZWJwYWdlcy9BZGRXZWJwYWdlLnRzIiwic3JjL2dhbWUvTG9naW4vQ2FtZXJhL0NhbWVyYU1vdmUudHMiLCJzcmMvZ2FtZS9Mb2dpbi9IdHRwL0h0dHAudHMiLCJzcmMvZ2FtZS9Mb2dpbi9KcC9KcEJlYXQudHMiLCJzcmMvZ2FtZS9Mb2dpbi9NYXJxdWVlL01hcnF1ZWVNb3ZlLnRzIiwic3JjL2dhbWUvTG9naW4vTWFycXVlZS9NYXJxdWVlUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9BdXRvQXR0YWNrUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9CYXNlUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9GdW5kVGlwUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9Hcm93dGhGdW5kUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9HdWlkZVBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvSGFsbFBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvSGVscFBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvSHVudEF3YXJkUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9IdW50UGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9IdW50ZWRQYW5lbC50cyIsInNyYy9nYW1lL1BhbmVsL0pwUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9MZXZlbEJvbnVzUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9Mb2FkaW5nUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9MdkRldGFpbFBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvTHZSZWNvcmRzUGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9QZXJzb25hbEluZm9QYW5lbC50cyIsInNyYy9nYW1lL1BhbmVsL1Byb21wdFBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvUmFua2luZ1BhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvUmVjb25uZWN0dGluZ1RpcC50cyIsInNyYy9nYW1lL1BhbmVsL1NlbGVjdFBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvU2V0dGluZ1BhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvVXBncmFkZVBhbmVsLnRzIiwic3JjL2dhbWUvUGFuZWwvV2FsbGVyS2V5UGFuZWwudHMiLCJzcmMvZ2FtZS9QYW5lbC9XYWxsZXRQYW5lbC50cyIsInNyYy9nYW1lL1BhbmVsL1dpbm5lclBhbmVsLnRzIiwic3JjL21hbmFnZXIvQmFzZU1hbmFnZXIudHMiLCJzcmMvbWFuYWdlci9Db25maWdNYW5hZ2VyLnRzIiwic3JjL21hbmFnZXIvRXZlbnRNYW5hZ2VyLnRzIiwic3JjL21hbmFnZXIvR2FtZU1hbmdlci50cyIsInNyYy9tYW5hZ2VyL0h1bnRTY2VuZU1hbmFnZXIudHMiLCJzcmMvbWFuYWdlci9PdGhlck1hbmFnZXIudHMiLCJzcmMvbWFuYWdlci9SZXNvdXJjZU1hbmdlci50cyIsInNyYy9tYW5hZ2VyL1NjZW5lTWFuYWdlci50cyIsInNyYy9tYW5hZ2VyL1NvY2tldE1hbmFnZXIudHMiLCJzcmMvbWFuYWdlci9Tb3VuZHNNYW5hZ2VyLnRzIiwic3JjL21hbmFnZXIvVGlwTWFuYWdlci50cyIsInNyYy9tYW5hZ2VyL1dhbGxldE1hbmFnZXIudHMiLCJzcmMvbmV0L05ldFJlYWRlci50cyIsInNyYy9uZXQvUGFja2FnZUluLnRzIiwic3JjL25ldC9QYWNrYWdlT3V0LnRzIiwic3JjL25ldC9Qcm90b0J1Zi50cyIsInNyYy9uZXQvUHJvdG9IYW5kZXIvRXZlbnROZXRSZXNwb25zZS50cyIsInNyYy9uZXQvUHJvdG9IYW5kZXIvTmV0QWN0LnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRBd2FyZC50cyIsInNyYy9uZXQvUHJvdG9IYW5kZXIvTmV0QnJvYWRjYXN0LnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRKcFBvb2wudHMiLCJzcmMvbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luLnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRSYW5raW5nLnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRSZXBvcnQudHMiLCJzcmMvbmV0L1Byb3RvSGFuZGVyL05ldFJvbGVJbmZvLnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRSb29tLnRzIiwic3JjL25ldC9Qcm90b0hhbmRlci9OZXRXYWxsZXQudHMiLCJzcmMvbmV0L1Byb3RvSGFuZGVyL05ldFdhbm5lcnMudHMiLCJzcmMvbmV0L1NvY2tldFNlcnZlci50cyIsInNyYy91dGlscy9BdXRvRGVzdHJveS50cyIsInNyYy91dGlscy9CZXppZXJDdXJ2ZXJzLnRzIiwic3JjL3V0aWxzL0NvbW1vblV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVkEsSUFBTyxRQUFRLENBbUlkO0FBbklELFdBQU8sUUFBUTtJQVFiLENBQUM7SUEwQ0YsK0JBQStCO0lBQy9CLElBQVksV0F1Q1g7SUF2Q0QsV0FBWSxXQUFXO1FBRXRCLGlEQUFVLENBQUE7UUFDVixpREFBVSxDQUFBO1FBQ1YsaURBQVUsQ0FBQTtRQUNWLGlEQUFVLENBQUE7UUFDVixpREFBVSxDQUFBO1FBQ1YsaURBQVUsQ0FBQTtRQUNWLGlEQUFVLENBQUE7UUFDVixpREFBVSxDQUFBO1FBQ1YsaURBQVUsQ0FBQTtRQUNWLG9EQUFZLENBQUE7UUFDWixvREFBWSxDQUFBO1FBQ1osb0RBQVksQ0FBQTtRQUNaLG9EQUFZLENBQUE7UUFDWixvREFBWSxDQUFBO1FBQ1osb0RBQVksQ0FBQTtRQUNaLG9EQUFZLENBQUE7UUFDWixvREFBWSxDQUFBO1FBRVosb0RBQVksQ0FBQTtRQUNaLG9EQUFZLENBQUE7UUFDWixvREFBWSxDQUFBO1FBRVosNERBQWdCLENBQUE7UUFDaEIsb0RBQVksQ0FBQTtRQUNaLDhEQUFpQixDQUFBO1FBQ2pCLGdFQUFrQixDQUFBO1FBQ2xCLDRCQUE0QjtRQUM1QixvREFBWSxDQUFBO1FBQ1osNEJBQTRCO1FBQzVCLDhDQUFTLENBQUE7UUFDVCw0REFBZ0IsQ0FBQTtR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Q3JDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRXpDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRXpDLElBQUksQ0FBQyxPQUFPLENBQUMs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Q0FBQyxJQUFJLGtCQUFrQixFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUM3QyxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxDQUFDO2dCQUNwQixDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNiLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLEVBQUUsRUFBRSxHQUFHLEtBQUssQ0FBQyxDQUFDO2dCQUNoRSxJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQ2xHLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsRUFDdEcsU0FBUyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2dCQUN4RyxPQUFPLEdBQUcsVUFBVSxJQUFJLFNBQVMsSUFBSSxVQUFVLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBRyxVQUFVLENB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QUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUM3RCxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztZQUMxQixRQUFRLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUN2QixRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNCLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckIsUUFBUSxDQUFDLE1BQU0sR0FBRyxrQkFBUSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7WUFDbEQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUUxQixPQUFPLFFBQVEsQ0FBQztRQUNqQixDQUFDO1FBMzJCYSxtQkFBTyxHQUFZLElBQUksQ0FBQztRQUN2QixvQkFBUSxHQUFXLG1FQUFtRSxDQUFDO1FBaU50Rzs7V0FFRztRQUNXLDRCQUFnQixHQUFZLElBQUksQ0FBQztRQXVwQmhELGtCQUFDO0tBOTJCRCxBQTgyQkMsSUFBQTtJQTkyQlksaUJBQVcsY0E4MkJ2QixDQUFBO0FBQ0YsQ0FBQyxFQWgzQmEsS0FBSyxHQUFMLGFBQUssS0FBTCxhQUFLLFFBZzNCbEIiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG4oZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwibW9kdWxlIEVudW1EYXRhIHtcclxuXHJcblx0LyoqXHJcblx0ICogc29ja2V06L+e5o6l57G75Z6LXHJcblx0ICovXHJcblx0ZXhwb3J0IGNvbnN0IGVudW0gRW51bVNvY2tldFR5cGUge1xyXG5cdFx0R0FNRSxcclxuXHRcdFVTRVJfQkVIQVZJT1JcclxuXHR9O1xyXG5cclxuXHRleHBvcnQgY29uc3QgZW51bSBFbnVtUGFuZWxUeXBlIHtcclxuXHRcdEhhbGxQYW5lbCA9IDAsXHJcblx0XHRIdW50UGFuZWwgPSAxLFxyXG5cdFx0TG9hZGluZ1BhbmVsID0gMixcclxuXHRcdFByb21wdFBhbmVsID0gMyxcclxuXHRcdFJlY29ubmVjdHRpbmcgPSA0LFxyXG5cdFx0U2V0dGluZ1BhbmVsID0gNSxcclxuXHRcdEhlbHBQYW5lbCA9IDYsXHJcblx0XHRSYW5raW5nUGFuZWwgPSA3LFxyXG5cdFx0R3VpZGVQYW5lbCA9IDgsXHJcblx0XHRBdXRvQXR0YWNrUGFuZWwgPSA5LFxyXG5cdFx0V2FsbGV0UGFuZWwgPSAxMCxcclxuXHRcdEpwUGFuZWwgPSAxMSxcclxuXHRcdFBlcnNvbmFsSW5mb1BhbmVsID0gMTIsXHJcblx0XHRGdW5kVGlwUGFuZWwgPSAxMyxcclxuXHRcdEdyb3d0aEZ1bmRQYW5lbCA9IDE0LFxyXG5cdFx0TGV2ZWxCb251c1BhbmVsID0gMTUsXHJcblx0XHRMdlJlY29yZHNQYW5lbCA9IDE2LFxyXG5cdFx0VXBncmFkZVBhbmVsID0gMTcsXHJcblx0XHRXaW5uZXJQYW5lbCA9IDE4LFxyXG5cdFx0TWFycXVlZVBhbmVsID0gMTksXHJcblx0XHRMdkRldGFpbFBhbmVsID0gMjAsXHJcblx0fVxyXG5cclxuXHRleHBvcnQgY29uc3QgZW51bSBFbnVtUHJvbXB0VHlwZSB7XHJcblx0XHRTdG9wQXV0b0F0dGFjayxcclxuXHRcdExvZ2luT3RoZXIsXHJcblx0XHRBY2NvdW50RXJyb3IsXHJcblx0XHRFeGl0SHVudFNjZW5lLFxyXG5cdFx0UmVmZXNoR2FtZSxcclxuXHR9XHJcblxyXG5cdC8v5bCE5Ye75qih5byPXHJcblx0ZXhwb3J0IGNvbnN0IGVudW0gU2hvb3RUeXBlIHtcclxuXHRcdFNIT09UX05PUk1BTCA9IDAsICAgICAgICAgICAvL+aZrumAmuaooeW8j1xyXG5cdFx0U0hPT1RfQVVUTyA9IDEsICAgICAgICAgICAgIC8v6Ieq5Yqo5qih5byPXHJcblx0XHRTSE9PVF9MT0NLID0gMiwgICAgICAgICAgICAvL+mUgeWumuaooeW8j1xyXG5cdFx0U0hPT1RfU1RPUCA9IDMsICAgICAgICAgICAgICAvLyDlgZzmraLlsITlh7tcclxuXHR9XHJcblxyXG5cdC8vLyA8c3VtbWFyeT7psbznsbvlnovvvIjlrZDnsbvlnovvvIk8L3N1bW1hcnk+XHJcblx0ZXhwb3J0IGVudW0gRmlzaFN1YnR5cGUge1xyXG5cclxuXHRcdEZpc2hfMSA9IDEsXHJcblx0XHRGaXNoXzIgPSAyLFxyXG5cdFx0RmlzaF8zID0gMyxcclxuXHRcdEZpc2hfNCA9IDQsXHJcblx0XHRGaXNoXzUgPSA1LFxyXG5cdFx0RmlzaF82ID0gNixcclxuXHRcdEZpc2hfNyA9IDcsXHJcblx0XHRGaXNoXzggPSA4LFxyXG5cdFx0RmlzaF85ID0gOSxcclxuXHRcdEZpc2hfMTAgPSAxMCxcclxuXHRcdEZpc2hfMTEgPSAxMSxcclxuXHRcdEZpc2hfMTIgPSAxMixcclxuXHRcdEZpc2hfMTMgPSAxMyxcclxuXHRcdEZpc2hfMTQgPSAxNCxcclxuXHRcdEZpc2hfMTUgPSAxNSxcclxuXHRcdEZpc2hfMTYgPSAxNixcclxuXHRcdEZpc2hfMTcgPSAxNyxcclxuXHJcblx0XHRGaXNoXzE4ID0gMTgsXHJcblx0XHRGaXNoXzE5ID0gMTksXHJcblx0XHRGaXNoXzIwID0gMjAsXHJcblxyXG5cdFx0RnJvemVuX2Zpc2ggPSAyMSxcclxuXHRcdEZpc2hfMjIgPSAyMixcclxuXHRcdEdvbGRlbl9TaGFyayA9IDIzLFxyXG5cdFx0R29sZGVuX0RyYWdvbiA9IDI0LFxyXG5cdFx0Ly8vIDxzdW1tYXJ5Pue+juS6uumxvOexu+Weizwvc3VtbWFyeT5cclxuXHRcdE1lcm1haWQgPSAyNSxcclxuXHRcdC8vLyA8c3VtbWFyeT7mtbfnm5foiLnnsbvlnos8L3N1bW1hcnk+XHJcblx0XHRTaGlwID0gMjYsXHJcblx0XHRLaW5nX2Zpc2hmMSA9IDI3LFxyXG5cdFx0S2luZ19maXNoZjIgPSAyOCxcclxuXHRcdEtpbmdfZmlzaGYzID0gMjksXHJcblx0XHRLaW5nX2Zpc2hmNCA9IDMwLFxyXG5cdFx0S2luZ19maXNoZjUgPSAzMSxcclxuXHRcdEJvbWJfZmlzaCA9IDMyLFxyXG5cdFx0VGFuYWJhdGFGZXN0aXZhbF9maXNoID0gMzMsXHJcblx0fVxyXG5cclxuXHQvLy8gPHN1bW1hcnk+6bG85omA5bGe5aSn57G75Z6LPC9zdW1tYXJ5PlxyXG5cdGV4cG9ydCBlbnVtIEZpc2hDYXRlZ29yeSB7XHJcblx0XHROb3JtYWxfRmlzaCA9IDEsXHJcblx0XHRXb3JsZF9Cb3NzID0gMixcclxuXHRcdEtpbmdfZmlzaCA9IDUsXHJcblx0XHRCb21iX2Zpc2ggPSA2LFxyXG5cdFx0RnJvemVuX2Zpc2ggPSA3LFxyXG5cdH1cclxuXHJcblx0Ly8vIDxzdW1tYXJ5PumxvOeahOeKtuaAgeaemuS4vjwvc3VtbWFyeT5cclxuXHRleHBvcnQgZW51bSBFTlVNX0ZJU0hfU1RBVEUge1xyXG5cdFx0U1dJTU1JTkcsLy/muLjliqhcclxuXHRcdFNIT1csICAgLy/lsZXnpLrliqjkvZxcclxuXHRcdFBBVVNFLCAgLy/mmoLlgZxcclxuXHRcdEhJVFRFRCwvL+iiq+WHu+S4rVxyXG5cdFx0REVBVEgsLy/mrbvkuqFcclxuXHR9XHJcblxyXG5cdGV4cG9ydCBlbnVtIFNDUkVFTl9aT0RFUiB7XHJcblxyXG5cdFx0Qm91bnNGb250ID0gMTAsXHJcblx0XHRIdW50UGFuZWxVSSA9IDExLFxyXG5cdFx0QXdhcmRQYW5lbCA9IDUwLFxyXG5cdH1cclxuXHJcblx0Ly/lrZDlvLnnmoTkuInnp43nirbmgIFcclxuXHRleHBvcnQgZW51bSBFTlVNX0JVTExFVF9TVEFURSB7XHJcblx0XHRVTkxPQ0ssIC8v5peg6ZSB5a6aXHJcblx0XHRMT0NLSU5HLC8v6ZSB5a6a5pS75Ye75LitXHJcblx0XHRMT0NLRUQgIC8v6ZSB5a6a55qE6bG85bey5q275LqhXHJcblx0fVxyXG5cclxuXHRleHBvcnQgZW51bSBBQ1RTVEFUVVMge1xyXG5cdFx0QUNUU0hPV1NUQVJUQkVGT1JFLC8v5rS75Yqo5bGV56S65YmNXHJcblx0XHRBQ1RTSE9XU1RBUlRfU1RBUlQsLy/mtLvliqjlsZXnpLrlvIDlp4vliLDmtLvliqjlvIDlp4vkuYvpl7RcclxuXHRcdEFDVFNUQVJUX0VORCwvL+a0u+WKqOW8gOWni+WIsOa0u+WKqOe7k+adn+S5i+mXtFxyXG5cdFx0QUNURU5EX1NIT1dFTkQsLy/mtLvliqjnu5PmnZ/liLDmtLvliqjlsZXnpLrnu5PmnZ/kuYvpl7RcclxuXHRcdEFDVFNIT1dFTkRBRlRFUiwvL+a0u+WKqOe7k+adn+S5i+WQjlxyXG5cdH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBFbnVtRGF0YSIsIi8qKlRoaXMgY2xhc3MgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgTGF5YUFpcklERSwgcGxlYXNlIGRvIG5vdCBtYWtlIGFueSBtb2RpZmljYXRpb25zLiAqL1xyXG5cclxuLypcclxuKiDmuLjmiI/liJ3lp4vljJbphY3nva47XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb25maWd7XHJcbiAgICBzdGF0aWMgd2lkdGg6bnVtYmVyPTEyODA7XHJcbiAgICBzdGF0aWMgaGVpZ2h0Om51bWJlcj03MjA7XHJcbiAgICBzdGF0aWMgc2NhbGVNb2RlOnN0cmluZz1cImV4YWN0Zml0XCI7XHJcbiAgICBzdGF0aWMgc2NyZWVuTW9kZTpzdHJpbmc9XCJob3Jpem9udGFsXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25WOnN0cmluZz1cInRvcFwiO1xyXG4gICAgc3RhdGljIGFsaWduSDpzdHJpbmc9XCJjZW50ZXJcIjtcclxuICAgIHN0YXRpYyBzdGFydFNjZW5lOmFueT1cInF3ZS5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBwaHlzaWNzRGVidWc6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBleHBvcnRTY2VuZVRvSnNvbjpib29sZWFuPXRydWU7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe31cclxuICAgIHN0YXRpYyBpbml0KCl7XHJcbiAgICAgICAgdmFyIHJlZzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XHJcblxyXG4gICAgfVxyXG59XHJcbkdhbWVDb25maWcuaW5pdCgpOyIsIlxyXG4vL+a4uOaIj+aAu+euoeeQhuexu1xyXG5cclxuaW1wb3J0IEdhbWVNYW5nZXIgZnJvbSBcIi4vbWFuYWdlci9HYW1lTWFuZ2VyXCI7XHJcbmltcG9ydCBFdmVudE1hbmFnZXIgZnJvbSBcIi4vbWFuYWdlci9FdmVudE1hbmFnZXJcIjtcclxuaW1wb3J0IFdhbGxldE1hbmFnZXIgZnJvbSBcIi4vbWFuYWdlci9XYWxsZXRNYW5hZ2VyXCI7XHJcbmltcG9ydCBTb2NrZXRNYW5hZ2VyIGZyb20gXCIuL21hbmFnZXIvU29ja2V0TWFuYWdlclwiO1xyXG5pbXBvcnQgUmVzb3VyY2VNYW5nZXIgZnJvbSBcIi4vbWFuYWdlci9SZXNvdXJjZU1hbmdlclwiO1xyXG5pbXBvcnQgSHVudFNjZW5lTWFuYWdlciBmcm9tIFwiLi9tYW5hZ2VyL0h1bnRTY2VuZU1hbmFnZXJcIjtcclxuaW1wb3J0IFByb3RvQnVmIGZyb20gXCIuL25ldC9Qcm90b0J1ZlwiO1xyXG5pbXBvcnQgQ29uZmlnTWFuYWdlciBmcm9tIFwiLi9tYW5hZ2VyL0NvbmZpZ01hbmFnZXJcIjtcclxuaW1wb3J0IFNjZW5lTWFuYWdlciBmcm9tIFwiLi9tYW5hZ2VyL1NjZW5lTWFuYWdlclwiO1xyXG5pbXBvcnQgeyBTb3VuZHNNYW5hZ2VyIH0gZnJvbSBcIi4vbWFuYWdlci9Tb3VuZHNNYW5hZ2VyXCI7XHJcbmltcG9ydCBUaXBNYW5hZ2VyIGZyb20gXCIuL21hbmFnZXIvVGlwTWFuYWdlclwiO1xyXG5pbXBvcnQgT3RoZXJNYW5hZ2VyIGZyb20gXCIuL21hbmFnZXIvT3RoZXJNYW5hZ2VyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lRmFjYWRlIHtcclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogR2FtZUZhY2FkZSA9IG51bGw7XHJcblxyXG4gICAgcHJpdmF0ZSBfZ2FtZU1uZzogR2FtZU1hbmdlcjtcclxuICAgIC8vIHB1YmxpYyBBdWRpb01uZzogbWFuYWdlci5BdWRpb01hbmFnZXI7XHJcbiAgICBwcml2YXRlIF9yZXNvdXJjZU1uZzogUmVzb3VyY2VNYW5nZXI7XHJcbiAgICBwcml2YXRlIF9zb2NrZXRNbmc6IFNvY2tldE1hbmFnZXI7XHJcbiAgICBwcml2YXRlIF9ldmVudE1uZzogRXZlbnRNYW5hZ2VyO1xyXG4gICAgcHJpdmF0ZSBfaHVudFNjZW5lTWFuYWdlcjogSHVudFNjZW5lTWFuYWdlcjtcclxuICAgIHByaXZhdGUgX2NvbmZpZ01hbmFnZXI6IENvbmZpZ01hbmFnZXI7XHJcbiAgICBwcml2YXRlIF9zY2VuZU1hbmFnZXI6IFNjZW5lTWFuYWdlcjtcclxuICAgIHByaXZhdGUgX3NvdW5kTWFuYWdlcjogU291bmRzTWFuYWdlcjtcclxuICAgIHB1YmxpYyBfd2FsbGV0TWFuYWdlcjogV2FsbGV0TWFuYWdlcjtcclxuICAgIHB1YmxpYyBfdGlwTWFuYWdlcjogVGlwTWFuYWdlcjtcclxuICAgIHB1YmxpYyBfb3RoZXJNYW5hZ2VyOiBPdGhlck1hbmFnZXI7XHJcbiAgICBwdWJsaWMgZ2V0IEdhbWVNbmcoKTogR2FtZU1hbmdlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fZ2FtZU1uZylcclxuICAgICAgICAgICAgdGhpcy5fZ2FtZU1uZyA9IG5ldyBHYW1lTWFuZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dhbWVNbmc7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IFJlc291cmNlTW5nKCk6IFJlc291cmNlTWFuZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9yZXNvdXJjZU1uZylcclxuICAgICAgICAgICAgdGhpcy5fcmVzb3VyY2VNbmcgPSBuZXcgUmVzb3VyY2VNYW5nZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVzb3VyY2VNbmc7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IFNvY2tldE1uZygpOiBTb2NrZXRNYW5hZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9zb2NrZXRNbmcpXHJcbiAgICAgICAgICAgIHRoaXMuX3NvY2tldE1uZyA9IG5ldyBTb2NrZXRNYW5hZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvY2tldE1uZztcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgRXZlbnRNbmcoKTogRXZlbnRNYW5hZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9ldmVudE1uZylcclxuICAgICAgICAgICAgdGhpcy5fZXZlbnRNbmcgPSBuZXcgRXZlbnRNYW5hZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V2ZW50TW5nO1xyXG4gICAgfVxyXG4gICAgcHVibGljIGdldCBIdW50U2NlbmVNbmcoKTogSHVudFNjZW5lTWFuYWdlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5faHVudFNjZW5lTWFuYWdlcilcclxuICAgICAgICAgICAgdGhpcy5faHVudFNjZW5lTWFuYWdlciA9IG5ldyBIdW50U2NlbmVNYW5hZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2h1bnRTY2VuZU1hbmFnZXI7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IENvbmZpZ01uZygpOiBDb25maWdNYW5hZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9jb25maWdNYW5hZ2VyKVxyXG4gICAgICAgICAgICB0aGlzLl9jb25maWdNYW5hZ2VyID0gbmV3IENvbmZpZ01hbmFnZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnTWFuYWdlcjtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgU2NlbmVNbmcoKTogU2NlbmVNYW5hZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9zY2VuZU1hbmFnZXIpXHJcbiAgICAgICAgICAgIHRoaXMuX3NjZW5lTWFuYWdlciA9IG5ldyBTY2VuZU1hbmFnZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2NlbmVNYW5hZ2VyO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgU291bmRNbmcoKTogU291bmRzTWFuYWdlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fc291bmRNYW5hZ2VyKVxyXG4gICAgICAgICAgICB0aGlzLl9zb3VuZE1hbmFnZXIgPSBuZXcgU291bmRzTWFuYWdlcigpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zb3VuZE1hbmFnZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBXYWxsZXRNbmcoKTogV2FsbGV0TWFuYWdlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fd2FsbGV0TWFuYWdlcilcclxuICAgICAgICAgICAgdGhpcy5fd2FsbGV0TWFuYWdlciA9IG5ldyBXYWxsZXRNYW5hZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dhbGxldE1hbmFnZXI7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IFRpcE1uZygpOiBUaXBNYW5hZ2VyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl90aXBNYW5hZ2VyKVxyXG4gICAgICAgICAgICB0aGlzLl90aXBNYW5hZ2VyID0gbmV3IFRpcE1hbmFnZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGlwTWFuYWdlcjtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgT3RoTW5nKCk6IE90aGVyTWFuYWdlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fb3RoZXJNYW5hZ2VyKVxyXG4gICAgICAgICAgICB0aGlzLl9vdGhlck1hbmFnZXIgPSBuZXcgT3RoZXJNYW5hZ2VyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX290aGVyTWFuYWdlcjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Yid5aeL5YyW5omA5pyJ55qE566h55CG5Zmo57G7XHJcbiAgICAgKi9cclxuICAgIEluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5HYW1lTW5nLkluaXQoKTtcclxuICAgICAgICB0aGlzLlJlc291cmNlTW5nLkluaXQoKTtcclxuICAgICAgICB0aGlzLlNvY2tldE1uZy5Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5FdmVudE1uZy5Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5IdW50U2NlbmVNbmcuSW5pdCgpO1xyXG4gICAgICAgIHRoaXMuQ29uZmlnTW5nLkluaXQoKTtcclxuICAgICAgICB0aGlzLlNjZW5lTW5nLmluaXQoKTtcclxuICAgICAgICB0aGlzLlRpcE1uZy5Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5XYWxsZXRNbmcuSW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IEdhbWVGYWNhZGUge1xyXG4gICAgICAgIGlmICh0aGlzLl9pbnN0YW5jZSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IEdhbWVGYWNhZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCBCb3ggPSBMYXlhLkJveDtcclxuaW1wb3J0IFNwcml0ZSA9IGxheWEuZGlzcGxheS5TcHJpdGU7XHJcbmltcG9ydCBVSUltYWdlID0gTGF5YS5JbWFnZTtcclxuaW1wb3J0IFR3ZWVuID0gbGF5YS51dGlscy5Ud2VlbjtcclxuaW1wb3J0IFBvaW50ID0gbGF5YS5tYXRocy5Qb2ludDtcclxuaW1wb3J0IEVhc2UgPSBsYXlhLnV0aWxzLkVhc2U7XHJcbmltcG9ydCBMaXN0ID0gbGF5YS51aS5MaXN0O1xyXG5pbXBvcnQgUGFuZWwgPSBsYXlhLnVpLlBhbmVsO1xyXG5pbXBvcnQgTGFiZWwgPSBsYXlhLnVpLkxhYmVsO1xyXG5pbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IENsaXAgPSBsYXlhLnVpLkNsaXA7XHJcbmltcG9ydCBTa2VsZXRvbiA9IExheWEuU2tlbGV0b247XHJcbmltcG9ydCBQb29sID0gTGF5YS5Qb29sO1xyXG5cclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuL2NvbnN0YW50L0dhbWVFdmVudFwiO1xyXG5pbXBvcnQgUHJvdG9CdWYgZnJvbSBcIi4vbmV0L1Byb3RvQnVmXCI7XHJcbmltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcclxuaW1wb3J0IEdhbWVTdGFydCBmcm9tIFwiLi9nYW1lL0dhbWVTdGFydFwiO1xyXG5cclxuY2xhc3MgTWFpbiB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBpZiAod2luZG93W1wiTGF5YTNEXCJdKSBMYXlhM0QuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XHJcbiAgICAgICAgZWxzZSBMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQsIExheWFbXCJXZWJHTFwiXSk7XHJcbiAgICAgICAgTGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBHYW1lQ29uZmlnLnNjYWxlTW9kZTtcclxuICAgICAgICBMYXlhLnN0YWdlLnNjcmVlbk1vZGUgPSBHYW1lQ29uZmlnLnNjcmVlbk1vZGU7XHJcblxyXG4gICAgICAgIC8vTGF5YS5zdGFnZS5iZ0NvbG9yID0gXCIjRkYwMDAwXCI7XHJcbiAgICAgICAgLy/lhbzlrrnlvq7kv6HkuI3mlK/mjIHliqDovb1zY2VuZeWQjue8gOWcuuaZr1xyXG4gICAgICAgIExheWEuVVJMLmV4cG9ydFNjZW5lVG9Kc29uID0gR2FtZUNvbmZpZy5leHBvcnRTY2VuZVRvSnNvbjtcclxuICAgICAgICAvL+aJk+W8gOiwg+ivlemdouadv++8iOmAmui/h0lEReiuvue9ruiwg+ivleaooeW8j++8jOaIluiAhXVybOWcsOWdgOWinuWKoGRlYnVnPXRydWXlj4LmlbDvvIzlnYflj6/miZPlvIDosIPor5XpnaLmnb/vvIlcclxuICAgICAgICBpZiAoR2FtZUNvbmZpZy5kZWJ1ZyB8fCBMYXlhLlV0aWxzLmdldFF1ZXJ5U3RyaW5nKFwiZGVidWdcIikgPT0gXCJ0cnVlXCIpIExheWEuZW5hYmxlRGVidWdQYW5lbCgpO1xyXG4gICAgICAgIGlmIChHYW1lQ29uZmlnLnBoeXNpY3NEZWJ1ZyAmJiBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXSkgTGF5YVtcIlBoeXNpY3NEZWJ1Z0RyYXdcIl0uZW5hYmxlKCk7XHJcbiAgICAgICAgaWYgKEdhbWVDb25maWcuc3RhdCkgTGF5YS5TdGF0LnNob3coKTtcclxuICAgICAgICBMYXlhLmFsZXJ0R2xvYmFsRXJyb3IgPSB0cnVlO1xyXG5cclxuICAgICAgICAvL+WPkeW4g2RldiAg5paX6bG86ZyA6KaB5bGP6JS955qEXHJcbiAgICAgICAgTGF5YS5VUkwuYmFzZVBhdGggPSBMYXlhLlVSTC5yb290UGF0aCA9IFwiXCI7XHJcblxyXG4gICAgICAgIC8v5r+A5rS76LWE5rqQ54mI5pys5o6n5Yi277yMdmVyc2lvbi5qc29u55SxSURF5Y+R5biD5Yqf6IO96Ieq5Yqo55Sf5oiQ77yM5aaC5p6c5rKh5pyJ5Lmf5LiN5b2x5ZON5ZCO57ut5rWB56iLXHJcbiAgICAgICAgTGF5YS5SZXNvdXJjZVZlcnNpb24uZW5hYmxlKFwiZ2FtZVZlcnNpb24uanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25WZXJzaW9uTG9hZGVkKSwgTGF5YS5SZXNvdXJjZVZlcnNpb24uRklMRU5BTUVfVkVSU0lPTik7XHJcbiAgICAgICAgLy9MYXlhLlN0YXQuc2hvdygwLCAwKTtcclxuICAgICAgICAvLyDkv67mlLnliJ3lp4vljJblhoXlrZhcclxuICAgICAgICB3aW5kb3dbJ0NvbmZpZzNEJ10gJiYgKHdpbmRvd1snQ29uZmlnM0QnXVsnX2RlZmF1bHRDb25maWcnXVsnX2RlZmF1bHRQaHlzaWNzTWVtb3J5J10gPSAxMDApO1xyXG4gICAgICAgIC8v6LCD55SoRGVidWdQYW5lbOiwg+ivlemdouadv1xyXG4gICAgICAgIC8vTGF5YS5QaHlzaWNzRGVidWdEcmF3LmluaXQoKTtcclxuICAgIH1cclxuICAgIG9uVmVyc2lvbkxvYWRlZCgpOiB2b2lkIHtcclxuICAgICAgICAvL+a/gOa0u+Wkp+Wwj+WbvuaYoOWwhO+8jOWKoOi9veWwj+WbvueahOaXtuWAme+8jOWmguaenOWPkeeOsOWwj+WbvuWcqOWkp+WbvuWQiOmbhumHjOmdou+8jOWImeS8mOWFiOWKoOi9veWkp+WbvuWQiOmbhu+8jOiAjOS4jeaYr+Wwj+WbvlxyXG4gICAgICAgIExheWEuQXRsYXNJbmZvTWFuYWdlci5lbmFibGUoXCJmaWxlY29uZmlnLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uQ29uZmlnTG9hZGVkKSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Db25maWdMb2FkZWQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gLy/liqDovb1JREXmjIflrprnmoTlnLrmma9cclxuICAgICAgICAvLyBHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XHJcbiAgICAgICAgbmV3IEdhbWVTdGFydCgpO1xyXG4gICAgfVxyXG5cclxufVxyXG5uZXcgTWFpbigpOyIsIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW5ub25Db25maWcge1xyXG4gICAgc3RhdGljIF9JZGxlQW5pID0gXCJJZGxlXCI7XHJcbiAgICBzdGF0aWMgX0F0dGFja0FuaSA9IFwiQXR0YWNrXCI7XHJcbn0iLCJcclxuZXhwb3J0IGNsYXNzIEZpc2hCYXNlQ29uZmlnIHtcclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDpsbznsbvlnotJRFxyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBfRmlzaFR5cGVJRDogbnVtYmVyO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDmrbvkuqHpn7PmlYjntKLlvJVcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX0Zpc2hEZWFkSW5kZXg6IG51bWJlcjtcclxuXHJcbiAgICAvLy8gPHN1bW1hcnk+XHJcbiAgICAvLy8g5q275Lqh5paH5a2XXHJcbiAgICAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgcHVibGljIF9MYXN0V29yZDogc3RyaW5nO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDlhrDlnZflpKflsI9cclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX0ljZUJsb2NrU2NhbGU6IG51bWJlcltdO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDlhrDlnZfmrKfmi4nop5JcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX0ljZUJsb2NrQW5nZWw6IG51bWJlcltdO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDpsbzlgZznlZnooYzkuLrvvIjot6/lvoTngrnvvIzlgZznlZnml7bpl7Tmr6vnp5LvvIlcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX1N0YXR5QmVoYXZpb3I6IHN0cmluZztcclxuXHJcbiAgICAvLy8gPHN1bW1hcnk+XHJcbiAgICAvLy8g6bG85ri45Yqo6YCf5bqm5Y+Y5YyWKOi3r+W+hOeCue+8jOmAn+W6puWAjeeOhylcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX1NwZWVkQmVoYXZpb3I6IHN0cmluZztcclxuXHJcbiAgICAvLy8gPHN1bW1hcnk+XHJcbiAgICAvLy8g5ri45rOz5Yqo55S7XHJcbiAgICAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgcHVibGljIF9Td2ltQW5pOiBzdHJpbmc7XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIOatu+S6oeWKqOeUu1xyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBfRGVhZEFuaTogc3RyaW5nO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDooqvlh7vliqjnlLtcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgX0hpdEFuaTogc3RyaW5nO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDlgZznlZnliqjnlLsxXHJcbiAgICAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgcHVibGljIF9TdGF5QW5pMTogc3RyaW5nO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyDlgZznlZnliqjnlLsyXHJcbiAgICAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgcHVibGljIF9TdGF5QW5pMjogc3RyaW5nO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihvYmo6c3RyaW5nKSAge1xyXG4gICAgICAgIHRoaXMuX0Zpc2hUeXBlSUQgPSBvYmpbJ0Zpc2hUeXBlSUQnXTtcclxuICAgICAgICB0aGlzLl9GaXNoRGVhZEluZGV4ID0gb2JqWydGaXNoRGVhZEluZGV4J107XHJcbiAgICAgICAgdGhpcy5fTGFzdFdvcmQgPSBvYmpbJ0xhc3RXb3JkJ107XHJcbiAgICAgICAgdGhpcy5fSWNlQmxvY2tTY2FsZSA9IG9ialsnSWNlQmxvY2tTY2FsZSddO1xyXG4gICAgICAgIHRoaXMuX0ljZUJsb2NrQW5nZWw9IG9ialsnSWNlQmxvY2tBbmdlbCddO1xyXG4gICAgICAgIHRoaXMuX1N0YXR5QmVoYXZpb3IgPSBvYmpbJ1N0YXR5QmVoYXZpb3InXTtcclxuICAgICAgICB0aGlzLl9TcGVlZEJlaGF2aW9yID0gb2JqWydTcGVlZEJlaGF2aW9yJ107XHJcbiAgICAgICAgdGhpcy5fU3dpbUFuaSA9IG9ialsnU3dpbUFuaSddO1xyXG4gICAgICAgIHRoaXMuX0RlYWRBbmkgPSBvYmpbJ0RlYWRBbmknXTtcclxuICAgICAgICB0aGlzLl9IaXRBbmkgPSBvYmpbJ0hpdEFuaSddO1xyXG4gICAgICAgIHRoaXMuX1N0YXlBbmkxID0gb2JqWydTdGF5QW5pMSddO1xyXG4gICAgICAgIHRoaXMuX1N0YXlBbmkyID0gb2JqWydTdGF5QW5pMiddO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHByaXZhdGUgc3RhdGljIERpY3Rpb25hcnk8dWludCwgRmlzaEJhc2VDb25maWdDU1ZDb25maWc+IGRpY3Rpb25hcnkgPSBuZXcgRGljdGlvbmFyeTx1aW50LCBGaXNoQmFzZUNvbmZpZ0NTVkNvbmZpZz4oKTtcclxuXHJcbiAgICAvLyAvLy8gPHN1bW1hcnk+XHJcbiAgICAvLyAvLy8g6YCa6L+HRmlzaFR5cGVJROiOt+WPlkZpc2hCYXNlQ29uZmlnQ1NWQ29uZmln55qE5a6e5L6LXHJcbiAgICAvLyAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgLy8gLy8vIDxwYXJhbSBuYW1lPVwiRmlzaFR5cGVJRFwiPue0ouW8lTwvcGFyYW0+XHJcbiAgICAvLyAvLy8gPHJldHVybnM+RmlzaEJhc2VDb25maWdDU1ZDb25maWfnmoTlrp7kvos8L3JldHVybnM+XHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIEZpc2hCYXNlQ29uZmlnQ1NWQ29uZmlnIEdldCh1aW50IEZpc2hUeXBlSUQpICB7XHJcbiAgICAvLyAgICAgcmV0dXJuIGRpY3Rpb25hcnlbRmlzaFR5cGVJRF07XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8gLy8vIOiOt+WPluWtl+WFuFxyXG4gICAgLy8gLy8vIDwvc3VtbWFyeT5cclxuICAgIC8vIC8vLyA8cmV0dXJucz7lrZflhbg8L3JldHVybnM+XHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIERpY3Rpb25hcnk8dWludCwgRmlzaEJhc2VDb25maWdDU1ZDb25maWc+IEdldERpY3Rpb25hcnkoKSAge1xyXG4gICAgLy8gICAgIHJldHVybiBkaWN0aW9uYXJ5O1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vIC8vLyDojrflj5bmiYDmnInplK5cclxuICAgIC8vIC8vLyA8L3N1bW1hcnk+XHJcbiAgICAvLyAvLy8gPHJldHVybnM+5omA5pyJ6ZSuPC9yZXR1cm5zPlxyXG4gICAgLy8gcHVibGljIHN0YXRpYyB1aW50W10gR2V0S2V5cygpICB7XHJcbiAgICAvLyAgICAgaW50IGNvdW50ID0gZGljdGlvbmFyeS5LZXlzLkNvdW50O1xyXG4gICAgLy8gICAgIHVpbnRbXSBrZXlzID0gbmV3IHVpbnRbY291bnRdO1xyXG4gICAgLy8gICAgIGRpY3Rpb25hcnkuS2V5cy5Db3B5VG8oa2V5cywgMCk7XHJcbiAgICAvLyAgICAgcmV0dXJuIGtleXM7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8gLy8vIOiOt+WPluaJgOacieWunuS+i1xyXG4gICAgLy8gLy8vIDwvc3VtbWFyeT5cclxuICAgIC8vIC8vLyA8cmV0dXJucz7miYDmnInlrp7kvos8L3JldHVybnM+XHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIEZpc2hCYXNlQ29uZmlnQ1NWQ29uZmlnW10gR2V0VmFsdWVzKCkgIHtcclxuICAgIC8vICAgICBpbnQgY291bnQgPSBkaWN0aW9uYXJ5LlZhbHVlcy5Db3VudDtcclxuICAgIC8vICAgICBGaXNoQmFzZUNvbmZpZ0NTVkNvbmZpZ1tdIHZhbHVlcyA9IG5ldyBGaXNoQmFzZUNvbmZpZ0NTVkNvbmZpZ1tjb3VudF07XHJcbiAgICAvLyAgICAgZGljdGlvbmFyeS5WYWx1ZXMuQ29weVRvKHZhbHVlcywgMCk7XHJcbiAgICAvLyAgICAgcmV0dXJuIHZhbHVlcztcclxuICAgIC8vIH1cclxufVxyXG4iLCJpbXBvcnQgR2FtZUNvbmZpZyBmcm9tIFwiLi4vR2FtZUNvbmZpZ1wiO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1vbkNvbnN0YW50IHtcclxuXHQvLyNyZWdpb24gdTNk6LWE5rqQ6Lev5b6EXHJcblxyXG5cdC8qKiDmjZXnjI7lnLrmma/ot6/lirIqL1xyXG5cdHN0YXRpYyBfaHVudFNjZW5lUGF0aDogc3RyaW5nID0gXCJ1bml0eVJlcy9IdW50U2NlbmUvQ29udmVudGlvbmFsL0h1bnRTY2VuZS5sc1wiO1xyXG5cdHN0YXRpYyBfZ3VuU2NlbmVQYXRoOiBzdHJpbmcgPSBcInVuaXR5UmVzL0xheWFTY2VuZV9HdW5TY2VuZS9Db252ZW50aW9uYWwvR3VuU2NlbmUubHNcIjtcclxuXHQvKiog5o2V54yO5Zy65pmv54m55pWI5ZCN56ew6ZuG5ZCIKi9cclxuXHRzdGF0aWMgX2h1bnRTY2VuZUVmZmVjdEFycmF5ID0ge1xyXG5cdFx0Ly8gRmlzaE5ldFByZWZhYjE6XCJGaXNoTmV0UHJlZmFiMVwiLFxyXG5cdFx0Ly8gRmlzaE5ldFByZWZhYjI6XCJGaXNoTmV0UHJlZmFiMlwiLFxyXG5cdFx0Ly8gRmlzaE5ldFByZWZhYjM6XCJGaXNoTmV0UHJlZmFiM1wiLFxyXG5cdFx0RmlzaE5ldFByZWZhYjogXCJGaXNoTmV0UHJlZmFiXCIsXHJcblx0XHRHb2xkQ29pbjogXCJHb2xkQ29pblwiLCAvL1xyXG5cdFx0R29sZF9FZmZlY3Q6IFwiR29sZF9FZmZlY3RcIixcclxuXHRcdEhhbGZfc2NyZWVuQm9tYl8yOiBcIkhhbGYtc2NyZWVuQm9tYl8yXCIsXHJcblx0XHRGdWxsX3NjcmVlbkJvbWJfMjogXCJGdWxsX3NjcmVlbkJvbWJfMlwiLFxyXG5cdFx0SGFsZlNjcmVlbkRyYXdSZXdhcmQ6IFwiSGFsZlNjcmVlbkRyYXdSZXdhcmQwMlwiLFxyXG5cdFx0Q2hhbmdlQ2Fubm9uRWZmZWN0OiBcIkNoYW5nZUNhbm5vbl9lZmZlY3RcIixcclxuXHRcdExvY2tCdXR0b25FZmZlY3Q6IFwiTG9ja0J1dHRvbkVmZmVjdFwiLFxyXG5cdFx0Qm9tYkZpc2hFeHBFZmZlY3Q6IFwiRmlzaEV4cF9FZmZlY3RfMlwiLFxyXG5cclxuXHR9XHJcblxyXG5cdHN0YXRpYyBfaHVudFNjZW5lVGVzdEFycnkgPSB7XHJcblx0XHRzaG9vdEJ1bGxldFJlcTogMCxcclxuXHRcdHNob290QnVsbGV0UmVzcDogMCxcclxuXHRcdEJ1bGxldFBhc3NSZXNwOiAwLFxyXG5cdFx0U2hvb3RFcnJvclJlc3A6IDAsXHJcblxyXG5cdFx0dXNlbGVzc0J1bGxldFJlcTogMCxcclxuXHRcdHVzZWxlc3NCdWxsZXRSZXNwOiAwLFxyXG5cclxuXHRcdGhpdEZpc2hSZXE6IDAsXHJcblx0XHRoaXRGaXNoUmVzcDogMCxcclxuXHJcblx0XHRmaXNoRGVhZFJlc3A6IDAsXHJcblx0fVxyXG5cclxuXHQvKirlpKfljoXlspvnmoTotYTmupAgKi9cclxuXHRzdGF0aWMgX2hhbGxQYXRoX2xzOiBzdHJpbmcgPSBcInVuaXR5UmVzL0xheWFTY2VuZV9oYWxsL0NvbnZlbnRpb25hbC9oYWxsLmxzXCI7XHJcblx0Lyoq6aKE6K2m5qih5Z6LICovXHJcblx0c3RhdGljIF93YXJuUGF0aF9saDogc3RyaW5nID0gXCJ1bml0eVJlcy9MYXlhU2NlbmVfV2FybkVmZmVjdC9Db252ZW50aW9uYWwvV2FybkVmZmVjdC5saFwiO1xyXG5cclxuXHJcblx0Ly8jZW5kcmVnaW9uXHJcblxyXG5cclxuXHQvLyNyZWdpb24gVUnpnaLmnb/otYTmupDot6/lvoRcclxuXHQvKiogZnVp6LWE5rqQ57uE5ZCN5a2XKi9cclxuXHRzdGF0aWMgX2dyb3VwTmFtZV9mdWlSZXM6IHN0cmluZyA9IFwiZ3JvdXBOYW1lX2Z1aVJlc1wiO1xyXG5cclxuXHJcblx0c3RhdGljIF9tYWluUGFuZWxQYXRoOiBzdHJpbmcgPSBcInBhbmVsL01haW5QYW5lbC5zY2VuZVwiO1xyXG5cdC8qKiBsb2FkaW5n6L+H5Zy655WM6Z2iKi9cclxuXHRzdGF0aWMgX2xvYWRpbmdQYW5lbFBhdGg6IHN0cmluZyA9IFwicGFuZWwvTG9hZGluZ1BhbmVsLnNjZW5lXCI7XHJcblx0LyoqIGhhbGzog4zmma/lm74qL1xyXG5cdHN0YXRpYyBfaGFsbEJnUGF0aDogc3RyaW5nID0gXCJMYXlhUmVzL2dhbWUvcmF0ZUJnVGV4dHVyZS5wbmdcIjtcclxuXHRzdGF0aWMgX2xvYWRpbmdCZ1BhdGg6IHN0cmluZyA9IFwiTGF5YVJlcy9sb2FkL2xhZGluZ19iZyAxLnBuZ1wiO1xyXG5cdC8qKua0u+WKqOeahOWFs+mXreaMiemSriAqL1xyXG5cdHN0YXRpYyBhY3RDbG9zZUJ0blBhdGg6IHN0cmluZyA9IFwiTGF5YVJlcy9nYW1lL2J1dHRvbl9nYi5wbmdcIjtcclxuXHQvKiogZnVp6LWE5rqQKi9cclxuXHRzdGF0aWMgX2Z1aUhhbGxVSVBhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvSGFsbFVJLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvSGFsbFVJX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvSGFsbFVJXCIgfTtcclxuXHRzdGF0aWMgX2Z1aUhhbGxQYXRoID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL0hhbGwuZnVpXCIsIGltYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9IYWxsX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvSGFsbFwiIH07XHJcblx0c3RhdGljIF9mdWlGcmVlVHJhbldhbGxldFBhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvRnJlZVRyYW5XYWxsZXQuZnVpXCIsIGltYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9GcmVlVHJhbldhbGxldF9hdGxhczAucG5nXCIsIFBhY2thZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0ZyZWVUcmFuV2FsbGV0XCIgfTtcclxuXHRzdGF0aWMgX2Z1aUNvbW1vblVJUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9Db21tb25VSS5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0NvbW1vblVJX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvQ29tbW9uVUlcIiB9O1xyXG5cdHN0YXRpYyBfZnVpSGVscFBhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvSGVscC5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0hlbHBfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9IZWxwXCIgfTtcclxuXHRzdGF0aWMgX2Z1aUh1bnRlclVJUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9IdW50ZXJVSS5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0h1bnRlclVJX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvSHVudGVyVUlcIiB9O1xyXG5cdHN0YXRpYyBfZnVpSnBQYXRoID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL0pwLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvSnBfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9KcFwiIH07XHJcblx0c3RhdGljIF9mdWlMb2FkaW5nUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9sb2FkaW5nLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvbG9hZGluZ19hdGxhczAucG5nXCIsIFBhY2thZ2U6IFwiZmFpcnlndWlSZXMvZnVpL2xvYWRpbmdcIiB9O1xyXG5cdHN0YXRpYyBfZnVpUmFua2luZ1BhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvUmFua2luZy5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL1JhbmtpbmdfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9SYW5raW5nXCIgfTtcclxuXHRzdGF0aWMgX2Z1aVNldHRpbmdQYXRoID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL1NldHRpbmcuZnVpXCIsIGltYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9TZXR0aW5nX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvU2V0dGluZ1wiIH07XHJcblx0c3RhdGljIF9mdWlXaW5uaW5nUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9XaW5uaW5nLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvV2lubmluZ19hdGxhczAucG5nXCIsIFBhY2thZ2U6IFwiZmFpcnlndWlSZXMvZnVpL1dpbm5pbmdcIiB9O1xyXG5cdHN0YXRpYyBfZnVpR3VpZGVQYXRoID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL0d1aWRlLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvR3VpZGVfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9HdWlkZVwiIH07XHJcblx0c3RhdGljIF9mdWlXYXJuUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9XYXJuaW5nLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvV2FybmluZ19hdGxhczAucG5nXCIsIFBhY2thZ2U6IFwiZmFpcnlndWlSZXMvZnVpL1dhcm5pbmdcIiB9O1xyXG5cdHN0YXRpYyBfZnVpTWFycXVlZVBhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvTWFycXVlZS5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL01hcnF1ZWVfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9NYXJxdWVlXCIgfTtcclxuXHRzdGF0aWMgX2Z1aVRpcFBhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvUHVibGljLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvUHVibGljX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvUHVibGljXCIgfTtcclxuXHRzdGF0aWMgX2Z1aVBlcnNvbmFsSW5mb1BhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvUGVyc29uYWxJbmZvLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvUGVyc29uYWxJbmZvX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvUGVyc29uYWxJbmZvXCIgfTtcclxuXHRzdGF0aWMgX2Z1aUZ1bmRUaXBQYXRoID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL0Z1bmRUaXAuZnVpXCIsIGltYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9GdW5kVGlwX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvRnVuZFRpcFwiIH07XHJcblx0c3RhdGljIF9mdWlHcm93dGhGdW5kUGF0aCA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS9Hcm93dGhGdW5kLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvR3Jvd3RoRnVuZF9hdGxhczAucG5nXCIsIFBhY2thZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0dyb3d0aEZ1bmRcIiB9O1xyXG5cdHN0YXRpYyBfZnVpTGV2ZWxCb251c1BhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvTGV2ZWxCb251cy5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL0xldmVsQm9udXNfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS9MZXZlbEJvbnVzXCIgfTtcclxuXHRzdGF0aWMgX2Z1aUx2RGV0YWlsc1BhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvTHZEZXRhaWxzLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvTHZEZXRhaWxzX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvTHZEZXRhaWxzXCIgfTtcclxuXHRzdGF0aWMgX2Z1aUx2UmVjb3Jkc1BhdGggPSB7IGZ1aTogXCJmYWlyeWd1aVJlcy9mdWkvTHZSZWNvcmRzLmZ1aVwiLCBpbWFnZTogXCJmYWlyeWd1aVJlcy9mdWkvTHZSZWNvcmRzX2F0bGFzMC5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvTHZSZWNvcmRzXCIgfTtcclxuXHRzdGF0aWMgX2Z1aVVwZ3JhZGVQYXRoMSA9IHsgZnVpOiBcImZhaXJ5Z3VpUmVzL2Z1aS91cGdyYWRlUGFuZWwuZnVpXCIsIGltYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS91cGdyYWRlUGFuZWxfYXRsYXMwLnBuZ1wiLCBQYWNrYWdlOiBcImZhaXJ5Z3VpUmVzL2Z1aS91cGdyYWRlUGFuZWxcIiB9O1xyXG5cdHN0YXRpYyBfZnVpVXBncmFkZVBhdGgyID0geyBmdWk6IFwiZmFpcnlndWlSZXMvZnVpL3VwZ3JhZGVQYW5lbC5mdWlcIiwgaW1hZ2U6IFwiZmFpcnlndWlSZXMvZnVpL3VwZ3JhZGVQYW5lbF9hdGxhczBfMS5wbmdcIiwgUGFja2FnZTogXCJmYWlyeWd1aVJlcy9mdWkvdXBncmFkZVBhbmVsXCIgfTtcclxuXHQvKiog5aSn5Y6F5bCP5bKb6Z2i5p2/5LiK55qE6LWE5rqQKi9cclxuXHRzdGF0aWMgX3ByZWxhbmRJbmZvUGF0aCA9IFwidWk6Ly9IYWxsVUkvXCI7XHJcblx0c3RhdGljIF9pc2xhbmRJbmZvQXJyID0gW3sgdGl0bGU6IFwibmFtZTFcIiwgbGltaXQ6IFwiYnVsbGV0MVwiLCByYXRlOiBcInJhdGUxXCIgfSxcclxuXHR7IHRpdGxlOiBcIm5hbWUyXCIsIGxpbWl0OiBcImJ1bGxldDJcIiwgcmF0ZTogXCJyYXRlMlwiIH0sXHJcblx0eyB0aXRsZTogXCJuYW1lM1wiLCBsaW1pdDogXCJidWxsZXQzXCIsIHJhdGU6IFwicmF0ZTNcIiB9XTtcclxuXHJcblx0LyoqIOaNleeMjuWcuuaZr+eahGxheWHotYTmupAqL1xyXG5cdHN0YXRpYyBfaHVudGVyQmdQYXRoMTogc3RyaW5nID0gXCJMYXlhUmVzL2dhbWUvQkcwMS5wbmdcIjtcclxuXHRzdGF0aWMgX2h1bnRlckJnUGF0aDI6IHN0cmluZyA9IFwiTGF5YVJlcy9nYW1lL0JHMDIucG5nXCI7XHJcblx0c3RhdGljIF9iYXNlQmdQYXRoID0gXCJMYXlhUmVzL2dhbWUvcGFvdGFpLnBuZ1wiO1xyXG5cdHN0YXRpYyBfbG9ja0ltZ1BhdGggPSBcIkxheWFSZXMvZ2FtZS9sb2NrLnBuZ1wiOyAvL+mUgeWumuaMiemSrlxyXG5cdHN0YXRpYyBfYXV0b0ltZ1BhdGggPSBcIkxheWFSZXMvZ2FtZS9hdXRvLnBuZ1wiOyAvL+iHquWKqOaUu+WHu+aMiemSrlxyXG5cdHN0YXRpYyBfbG9ja0ltZ01hc2tQYXRoID0gXCJMYXlhUmVzL2dhbWUvbG9ja19kb3duLnBuZ1wiOyAvL+mUgeWumuaMiemSrm1hc2tcclxuXHRzdGF0aWMgX2F1dG9JbWdNYXNrUGF0aCA9IFwiTGF5YVJlcy9nYW1lL2F1dG9fZG93bi5wbmdcIjsgLy/oh6rliqjmlLvlh7vmjInpkq5tYXNrXHJcblx0c3RhdGljIF9hdXRvVGV4dEltZ1BhdGggPSBcIkxheWFSZXMvZ2FtZS96aWRvbmdnb25namkucG5nXCI7IC8v6Ieq5Yqo5pS75Ye75paH5a2XXHJcblx0c3RhdGljIF9sb2NrVGV4dEltZ1BhdGggPSBcIkxheWFSZXMvZ2FtZS9zdW9kaW5nZ29uZ2ppLnBuZ1wiOyAvL+mUgeWumuaUu+WHu+aWh+Wtl1xyXG5cdHN0YXRpYyBfY2FuY2xlQXV0b1RleHRJbWdQYXRoID0gXCJMYXlhUmVzL2dhbWUvcXV4aWFvemlkb25nLnBuZ1wiOyAvL+WPlua2iOiHquWKqOaUu+WHu+aWh+Wtl1xyXG5cdHN0YXRpYyBfY2FuY2xlTG9ja1RleHRJbWdQYXRoID0gXCJMYXlhUmVzL2dhbWUvcXV4aWFvc3VvZGluZy5wbmdcIjsgLy/lj5bmtojplIHlrprmlLvlh7vmloflrZdcclxuXHRzdGF0aWMgX2xpbmVQb2ludFBhdGggPSBcIkxheWFSZXMvZ2FtZS9wb2ludC5wbmdcIjsgLy/plIHlrprov57nur/nmoTngrlcclxuXHRzdGF0aWMgX2FpbUltZ1BhdGggPSBcIkxheWFSZXMvZ2FtZS9haW0ucG5nXCI7IC8v6bG86Lqr5LiK55qE6ZSB5a6a5Zu+5qCHXHJcblxyXG5cdHN0YXRpYyBfemh1YW5wYW5QYXRoID0gXCJMYXlhUmVzL2dhbWUvemh1YW5wYW4ucG5nXCI7IC8v6L2s55uYXHJcblx0c3RhdGljIF96aHVhbnBhbkxpZ2h0UGF0aCA9IFwiTGF5YVJlcy9nYW1lL3podWFucGFuX2d1YW5xdWFuLnBuZ1wiOyAvL+i9rOebmOWFiVxyXG5cdHN0YXRpYyBfZmlzaDIwUGF0aCA9IFwiTGF5YVJlcy9nYW1lLzIwLnBuZ1wiOyAvL+iTneiJsumyqOmxvFxyXG5cdHN0YXRpYyBfZmlzaDIzUGF0aCA9IFwiTGF5YVJlcy9nYW1lLzIzLnBuZ1wiOyAvL+mHkeiJsumyqOmxvFxyXG5cdHN0YXRpYyBfZmlzaDI1UGF0aCA9IFwiTGF5YVJlcy9nYW1lLzI1LnBuZ1wiOyAvL+e+juS6uumxvFxyXG5cdHN0YXRpYyBfQm9tYkZsYWdQYXRoID0gXCJMYXlhUmVzL2dhbWUvQm9tYkZsYWcucG5nXCI7IC8v54K45by56bG85qCH5b+XXHJcblxyXG5cdC8qKiDngq7lj7Dkv6Hmga/moYYqL1xyXG5cdHN0YXRpYyBfaW5mb0ZyYW1lOiBzdHJpbmcgPSBcIkxheWFSZXMvZ2FtZS9pbmdfNC5wbmdcIjtcclxuXHRzdGF0aWMgX2luZm9MYWJlbEJnOiBzdHJpbmcgPSBcIkxheWFSZXMvZ2FtZS9pbmdfNS5wbmdcIjtcclxuXHRzdGF0aWMgX2luZm9MZXZlbEJnOiBzdHJpbmcgPSBcIkxheWFSZXMvZ2FtZS9kamJzLnBuZ1wiO1xyXG5cdHN0YXRpYyBfaW5mb0NvaW46IHN0cmluZyA9IFwiTGF5YVJlcy9nYW1lL2pwX2piLnBuZ1wiO1xyXG5cdHN0YXRpYyBfaW5mb1dhbGxlbnQ6IHN0cmluZyA9IFwiTGF5YVJlcy9nYW1lL3dhbGxlbnQucG5nXCI7ICAvL+WFjei9rOaMiemSrlxyXG5cclxuXHJcblx0LyoqIOWFrOWFsei1hOa6kCovXHJcblx0c3RhdGljIF9wcmVDb21tb25QYXRoID0gXCJ1aTovL0NvbW1vblVJL1wiO1xyXG5cclxuXHQvKiogZm9udOWtl+S9kyovXHJcblx0c3RhdGljIF9hd2FyZEZvbnQgPSBcIkxheWFSZXMvRm9udC9qbF8wLTkucG5nXCI7IC8v5aSn6L2s55uY6YeR5biB5a2X5L2TXHJcblx0c3RhdGljIF9ib3Vuc0ZvbnRTZWxmID0gXCJMYXlhUmVzL0ZvbnQvamxfMC05LnBuZ1wiOyAvL+iHquW3seaJk+atu+mxvOaXtueahOmHkeW4geWtl+S9k1xyXG5cdHN0YXRpYyBfYm91bnNGb250T3RoZXIgPSBcIkxheWFSZXMvRm9udC95bF8wLTkucG5nXCI7IC8v5Yir5Lq65omT5q276bG85pe255qE6YeR5biB5a2X5L2TXHJcblx0c3RhdGljIF9sZXZlbEZvbnQgPSBcIkxheWFSZXMvRm9udC9kamJzXzAtOS5wbmdcIjsgLy/ngq7lj7Dkv6Hmga8g562J57qn5pWw5a2XXHJcblx0c3RhdGljIF9jb2luRm9udCA9IFwiTGF5YVJlcy9Gb250LzNkam5oX2piLnBuZ1wiOyAvL+eCruWPsOS/oeaBryDph5HluIHmlbDlrZdcclxuXHJcblx0Ly8jZW5kcmVnaW9uXHJcblxyXG5cclxuXHQvLyNyZWdpb24g5ri45oiP5bi46YePXHJcblx0c3RhdGljIENfSXNsYW5kQW1vdW50OiBudW1iZXIgPSAzO1xyXG5cdHN0YXRpYyBDX0lzbGFuZE1vdmVYOiBudW1iZXIgPSAyMDtcclxuXHRzdGF0aWMgQ19Jc2xhbmRNb3ZlVGltZTogbnVtYmVyID0gMTUwMDtcclxuXHQvKiogbGF5ZXLlsYLliJfooagqL1xyXG5cdHN0YXRpYyBMYXllciA9IHtcclxuXHRcdEZpc2g6IDhcclxuXHRcdCwgV2FsbDogOVxyXG5cdH07XHJcblxyXG5cdC8qKiDmlrnlkJHljZXkvY3lkJHph48qL1xyXG5cdHN0YXRpYyBEaXJlY3Rpb25WZWN0b3IgPSB7XHJcblx0XHRVcDogbmV3IExheWEuVmVjdG9yMygwLCAxLCAwKSxcclxuXHRcdERvd246IG5ldyBMYXlhLlZlY3RvcjMoMCwgLTEsIDApLFxyXG5cdFx0TGVmdDogbmV3IExheWEuVmVjdG9yMygxLCAwLCAwKSxcclxuXHRcdFJpZ2h0OiBuZXcgTGF5YS5WZWN0b3IzKC0xLCAwLCAwKSxcclxuXHR9O1xyXG5cclxuXHQvKiog6bG855qE5YCN546HKi9cclxuXHRzdGF0aWMgZmlzaFJhdGUgPSB7XHJcblx0XHRGaWZ0eTogNTBcclxuXHRcdCwgU2l4dHk6IDYwXHJcblx0XHQsIEVpZ2h0eTogODBcclxuXHR9O1xyXG5cdC8qKiDljYrlsY/ovaznm5jnmoTmmL7npLrkvY3nva4qL1xyXG5cdHN0YXRpYyBIYWxmQXdhcmRQb3MgPSBbXHJcblx0XHRuZXcgTGF5YS5WZWN0b3IzKDM3MCwgNDY4LCAwKSxcclxuXHRcdG5ldyBMYXlhLlZlY3RvcjMoODk4LCA0NjgsIDApLFxyXG5cdFx0bmV3IExheWEuVmVjdG9yMygzNzAsIDI3OCwgMCksXHJcblx0XHRuZXcgTGF5YS5WZWN0b3IzKDg5OCwgMjc4LCAwKSxcclxuXHRdO1xyXG5cclxuXHRzdGF0aWMgRGVsdGEgPSA2MDtcclxuXHRzdGF0aWMgRGlzcGF0Y2hVc2VsZXNzTXNnRGVsdGEgPSAxMDA7IC8v5peg5pWI5a2Q5by55rS+5Y+R6Ze06ZqUXHJcblx0c3RhdGljIFNlbmRVc2VsZXNzTXNnRGVsdGEgPSAyMDA7IC8v5peg5pWI5a2Q5by55rS+5Y+R6Ze06ZqUXHJcblx0c3RhdGljIFNob290UmF0ZSA9IDI1MDsgICAgICAgXHRcdC8v54Ku5Y+w5bCE5Ye76YCf5bqmIOmXtOmalDAuMjVzXHJcblx0c3RhdGljIFNob290TWF4TnVtID0gMjA7ICAgICAgICAgIC8v6ZSB5a6a54q25oCB5LiLIOacgOWkmjIw5Liq5a2Q5by5XHJcblx0LyoqIOa1t+ebl+iIueaooeWei+aoquWQkeWxj+W5leWkp+WwjyovXHJcblx0c3RhdGljIE91dFdhbGxPZmZzZXRfc2hpcCA9IDMwMDsgICAgLy9cclxuXHQvKiog576O5Lq66bG85qih5Z6L5qiq5ZCR5bGP5bmV5aSn5bCPKi9cclxuXHRzdGF0aWMgT3V0V2FsbE9mZnNldF9tZXJtYWlkID0gMTYwOyAgICAvL1xyXG5cdC8qKiDpsqjpsbzmqKHlnovmqKrlkJHlsY/luZXlpKflsI8qL1xyXG5cdHN0YXRpYyBPdXRXYWxsT2Zmc2V0X3NoYXJrID0gMTYwOyAgICAvL1xyXG5cdHN0YXRpYyBMaW5lUG9pbnRXaXRoID0gMzI7XHJcblx0c3RhdGljIEJvdW5zRm9udE9mZlkgPSA4MDsgLy/mlLbpm4bph5HluIHvvIzmj5DnpLrlrZfkvZPmvILmta7pq5jluqZcclxuXHRzdGF0aWMgQkd3aWR0aCA9IDEyODM7XHJcblx0c3RhdGljIEJHT2ZmU2V0TWF4ID0gMTI4MDtcclxuXHJcblxyXG5cdC8vI2VuZHJlZ2lvblxyXG5cclxuXHQvLyNyZWdpb24g6LS05Zu+6LWE5rqQ6Lev5YqyXHJcblxyXG5cdC8qKiDotLTlm77ot6/lirLpm4blkIgqL1xyXG5cdHN0YXRpYyBfVGV4dHVyZUFycmF5ID0ge1xyXG5cdFx0R29sZDogXCJqaW5iaS5wbmdcIixcclxuXHRcdFNpbHZlcjogXCJ5aW5iaS5wbmdcIixcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBzdGF0aWMgX1Byb21wdENvbnRlbnQgPSB7XHJcblx0XHRTdG9wQXV0b0F0dGFjazogXCLmgqjmraPlnKjoh6rliqjmjZXpsbzmmK/lkKblgZzmraI/XCIsXHJcblx0XHRSZWNvbm5lY3Q6IFwi572R57uc5pat5byA6L+e5o6l77yM5piv5ZCm6YeN5paw6L+e5o6l5ri45oiP77yfXCIsXHJcblx0XHRMb3dQYXk6IFwi6YeR5biB5LiN6LazLOivt+WFheWAvOaIluWIsOS9juWAjeWcuueOqeWTplwiLFxyXG5cdFx0SGVpZ2h0UGF5OiBcIuaCqOeahOmHkemSsei2hei/h+acrOWcuumZkOWItizor7fliLDpq5jlgI3lnLrmuLjmiI9cIixcclxuXHRcdE5lZWRSZWNoYXJnZTogXCLph5HluIHkuI3otrMs6K+35YWF5YC85ZCO6YeN6K+VXCIsXHJcblx0XHRJbnZhbGlkOiBcIuS4i+azqOetueeggemdnuazlSzor7fliLfmlrDmuLjmiI/lkI7ph43or5VcIixcclxuXHRcdExvZ2luT3RoZXI6IFwi5byC5Zyw55m76ZmGLOivt+WIt+aWsOa4uOaIj+WQjumHjeivlVwiLFxyXG5cdFx0QWNjb3VudEVycm9yOiBcIuaCqOeahOi0puWPt+WHuueOsOW8guW4uCzor7fph43mlrDnmbvlvZVcIixcclxuXHRcdFRva2VUaW1lT3V0OiBcIuS8muivneW3sue7j+i/h+acn++8jOivt+mHjeaWsOeZu+W9lVwiLFxyXG5cdFx0VG9rZUVycm9yOiBcIuS8muivneagoemqjOWksei0pe+8jOivt+iBlOezu+euoeeQhuWRmFwiLFxyXG5cdFx0Rm9yY2VLaWN0b3V0OiBcIuaCqOeahOi0puWPt+WHuueOsOW8guW4uCzor7fph43mlrDnmbvlvZVcIixcclxuXHRcdExvZ2luTXVjaDogXCLnmbvpmYbov4fkuo7popHnuYEs6K+356iN5ZCO6YeN6K+VXCIsXHJcblx0XHRTZXNzaW9uTG9uZzogXCLkvJror53lt7Lnu4/ov4fmnJ8s6K+36YeN5paw55m75b2VXCIsXHJcblx0XHRTZXNzaW9uV3Jvbmc6IFwi5Lya6K+d5qCh6aqM5aSx6LSlLOivt+mHjeaWsOeZu+W9lVwiLFxyXG5cdFx0TG9naW5GYWlsOiBcIui0puWPt+eZu+W9leWksei0pSzor7fogZTns7vnrqHnkIblkZhcIixcclxuXHRcdExvZ2luRXJyb3I6IFwi6LSm5Y+36ZSZ6K+vLOivt+iBlOezu+euoeeQhuWRmFwiLFxyXG5cdFx0QmFja0hhbGw6IFwi5oKo56Gu5a6a6KaB6L+U5Zue5aSn5Y6F5LmI77yfXCIsXHJcblx0XHRCdWxsZXRNYXg6IFwi5oKo5b2T5YmN5a2Q5by55pWw6YeP5bey6L6+5LiK6ZmQXCIsXHJcblx0XHRDYW5ub3RTOiBcIumcgOimgea2iOiAlyVz6YeR5biB77yM5peg5rOV5Y+s5ZSkXCIsXHJcblx0XHRKcFJld2FyZDogXCLor6XorrDlvZXmmK9KUOWllumHkVwiLFxyXG5cdFx0RW50ZXJSb29tRmFpbDogXCLov5vlhaXmiL/pl7TlpLHotKXvvIzor7fph43or5VcIixcclxuXHRcdERlbW9BY2NUaXA6IFwi6K+V546p6LSm5Y+35peg5oql6KGo5pWw5o2u77yM6K+355m75b2V5ri45oiP6LSm5Y+35L2T6aqMXCIsXHJcblx0XHRFeGl0SHVudFNjZW5lOiBcIuaCqOehruWumuimgei/lOWbnuWkp+WOheWQl++8n1wiLFxyXG5cclxuXHR9XHJcblxyXG5cdHB1YmxpYyBzdGF0aWMgRElSSUNUSU9OID0ge1xyXG5cdFx0VkVSVElDQUw6IDEsXHJcblx0XHRIT1JJWk9OVEFMOiAyLFxyXG5cdH1cclxuXHJcblxyXG5cdC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudENvbnN0YW50UmVzcG9uc2Uge1xyXG4gICAgLyoq5YWN6L2s5bCP6ZSu55uY6L+U5Zue6ZSu55uR5o6nICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFdBTExFVEtFWU5VTTogc3RyaW5nID0gXCJ3YWxsS2V5TnVtXCI7XHJcbiAgICAvKirlm57mlLbph5HluIHlkIzmraXlt6bkuIvop5Lph5Hpop3ml7blkIzmraXlhY3ovazkuIrnmoRmZ+mSseWMhSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBTWU5DV0FMTEVURkc6IHN0cmluZyA9IFwiU1lOQ1dBTExFVEZHXCI7XHJcbiAgICAvKirmjpLooYzmppznm5HmjqcgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgUkFOS1JFU1A6IHN0cmluZyA9IFwicmFua1Jlc3BcIjtcclxuICAgIC8qKuS4reWlluWQjeWNleebkeaOpyAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBXSU5ORVJSRVNQOiBzdHJpbmcgPSBcIndpbm5lclJlc3BcIjtcclxuICAgIC8qKmpw5pWw5YC8ICovXHJcbiAgICBwdWJsaWMgc3RhdGljIEpQTlVNQkVSOiBzdHJpbmcgPSBcImpwTnVtYmVyXCI7XHJcbiAgICAvKipqcOW5v+aSrSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBKUEJDQVNUOiBzdHJpbmcgPSBcImpwQmNhc3RcIjtcclxuICAgIC8qKueZu+W9leinkuiJsuS/oeaBryAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBMT0dJTlJFU1JPTEVJTkZPID0gXCJsb2dpblJvbGVJbmZvXCI7XHJcbiAgICAvKirlvIDlhbMgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgU1dJVENIUkVTUD1cInN3aXRjaFJlc3BcIjtcclxuICAgIC8qKuWFqOWxgOW5v+aSrSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBCQ0FTVFdPUkxEUkVTUCA9IFwiYmNhc3RXb3JsZFJlc3BcIjtcclxuICAgIC8qKuaIv+mXtOW5v+aSrSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBCQ0FTVFJPT01SRVNQID0gXCJiY2FzdFJvb21SZXNwXCI7XHJcbiAgICAvKirlub/mkq3mtojmga8gKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgQkNBU1RNU0dSRVNQID0gXCJiY2FzdE1zZ1Jlc3BcIjtcclxuICAgIC8qKua0u+WKqOivpuaDheWIl+ihqCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBBQ1RMSVNUUkVTUCA9IFwiYWN0TGlzdFJlc3BcIjtcclxuICAgIC8qKuetiee6p+S/oeaBryAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBMVklORk9SRVNQID0gXCJsdkluZm9SZXNwXCI7XHJcbiAgICAvKirnrYnnuqfphY3nva4gKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgTFZDT05GSUdSRVNQPVwibHZDb25maWdSZXNwXCI7XHJcbiAgICAvKirnrYnnuqfpgJrnn6UgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgTFZOT1RJQ0VSRVNQPVwibHZOb3RpY2VSZXNwXCI7XHJcbiAgICAvKirmiJDplb/ln7rph5HlvZPliY3moaPmrKEgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgR1JPV1RIRlVORElORk9SRVNQID0gXCJncm93dGhGdW5kSW5mb1Jlc3BcIjtcclxuICAgIC8qKuaIkOmVv+WfuumHkemFjee9riAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBHUk9XVEhGVU5EQ09ORklHUkVTUCA9IFwiZ3Jvd3RoRnVuZENvbmZpZ1Jlc3BcIjtcclxuICAgIC8qKuaIkOmVv+WfuumHkei0reS5sOWPjemmiCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBHUk9XVEhGVU5EQlVZUkVTUCA9IFwiZ3Jvd3RoRnVuZEJ1eVJlc3BcIjtcclxuICAgIC8qKuetiee6p+WllumHkemihuWPluWlluWKsSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBMVkFXQVJEUkVTUCA9IFwibHZBd2FyZFJlc3BcIjtcclxuICAgIC8qKuetiee6p+WlluWKsemAmuefpSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBMVkFXQVJETk9USUNFUkVTUCA9IFwibHZBd2FyZE5vdGljZVJlc3BcIjtcclxuICAgIC8qKuaIkOmVv+WfuumHkeeKtuaAge+8iOa0u+WKqOe7k+adn+aXtumXtO+8iSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBHUk9XVEhGVU5EU1RBVEVSRVNQID0gXCJncm93dGhGdW5kU3RhdGVSZXNwXCI7XHJcbiAgICAvKirnrYnnuqflpZblirHnirbmgIHlj43ppoggKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgTFZBV0FSRFNUQVRFUkVTUCA9IFwibHZBd2FyZFN0YXRlUmVzcFwiO1xyXG59IiwiLyoqXHJcbiAqIOa4uOaIj+ebuOWFs+S6i+S7tlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUV2ZW50XHJcbntcclxuICAgIHB1YmxpYyBzdGF0aWMgQ09OTkVDVDpzdHJpbmc9XCJTT0NLRVRfQ09OTkVDVFwiOyAgICAgIC8vc29ja2V06L+e5o6lXHJcbiAgICBwdWJsaWMgc3RhdGljIFNPQ0tFVF9DTE9TRTpzdHJpbmc9XCJTT0NLRVRfQ0xPU0VcIjsgICAvL3NvY2tldOaWreW8gFxyXG4gICAgcHVibGljIHN0YXRpYyBTT0NLRVRfRVJST1I6c3RyaW5nPVwiU09DS0VUX0VSUk9SXCI7ICAgLy9zb2NrZXTlh7rplJlcclxuICAgIHB1YmxpYyBzdGF0aWMgTE9BRENPTVBMRVRFOnN0cmluZz1cIkxPQURDT01QTEVURVwiOyAgIC8v5ri45oiP6LWE5rqQ5Yqg6L295a6M5oiQXHJcbiAgICBwdWJsaWMgc3RhdGljIEdBTUVfU1RBUlQ6c3RyaW5nID1cIkdBTUVfU1RBUlRcIjsgICAgICAvL+a4uOaIj+W8gOWni1xyXG4gICAgcHVibGljIHN0YXRpYyBHQU1FX0NPTlRJTlVFOnN0cmluZyA9XCJHQU1FX0NPTlRJTlVFXCI7Ly/muLjmiI/nu6fnu61cclxuICAgIHB1YmxpYyBzdGF0aWMgR0FNRV9SRUNPTk5FQ1Q6c3RyaW5nID1cIkdBTUVfUkVDT05ORUNUXCI7Ly/mlq3nur/ph43ov55cclxuICAgIHB1YmxpYyBzdGF0aWMgSFVOVF9BVVRPQVRUQUNLOnN0cmluZyA9XCJIVU5UX0FVVE9BVFRBQ0tcIjsvL+iHquWKqOaUu+WHu+W8gOWni+OAgeWPlua2iFxyXG4gICAgcHVibGljIHN0YXRpYyBIVU5UX0xPQ0tBVFRBQ0s6c3RyaW5nID1cIkhVTlRfTE9DS0FUVEFDS1wiOy8v6ZSB5a6a5pS75Ye75byA5aeL44CB5Y+W5raIXHJcbiAgICBwdWJsaWMgc3RhdGljIEhVTlRfSFVOVEVERklTSDpzdHJpbmcgPVwiSFVOVF9IVU5URURGSVNIXCI7Ly/oh6rliqjmlLvlh7vmjZXliLDpsbxcclxuXHJcbn1cclxuXHJcbiIsImltcG9ydCBHYW1lTWFuZ2VyIGZyb20gXCIuLi9tYW5hZ2VyL0dhbWVNYW5nZXJcIjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uL0dhbWVGYWNhZGVcIjtcclxuXHJcbmV4cG9ydCBlbnVtIExhbmdUeXBlIHtcclxuICAgIENISU5FU0UsXHJcbiAgICBFTkdMSVNILFxyXG4gICAgQ0hBTkdFU0VISyxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGFuZyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDor63oqIDnsbvlnovovazmjaJcclxuICAgICAqIEBwYXJhbSBsYW5nIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGxhbmdUb1R5cGUobGFuZzogc3RyaW5nKTogTGFuZ1R5cGUge1xyXG4gICAgICAgIHZhciB0eXBlOiBMYW5nVHlwZSA9IExhbmdUeXBlLkNISU5FU0U7XHJcbiAgICAgICAgc3dpdGNoIChsYW5nKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ6aC1jblwiOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9IExhbmdUeXBlLkNISU5FU0U7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVuLXVzXCI6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gTGFuZ1R5cGUuRU5HTElTSDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiemgtaGtcIjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSBMYW5nVHlwZS5DSEFOR0VTRUhLO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gTGFuZ1R5cGUuQ0hJTkVTRTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZnJlZVRyYW5XYWxsZXRDaCA9IHtcclxuICAgICAgICBjb25TZXJ2ZXI6IFwi6L+e5o6l5pyN5Yqh5Zmo6LaF5pe277yM6K+36YeN5paw5pON5L2cXCIsXHJcbiAgICAgICAgb3BlcmF0aW9uSW52YWxpZDogXCLmk43kvZzml6DmlYhcIixcclxuICAgICAgICBhdXRvQWRkV2FsbGV0OiBcIuezu+e7n+WQkUZH5ri45oiP5a2Y5YWlezB95YWDXCIsXHJcbiAgICAgICAgcmVxRmFpbDogXCLor7fmsYLkuK3lv4PpkrHljIXlpLHotKVcIixcclxuICAgICAgICBjbGlwTm9Nb25leTogXCLkvZnpop3kuI3otrPvvIzor7fliY3lvoDlhYXlgLxcIixcclxuICAgICAgICBzZXRNb25leTogXCLor7forr7nva7luKblhaXmuLjmiI/nmoTph5Hpop1cIixcclxuICAgICAgICBqcEJvbnVzOiBcIuivpeiusOW9leaYr0pQ5aWW6YeRXCIsXHJcbiAgICAgICAgcmVxVG9vRmFzdDogXCLor7fmsYLkuK3lv4PpkrHljIXlpKrlv6tcIixcclxuICAgICAgICBjZW50ZXJOb3RFbm91Z2g6IFwi5Lit5b+D6ZKx5YyF5L2Z6aKd5LiN6Laz77yM6K+35YmN5b6A5YWF5YC8XCIsXHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBmcmVlVHJhbldhbGxldEVuID0ge1xyXG4gICAgICAgIGNvblNlcnZlcjogXCJUaGUgY29ubmVjdGlvbiBzZXJ2ZXIgaXMgb3V0IG9mIHRpbWUsIHBsZWFzZSByZW9wZXJhdGVcIixcclxuICAgICAgICBvcGVyYXRpb25JbnZhbGlkOiBcIlRoaXMgb3BlcmF0aW9uIGlzIGludmFsaWRcIixcclxuICAgICAgICBhdXRvQWRkV2FsbGV0OiBcIlRoZSBzeXN0ZW0gc2F2ZXMgezB9IHRvIHRoZSBGdW5HYW1lXCIsXHJcbiAgICAgICAgcmVxRmFpbDogXCJSZXF1ZXN0IGNlbnRlciBwdXJzZSBmYWlsZWRcIixcclxuICAgICAgICBjbGlwTm9Nb25leTogXCJUaGUgYmFsYW5jZSBvZiB0aGUgY2VudHJhbCBwdXJzZSBpcyBpbnN1ZmZpY2llbnQuIFBsZWFzZSBnbyB0byByZWNoYXJnZVwiLFxyXG4gICAgICAgIHNldE1vbmV5OiBcIlBsZWFzZSBzZXQgdXAgdGhlIGFtb3VudCBvZiBtb25leSB0byBicmluZyBpbnRvIHRoZSBnYW1lLlwiLFxyXG4gICAgICAgIGpwQm9udXM6IFwiVGhpcyByZWNvcmQgaXMgSlAgQm9udXMuXCIsXHJcbiAgICAgICAgcmVxVG9vRmFzdDogXCJUaGUgcmVxdWVzdCBjZW50ZXIgd2FsbGV0IGlzIHRvbyBmYXN0XCIsXHJcblxyXG4gICAgfVxyXG4gICAgc3RhdGljIGx2RnVuZENoID0ge1xyXG4gICAgICAgIHRpcEZ1bmRCdXk6IFwi5bey5raI6ICXezB95oiQ5Yqf6LSt5LmwezF9XCIsXHJcbiAgICAgICAgdGlwTGV2ZWxSZWNlaXZlZDogXCLlt7LmiJDlip/pooblj5bnrYnnuqflpZbph5F7MH3lhYNcIixcclxuICAgICAgICB0aXBzTGV2ZWxCdXk6IFwi5raI6ICX6YeR5biBezB9LOaYr+WQpuehruWumj9cIixcclxuICAgICAgICB0aXBzR29sZExlc3M6IFwi6YeR5biB5LiN6Laz77yM6K+35YWF5YC85ZCO5YaN6LSt5LmwXCIsXHJcbiAgICAgICAgdGlwTG9nOiBcIuivleeOqeW4kOWPt+aXoOetiee6p+S9k+ezu++8jOivt+eZu+W9lea4uOaIj+S9k+mqjOacgOaWsOWKn+iDvVwiLFxyXG4gICAgICAgIHRpcFB1cmNoYXNlRmFpbGVkOiBcIui0reS5sOWksei0pe+8jOivt+eojeWAmemHjeivleOAglwiLFxyXG4gICAgICAgIHRpcFJlY2VpdmVGYWlsZWQ6IFwi6aKG5Y+W5aSx6LSl77yM6K+356iN5YCZ6YeN6K+V44CCXCIsXHJcbiAgICAgICAgdGlwQWN0RW5kOiBcIua0u+WKqOW3sue7k+adn+OAglwiLFxyXG4gICAgfVxyXG4gICAgc3RhdGljIGx2RnVuZEVuID0ge1xyXG4gICAgICAgIHRpcEZ1bmRCdXk6IFwiWW91IGhhdmUgc3BlbnQgezB9dG8gYnV5IHsxfSBzdWNjZXNzZnVsbHlcIixcclxuICAgICAgICB0aXBMZXZlbFJlY2VpdmVkOiBcIllvdSBoYXZlIHJlY2VpdmVkIHRoZSBsZXZlbCBib251cyB7MH0geXVhbiBzdWNjZXNzZnVsbHlcIixcclxuICAgICAgICB0aXBzTGV2ZWxCdXk6IFwiQ29uc3VtcHRpb24gb2YgZ29sZCBjb2lucyB7MH1zLCBpcyBpdCBPSz9cIixcclxuICAgICAgICB0aXBzR29sZExlc3M6IFwiR29sZCBpcyBub3QgZW5vdWdoLCBwbGVhc2UgcmVjaGFyZ2UgYmVmb3JlIHB1cmNoYXNlXCIsXHJcbiAgICAgICAgdGlwTG9nOiBcIlRoZSBkZW1vIGFjY291bnQgaGFzIG5vIHJhdGluZyBzeXN0ZW3vvIxwbGVhc2UgbG9nIGluIGdhbWUgdG8gZXhwZXJpZW5jZSB0aGUgbGF0ZXN0IGZ1bmN0aW9uc1wiLFxyXG4gICAgICAgIHRpcFB1cmNoYXNlRmFpbGVkOiBcIlB1cmNoYXNlIGZhaWxlZCwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiLFxyXG4gICAgICAgIHRpcFJlY2VpdmVGYWlsZWQ6IFwiRmFpbGVkIHRvIHJlY2VpdmUsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIixcclxuICAgIH1cclxuXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTb3VuZHtcclxuICAgIC8qKlxyXG4gICAgICog5LiJ5Liq5aOw6Z+z57G75YirXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzb3VuZEhlYWRBcnI9e1xyXG4gICAgICAgIGJnU291bmRIZWFkOlwic291bmRzL1NjZW5lU291bmQvXCIsLy/og4zmma/pn7PkuZDmlofku7blpLlcclxuICAgICAgICBmaXNoU291bmRIZWFkOlwic291bmRzL0Zpc2hTb3VuZC9cIiwvL+mxvOmfs+aViOaWh+S7tuWkuVxyXG4gICAgICAgIGtleVNvdW5kSGVhZDpcInNvdW5kcy9LZXlTb3VuZC9cIi8v5oyJ6ZSu6Z+z5pWI5paH5Lu25aS5XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDog4zmma/pn7PkuZBcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHNvdW5kQmdBcnI9e1xyXG4gICAgICAgICBsb2dpbkJnTXVzaWM6XCJMb2dpblNjZW5lXCIsLy/nmbvlvZXlnLrmma/nmoTog4zmma/pn7PkuZBcclxuICAgICAgICAgaGFsbEJnTXVzaWM6XCJIYWxsU2NlbmVcIiwvL+Wkp+WOheWcuuaZr+eahOiDjOaZr+mfs+S5kFxyXG4gICAgICAgICBwbGF5QmdNdXNpYzE6XCJSYXRlMC4xXCIsLy8wLjHlgI3lnLrnmoTog4zmma/pn7PkuZBcclxuICAgICAgICAgcGxheUJnTXVzaWMyOlwiUmF0ZTFcIiwvLzHlgI3lnLrnmoTog4zmma/pn7PkuZBcclxuICAgICAgICAgcGxheUJnTXVzaWMzOlwiUmF0ZTEwXCIsLy8xMOWAjeWcuueahOiDjOaZr+mfs+S5kFxyXG4gICAgICAgICBmaXNoTWF0cml4OlwiRmlzaE1hdHJpeFwiLC8v6bG86Zi155qE6IOM5pmv6Z+zXHJcbiAgICB9XHJcbiBcclxuICAgIC8qKlxyXG4gICAgICog6bG855qE5aOw6Z+zXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzb3VuZEZpc2hBcnI9e1xyXG4gICAgICAgICBmaXNoRHlpbmc6XCJGaXNoRHlpbmdcIiwvL+mcgOimgea3u+WKoOmxvOeahOW6j+WIl+WPt1xyXG4gICAgICAgICBmcm96b25GaXNoOlwiRnJvem9uRmlzaFwiLC8v5Yaw5Ya76bG8XHJcbiAgICAgICAgIGZ1bGxTY2VuZUJvbWI6XCJGdWxsU2NlbmVCb21iXCIsLy/lhajlsY/ngrjlvLlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaMiemUruWjsOmfs1xyXG4gICAgICovXHJcbiAgICBzdGF0aWMgc291bmRLZXlBcnI9e1xyXG4gICAgICAgICBiaWdGaXNoQ29pbjpcIkJpZ0Zpc2hDb2luXCIsLy/ljYrovaznm5jph5HluIFcclxuICAgICAgICAgYm9zc0Zpc2hDb2luOlwiQm9zc0Zpc2hDb2luXCIsLy/lpKfovaznm5jph5HluIFcclxuICAgICAgICAgYm9zc1dhcm5pbmc6XCJCb3NzV2FybmluZ1wiLC8vYm9zc+mihOitplxyXG4gICAgICAgICBjaGFuZ2VHdW46XCJDaGFuZ2VHdW5cIiwvL+aNouaeqlxyXG4gICAgICAgICBvbkNsaWNrOlwiQ2xpY2tcIiwvL+eCueWHu1xyXG4gICAgICAgICBvbkNsb3NlOlwiQ2xvc2VcIiwvL+WFs+mXrVxyXG4gICAgICAgICBjb2luOlwiQ29pblwiLC8v5pmu6YCa6YeR5biBXHJcbiAgICAgICAgIGdldENvaW46XCJHZXRDb2luXCIsLy/ojrflvpfph5HluIFcclxuICAgICAgICAgbHVja0F3YXJkOlwiTHVja0F3YXJkXCIsLy/lubjov5DlpZbph5FcclxuICAgICAgICAgb25PcGVuOlwiT3BlblwiLC8v5omT5byA6Z2i5p2/XHJcbiAgICAgICAgIHJhdGVTZWxlY3Q6XCJSYXRlU2VsZWN0XCIsLy/pgInmi6nlgI3njoflnLpcclxuICAgICAgICAgc2hvb3QxOlwiU2hvb3QxXCIsLy/kvY7nuqflrZDlvLlcclxuICAgICAgICAgc2hvb3QyOlwiU2hvb3QyXCIsLy/kuK3nuqflrZDlvLlcclxuICAgICAgICAgc2hvb3QzOlwiU2hvb3QzXCIsLy/pq5jnuqflrZDlvLlcclxuICAgICAgICAgdHVybnRhYmxlOlwiVHVybnRhYmxlXCIsLy/ovaznm5hcclxuICAgICAgICAgd2luZG93Q2hhbmdlOlwiV2luZG93Q2hhbmdlXCIsLy/mlLnlj5jnqpflj6NcclxuICAgICAgICAgcmF0ZVdpbmRvdzpcIlJhdGVXaW5kb3dcIiwvL+WAjeeOh+WcuuW8ueahhlxyXG4gICAgICAgICB3YXJuOlwiV2FyblwiLC8v6aKE6K2m5p2l6KKtXHJcbiAgICAgICAgIHdhdmU6XCJXYXZlXCIsLy/ms6LmtapcclxuICAgIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IEV2ZW50TmV0UmVzcG9uc2UgZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCBDYW5ub24gZnJvbSBcIi4uL2dhbWUvSXRlbS9DYW5ub25cIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuLi9uZXQvUHJvdG9IYW5kZXIvTmV0TG9naW5cIjtcclxuaW1wb3J0IEZpc2hDb250cm9sbGVyIGZyb20gXCIuL0Zpc2hDb250cm9sbGVyXCI7XHJcbmltcG9ydCBCdWxsZXRCYXNlIGZyb20gXCIuLi9nYW1lL0J1bGxldC9CdWxsZXRCYXNlXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgSHVudFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0h1bnRQYW5lbFwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IE5ldFJvb20gZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRSb29tXCI7XHJcbmltcG9ydCBDb25maWdNYW5hZ2VyIGZyb20gXCIuLi9tYW5hZ2VyL0NvbmZpZ01hbmFnZXJcIjtcclxuaW1wb3J0IENhbm5vbkNvbmZpZyBmcm9tIFwiLi4vY29uZmlnL0Nhbm5vbkNvbmZpZ1wiO1xyXG5pbXBvcnQgR2FtZUNvbmZpZyBmcm9tIFwiLi4vR2FtZUNvbmZpZ1wiO1xyXG5pbXBvcnQgVGlwTWFuYWdlciwgeyBUaXBUeXBlIH0gZnJvbSBcIi4uL21hbmFnZXIvVGlwTWFuYWdlclwiO1xyXG5pbXBvcnQgRnJlZVRyYW5XYWxsZXQgZnJvbSBcIi4uL2dhbWUvUGFuZWwvV2FsbGV0UGFuZWxcIjtcclxuaW1wb3J0IE5ldFdhbGxldCBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFdhbGxldFwiO1xyXG5pbXBvcnQgeyBGaXNoQmFzZSB9IGZyb20gXCIuLi9nYW1lL0Zpc2gvRmlzaEJhc2VcIjtcclxuaW1wb3J0IEdhbWVFdmVudCBmcm9tIFwiLi4vY29uc3RhbnQvR2FtZUV2ZW50XCI7XHJcbmltcG9ydCBMYW5nIGZyb20gXCIuLi9jb25zdGFudC9MYW5ndWFnZUNvbnN0YW50XCI7XHJcbi8vaW1wb3J0IENhbm5vbkNvbmZpZyBmcm9tIFwiLi4vY29uZmlnL0Nhbm5vbkNvbmZpZ1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmF0dGVyeUNvbnRyb2xsZXIge1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogQmF0dGVyeUNvbnRyb2xsZXI7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBCYXR0ZXJ5Q29udHJvbGxlciB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5faW5zdGFuY2UpIHRoaXMuX2luc3RhbmNlID0gbmV3IEJhdHRlcnlDb250cm9sbGVyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG4gICAgcHVibGljIG1fY2Fubm9uOiBDYW5ub24gPSBudWxsO1xyXG4gICAgcHVibGljIGdldCBzZWxmQ2Fubm9uKCk6IENhbm5vbiB7XHJcbiAgICAgICAgaWYgKHRoaXMubV9jYW5ub24gPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLm1fY2Fubm9uID0gdGhpcy5HZXRCYXR0ZXJ5QnlVaWQoTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ucm9sZUlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubV9jYW5ub247XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBtX2xpbmVTcDogTGF5YS5TcHJpdGU7IC8v6ZSB5a6a5pS75Ye75pe255qE6L+e57q/55qE6IqC54K5XHJcbiAgICBwcml2YXRlIG1fYWltSW1nOiBMYXlhLkltYWdlOyAvL+mxvOi6q+S4iueahOmUgeWumuWbvuagh1xyXG5cclxuXHJcbiAgICAvKiog5a2Y5pS+5Zub5Liq54Ku5Y+wKi9cclxuICAgIHByaXZhdGUgbV9iYXR0ZXJ5QXJyOiBBcnJheTxDYW5ub24+ID0gW107XHJcbiAgICBwdWJsaWMgZ2V0IEJhdHRlcnlBcnIoKTogQXJyYXk8Q2Fubm9uPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubV9iYXR0ZXJ5QXJyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDkuIvmoIfku6Pooajpsbx0eXBl77yM5YC85Li6dHJ1ZeS7o+ihqOatpOmxvOiiq+mAieS4reS4uuiHquWKqOaUu+WHuyovXHJcbiAgICBwcml2YXRlIG1fYXV0b0F0dGFja0FycjogQXJyYXk8Ym9vbGVhbj47IC8vXHJcbiAgICBwdWJsaWMgZ2V0IGdBdXRvQXR0YWNrQXJyKCk6IEFycmF5PGJvb2xlYW4+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tX2F1dG9BdHRhY2tBcnI7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgc2V0IHNBdXRvQXR0YWNrQXJyKHY6IEFycmF5PGJvb2xlYW4+KSB7XHJcbiAgICAgICAgdGhpcy5tX2F1dG9BdHRhY2tBcnIgPSB2O1xyXG4gICAgfVxyXG4gICAgLyoq5bey5Y+R5bCE55qE5a2Q5by55pWw6YePICovXHJcbiAgICBwdWJsaWMgU2hvb3RlZEJ1bGxldEFtb3VudDogbnVtYmVyID0gMDtcclxuXHJcblxyXG4gICAgcHVibGljIG1fYnNob290ID0gZmFsc2U7IC8v5piv5ZCm5Zyo5bCE5Ye754q25oCBXHJcbiAgICBwcml2YXRlIG1fc2hvb3RJbmRleCA9IDA7IC8v6Ieq5bex5Y+R5bCE5a2Q5by555qE57Si5byVXHJcbiAgICBwcml2YXRlIG1fc2hvb3RJbnRlcnZhbDogbnVtYmVyID0gMDsgLy/mjqfliLblsITlh7vml7bpl7Tpl7TpmpRcclxuXHJcblxyXG4gICAgLyoqIOatu+S6oeaIluiAheenu+WKqOWHuui+ueeVjOaXtu+8jOmDveS8mumHjee9ruS4ujAqL1xyXG4gICAgcHVibGljIExvY2tlZEZpc2hJRDogbnVtYmVyIHwgTG9uZyA9IDA7XHJcbiAgICBwdWJsaWMgTW91c2VEb3duUG9pbnQ6IExheWEuUG9pbnQ7XHJcbiAgICBwdWJsaWMgYkF1dG9BdHRhY2tNb3VzZURvd246IGJvb2xlYW47XHJcblxyXG5cclxuICAgIC8qKiDmlLbliLDml6DnlKjlrZDlvLnlm57lpI3lkI7miY3og73or7fmsYLkuIvkuIDlj5HlrZDlvLkqL1xyXG4gICAgcHVibGljIG1fYkRpc3BhdGNoTXNnID0gdHJ1ZTtcclxuXHJcbiAgICAvKiog5peg55So5a2Q5by55a2X5YW477yM5q+P6Ze06ZqUMC4y5Y+R6YCB5LiA5p2h77yM6aKR546H5aSq5b+r77yM5pyN5Yqh56uv5Lya5b+955WlKi9cclxuICAgIHB1YmxpYyBtX3VzZWxlc3NNc2dEaWN0OiB7IFtpZDogbnVtYmVyXTogUm9vbU1zZy5idWxsZXRfdXNlbGVzc19yZXEgfSA9IFtdO1xyXG4gICAgcHVibGljIG1fdXNlbGVzc0J1bGxldElkRGljdDogeyBbaWQ6IG51bWJlcl06IFJvb21Nc2cuYnVsbGV0X3VzZWxlc3NfcmVxIH0gPSBbXTtcclxuICAgIHB1YmxpYyBtX3RvdGFsQnVsbGV0SWREaWN0OiB7IFtpZDogbnVtYmVyXTogUm9vbU1zZy5zaG9vdF9idWxsZXRfcmVzcCB9ID0gW107XHJcbiAgICBwdWJsaWMgbV9yZXFCdWxsZXRJZERpY3Q6IHsgW2lkOiBudW1iZXJdOiBSb29tTXNnLnNob290X2J1bGxldF9yZXEgfSA9IFtdO1xyXG5cclxuICAgIC8qKiDmlLvlh7vnsbvlnosqL1xyXG4gICAgcHJpdmF0ZSBtX3Nob290TW9kZWw6IEVudW1EYXRhLlNob290VHlwZSA9IEVudW1EYXRhLlNob290VHlwZS5TSE9PVF9OT1JNQUw7XHJcbiAgICBwcml2YXRlIG1fc2hvb3RNb2RlbExhc3Q6IEVudW1EYXRhLlNob290VHlwZSA9IEVudW1EYXRhLlNob290VHlwZS5TSE9PVF9OT1JNQUw7XHJcbiAgICBwdWJsaWMgc2V0IFNob290TW9kZSh2OiBFbnVtRGF0YS5TaG9vdFR5cGUpIHtcclxuICAgICAgICB0aGlzLm1fc2hvb3RNb2RlbCA9IHY7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IGdTaG9vdE1vZGVsKCk6IEVudW1EYXRhLlNob290VHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubV9zaG9vdE1vZGVsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuUmVhZHlSb29tUmVzcCwgdGhpcywgdGhpcy5SZWFkeVJvb21SZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlN5blJvbGVSZXNwLCB0aGlzLCB0aGlzLlN5blJvbGVSZXNwKTsgLy/lho3mrKHlkIzmraXluqfkvY3kv6Hmga9cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLkNoYW5nZUJhdHRlcnlSZXNwLCB0aGlzLCB0aGlzLkNoYW5nZUJhdHRlcnlSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlNob290QnVsbGV0UmVzcCwgdGhpcywgdGhpcy5TaG9vdEJ1bGxldFJlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuU2hvb3RFcnJvclJlc3AsIHRoaXMsIHRoaXMuU2hvb3RFcnJvclJlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuTGVhdmVSb29tUmVzcCwgdGhpcywgdGhpcy5MZWF2ZVJvb21SZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlVwZGF0ZUNoaXBSZXNwLCB0aGlzLCB0aGlzLlVwZGF0ZUNoaXBSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlN5bmNDaGlwc1Jlc3AsIHRoaXMsIHRoaXMuU3luY0NoaXBzUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5NcVN5bmNDaGlwc1Jlc3AsIHRoaXMsIHRoaXMuTXFTeW5jQ2hpcHNSZXNwKTsgLy/lpKfljoXlhY3ovazlhYXlgLzvvIzmiL/pl7TlhoXlhYXlgLzmmK8gVXBkYXRlQ2hpcFJlc3BcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLkJ1bGxldFVzZWxlc3NSZXNwLCB0aGlzLCB0aGlzLkJ1bGxldFVzZWxlc3NSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLkJ1bGxldFBhc3NSZXNwLCB0aGlzLCB0aGlzLkJ1bGxldFBhc3NSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlN5bmNKcEpldHRvblJlc3AsIHRoaXMsIHRoaXMuU3luY0pwSmV0dG9uUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5GaXNoRGVhZFJlc3AsIHRoaXMsIHRoaXMuRmlzaERlYWRSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLk9uZVBpZWNlUmVzcCwgdGhpcywgdGhpcy5PbmVQaWVjZVJlc3ApO1xyXG5cclxuICAgICAgICB0aGlzLm1fYXV0b0F0dGFja0FyciA9IFtdO1xyXG4gICAgICAgIHRoaXMubV9iYXR0ZXJ5QXJyID0gW107XHJcbiAgICAgICAgdGhpcy5TaG9vdChmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5tX3Nob290SW5kZXggPSAwO1xyXG4gICAgICAgIHRoaXMuU2hvb3RlZEJ1bGxldEFtb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5Mb2NrZWRGaXNoSUQgPSAwO1xyXG4gICAgICAgIHRoaXMubV9zaG9vdEludGVydmFsID0gQ29tbW9uQ29uc3RhbnQuU2hvb3RSYXRlO1xyXG4gICAgICAgIHRoaXMubV9zaG9vdE1vZGVsID0gRW51bURhdGEuU2hvb3RUeXBlLlNIT09UX05PUk1BTDtcclxuICAgICAgICB0aGlzLk1vdXNlRG93blBvaW50ID0gbmV3IExheWEuUG9pbnQoLTEsIC0xKTtcclxuICAgICAgICB0aGlzLkluaXRMb2NrTGluZSgpO1xyXG4gICAgICAgIHRoaXMubV9iRGlzcGF0Y2hNc2cgPSB0cnVlO1xyXG5cclxuICAgICAgICBMYXlhLnRpbWVyLmZyYW1lTG9vcCgxLCB0aGlzLCB0aGlzLlNob290QmVoYXZpb3VyKTtcclxuICAgICAgICBMYXlhLnRpbWVyLmxvb3AoQ29tbW9uQ29uc3RhbnQuRGlzcGF0Y2hVc2VsZXNzTXNnRGVsdGEsIHRoaXMsIHRoaXMuZGlzcGF0Y2hVc2VsZXNzTXNnKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFVuaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLlJlYWR5Um9vbVJlc3AsIHRoaXMsIHRoaXMuUmVhZHlSb29tUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TeW5Sb2xlUmVzcCwgdGhpcywgdGhpcy5TeW5Sb2xlUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5DaGFuZ2VCYXR0ZXJ5UmVzcCwgdGhpcywgdGhpcy5DaGFuZ2VCYXR0ZXJ5UmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TaG9vdEJ1bGxldFJlc3AsIHRoaXMsIHRoaXMuU2hvb3RCdWxsZXRSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLkxlYXZlUm9vbVJlc3AsIHRoaXMsIHRoaXMuTGVhdmVSb29tUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5VcGRhdGVDaGlwUmVzcCwgdGhpcywgdGhpcy5VcGRhdGVDaGlwUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLlN5bmNDaGlwc1Jlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50TmV0UmVzcG9uc2UuTXFTeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLk1xU3luY0NoaXBzUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5CdWxsZXRVc2VsZXNzUmVzcCwgdGhpcywgdGhpcy5CdWxsZXRVc2VsZXNzUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5CdWxsZXRQYXNzUmVzcCwgdGhpcywgdGhpcy5CdWxsZXRQYXNzUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TeW5jSnBKZXR0b25SZXNwLCB0aGlzLCB0aGlzLlN5bmNKcEpldHRvblJlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50TmV0UmVzcG9uc2UuRmlzaERlYWRSZXNwLCB0aGlzLCB0aGlzLkZpc2hEZWFkUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5PbmVQaWVjZVJlc3AsIHRoaXMsIHRoaXMuT25lUGllY2VSZXNwKTtcclxuXHJcbiAgICAgICAgdGhpcy5TaG9vdChmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5TaG9vdGVkQnVsbGV0QW1vdW50ID0gMDtcclxuICAgICAgICB0aGlzLkxvY2tlZEZpc2hJRCA9IDA7XHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tX2JhdHRlcnlBcnIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgLy9pZih0aGlzLm1fYmF0dGVyeUFycltpXS5HdW4zRC5hY3RpdmUpXHJcbiAgICAgICAgICAgIHsgdGhpcy5tX2JhdHRlcnlBcnJbaV0uRXhpdCgpOyB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm1fYkRpc3BhdGNoTXNnID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tX3VzZWxlc3NNc2dEaWN0ID0gW107XHJcbiAgICAgICAgdGhpcy5tX3VzZWxlc3NCdWxsZXRJZERpY3QgPSBbXTtcclxuICAgICAgICB0aGlzLm1fdG90YWxCdWxsZXRJZERpY3QgPSBbXTtcclxuICAgICAgICB0aGlzLm1fcmVxQnVsbGV0SWREaWN0ID0gW107XHJcbiAgICAgICAgdGhpcy5tX2Nhbm5vbiA9IG51bGw7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5rS+5Y+R5peg55So5a2Q5by555qE5raI5oGvXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZGlzcGF0Y2hVc2VsZXNzTXNnKCkge1xyXG4gICAgICAgIGlmICh0aGlzLm1fYkRpc3BhdGNoTXNnKSB7XHJcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMubV91c2VsZXNzTXNnRGljdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX2JEaXNwYXRjaE1zZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKENvbW1vbkNvbnN0YW50LlNlbmRVc2VsZXNzTXNnRGVsdGEsIHNlbGYsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVxOiBSb29tTXNnLmJ1bGxldF91c2VsZXNzX3JlcSA9IHNlbGYubV91c2VsZXNzTXNnRGljdFtrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgIE5ldFJvb20uSW5zdGFuY2UuQnVsbGV0VXNlTGVzc1JlcShyZXEudWlkLCByZXEubXVsdGksIHJlcS5idWxsZXRpZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYubV91c2VsZXNzQnVsbGV0SWREaWN0W3JlcS5idWxsZXRpZCBhcyBudW1iZXJdID0gcmVxO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkudXNlbGVzc0J1bGxldFJlcSsrO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiICBkaXNwYXRjaFVzZWxlc3NNc2cgYnVsbGV0SWQgPSBcIiwgcmVxLmJ1bGxldGlkKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFJlY29ubmVjdCgpIHtcclxuICAgICAgICB0aGlzLm1fYXV0b0F0dGFja0FyciA9IFtdO1xyXG4gICAgICAgIHRoaXMuU2hvb3QoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuTG9ja2VkRmlzaElEID0gMDtcclxuICAgICAgICB0aGlzLm1fc2hvb3RJbnRlcnZhbCA9IENvbW1vbkNvbnN0YW50LlNob290UmF0ZTtcclxuICAgICAgICB0aGlzLm1fc2hvb3RNb2RlbCA9IEVudW1EYXRhLlNob290VHlwZS5TSE9PVF9OT1JNQUw7XHJcbiAgICAgICAgdGhpcy5Nb3VzZURvd25Qb2ludCA9IG5ldyBMYXlhLlBvaW50KC0xLCAtMSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFN0b3BMb2NrQXR0YWNrKCkge1xyXG4gICAgICAgIHRoaXMuU2hvb3QoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuSGlkZUxvY2tMaW5lRWZmZWN0KCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuSFVOVF9MT0NLQVRUQUNLLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5Mb2NrZWRGaXNoSUQgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBTdG9wQXV0b0F0dGFjaygpIHtcclxuICAgICAgICB0aGlzLlNob290KGZhbHNlKTtcclxuICAgICAgICB0aGlzLkhpZGVMb2NrTGluZUVmZmVjdCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goR2FtZUV2ZW50LkhVTlRfQVVUT0FUVEFDSywgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuTG9ja2VkRmlzaElEID0gMDtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMlueOqeWutuS/oeaBr1xyXG4gICAgICogQHBhcmFtIGRhdGEg5oi/6Ze05YaF5omA5pyJ55qE546p5a625L+h5oGvXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgUmVhZHlSb29tUmVzcChkYXRhOiBSb29tTXNnLnJvb21fcm9sZV9pbmZvW10pOiB2b2lkIHtcclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkluaXRGdWkoKTtcclxuICAgICAgICB0aGlzLlN5blJvbGVSZXNwKGRhdGEpO1xyXG4gICAgICAgIHRoaXMuVHJhbnNmb3JtVmlldyhkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWGjeasoeWQjOatpeW6p+S9jeS/oeaBr1xyXG4gICAgICogQHBhcmFtIGRhdGEg5oi/6Ze05YaF5omA5pyJ55qE546p5a625L+h5oGvXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgU3luUm9sZVJlc3AoZGF0YTogUm9vbU1zZy5yb29tX3JvbGVfaW5mb1tdKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tU3luUm9sZVJlc3AgZGF0YTpcIiwgZGF0YSk7XHJcbiAgICAgICAgdmFyIGJVcGRhdGVBcnIgPSBbZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2VdO1xyXG4gICAgICAgIC8v5aaC5p6c546p5a626Ieq6Lqr55qE5L2N572u5Zyo5LiK5pa577yM5YiZ6ZyA6KaB6LCD5pW05Yiw5LiL5pa5XHJcbiAgICAgICAgbGV0IHRlbXBEYXRhID0gdGhpcy5UcmFuc2Zvcm1WaWV3KGRhdGEpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcERhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGluZGV4ID0gdGVtcERhdGFbaV0ucG9zaXRpb24gLSAxOyAvL+acjeWKoeerr+S9jee9ruS7jjHlvIDlp4tcclxuICAgICAgICAgICAgdGhpcy5tX2JhdHRlcnlBcnJbaW5kZXhdLlVwZGF0ZUluZm8odGVtcERhdGFbaV0pO1xyXG4gICAgICAgICAgICBiVXBkYXRlQXJyW2luZGV4XSA9IHRydWU7XHJcbiAgICAgICAgICAgIC8vIC8v6I635Y+W546p5a6255qE54Ku5Y+wXHJcbiAgICAgICAgICAgIC8vIGlmICghdGhpcy5zZWxmQ2Fubm9uICYmIE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZCA9PSB0aGlzLm1fYmF0dGVyeUFycltpbmRleF0uRGF0YS51aWQpIHtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMubV9jYW5ub24gPSB0aGlzLm1fYmF0dGVyeUFycltpbmRleF07XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiVXBkYXRlQXJyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICghYlVwZGF0ZUFycltpXSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX2JhdHRlcnlBcnJbaV0uVXBkYXRlSW5mbyhudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWmguaenOeOqeWutuiHqui6q+eahOS9jee9ruWcqOS4iuaWue+8jOWImemcgOimgeWPmOaNouS4iuS4i+eCruWPsOeahOS9jee9ruS7peWPiuWcuuaZr+S4remxvOeahOS9jee9rlxyXG4gICAgKi9cclxuICAgIHByaXZhdGUgVHJhbnNmb3JtVmlldyhkYXRhOiBSb29tTXNnLnJvb21fcm9sZV9pbmZvW10pIHtcclxuICAgICAgICBsZXQgdGVtcERhdGEgPSBkYXRhLnNsaWNlKCk7XHJcbiAgICAgICAgbGV0IGJUcmFuc2Zvcm0gPSBmYWxzZTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGRhdGFbaV0udWlkLnRvU3RyaW5nKCkgPT0gTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ucm9sZUlkLnRvU3RyaW5nKCkgJiYgZGF0YVtpXS5wb3NpdGlvbiA+IDIpIHtcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iVHJhbnNmb3JtID0gdHJ1ZTsgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iVHJhbnNmb3JtKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgLy8gaWYgKGRhdGFbaV0ucG9zaXRpb24gPT0gMSB8fCBkYXRhW2ldLnBvc2l0aW9uID09IDMpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICB0ZW1wRGF0YVtpXS5wb3NpdGlvbiA9IDQgLSBkYXRhW2ldLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgLy8gaWYgKGRhdGFbaV0ucG9zaXRpb24gPT0gMiB8fCBkYXRhW2ldLnBvc2l0aW9uID09IDQpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICB0ZW1wRGF0YVtpXS5wb3NpdGlvbiA9IDYgLSBkYXRhW2ldLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgdGVtcERhdGFbaV0ucG9zaXRpb24gPSA1IC0gZGF0YVtpXS5wb3NpdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuQ29uZmlnTW5nLlRyYW5zZm9ybUZpc2hQYXRoKCk7XHJcbiAgICAgICAgICAgIC8vR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuVHJhbnNmb3JtRmlzaFZpZXcoKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRlbXBEYXRhO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnjqnlrrbliIfmjaLngq7lj7DlgI3njodcclxuICAgICAqIEBwYXJhbSBkYXRhIOeOqeWutnVpZFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIENoYW5nZUJhdHRlcnlSZXNwKGRhdGE6IFJvb21Nc2cuY2hhbmdlX2JhdHRlcnlfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLUNoYW5nZUJhdHRlcnlSZXNwIGRhdGE6XCIsIGRhdGEpO1xyXG4gICAgICAgIHZhciBjYW5ub24gPSB0aGlzLkdldEJhdHRlcnlCeVVpZChkYXRhLnVpZCk7XHJcbiAgICAgICAgY2Fubm9uLlVwZGF0ZUJ1bGxldE11bHRpKGRhdGEubXVsdGkpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgU2hvb3RFcnJvclJlc3AoZGF0YTogUm9vbU1zZy5zaG9vdF9lcnJfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLVNob290RXJyb3JSZXNwIGRhdGE6XCIsIGRhdGEpO1xyXG4gICAgICAgIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5TaG9vdEVycm9yUmVzcCsrO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5a2Q5by55Y+R5bCE5raI5oGv6L+U5ZueXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBTaG9vdEJ1bGxldFJlc3AoZGF0YTogUm9vbU1zZy5zaG9vdF9idWxsZXRfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGlmICghTGF5YS5zdGFnZS5pc1Zpc2liaWxpdHkpIHJldHVybjsvL+WIh+aNouWIsOWQjuWPsO+8jOWBnOatouWtkOW8ueWIm+W7ulxyXG4gICAgICAgIHZhciBjYW5ub24gPSB0aGlzLkdldEJhdHRlcnlCeVVpZChkYXRhLnVpZCk7XHJcbiAgICAgICAgaWYgKG51bGwgIT0gY2Fubm9uKSB7XHJcbiAgICAgICAgICAgIGNhbm5vbi5DcmVhdGVCdWxsZXQoZGF0YSk7XHJcbiAgICAgICAgICAgIGlmIChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQoZGF0YS51aWQpKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LnNob290QnVsbGV0UmVzcCsrO1xyXG4gICAgICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UubV90b3RhbEJ1bGxldElkRGljdFtkYXRhLmJ1bGxldGlkIGFzIG51bWJlcl0gPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fcmVxQnVsbGV0SWREaWN0W2RhdGEuYnVsbGV0aWQgYXMgbnVtYmVyXTtcclxuICAgICAgICAgICAgICAgIGxldCBjaGlwczogbnVtYmVyID0gTnVtYmVyKGRhdGEuamV0dG9uc2hvdykgKyBOdW1iZXIoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmdldEZseWluZ0J1bGxldENoaXBzKCkpO1xyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0gQ3JlYXRlQnVsbGV0IGJ1bGxldElEID0gXCIsIGRhdGEuYnVsbGV0aWQudG9TdHJpbmcoKSwgXCIgY29pbj0gXCIsIGRhdGEuamV0dG9uc2hvdy50b1N0cmluZygpLCBcIiBjaGlwcyA9IFwiLCBjaGlwcy50b1N0cmluZygpLCBcIiBkYXRhID0gXCIsIGRhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog56a75byA5oi/6Ze0XHJcbiAgICAgKiBAcGFyYW0gZGF0YSDnjqnlrrZ1aWRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBMZWF2ZVJvb21SZXNwKGRhdGE6IFJvb21Nc2cubGVhdmVfcm9vbV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5VcGRhdGVCYXR0ZXJ5KGRhdGEudWlkKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgKiDmiL/pl7TlhoXlhY3ovazliqDpkrHjgIHlubPlj7DlhYXlgLzmj5DnjrAgIOWIt+aWsOmHkeW4gVxyXG4gICAgKiBAcGFyYW0gZGF0YSDnjqnlrrZ1aWRcclxuICAgICovXHJcbiAgICBwcml2YXRlIFVwZGF0ZUNoaXBSZXNwKGRhdGE6IFJvb21Nc2cudXBkYXRlX2NoaXBzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLSDlhY3ovazliqDpkrEg5Yi35paw6YeR5biBIFVwZGF0ZUNoaXBSZXNwIGJ1bGxldElEID0gXCIsIGRhdGEuYnVsbGV0aWQudG9TdHJpbmcoKSwgXCIgY29pbj0gXCIsIGRhdGEuamV0dG9uc2hvdy50b1N0cmluZygpKTtcclxuICAgICAgICB0aGlzLlVwZGF0ZUJhdHRlcnkoZGF0YS51aWQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAqIOeOqeWutuivt+axgiDlkIzmraXph5HluIFcclxuICAgICogQHBhcmFtIGRhdGEg546p5a62dWlkXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBTeW5jQ2hpcHNSZXNwKGRhdGE6IFJvb21Nc2cuc3luY19jaGlwc19yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgLy91dGlscy5Db21tb25VdGlscy5sb2coXCItLSDnjqnlrrbor7fmsYIg5ZCM5q2l55yf5a6e6YeR5biBIFN5bmNDaGlwc1Jlc3AgIGNvaW49IFwiLCBkYXRhLmNoaXBzLnRvU3RyaW5nKCksIFwiIHJlYWxDaGlwcyA9IFwiLCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcucmVhbENoaXBzLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIC8vdGhpcy5tX3JlYWxDaGlwcyA9IGRhdGEuY2hpcHMgYXMgbnVtYmVyO1xyXG4gICAgICAgIHRoaXMuVXBkYXRlQmF0dGVyeShOZXRMb2dpbi5JbnN0YW5jZS5fcGxheWVyTG9naW5JbmZvLnJvbGUucm9sZUlkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAqIOWQjOatpeeOqeWutuiHquW3semHkeW4gSjnlKjkuo7lhY3ovawpIOWkp+WOheWFjei9rOWFheWAvFxyXG4gICogQHBhcmFtIGRhdGEg546p5a62dWlkXHJcbiAgKi9cclxuICAgIHByaXZhdGUgTXFTeW5jQ2hpcHNSZXNwKGRhdGE6IFJvb21Nc2cuSW1xX3N5bmNfY2hpcHNfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0g5ZCM5q2l6YeR5biBIFN5bmNDaGlwc1Jlc3AgIGNvaW4gPSBcIiwgZGF0YS5jaGlwcy50b1N0cmluZygpKTtcclxuICAgICAgICB0aGlzLlVwZGF0ZUJhdHRlcnkoTmV0TG9naW4uSW5zdGFuY2UuX3BsYXllckxvZ2luSW5mby5yb2xlLnJvbGVJZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDml6DmlYjlrZDlvLnkv6Hmga9cclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEJ1bGxldFVzZWxlc3NSZXNwKGRhdGE6IFJvb21Nc2cuYnVsbGV0X3VzZWxlc3NfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQoZGF0YS51aWQpKSB7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tIOaXoOaViOWtkOW8ueS/oeaBryBCdWxsZXRVc2VsZXNzUmVzcCBidWxsZXRJRCA9IFwiLCBkYXRhLmJ1bGxldGlkLnRvU3RyaW5nKCksIFwiIGNvaW49IFwiLCBkYXRhLmpldHRvbnNob3cudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3VzZWxlc3NNc2dEaWN0W2RhdGEuYnVsbGV0aWQgYXMgbnVtYmVyXTtcclxuICAgICAgICAgICAgZGVsZXRlIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdXNlbGVzc0J1bGxldElkRGljdFtkYXRhLmJ1bGxldGlkIGFzIG51bWJlcl07XHJcbiAgICAgICAgICAgIGRlbGV0ZSBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3RvdGFsQnVsbGV0SWREaWN0W2RhdGEuYnVsbGV0aWQgYXMgbnVtYmVyXTtcclxuICAgICAgICAgICAgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LnVzZWxlc3NCdWxsZXRSZXNwKys7XHJcbiAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fYkRpc3BhdGNoTXNnID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5VcGRhdGVCYXR0ZXJ5KGRhdGEudWlkKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5pyJ5pWI5a2Q5by55L+h5oGvXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBCdWxsZXRQYXNzUmVzcChkYXRhOiBSb29tTXNnLmJ1bGxldF9wYXNzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLSDmnInmlYjlrZDlvLnkv6Hmga8gQnVsbGV0UGFzc1Jlc3AgYnVsbGV0SUQgPSBcIiwgZGF0YS5idWxsZXRpZC50b1N0cmluZygpLCBcIiBjb2luPSBcIiwgZGF0YS5qZXR0b25zaG93LnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIGlmIChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQoZGF0YS51aWQpKSB7XHJcbiAgICAgICAgICAgIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5CdWxsZXRQYXNzUmVzcCsrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLlVwZGF0ZUJhdHRlcnkoZGF0YS51aWQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBKcOWlluWKseWQjOatpVxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgU3luY0pwSmV0dG9uUmVzcChkYXRhOiBSb29tTXNnLnN5bmNfanBfamV0dG9uX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB0aGlzLlVwZGF0ZUJhdHRlcnkoZGF0YS51aWQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDpsbzmrbvkuqHlkIzmraVcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEZpc2hEZWFkUmVzcChkYXRhOiBSb29tTXNnLmZpc2hfZGVhZF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgLy91dGlscy5Db21tb25VdGlscy5sb2coXCItLSDpsbzmrbvkuqHlkIzmraUgRmlzaERlYWRSZXNwIGJ1bGxldElEID0gXCIsIGRhdGEuYnVsbGV0aWQudG9TdHJpbmcoKSwgXCIgY29pbj0gXCIsIGRhdGEuamV0dG9uc2hvdy50b1N0cmluZygpLCBcIiByZWFsQ2hpcHMgPSBcIiwgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnJlYWxDaGlwcy50b1N0cmluZygpKTtcclxuICAgICAgICAvL+WmguaenOmFjeWQiOWbnuaUtumHkeW4geeJueaViOW7tui/n+abtOaWsOaVsOaNruS8muWvvOiHtOW+iOWkmuW8guW4uOmXrumimO+8jOaJgOS7peatpOWkhOebtOaOpeabtOaWsOmHkeW4gVxyXG4gICAgICAgIHRoaXMuVXBkYXRlQmF0dGVyeShkYXRhLnVpZCBhcyBMb25nKTtcclxuICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuSXNTZWxmVWlkKGRhdGEudWlkKSkge1xyXG4gICAgICAgICAgICBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkuZmlzaERlYWRSZXNwKys7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgT25lUGllY2VSZXNwKGRhdGE6IFJvb21Nc2cub25lX3BpZWNlX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tIE9uZVBpZWNlUmVzcCBidWxsZXRJRCA9IFwiLCBkYXRhLmJ1bGxldGlkLnRvU3RyaW5nKCksIFwiIGNvaW49IFwiLCBkYXRhLmpldHRvbnNob3cudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgdGhpcy5VcGRhdGVCYXR0ZXJ5KGRhdGEudWlkIGFzIExvbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog546p5a62VUnov5vooYzmm7TmlrDlubbov5Tlm57njqnlrrbngq7lj7BVSeWvueixoVxyXG4gICAgICogQHBhcmFtIHVzZXJJZCDnjqnlrrZ1aWRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBVcGRhdGVCYXR0ZXJ5KHVzZXJJZDogbnVtYmVyIHwgTG9uZyk6IENhbm5vbiB7XHJcbiAgICAgICAgdmFyIGNhbm5vbiA9IHRoaXMuR2V0QmF0dGVyeUJ5VWlkKHVzZXJJZCk7XHJcbiAgICAgICAgaWYgKGNhbm5vbikge1xyXG4gICAgICAgICAgICB2YXIgYW5nbGUgPSBjYW5ub24uVXBkYXRlUGxheWVySW5mb1Nob3coKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29pbkZseWluZ0ZpbmlzaCh1c2VySWQ6IG51bWJlciB8IExvbmcsIGRhdGE6IFJvb21Nc2cuSWZpc2hfYm9udXNfaW5mbykge1xyXG4gICAgICAgIHZhciBjYW5ub24gPSB0aGlzLkdldEJhdHRlcnlCeVVpZCh1c2VySWQpO1xyXG4gICAgICAgIGlmIChjYW5ub24pIHtcclxuXHJcbiAgICAgICAgICAgIGNhbm5vbi5Db2luRmx5aW5nRmluaXNoKHVzZXJJZCwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBHZXRCYXR0ZXJ5QnlVaWQodXNlcklkOiBudW1iZXIgfCBMb25nKTogQ2Fubm9uIHtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1fYmF0dGVyeUFyci5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5tX2JhdHRlcnlBcnJbaV0uRGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS10aGlzLm1fYmF0dGVyeUFycltpXS5EYXRhLnVpZCA9IFwiLCB0aGlzLm1fYmF0dGVyeUFycltpXS5EYXRhLnVpZCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodXNlcklkLnRvU3RyaW5nKCkgPT0gdGhpcy5tX2JhdHRlcnlBcnJbaV0uRGF0YS51aWQudG9TdHJpbmcoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1fYmF0dGVyeUFycltpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMud2FybihcIi0tLS0tLS0tLS0tLeS4jeWtmOWcqHVzZXJpZO+8mlwiLCB1c2VySWQudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOagueaNrueCruWPsOWAjeaVsOiOt+WPlueCruWPsOi1hOa6kElEXHJcbiAgICAgKiBAcGFyYW0gaW5kZXgg54Ku5Y+w5YCN5pWwXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBHZXRCYXR0ZXJ5UmVzSWRCeU11bHRpKG11bHRpOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGxldCBpbmRleCA9IHRoaXMuR2V0QmF0dGVyeUluZGV4QnlNdWx0aShtdWx0aSk7XHJcbiAgICAgICAgbGV0IHJlc0lkID0gdGhpcy5HZXRCYXR0ZXJ5UmVzSWQoaW5kZXgpO1xyXG4gICAgICAgIHJldHVybiByZXNJZDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W54Ku5Y+w5YCN5pWw5a+55bqU55qE5pWw57uE5LiL5qCHXHJcbiAgICAgKiBAcGFyYW0gbXVsdGkg54Ku5Y+w5YCN5pWwXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBHZXRCYXR0ZXJ5SW5kZXhCeU11bHRpKG11bHRpOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBOZXRSb29tLkluc3RhbmNlLl9jdXJSb29tSW5mby5iYXR0ZXJ5Lmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gTmV0Um9vbS5JbnN0YW5jZS5fY3VyUm9vbUluZm8uYmF0dGVyeVtpbmRleF07XHJcbiAgICAgICAgICAgIGlmIChlbGVtZW50ID09IG11bHRpKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5qC55o2u5LiL5qCH6I635Y+W54Ku5Y+w6LWE5rqQSURcclxuICAgICAqIEBwYXJhbSBpbmRleCDngq7lj7DkuIvmoIdcclxuICAgICAqL1xyXG4gICAgcHVibGljIEdldEJhdHRlcnlSZXNJZChpbmRleDogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAoaW5kZXggPCA0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChpbmRleCA8IDgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFNob290KGJzaG9vdDogYm9vbGVhbikge1xyXG5cclxuICAgICAgICB0aGlzLm1fYnNob290ID0gYnNob290O1xyXG4gICAgfVxyXG5cclxuICAgIC8vLyA8c3VtbWFyeT7lsITlh7vooYzkuLogIGNhblNob2905Y+q5pyJ5Zyo6Ze06ZqU5pe26Ze05ZCO5omN6IO95bCE5Ye777yM5YW25L2Z55qE6LCD55So5Y+q5piv5L2c5Li66L2s6KeS5bqmPC9zdW1tYXJ5PlxyXG4gICAgLy8vIDxwYXJhbSBuYW1lPVwiaXNUb3VjaFwiPuaYr+WQpuaJp+ihjOWwhOWHu+aTjeS9nDwvcGFyYW0+XHJcbiAgICBwdWJsaWMgU2hvb3RCZWhhdmlvdXIoKSB7XHJcbiAgICAgICAgaWYgKCFMYXlhLnN0YWdlLmlzVmlzaWJpbGl0eSkgcmV0dXJuOy8v5YiH5o2i5Yiw5ZCO5Y+w77yM5YGc5q2i5a2Q5by55Y+R5bCEXHJcblxyXG4gICAgICAgIC8vdGhpcy5tX3Nob290SW50ZXJ2YWwgKz0gQ29tbW9uQ29uc3RhbnQuRGVsdGE7Ly9MYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIHRoaXMubV9zaG9vdEludGVydmFsICs9IExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgaWYgKHRoaXMubV9ic2hvb3QpIHtcclxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLm1fc2hvb3RNb2RlbCkge1xyXG5cclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuU2hvb3RUeXBlLlNIT09UX05PUk1BTDpcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTm9ybWFsU2hvb3RNb2RlbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuU2hvb3RUeXBlLlNIT09UX0FVVE86XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5BdXRvU2hvb3RNb2RlbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfTE9DSzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxvY2tTaG9vdE1vZGVsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLlNob290VHlwZS5TSE9PVF9TVE9QOlxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgPCBDb21tb25Db25zdGFudC5TaG9vdE1heE51bSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tX3Nob290TW9kZWwgPSB0aGlzLm1fc2hvb3RNb2RlbExhc3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLy8gPHN1bW1hcnk+5pmu6YCa5pS75Ye75qih5byPPC9zdW1tYXJ5PlxyXG4gICAgcHJpdmF0ZSBOb3JtYWxTaG9vdE1vZGVsKCkge1xyXG4gICAgICAgIC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiTm9ybWFsU2hvb3RNb2RlbFwiKTtcclxuICAgICAgICB0aGlzLkFpbUFuZEZpcmVCeVBvaW50KExheWEuc3RhZ2UubW91c2VYLCBMYXlhLnN0YWdlLm1vdXNlWSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6Ieq5Yqo5pS75Ye7Ki9cclxuICAgIHByaXZhdGUgQXV0b1Nob290TW9kZWwoKSB7XHJcbiAgICAgICAgdmFyIGxlbiA9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLmdBdXRvQXR0YWNrQXJyLmxlbmd0aDtcclxuICAgICAgICAvL+ayoeaciemAieaLqeimgeiHquWKqOaUu+WHu+eahOmxvCAgICBcclxuICAgICAgICBpZiAoIUdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iU2VsZWN0ZWRGaXNoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTG9ja2VkRmlzaElEID0gMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYkF1dG9BdHRhY2tNb3VzZURvd24pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWltQW5kRmlyZUJ5UG9pbnQoTGF5YS5zdGFnZS5tb3VzZVgsIExheWEuc3RhZ2UubW91c2VZKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWltQW5kRmlyZUJ5UG9pbnQodGhpcy5Nb3VzZURvd25Qb2ludC54LCB0aGlzLk1vdXNlRG93blBvaW50LnkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkxvY2tlZEZpc2hJRC50b1N0cmluZygpID09IFwiMFwiKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gbGVuIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tX2F1dG9BdHRhY2tBcnJbaV0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpc2hUeXBlID0gaTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIEZpc2hDb250cm9sbGVyLkluc3RhbmNlLkZpc2hPYmpEaWN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgb2JqOiBGaXNoQmFzZSA9IEZpc2hDb250cm9sbGVyLkluc3RhbmNlLkZpc2hPYmpEaWN0W2tleV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob2JqLl9NRmlzaEluZm8uX21GaXNoVHlwZSA9PSBmaXNoVHlwZSAmJiBvYmouQ2hlY2tJc0Zpc2hJbldhbGwoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTG9ja2VkRmlzaElEID0gb2JqLl9NRmlzaEluZm8uX21GaXNoSWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2NrU2hvb3RNb2RlbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlsY/luZXkuK3mmoLml6DopoHmjZXnmoTpsbws5Y+W5raI6ZSB5a6a54m55pWIXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZUxvY2tMaW5lRWZmZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Mb2NrU2hvb3RNb2RlbCgpOyAvL+aMgee7reaUu+WHu+W9k+WJjemUgeWumueahOmxvO+8jOebtOWIsOatpOmxvOatu+S6oeaIluiAheenu+WKqOWHuui+ueeVjFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKumUgeWumuaUu+WHuyovXHJcbiAgICBwcml2YXRlIExvY2tTaG9vdE1vZGVsKCkge1xyXG4gICAgICAgIGlmICh0aGlzLkxvY2tlZEZpc2hJRC50b1N0cmluZygpID09IFwiMFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuSGlkZUxvY2tMaW5lRWZmZWN0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZkNhbm5vbi5QbGF5QW5pbWF0aW9uKENhbm5vbkNvbmZpZy5fSWRsZUFuaSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGZpc2hQb3MgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5HZXRGaXNoUG9pbnRCeUlkKHRoaXMuTG9ja2VkRmlzaElELnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIGlmIChmaXNoUG9zID09IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmQ2Fubm9uLlBsYXlBbmltYXRpb24oQ2Fubm9uQ29uZmlnLl9JZGxlQW5pKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5BaW1BbmRGaXJlQnlQb2ludChmaXNoUG9zLngsIGZpc2hQb3MueSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHByaXZhdGUgQWltQW5kRmlyZUJ5UG9pbnQocG9zWCwgcG9zWSkge1xyXG4gICAgICAgIGlmICh0aGlzLnNlbGZDYW5ub24gPT0gbnVsbCB8fCBudWxsID09IHRoaXMuc2VsZkNhbm5vbi5HdW4zRCkge1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJBaW1BbmRGaXJlQnlQb2luOjrngq7lj7Dkv6Hmga/kuLrnqbpcIik7XHJcbiAgICAgICAgICAgIHJldHVybjsvL+WKoOi9veeCueWHu+aXtuWHuueOsOWNoeatu+eOsOixoVxyXG4gICAgICAgIH1cclxuICAgICAgICAvL+WPkeWwhOeahOWtkOW8uei2heWHuuS4iumZkFxyXG4gICAgICAgIGlmIChCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5TaG9vdGVkQnVsbGV0QW1vdW50ID09IENvbW1vbkNvbnN0YW50LlNob290TWF4TnVtKSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5CdWxsZXRNYXgsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICB0aGlzLkhpZGVMb2NrTGluZUVmZmVjdCgpO1xyXG4gICAgICAgICAgICB0aGlzLm1fc2hvb3RNb2RlbExhc3QgPSB0aGlzLm1fc2hvb3RNb2RlbDtcclxuICAgICAgICAgICAgdGhpcy5tX3Nob290TW9kZWwgPSBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfU1RPUDtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGFuZ2xlID0gdGhpcy5zZWxmQ2Fubm9uLkd1bjNELnRyYW5zZm9ybS5yb3RhdGlvbkV1bGVyLno7XHJcbiAgICAgICAgLy92YXIgYW5nbGUgPSBjYW5ub24uR3VuLnJvdGF0aW9uO1xyXG4gICAgICAgIGlmIChwb3NYICE9IC0xICYmIHBvc1kgIT0gLTEpIHtcclxuICAgICAgICAgICAgbGV0IHRlbXBBbmdsZSA9IHRoaXMuc2VsZkNhbm5vbi5VcGRhdGVBbmdsZUJ5UG9zKHBvc1gsIHBvc1kpO1xyXG4gICAgICAgICAgICBhbmdsZSA9IHRlbXBBbmdsZSA9PSAtMSA/IGFuZ2xlIDogdGVtcEFuZ2xlO1xyXG4gICAgICAgICAgICAvL+mUgeWumuaUu+WHu+aXtu+8jOeCrui6q+S9k+aXi+i9rOWIsDkw5bqm77yM5bCx5YGc5q2i5pS75Ye7XHJcbiAgICAgICAgICAgIC8vIGlmICh0ZW1wQW5nbGUgPT0gLTEgJiYgdGhpcy5Mb2NrZWRGaXNoSUQgIT0gMCkge1xyXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5IaWRlTG9ja0xpbmVFZmZlY3QoKTtcclxuICAgICAgICAgICAgLy8gICAgIHJldHVybjsgIC8vLTHooajnpLrngrnlh7vml6DmlYhcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5Mb2NrTGluZUVmZmVjdChhbmdsZSk7XHJcbiAgICAgICAgaWYgKHRoaXMubV9zaG9vdEludGVydmFsID49IENvbW1vbkNvbnN0YW50LlNob290UmF0ZSkge1xyXG5cclxuICAgICAgICAgICAgdGhpcy5tX3Nob290SW50ZXJ2YWwgPSAwO1xyXG4gICAgICAgICAgICB0aGlzLkZpcmUoYW5nbGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyAvKipcclxuICAgIC8vICAqIOaYr+WQpuaciei2s+Wkn+eahOetueeggVxyXG4gICAgLy8gICogQHBhcmFtIGNhbm5vbiBcclxuICAgIC8vICAqL1xyXG4gICAgLy8gcHVibGljIGlzRW5vdWdoQ2hpcChjYW5ub246IENhbm5vbik6IGJvb2xlYW4ge1xyXG4gICAgLy8gICAgIGxldCBqZXR0b25TaG93ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQoY2Fubm9uLkRhdGEuamV0dG9uX3Nob3cgYXMgbnVtYmVyKTtcclxuICAgIC8vICAgICBsZXQgYnVsbGV0TXVsdGkgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZChjYW5ub24uRGF0YS5idWxsZXRfbXVsdGkgKiBOZXRSb29tLkluc3RhbmNlLl9jdXJSb29tSW5mby5hbnRlKTtcclxuXHJcbiAgICAvLyAgICAgaWYgKGpldHRvblNob3cgPCBidWxsZXRNdWx0aSkge1xyXG4gICAgLy8gICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuV2FsbGV0TW5nLnNldE5vRW5vdWdoQ2hpcChqZXR0b25TaG93KTtcclxuICAgIC8vICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG4gICAgcHJpdmF0ZSBGaXJlKGFuZ2xlKSB7XHJcbiAgICAgICAgaWYgKCFHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5Jc2ZnV2FsbGV0RW5vdWdoKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5TdG9wQXV0b0F0dGFjaygpO1xyXG4gICAgICAgICAgICB0aGlzLlN0b3BMb2NrQXR0YWNrKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciB1aWQgPSBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mby5yb2xlSWQ7XHJcbiAgICAgICAgdmFyIGJ1bGxldF9tdWx0aSA9IHRoaXMuR2V0QmF0dGVyeUJ5VWlkKHVpZCkuRGF0YS5idWxsZXRfbXVsdGk7XHJcbiAgICAgICAgdmFyIHRpbWUgPSAxO1xyXG4gICAgICAgIHZhciBidWxsZXRpZCA9IE5ldFJvb20uSW5zdGFuY2UuX1Jvb21Sb2xlSW5mb0RpY3RbdWlkLnRvU3RyaW5nKCldLnBvc2l0aW9uICogMTAwMDAwMDAgKyB0aGlzLm1fc2hvb3RJbmRleCsrXHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5TaG9vdEJ1bGxldFJlcSh1aWQsIGJ1bGxldF9tdWx0aSwgYW5nbGUsIHRpbWUsIHRoaXMuTG9ja2VkRmlzaElELCBidWxsZXRpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5pqC5LiN55+lbGF5YeeahOWbvueJh+W5s+mTuuWmguS9leS9v+eUqOOAguOAguOAglxyXG4gICAgLy8gMS7lhYjlnKhtX2xpbmVTcOS4iui0tOi2s+Wkn+mVv+i3neemu+eahOeCuVxyXG4gICAgLy8gMi7moLnmja7ot53nprvplb/luqbvvIzmmL7npLrot53nprvlhoXnmoTngrlcclxuICAgIC8vIDMu54S25ZCO5peL6L2sbV9saW5lU3Dop5LluqbljbPlj69cclxuICAgIHByaXZhdGUgSW5pdExvY2tMaW5lKCkge1xyXG4gICAgICAgIC8v6ZSB5a6a5pS75Ye755qE57q/XHJcbiAgICAgICAgdGhpcy5tX2xpbmVTcCA9IG5ldyBMYXlhLlNwcml0ZSgpO1xyXG4gICAgICAgIHRoaXMubV9saW5lU3AucG9zKDEwMCwgNzIwKTtcclxuICAgICAgICBsZXQgaHVudFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5HZXRQYW5lbEJ5SWQoRW51bURhdGEuRW51bVBhbmVsVHlwZS5IdW50UGFuZWwpIGFzIEh1bnRQYW5lbDtcclxuICAgICAgICBodW50UGFuZWwubV9sYXlhVUlOb2RlLmFkZENoaWxkKHRoaXMubV9saW5lU3ApO1xyXG5cclxuICAgICAgICBsZXQgbGVuID0gTWF0aC5mbG9vcihHYW1lQ29uZmlnLndpZHRoIC8gQ29tbW9uQ29uc3RhbnQuTGluZVBvaW50V2l0aCk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgcG9pbnQgPSBuZXcgTGF5YS5JbWFnZShDb21tb25Db25zdGFudC5fbGluZVBvaW50UGF0aCk7XHJcbiAgICAgICAgICAgIHBvaW50LnBvcygwLCAtaSAqIENvbW1vbkNvbnN0YW50LkxpbmVQb2ludFdpdGgpO1xyXG4gICAgICAgICAgICBwb2ludC5hbmNob3JYID0gMC41O1xyXG4gICAgICAgICAgICBwb2ludC5hbmNob3JZID0gMC41O1xyXG4gICAgICAgICAgICB0aGlzLm1fbGluZVNwLmFkZENoaWxkKHBvaW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tX2FpbUltZyA9IG5ldyBMYXlhLkltYWdlKENvbW1vbkNvbnN0YW50Ll9haW1JbWdQYXRoKTtcclxuICAgICAgICB0aGlzLm1fYWltSW1nLmFuY2hvclggPSAwLjU7XHJcbiAgICAgICAgdGhpcy5tX2FpbUltZy5hbmNob3JZID0gMC41O1xyXG4gICAgICAgIHRoaXMubV9haW1JbWcuc2NhbGUoMC41LCAwLjUpO1xyXG4gICAgICAgIGh1bnRQYW5lbC5tX2xheWFVSU5vZGUuYWRkQ2hpbGQodGhpcy5tX2FpbUltZyk7XHJcbiAgICAgICAgdGhpcy5IaWRlTG9ja0xpbmVFZmZlY3QoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog6ZSB5a6a54m55pWIICovXHJcbiAgICBwdWJsaWMgTG9ja0xpbmVFZmZlY3Qocm90YXRlOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgc3RhcnRQb3MgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIGxldCBvdXRGaXNoUG9zID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBsZXQgbG9ja2VkRmlzaCA9IEZpc2hDb250cm9sbGVyLkluc3RhbmNlLkZpc2hPYmpEaWN0W3RoaXMuTG9ja2VkRmlzaElELnRvU3RyaW5nKCldO1xyXG4gICAgICAgIGlmIChsb2NrZWRGaXNoID09IG51bGwgfHwgbG9ja2VkRmlzaCA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5IaWRlTG9ja0xpbmVFZmZlY3QoKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY2FtZXJhSHVudCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9IdW50U2NlbmVDYW1lcmE7XHJcbiAgICAgICAgbGV0IGNhbWVyYUd1biA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9HdW5TY2VuZUNhbWVyYTtcclxuICAgICAgICBjYW1lcmFIdW50LnZpZXdwb3J0LnByb2plY3QobG9ja2VkRmlzaC5fT3duZXJQb3MsIGNhbWVyYUh1bnQucHJvamVjdGlvblZpZXdNYXRyaXgsIG91dEZpc2hQb3MpO1xyXG4gICAgICAgIHZhciB3b3JsZFBvcyA9ICh0aGlzLnNlbGZDYW5ub24uR3VuM0QuZ2V0Q2hpbGRCeU5hbWUoXCJCdWxsZXRQb3NcIikgYXMgTGF5YS5TcHJpdGUzRCkudHJhbnNmb3JtLnBvc2l0aW9uO1xyXG4gICAgICAgIGNhbWVyYUd1bi53b3JsZFRvVmlld3BvcnRQb2ludCh3b3JsZFBvcywgc3RhcnRQb3MpO1xyXG5cclxuICAgICAgICBsZXQgZGlzdGFuY2UgPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2Uoc3RhcnRQb3MsIG91dEZpc2hQb3MpO1xyXG4gICAgICAgIGxldCBsZW4gPSBNYXRoLmZsb29yKGRpc3RhbmNlIC8gQ29tbW9uQ29uc3RhbnQuTGluZVBvaW50V2l0aCk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1fbGluZVNwLm51bUNoaWxkcmVuOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IHBvaW50ID0gdGhpcy5tX2xpbmVTcC5nZXRDaGlsZEF0KGkpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgICAgIGlmIChpIDwgbGVuKSB7XHJcbiAgICAgICAgICAgICAgICBwb2ludC52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBvaW50LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1fYWltSW1nLnBvcyhvdXRGaXNoUG9zLngsIG91dEZpc2hQb3MueSk7XHJcbiAgICAgICAgdGhpcy5tX2FpbUltZy52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm1fbGluZVNwLnJvdGF0aW9uID0gcm90YXRlO1xyXG4gICAgICAgIHRoaXMubV9saW5lU3AucG9zKHN0YXJ0UG9zLngsIHN0YXJ0UG9zLnkpO1xyXG4gICAgICAgIHRoaXMubV9saW5lU3AudmlzaWJsZSA9IHRydWU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBIaWRlTG9ja0xpbmVFZmZlY3QoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubV9saW5lU3AgJiYgdGhpcy5tX2FpbUltZykge1xyXG4gICAgICAgICAgICB0aGlzLm1fbGluZVNwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5tX2FpbUltZy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IEV2ZW50TmV0UmVzcG9uc2UgZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBGaXNoSW5mbyBmcm9tIFwiLi4vZ2FtZS9GaXNoL0Zpc2hJbmZvXCI7XHJcbmltcG9ydCB7IEZpc2hCYXNlIH0gZnJvbSBcIi4uL2dhbWUvRmlzaC9GaXNoQmFzZVwiO1xyXG5pbXBvcnQgQ29uZmlnTWFuYWdlciwgeyBGaXNoV2F5UG9pbnQgfSBmcm9tIFwiLi4vbWFuYWdlci9Db25maWdNYW5hZ2VyXCI7XHJcbmltcG9ydCBCdWxsZXRJbmZvIGZyb20gXCIuLi9nYW1lL0J1bGxldC9CdWxsZXRJbmZvXCI7XHJcbmltcG9ydCBOZXRSb29tIGZyb20gXCIuLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9vbVwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4vQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgQ29pbkZseWluZyBmcm9tIFwiLi4vZ2FtZS9Db2luRWZmZWN0L0NvaW5GbHlpbmdcIjtcclxuaW1wb3J0IHsgRW51bSB9IGZyb20gXCIuLi8uLi9saWJzL3Byb3RvYnVmLWxpYnJhcnlcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgSHVudFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0h1bnRQYW5lbFwiO1xyXG5pbXBvcnQgQXV0b0Rlc3Ryb3kgZnJvbSBcIi4uL3V0aWxzL0F1dG9EZXN0cm95XCI7XHJcbmltcG9ydCBIdW50U2NlbmVNYW5hZ2VyIGZyb20gXCIuLi9tYW5hZ2VyL0h1bnRTY2VuZU1hbmFnZXJcIjtcclxuaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4uL0dhbWVDb25maWdcIjtcclxuaW1wb3J0IEdhbWVFdmVudCBmcm9tIFwiLi4vY29uc3RhbnQvR2FtZUV2ZW50XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaXNoQ29udHJvbGxlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBGaXNoQ29udHJvbGxlcjtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IEZpc2hDb250cm9sbGVyIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9pbnN0YW5jZSkgdGhpcy5faW5zdGFuY2UgPSBuZXcgRmlzaENvbnRyb2xsZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XHJcbiAgICB9XHJcbiAgICAvKiog5a6e5L6L5YyW55qE6bG855qE5YiX6KGoKi9cclxuICAgIHByaXZhdGUgX0Zpc2hPYmpEaWN0OiB7IFtpbmRleDogc3RyaW5nXTogRmlzaEJhc2UgfTtcclxuICAgIHB1YmxpYyBnZXQgRmlzaE9iakRpY3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX0Zpc2hPYmpEaWN0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlvZPliY3ooqvmlLvlh7vnmoTpsbznsbvlnosqL1xyXG4gICAgcHVibGljIF9GaXNoSGl0ZWRUeXBlOiBudW1iZXIgPSBudWxsO1xyXG4gICAgcHVibGljIF9Qb29sU2lnbjogc3RyaW5nID0gbnVsbDtcclxuXHJcbiAgICBwdWJsaWMgSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9Qb29sU2lnbiA9IFwiYm91bnNGb250XCI7XHJcbiAgICAgICAgdGhpcy5fRmlzaE9iakRpY3QgPSB7fTtcclxuICAgICAgICB0aGlzLl9GaXNoSGl0ZWRUeXBlID0gbnVsbDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlN5bkZpc2hSZXNwLCB0aGlzLCB0aGlzLkNyZWF0ZUZpc2gpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuRmlzaERlYWRSZXNwLCB0aGlzLCB0aGlzLkZpc2hEZWFkUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5PbmVQaWVjZVJlc3AsIHRoaXMsIHRoaXMuT25lUGllY2VSZXNwKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgVW5pbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX0Zpc2hPYmpEaWN0ID0gbnVsbDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLlN5bkZpc2hSZXNwLCB0aGlzLCB0aGlzLkNyZWF0ZUZpc2gpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50TmV0UmVzcG9uc2UuRmlzaERlYWRSZXNwLCB0aGlzLCB0aGlzLkZpc2hEZWFkUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5PbmVQaWVjZVJlc3AsIHRoaXMsIHRoaXMuT25lUGllY2VSZXNwKTtcclxuXHJcbiAgICAgICAgTGF5YS5Qb29sLmNsZWFyQnlTaWduKHRoaXMuX1Bvb2xTaWduKTtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBDcmVhdGVGaXNoKGRhdGE6IFJvb21Nc2cuc3luX2Zpc2hfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBmaXNoQ291bnQgPSBkYXRhLmZpc2hfbGlzdC5sZW5ndGg7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGZpc2hDb3VudDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgZmlzaFJlc3AgPSBkYXRhLmZpc2hfbGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgIC8vICAgaWYoZmlzaFJlc3AudHlwZSA+IDQpY29udGludWU7Ly90b2RvXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9GaXNoT2JqRGljdFtmaXNoUmVzcC5pZC50b1N0cmluZygpXSkge1xyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMud2FybihcIuW3sue7j+WtmOWcqOmxvElEOiBcIiArIGZpc2hSZXNwLmlkKTtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vLyB0aGlzLkZpc2hXYXJuKGZpc2hSZXNwLnR5cGUpO1xyXG4gICAgICAgICAgICBsZXQgZmlzaFNwZWVkID0gTmV0TG9naW4uSW5zdGFuY2UuRmlzaEluZm9MaXN0KGZpc2hSZXNwLnR5cGUpLmZpc2hfc3BlZWQ7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmlzaEluZm8gPSBuZXcgRmlzaEluZm8oKTtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21GaXNoSWQgPSBmaXNoUmVzcC5pZDtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21GaXNoVHlwZSA9IGZpc2hSZXNwLnR5cGU7XHJcbiAgICAgICAgICAgIGZpc2hJbmZvLl9tRmlzaE1vZGVsVHlwZSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkdldEZpc2hNb2RlbFR5cGUoZmlzaFJlc3AudHlwZSk7XHJcbiAgICAgICAgICAgIGZpc2hJbmZvLl9tUGF0aElkID0gZmlzaFJlc3AucGF0aF9pZDtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21TcGVlZCA9IGZpc2hTcGVlZDtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21GaXNoQ3JlYXRlVGltZSA9IChmaXNoUmVzcC5jcmVhdGVfdGltZV9tcyBhcyBudW1iZXIgLSBOZXRMb2dpbi5JbnN0YW5jZS5fdGltZU9mZnNldCk7XHJcbiAgICAgICAgICAgIGZpc2hJbmZvLl9tRm9yemVuVGltZSA9IGZpc2hSZXNwLmZyb3plbl90aW1lX21zIGFzIG51bWJlcjtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21Nb2RlbCA9IGZpc2hSZXNwLm1vZGVsO1xyXG4gICAgICAgICAgICBsZXQgZndwOiBGaXNoV2F5UG9pbnQgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkNvbmZpZ01uZy5GaXNoUGF0aENvbmZpZ1tmaXNoSW5mby5fbVBhdGhJZF07Ly8gYXMgRmlzaFdheVBvaW50O1xyXG4gICAgICAgICAgICBmaXNoSW5mby5fbVBhdGhMZW5naHQgPSBmd3AuX3dheUxlbmd0aDtcclxuICAgICAgICAgICAgZmlzaEluZm8uX21XYXlQb2ludHMgPSBmd3AuX3BvaW50cztcclxuXHJcbiAgICAgICAgICAgIGlmIChmaXNoUmVzcC5wb3MgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlzaFJlc3AubW9kZWwgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBmaXNoTW9kZWxUeXBlID0gZmlzaEluZm8uX21GaXNoTW9kZWxUeXBlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaXNoSW5mby5fbVdheVBvaW50c1swXS54ID49IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZ3cHI6IEZpc2hXYXlQb2ludCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuQ29uZmlnTW5nLkZpc2hPZmZzZXRDb25maWcuZ2V0KGBMJHtmaXNoTW9kZWxUeXBlfWApOy8vIGFzIEZpc2hXYXlQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKGZ3cHIuX3BvaW50c1tmaXNoUmVzcC5wb3NdLCAtMSwgZmlzaEluZm8uX29mZnNldFBvaW50cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vRGVidWcuTG9nKFwi5Y+z6L655Ye66bG8XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZ3cHI6IEZpc2hXYXlQb2ludCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuQ29uZmlnTW5nLkZpc2hPZmZzZXRDb25maWcuZ2V0KGBSJHtmaXNoTW9kZWxUeXBlfWApOy8vIGFzIEZpc2hXYXlQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlzaEluZm8uX29mZnNldFBvaW50cyA9IGZ3cHIuX3BvaW50c1tmaXNoUmVzcC5wb3NdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0RlYnVnLkxvZyhcIuW3pui+ueWHuumxvFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gbGV0IG5vZGUgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lLmFkZENoaWxkKG5ldyBMYXlhLlNwcml0ZSgpKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICAgICAgLy8gbm9kZS56T3JkZXIgPSBmaXNoUmVzcC50eXBlO1xyXG4gICAgICAgICAgICBsZXQgZmlzaFNjcmlwdCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkluc3RhbnRpYXRlRmlzaChmaXNoUmVzcC50eXBlKS5nZXRDb21wb25lbnQoRmlzaEJhc2UpIGFzIEZpc2hCYXNlO1xyXG4gICAgICAgICAgICB0aGlzLl9GaXNoT2JqRGljdFtmaXNoUmVzcC5pZC50b1N0cmluZygpXSA9IGZpc2hTY3JpcHQ7XHJcbiAgICAgICAgICAgIGZpc2hTY3JpcHQuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgICAgIGZpc2hTY3JpcHQuU3RhcnRNb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAqIOmxvOatu+S6oeWQjOatpVxyXG4gICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICovXHJcbiAgICBwcml2YXRlIEZpc2hEZWFkUmVzcChkYXRhOiBSb29tTXNnLmZpc2hfZGVhZF9yZXNwKTogdm9pZCB7XHJcblxyXG4gICAgICAgIGxldCBsZW4gPSBkYXRhLmZpc2hfa2lsbGVkLmxlbmd0aDtcclxuICAgICAgICBsZXQgZGVhZEZpc2hUeXBlOiBFbnVtRGF0YS5GaXNoU3VidHlwZSA9IC0xO1xyXG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgZmlzaEluZm8gPSBkYXRhLmZpc2hfa2lsbGVkW2ldO1xyXG4gICAgICAgICAgICBsZXQgdEZpc2hCYXNlID0gdGhpcy5fRmlzaE9iakRpY3RbZmlzaEluZm8uZmlzaF9pZC50b1N0cmluZygpXSBhcyBGaXNoQmFzZTtcclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gdEZpc2hCYXNlICYmIHRGaXNoQmFzZS5fTUZpc2hJbmZvLl9tRmlzaFR5cGUgPT0gRW51bURhdGEuRmlzaFN1YnR5cGUuQm9tYl9maXNoKSB7XHJcbiAgICAgICAgICAgICAgICBkZWFkRmlzaFR5cGUgPSBFbnVtRGF0YS5GaXNoU3VidHlwZS5Cb21iX2Zpc2g7IC8v5aaC5p6c54Ku5by55omT5q2755qE6bG85piv54K45by56bG844CB6bG8546LXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IGZpc2hJbmZvID0gZGF0YS5maXNoX2tpbGxlZFtpXTtcclxuICAgICAgICAgICAgdGhpcy5HZXRDb2luRWZmZWN0KGRhdGEudWlkLCBmaXNoSW5mbywgZGF0YS5qZXR0b25zaG93IGFzIG51bWJlciwgaSwgZGVhZEZpc2hUeXBlKTtcclxuICAgICAgICAgICAgdGhpcy5PbkRlYWRGaXNoT3JNb3ZlRW5kKGZpc2hJbmZvLmZpc2hfaWQsIHRydWUsIGZpc2hJbmZvLmJvbnVzLCBkYXRhLnVpZCwgZGVhZEZpc2hUeXBlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKiog5LuO5LiW55WMQm9zc+i6q+S4iuaOieS4i+mHkeW4gSovXHJcbiAgICBwcml2YXRlIE9uZVBpZWNlUmVzcChkYXRhOiBSb29tTXNnLm9uZV9waWVjZV9yZXNwKTogdm9pZCB7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBkYXRhLmZpc2hfa2lsbGVkLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCB0aW5mbyA9IGRhdGEuZmlzaF9raWxsZWRbaV07XHJcbiAgICAgICAgICAgIHRoaXMuTm9ybWFsQ29pbkVmZmVjdChkYXRhLnVpZCwgdGluZm8sIGRhdGEuamV0dG9uc2hvdyBhcyBudW1iZXIsIGkpO1xyXG5cclxuICAgICAgICAgICAgaWYgKEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLmdTaG9vdE1vZGVsID09IEVudW1EYXRhLlNob290VHlwZS5TSE9PVF9BVVRPKSB7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEdhbWVFdmVudC5IVU5UX0hVTlRFREZJU0gsIFt0aW5mby5ib251cywgdGhpcy5fRmlzaE9iakRpY3RbdGluZm8uZmlzaF9pZC50b1N0cmluZygpXS5fTUZpc2hJbmZvLl9tRmlzaFR5cGVdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vI3JlZ2lvbiAg54iG6YeR5biB6YC76L6RXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmma7pgJrniIbph5HluIHnibnmlYhcclxuICAgICAqIEBwYXJhbSBvd25lclVpZCDnjqnlrrZ1aWRcclxuICAgICAqIEBwYXJhbSBkYXRhIOaJk+atu+eahOmxvOeahOWlluWKseS/oeaBr1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE5vcm1hbENvaW5FZmZlY3Qob3duZXJVaWQ6IG51bWJlciB8IExvbmcsIGRhdGE6IFJvb21Nc2cuSWZpc2hfYm9udXNfaW5mbywgamV0dG9uc2hvdzogbnVtYmVyLCBpOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIUxheWEuc3RhZ2UuaXNWaXNpYmlsaXR5KSByZXR1cm47Ly/liIfmjaLliLDlkI7lj7DvvIzlgZzmraLlrZDlvLnliJvlu7pcclxuXHJcbiAgICAgICAgbGV0IGZpc2hfaWQgPSBkYXRhLmZpc2hfaWQ7XHJcbiAgICAgICAgaWYgKHRoaXMuX0Zpc2hPYmpEaWN0W2Zpc2hfaWQudG9TdHJpbmcoKV0pIHtcclxuICAgICAgICAgICAgbGV0IHRGaXNoQmFzZSA9IHRoaXMuX0Zpc2hPYmpEaWN0W2Zpc2hfaWQudG9TdHJpbmcoKV0gYXMgRmlzaEJhc2U7XHJcbiAgICAgICAgICAgIGxldCB0ZmlzaF9jb25maWcgPSBOZXRMb2dpbi5JbnN0YW5jZS5GaXNoSW5mb0xpc3QodEZpc2hCYXNlLl9NRmlzaEluZm8uX21GaXNoVHlwZSlcclxuICAgICAgICAgICAgbGV0IHRiYXNpY19yZXdhcmQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZCh0ZmlzaF9jb25maWcuZmlzaF9yYXRlKTtcclxuICAgICAgICAgICAgbGV0IGNvaW5OdW1Ub1Nob3cgPSB0aGlzLkdldENvaW5OdW1zVG9TaG93KHRGaXNoQmFzZS5fTUZpc2hJbmZvLl9tRmlzaFR5cGUpO1xyXG4gICAgICAgICAgICBsZXQgdFBvczogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMyh0RmlzaEJhc2UuX093bmVyUG9zLngsIHRGaXNoQmFzZS5fT3duZXJQb3MueSwgdEZpc2hCYXNlLl9Pd25lclBvcy56KTtcclxuICAgICAgICAgICAgbGV0IHRlbXBQb3M6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9IdW50U2NlbmVDYW1lcmEud29ybGRUb1ZpZXdwb3J0UG9pbnQodFBvcywgdGVtcFBvcyk7XHJcbiAgICAgICAgICAgIHRQb3MgPSB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0h1bnRTY2VuZUNhbWVyYSwgdGVtcFBvcyk7XHJcbiAgICAgICAgICAgIHRoaXMuQ29pblJlc0NyZWF0ZShvd25lclVpZCwgZGF0YSwgamV0dG9uc2hvdywgY29pbk51bVRvU2hvdywgdFBvcywgdHJ1ZSwgaSk7XHJcblxyXG4gICAgICAgICAgICAvL+mHkeW4geaVsOWtl1xyXG4gICAgICAgICAgICBsZXQgYm91bnNGb250OiBMYXlhLkZvbnRDbGlwID0gdGhpcy5DcmVhdEJvdW5zRm9udChkYXRhLmJvbnVzLCB0ZW1wUG9zLCAwLjMsIG93bmVyVWlkKTtcclxuXHJcbiAgICAgICAgICAgIC8vYm91bnNGb250LnNjYWxlKDEuNCwgMS40KTtcclxuICAgICAgICAgICAgbGV0IHNjYWxlU2l6ZSA9IDAuNjtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhib3Vuc0ZvbnQsIHsgc2NhbGVYOiAxLjUsIHNjYWxlWTogMS41IH0sIDEwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGJvdW5zRm9udCwgeyBzY2FsZVg6IHNjYWxlU2l6ZSwgc2NhbGVZOiBzY2FsZVNpemUgfSwgMjAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGJvdW5zRm9udCwgeyBzY2FsZVg6IHNjYWxlU2l6ZSArIDAuMSwgc2NhbGVZOiBzY2FsZVNpemUgKyAwLjEgfSwgMjAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhib3Vuc0ZvbnQsIHsgc2NhbGVYOiBzY2FsZVNpemUsIHNjYWxlWTogc2NhbGVTaXplIH0sIDIwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8oYm91bnNGb250LCB7IHk6IGJvdW5zRm9udC55IC0gNTAgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHsgfSkpO1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGJvdW5zRm9udCwge30sIDgwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGJvdW5zRm9udCwgeyBhbHBoYTogMCB9LCAxMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4geyB9KSk7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlBvb2wucmVjb3Zlcih0aGlzLl9Qb29sU2lnbiwgYm91bnNGb250KTtcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOeIhumHkeW4geWtl+S9k1xyXG4gICAgICogQHBhcmFtIGJvbnVzIOimgeaYvuekuueahOaVsOWAvOWkp+Wwj1xyXG4gICAgICogQHBhcmFtIHNjcmVlblBvcyDlrZfkvZPopoHmmL7npLrnmoTlnZDmoIdcclxuICAgICAqIEBwYXJhbSBzY2FsZSDnvKnmlL7mr5TkvotcclxuICAgICAqL1xyXG4gICAgcHVibGljIENyZWF0Qm91bnNGb250KGJvbnVzOiBudW1iZXIsIHNjcmVlblBvczogTGF5YS5WZWN0b3IzLCBzYWNsZTogbnVtYmVyLCB1aWQ6IG51bWJlciB8IExvbmcgPSBudWxsKSB7XHJcbiAgICAgICAgbGV0IGh1bnRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuR2V0UGFuZWxCeUlkKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSHVudFBhbmVsKSBhcyBIdW50UGFuZWw7XHJcblxyXG4gICAgICAgIGxldCBmb250U2tpbjogc3RyaW5nID0gQ29tbW9uQ29uc3RhbnQuX2JvdW5zRm9udFNlbGY7XHJcbiAgICAgICAgLy/lpoLmnpzmmK/lhbbku5bngq7miZPmrbvpsbzvvIzkvb/nlKjlhbbku5blrZfkvZNcclxuICAgICAgICBpZiAodWlkICE9IG51bGwgJiYgIU5ldExvZ2luLkluc3RhbmNlLklzU2VsZlVpZCh1aWQpKSB7XHJcbiAgICAgICAgICAgIGZvbnRTa2luID0gQ29tbW9uQ29uc3RhbnQuX2JvdW5zRm9udE90aGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgYm91bnNGb250OiBMYXlhLkZvbnRDbGlwID0gTGF5YS5Qb29sLmdldEl0ZW0odGhpcy5fUG9vbFNpZ24pO1xyXG4gICAgICAgIGlmIChib3Vuc0ZvbnQgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBib3Vuc0ZvbnQgPSB1dGlscy5Db21tb25VdGlscy5DcmVhdEZvbnRDbGlwKG5ldyBMYXlhLlBvaW50KHNjcmVlblBvcy54LCBzY3JlZW5Qb3MueSksIGZvbnRTa2luLCBcIi4rMDEyMzQ1Njc4OVwiLCBodW50UGFuZWwubV9sYXlhVUlOb2RlLCAxMDApOy8vbmV3IExheWEuRm9udENsaXAoZm9udFNraW4sIFwiLiswMTIzNDU2Nzg5XCIpO1xyXG4gICAgICAgICAgICBib3Vuc0ZvbnQuc2NhbGUoc2FjbGUsIHNhY2xlKTtcclxuICAgICAgICAgICAgYm91bnNGb250LmFuY2hvclggPSAwLjU7XHJcbiAgICAgICAgICAgIGJvdW5zRm9udC5hbmNob3JZID0gMC41O1xyXG4gICAgICAgICAgICBib3Vuc0ZvbnQudmFsdWUgPSBcIitcIiArIHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKGJvbnVzKS50b0ZpeGVkKDIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgYm91bnNGb250LnBvcyhzY3JlZW5Qb3MueCwgc2NyZWVuUG9zLnkpO1xyXG4gICAgICAgICAgICBib3Vuc0ZvbnQudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGJvdW5zRm9udC5hbHBoYSA9IDE7XHJcbiAgICAgICAgICAgIGJvdW5zRm9udC5za2luID0gZm9udFNraW47XHJcbiAgICAgICAgICAgIGJvdW5zRm9udC5zY2FsZShzYWNsZSwgc2FjbGUpO1xyXG4gICAgICAgICAgICBib3Vuc0ZvbnQudmFsdWUgPSBcIitcIiArIHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKGJvbnVzKS50b0ZpeGVkKDIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGJvdW5zRm9udDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmxvOatu+S6oeiOt+W+l+mHkeW4gemTtuW4geeahOeJueaViOaSreaUvlxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKiBAcGFyYW0gZmlzaFNjcmlwdCBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHZXRDb2luRWZmZWN0KG93bmVyVWlkOiBudW1iZXIgfCBMb25nLCBkYXRhOiBSb29tTXNnLklmaXNoX2JvbnVzX2luZm8sIGpldHRvbnNob3c6IG51bWJlciwgaTogbnVtYmVyLCBmaXNoVHlwZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFMYXlhLnN0YWdlLmlzVmlzaWJpbGl0eSkgcmV0dXJuOy8v5YiH5o2i5Yiw5ZCO5Y+w77yM5YGc5q2i5a2Q5by55Yib5bu6XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9GaXNoT2JqRGljdFtkYXRhLmZpc2hfaWQudG9TdHJpbmcoKV0pIHtcclxuICAgICAgICAgICAgdGhpcy5Ob3JtYWxDb2luRWZmZWN0KG93bmVyVWlkLCBkYXRhLCBqZXR0b25zaG93LCBpKTtcclxuXHJcbiAgICAgICAgICAgIGxldCB0RmlzaEJhc2UgPSB0aGlzLl9GaXNoT2JqRGljdFtkYXRhLmZpc2hfaWQudG9TdHJpbmcoKV0gYXMgRmlzaEJhc2U7XHJcbiAgICAgICAgICAgIGxldCB0ZmlzaF9jb25maWcgPSBOZXRMb2dpbi5JbnN0YW5jZS5GaXNoSW5mb0xpc3QodEZpc2hCYXNlLl9NRmlzaEluZm8uX21GaXNoVHlwZSk7XHJcbiAgICAgICAgICAgIGxldCB0YmFzaWNfcmV3YXJkID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQodGZpc2hfY29uZmlnLmZpc2hfcmF0ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoKHRiYXNpY19yZXdhcmQgPiBDb21tb25Db25zdGFudC5maXNoUmF0ZS5GaWZ0eSkgJiYgKHRiYXNpY19yZXdhcmQgPD0gQ29tbW9uQ29uc3RhbnQuZmlzaFJhdGUuU2l4dHkpKSAvL+inpuWPkeWNiuWxj+i9rOebmFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAvL3RvZG8gMjDlj7ctMjXlj7fpsbzph5HluIHnm7jlhbPpgLvovpFcclxuICAgICAgICAgICAgICAgIGxldCB0UG9zOiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKHRGaXNoQmFzZS5fT3duZXJQb3MueCwgdEZpc2hCYXNlLl9Pd25lclBvcy55LCB0RmlzaEJhc2UuX093bmVyUG9zLnopO1xyXG4gICAgICAgICAgICAgICAgbGV0IHRlbXBQb3M6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lQ2FtZXJhLndvcmxkVG9WaWV3cG9ydFBvaW50KHRQb3MsIHRlbXBQb3MpO1xyXG4gICAgICAgICAgICAgICAgdFBvcyA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lQ2FtZXJhLCB0ZW1wUG9zKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQXdhcmRFZmZlY3Qob3duZXJVaWQsIHRGaXNoQmFzZS5fTUZpc2hJbmZvLl9tRmlzaFR5cGUsIGRhdGEuYm9udXMsIFNvdW5kLnNvdW5kS2V5QXJyLmJpZ0Zpc2hDb2luLCB0UG9zLCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0YmFzaWNfcmV3YXJkID49IENvbW1vbkNvbnN0YW50LmZpc2hSYXRlLkVpZ2h0eSkgeyAvL+inpuWPkeWFqOWxj+i9rOebmFxyXG4gICAgICAgICAgICAgICAgaWYgKHRmaXNoX2NvbmZpZy5maXNoX2NsYXNzICE9IEVudW1EYXRhLkZpc2hDYXRlZ29yeS5Gcm96ZW5fZmlzaCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vdG9kbyBib3Nz6bG86YeR5biB55u45YWz6YC76L6RIFxyXG4gICAgICAgICAgICAgICAgICAgIGxldCB0UG9zID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTsvLyB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0h1bnRTY2VuZUNhbWVyYSwgbmV3IExheWEuVmVjdG9yMyhHYW1lQ29uZmlnLndpZHRoIC8gMiwgR2FtZUNvbmZpZy5oZWlnaHQgLyAyLCAwKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Bd2FyZEVmZmVjdChvd25lclVpZCwgdEZpc2hCYXNlLl9NRmlzaEluZm8uX21GaXNoVHlwZSwgZGF0YS5ib251cywgU291bmQuc291bmRLZXlBcnIuYm9zc0Zpc2hDb2luLCB0UG9zLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlzaFR5cGUgIT0gRW51bURhdGEuRmlzaFN1YnR5cGUuQm9tYl9maXNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIuY29pbilcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy90b2RvIOeJueauiumxvOenjeWkhOeQhlxyXG4gICAgICAgICAgICBzd2l0Y2ggKHRGaXNoQmFzZS5fTUZpc2hJbmZvLl9tRmlzaFR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuQm9tYl9maXNoOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGJvbWJFZmZlY3QgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5JbnN0YW50aWF0ZUVmZmVjdChDb21tb25Db25zdGFudC5faHVudFNjZW5lRWZmZWN0QXJyYXkuQm9tYkZpc2hFeHBFZmZlY3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vLy9sZXQgdFBvcyA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lQ2FtZXJhLCBuZXcgTGF5YS5WZWN0b3IzKEdhbWVDb25maWcud2lkdGggLyAyLCBHYW1lQ29uZmlnLmhlaWdodCAvIDIsIDApKTtcclxuICAgICAgICAgICAgICAgICAgICBib21iRWZmZWN0LnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTsvL3RQb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYm9tYkVmZmVjdC5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBhZCA9IHV0aWxzLkNvbW1vblV0aWxzLkN1c3RvbUFkZENvbXBvbmVudChib21iRWZmZWN0LCBBdXRvRGVzdHJveSkgYXMgQXV0b0Rlc3Ryb3k7XHJcbiAgICAgICAgICAgICAgICAgICAgYWQuSW5pdERhdGEoODAwMCwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgQXdhcmRFZmZlY3Qob3duZXJVaWQsIHR5cGUsIHJld2FyZCwgc291bmROYW1lLCB0UG9zLCBiSGFsZikge1xyXG4gICAgICAgIGxldCBwYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuR2V0UGFuZWxCeUlkKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSHVudFBhbmVsKSBhcyBIdW50UGFuZWw7XHJcbiAgICAgICAgLy/ovaznm5hcclxuICAgICAgICBwYW5lbC5Bd2FyZEVmZmVjdChvd25lclVpZCwgdHlwZSwgcmV3YXJkLCBiSGFsZik7XHJcbiAgICAgICAgLy/niIbph5HluIFcclxuICAgICAgICB0aGlzLlNjcmVlbkJvbWJDb2luRWZmZWN0KHNvdW5kTmFtZSwgdFBvcywgb3duZXJVaWQsIGJIYWxmKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIFNjcmVlbkJvbWJDb2luRWZmZWN0KHNvdW5kTmFtZTogc3RyaW5nLCB0UG9zOiBMYXlhLlZlY3RvcjMsIG93bmVyVWlkOiBudW1iZXIgfCBMb25nLCBiSGFsZjogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIGxldCBlZmZlY3ROYW1lOiBzdHJpbmcgPSBiSGFsZiA/IENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVFZmZlY3RBcnJheS5IYWxmX3NjcmVlbkJvbWJfMiA6IENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVFZmZlY3RBcnJheS5GdWxsX3NjcmVlbkJvbWJfMjtcclxuICAgICAgICBsZXQgY2xvbmVJbnMgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5JbnN0YW50aWF0ZUVmZmVjdChlZmZlY3ROYW1lKTtcclxuICAgICAgICAvL2xldCB0ZXh0dXJlTmFtZSA9IChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQob3duZXJVaWQpID8gQ29tbW9uQ29uc3RhbnQuX1RleHR1cmVBcnJheS5Hb2xkIDogQ29tbW9uQ29uc3RhbnQuX1RleHR1cmVBcnJheS5TaWx2ZXIpO1xyXG4gICAgICAgIC8vR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5Mb2FkVGV4dHVyZTJEKHRleHR1cmVOYW1lLCBmdW5jdGlvbiAodDogTGF5YS5UZXh0dXJlMkQpIHtcclxuICAgICAgICAvLyAgICAoKGNsb25lSW5zLmdldENoaWxkQXQoMCkgYXMgTGF5YS5TaHVyaUtlblBhcnRpY2xlM0QpLnBhcnRpY2xlUmVuZGVyZXIubWF0ZXJpYWwgYXMgTGF5YS5TaHVyaWtlblBhcnRpY2xlTWF0ZXJpYWwpLnRleHR1cmUgPSB0O1xyXG4gICAgICAgIGNsb25lSW5zLnRyYW5zZm9ybS5wb3NpdGlvbiA9IHRQb3M7XHJcbiAgICAgICAgbGV0IGFkID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3VzdG9tQWRkQ29tcG9uZW50KGNsb25lSW5zLCBBdXRvRGVzdHJveSkgYXMgQXV0b0Rlc3Ryb3k7XHJcbiAgICAgICAgYWQuSW5pdERhdGEoNTAwMCwgZmFsc2UpOy8v6K+l54m55pWI5pyA6ZW/5pe26Ze05Li6NeenklxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIHNvdW5kTmFtZSlcclxuICAgICAgICAvL30pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdWlkIOeOqeWutnVpZFxyXG4gICAgICogQHBhcmFtIGRhdGEg5omT5q276bG855qE5aWW6YeR5L+h5oGvXHJcbiAgICAgKiBAcGFyYW0gY29pbk51bSDopoHmmL7npLrnmoTph5HluIHkuKrmlbBcclxuICAgICAqIEBwYXJhbSBzdGFydFBvcyDph5HluIHlvIDlp4vkvY3nva5cclxuICAgICAqIEBwYXJhbSBpc1NjcmVlblBvcyDmmK/lkKbkuLrlsY/luZXlnZDmoIdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBDb2luUmVzQ3JlYXRlKHVpZDogbnVtYmVyIHwgTG9uZywgZGF0YTogUm9vbU1zZy5JZmlzaF9ib251c19pbmZvLCBqZXR0b25zaG93OiBudW1iZXIsIGNvaW5OdW06IG51bWJlciwgc3RhcnRQb3M6IExheWEuVmVjdG9yMywgaXNTY3JlZW5Qb3M6IGJvb2xlYW4sIGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgaWYgKCFpc1NjcmVlblBvcykge1xyXG4gICAgICAgICAgICBsZXQgdGVtcFBvczogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0d1blNjZW5lQ2FtZXJhLndvcmxkVG9WaWV3cG9ydFBvaW50KHN0YXJ0UG9zLCB0ZW1wUG9zKTtcclxuICAgICAgICAgICAgc3RhcnRQb3MgPSB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0d1blNjZW5lQ2FtZXJhLCB0ZW1wUG9zKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB0Y2Fubm9uID0gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuR2V0QmF0dGVyeUJ5VWlkKHVpZCk7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGNhbm5vbikgcmV0dXJuO1xyXG4gICAgICAgIGxldCB0ZW5kUG9zOiBMYXlhLlZlY3RvcjMgPSB0Y2Fubm9uLkNvaW5FbmRQb3M7XHJcbiAgICAgICAgdGVuZFBvcyA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fR3VuU2NlbmVDYW1lcmEsIHRlbmRQb3MpO1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvaW5OdW07IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgY2xvbmVJbnMgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5JbnN0YW50aWF0ZUVmZmVjdChDb21tb25Db25zdGFudC5faHVudFNjZW5lRWZmZWN0QXJyYXkuR29sZENvaW4pIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgICAgIGxldCB0ZXh0dXJlTmFtZSA9IChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQodWlkKSA/IENvbW1vbkNvbnN0YW50Ll9UZXh0dXJlQXJyYXkuR29sZCA6IENvbW1vbkNvbnN0YW50Ll9UZXh0dXJlQXJyYXkuU2lsdmVyKTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5Mb2FkVGV4dHVyZTJEKHRleHR1cmVOYW1lLCBmdW5jdGlvbiAodDogTGF5YS5UZXh0dXJlMkQpIHtcclxuICAgICAgICAgICAgICAgICgoY2xvbmVJbnMuZ2V0Q2hpbGRBdCgwKSBhcyBMYXlhLlNodXJpS2VuUGFydGljbGUzRCkucGFydGljbGVSZW5kZXJlci5tYXRlcmlhbCBhcyBMYXlhLlNodXJpa2VuUGFydGljbGVNYXRlcmlhbCkudGV4dHVyZSA9IHQ7XHJcbiAgICAgICAgICAgICAgICAvLyhjbG9uZUlucy5nZXRDaGlsZEF0KDApIGFzIExheWEuU2h1cmlLZW5QYXJ0aWNsZTNEKS5wYXJ0aWNsZVN5c3RlbS5zdGFydExpZmV0aW1lQ29uc3RhbnQgPSA1MDtcclxuICAgICAgICAgICAgICAgIC8vKGNsb25lSW5zLmdldENoaWxkQXQoMCkgYXMgTGF5YS5TaHVyaUtlblBhcnRpY2xlM0QpLnBhcnRpY2xlU3lzdGVtLnRleHR1cmVTaGVldEFuaW1hdGlvbi5jeWNsZXMgPSA1MDtcclxuICAgICAgICAgICAgICAgIGxldCB0b2Zmc2V0WCA9IHV0aWxzLkNvbW1vblV0aWxzLnJhbmRvbUZsb2F0KC0xLCAxKTtcclxuICAgICAgICAgICAgICAgIGxldCB0b2Zmc2V0WSA9IHV0aWxzLkNvbW1vblV0aWxzLnJhbmRvbUZsb2F0KDAuMSwgMSk7XHJcbiAgICAgICAgICAgICAgICBjbG9uZUlucy50cmFuc2Zvcm0ucG9zaXRpb24gPSBuZXcgTGF5YS5WZWN0b3IzKHN0YXJ0UG9zLnggKyB0b2Zmc2V0WCwgc3RhcnRQb3MueSArIHRvZmZzZXRZLCBzdGFydFBvcy56KTtcclxuICAgICAgICAgICAgICAgIGNsb25lSW5zLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAvL2Nsb25lSW5zLnRyYW5zZm9ybS5sb2NhbFNjYWxlID0gbmV3IExheWEuVmVjdG9yMygwLjUsIDAuNSwgMC41KTtcclxuICAgICAgICAgICAgICAgIC8vIExheWEudGltZXIub25jZSg1MDAsIHNlbGYsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICBMYXlhLlR3ZWVuLnRvKGNsb25lSW5zLnRyYW5zZm9ybSwgeyBsb2NhbFNjYWxlWDogMSwgbG9jYWxTY2FsZVk6IDEsIGxvY2FsU2NhbGVaOiAxIH0sIDIwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZShzZWxmLCBmdW5jdGlvbiAoKSB7IH0pKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICBMYXlhLlR3ZWVuLnRvKGNsb25lSW5zLnRyYW5zZm9ybSwgeyBsb2NhbFBvc2l0aW9uWTogY2xvbmVJbnMudHJhbnNmb3JtLmxvY2FsUG9zaXRpb25ZICsgMyB9LCAyMDAsIExheWEuRWFzZS5xdWFkSW4sIExheWEuSGFuZGxlci5jcmVhdGUoc2VsZiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBMYXlhLlR3ZWVuLnRvKGNsb25lSW5zLnRyYW5zZm9ybSwgeyBsb2NhbFNjYWxlWDogMSwgbG9jYWxTY2FsZVk6IDEsIGxvY2FsU2NhbGVaOiAxIH0sIDE1MCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZShzZWxmLCBmdW5jdGlvbiAoKSB7IH0pKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgTGF5YS5Ud2Vlbi50byhjbG9uZUlucy50cmFuc2Zvcm0sIHsgbG9jYWxQb3NpdGlvblk6IGNsb25lSW5zLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uWSAtIDEgfSwgMTUwLCBMYXlhLkVhc2UucXVhZE91dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZShzZWxmLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoNTAwLCBzZWxmLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgbGV0IGFkID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3VzdG9tQWRkQ29tcG9uZW50KGNsb25lSW5zLCBDb2luRmx5aW5nKSBhcyBDb2luRmx5aW5nO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgIGFkLkluaXREYXRhKGluZGV4ICogNTAsIHRlbmRQb3MsIGZhbHNlLCB1aWQsIGRhdGEsIGpldHRvbnNob3cpO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICB9KSk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gfSlcclxuXHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoNTAwLCBzZWxmLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhjbG9uZUlucy50cmFuc2Zvcm0sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxQb3NpdGlvblg6IGNsb25lSW5zLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uWCArIDAsLy90b2Zmc2V0WCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxQb3NpdGlvblk6IGNsb25lSW5zLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uWSArIDEsLy90b2Zmc2V0WSxcclxuICAgICAgICAgICAgICAgICAgICB9LCAzMDAsIExheWEuRWFzZS5xdWludE91dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZShzZWxmLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhZCA9IHV0aWxzLkNvbW1vblV0aWxzLkN1c3RvbUFkZENvbXBvbmVudChjbG9uZUlucywgQ29pbkZseWluZykgYXMgQ29pbkZseWluZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWQuSW5pdERhdGEoaW5kZXggKiA1MCwgdGVuZFBvcywgZmFsc2UsIHVpZCwgZGF0YSwgamV0dG9uc2hvdyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+W+l+eahOmHkeW4geS4quaVsOeUqOS6juaViOaenOWxleekulxyXG4gICAgICogQHBhcmFtIGZpc2h0eXBlIOiOt+W+l+mHkeW4geS7t+WAvFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEdldENvaW5OdW1zVG9TaG93KGZpc2h0eXBlOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIHN3aXRjaCAoZmlzaHR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgIGNhc2UgNjpcclxuICAgICAgICAgICAgICAgIHJldHVybiA1O1xyXG4gICAgICAgICAgICBjYXNlIDc6XHJcbiAgICAgICAgICAgIGNhc2UgODpcclxuICAgICAgICAgICAgY2FzZSA5OlxyXG4gICAgICAgICAgICBjYXNlIDEwOlxyXG4gICAgICAgICAgICBjYXNlIDExOlxyXG4gICAgICAgICAgICBjYXNlIDEyOlxyXG4gICAgICAgICAgICBjYXNlIDI2OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDc7XHJcbiAgICAgICAgICAgIGNhc2UgMTM6XHJcbiAgICAgICAgICAgIGNhc2UgMTQ6XHJcbiAgICAgICAgICAgIGNhc2UgMTU6XHJcbiAgICAgICAgICAgIGNhc2UgMTY6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTA7XHJcbiAgICAgICAgICAgIGNhc2UgMTc6XHJcbiAgICAgICAgICAgIGNhc2UgMTg6XHJcbiAgICAgICAgICAgIGNhc2UgMTk6XHJcbiAgICAgICAgICAgIGNhc2UgMjA6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTI7XHJcbiAgICAgICAgICAgIGNhc2UgMjE6XHJcbiAgICAgICAgICAgIGNhc2UgMjM6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTU7XHJcbiAgICAgICAgICAgIGNhc2UgMjU6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTY7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDI7XHJcbiAgICB9XHJcbiAgICAvLyNlbmRyZWdpb25cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmxvOi3r+WKsuWRqOacn+i1sOWujOaIluiAhemxvOatu+S6oe+8jOiHquWKqOiiq+WIoOmZpFxyXG4gICAgICogQHBhcmFtIGZpc2hJZCDpsbxJRFxyXG4gICAgICogQHBhcmFtIGlzRGVhZCDmmK/lkKbmrbvkuqFcclxuICAgICAqL1xyXG4gICAgcHVibGljIE9uRGVhZEZpc2hPck1vdmVFbmQoZmlzaElkOiBudW1iZXIgfCBMb25nLCBpc0RlYWQ6IGJvb2xlYW4sIGJvdW5zOiBudW1iZXIgPSAwLCB1aWQ6IG51bWJlciB8IExvbmcgPSAwLCBkZWFkRmlzaFR5cGU6IEVudW1EYXRhLkZpc2hTdWJ0eXBlID0gLTEpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fRmlzaE9iakRpY3RbZmlzaElkLnRvU3RyaW5nKCldKSB7XHJcbiAgICAgICAgICAgIGxldCB0RmlzaEJhc2UgPSB0aGlzLl9GaXNoT2JqRGljdFtmaXNoSWQudG9TdHJpbmcoKV0gYXMgRmlzaEJhc2U7XHJcbiAgICAgICAgICAgIHRGaXNoQmFzZS5SZW1vdmUoaXNEZWFkLCBib3VucywgdWlkLCBkZWFkRmlzaFR5cGUpO1xyXG4gICAgICAgICAgICBkZWxldGUgdGhpcy5fRmlzaE9iakRpY3RbZmlzaElkLnRvU3RyaW5nKCldO1xyXG4gICAgICAgICAgICBpZiAoZmlzaElkLnRvU3RyaW5nKCkgPT0gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuTG9ja2VkRmlzaElELnRvU3RyaW5nKCkpIHtcclxuICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkxvY2tlZEZpc2hJRCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAqIOWHu+S4remxvOivt+axguacjeWKoeWZqOiupOivgVxyXG4gICAgKiBAcGFyYW0gZmlzaElkIOiiq+WHu+S4reeahOmxvElEXHJcbiAgICAqIEBwYXJhbSBidWxsZXREYXRhIOWtkOW8ueS/oeaBr1xyXG4gICAgKiBAcGFyYW0gcmVsYXRlZF9maXNoc19pZCDlhbPogZTpsbznmoRJROWIl+ihqFxyXG4gICAgKi9cclxuICAgIHB1YmxpYyBIaXRGaXNoKGZpc2hJZDogbnVtYmVyIHwgTG9uZywgYnVsbGV0RGF0YTogQnVsbGV0SW5mbywgcmVsYXRlZF9maXNoc19pZDogKG51bWJlciB8IExvbmcpW10pOiB2b2lkIHtcclxuICAgICAgICBpZiAoYnVsbGV0RGF0YS5fcGxheUlkLnRvU3RyaW5nKCkgPT0gTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ucm9sZUlkLnRvU3RyaW5nKCkpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX0Zpc2hPYmpEaWN0W2Zpc2hJZC50b1N0cmluZygpXSkge1xyXG4gICAgICAgICAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5IaXRGaXNoUmVxKGJ1bGxldERhdGEuX2J1bGxldE11dGlsLCBmaXNoSWQsIHJlbGF0ZWRfZmlzaHNfaWQsIGJ1bGxldERhdGEuX2J1bGxldElkKTtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3RvdGFsQnVsbGV0SWREaWN0W2J1bGxldERhdGEuX2J1bGxldElkIGFzIG51bWJlcl07XHJcbiAgICAgICAgICAgICAgICBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkuaGl0RmlzaFJlcSsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZWNvbm5lY3QoKSB7XHJcbiAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuX0Zpc2hPYmpEaWN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX0Zpc2hPYmpEaWN0W2tleV0uUmVtb3ZlKGZhbHNlKTtcclxuICAgICAgICAgICAgZGVsZXRlIHRoaXMuRmlzaE9iakRpY3Rba2V5XTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIElzRmlzaEtpbmcodHlwZTogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKHR5cGUgPj0gRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjEgJiYgdHlwZSA8IEVudW1EYXRhLkZpc2hTdWJ0eXBlLkJvbWJfZmlzaCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufSIsImltcG9ydCBCdWxsZXRJbmZvIGZyb20gXCIuL0J1bGxldEluZm9cIjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IHsgRmlzaEJhc2UgfSBmcm9tIFwiLi4vRmlzaC9GaXNoQmFzZVwiO1xyXG5pbXBvcnQgRmlzaENvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvRmlzaENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgQXV0b0Rlc3Ryb3kgZnJvbSBcIi4uLy4uL3V0aWxzL0F1dG9EZXN0cm95XCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRMb2dpblwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcbmltcG9ydCBIRjNERmlzaENsYXNzZXMgZnJvbSBcIi4uL0Zpc2gvSEYzREZpc2hDbGFzc2VzXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldEJhc2UgZXh0ZW5kcyBMYXlhLlNjcmlwdDNEIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgbW93bmVyOiBMYXlhLk1lc2hTcHJpdGUzRDtcclxuICAgIC8qKiDlrZDlvLnkv6Hmga8qL1xyXG4gICAgcHJpdmF0ZSBfYnVsbGV0SW5mbzogQnVsbGV0SW5mbztcclxuXHJcbiAgICAvKiog5a2Q5by555qE6L+Q5Yqo5pa55ZCRKi9cclxuICAgIHByaXZhdGUgX2RpcmVjdGlvbjogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgIHByaXZhdGUgX21vdmluZ1NwZWVkOiBudW1iZXIgPSAwLjM7XHJcbiAgICBwcml2YXRlIF9vZmZzZXQgPSBuZXcgTGF5YS5WZWN0b3IzKDEsIDAsIDApO1xyXG5cclxuICAgIHByaXZhdGUgX3BvaW50OiBMYXlhLlZlY3RvcjI7XHJcbiAgICBwcml2YXRlIF9jYW1lcmE6IExheWEuQ2FtZXJhO1xyXG4gICAgcHJpdmF0ZSBfc2NlbmU6IExheWEuU2NlbmUzRDtcclxuICAgIHByaXZhdGUgX3JheTogTGF5YS5SYXk7XHJcbiAgICBwcml2YXRlIF9vdXRIaXRJbmZvOiBMYXlhLkhpdFJlc3VsdDtcclxuICAgIHByaXZhdGUgX291dFBvcyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICBwcml2YXRlIF9idWxsZXRNb3ZlRWZmZWN0OiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgcHJpdmF0ZSBfdHJhaWxGaWx0ZXJUaW1lOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIHByaXZhdGUgX2xvY2tlZEZpc2hJRDogbnVtYmVyIHwgTG9uZztcclxuICAgIHByaXZhdGUgX3VpZDogbnVtYmVyIHwgTG9uZztcclxuICAgIHByaXZhdGUgX3N0YXRlOiBFbnVtRGF0YS5FTlVNX0JVTExFVF9TVEFURTtcclxuICAgIC8qKiDkuIrkuIDmrKHmkp7liLDnmoTlopnlo4EqL1xyXG4gICAgcHJpdmF0ZSBfbGFzdEhpdFdhbGxOYW1lOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgIG9uQXdha2UoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3duZXIgPSB0aGlzLm93bmVyIGFzIExheWEuTWVzaFNwcml0ZTNEO1xyXG4gICAgICAgIHRoaXMuX2NhbWVyYSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9IdW50U2NlbmVDYW1lcmE7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lO1xyXG4gICAgICAgIHRoaXMuX3BvaW50ID0gbmV3IExheWEuVmVjdG9yMigpO1xyXG4gICAgICAgIHRoaXMuX3JheSA9IG5ldyBMYXlhLlJheShuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApLCBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApKTtcclxuICAgICAgICB0aGlzLl9vdXRIaXRJbmZvID0gbmV3IExheWEuSGl0UmVzdWx0KCk7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fYnVsbGV0TW92ZUVmZmVjdCkge1xyXG4gICAgICAgICAgICB0aGlzLl9idWxsZXRNb3ZlRWZmZWN0ID0gdGhpcy5tb3duZXIuZ2V0Q2hpbGRBdCgwKS5nZXRDaGlsZEF0KDApIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1bGxldE1vdmVFZmZlY3QudHJhbnNmb3JtLmxvY2FsUG9zaXRpb24gPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICB0aGlzLl90cmFpbEZpbHRlclRpbWUgPSAodGhpcy5fYnVsbGV0TW92ZUVmZmVjdC5nZXRDaGlsZEF0KDApIGFzIExheWEuVHJhaWxTcHJpdGUzRCkudHJhaWxGaWx0ZXIudGltZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEluaXREYXRhKGJ1bGxldElkOiBudW1iZXIgfCBMb25nLCBtdWx0aTogbnVtYmVyLCBidWxsZXRTaG93VHlwZUlkOiBudW1iZXIsIGxvY2tlZElkOiBudW1iZXIgfCBMb25nLCBwbGF5ZXJJRDogbnVtYmVyIHwgTG9uZywgbG9ja2VkRmlzaElEOiBudW1iZXIgfCBMb25nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3duZXIgPSB0aGlzLm93bmVyIGFzIExheWEuTWVzaFNwcml0ZTNEO1xyXG4gICAgICAgIHRoaXMuX2J1bGxldEluZm8gPSBuZXcgQnVsbGV0SW5mbyhidWxsZXRJZCwgbXVsdGksIGJ1bGxldFNob3dUeXBlSWQsIGxvY2tlZElkLCBwbGF5ZXJJRCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IHRoaXMubW93bmVyLnRyYW5zZm9ybS51cDtcclxuICAgICAgICB0aGlzLl9sYXN0SGl0V2FsbE5hbWUgPSBcIlwiO1xyXG4gICAgICAgIHRoaXMubW93bmVyLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5fbG9ja2VkRmlzaElEID0gbG9ja2VkSWQ7XHJcbiAgICAgICAgdGhpcy5fdWlkID0gcGxheWVySUQ7XHJcbiAgICAgICAgaWYgKGxvY2tlZEZpc2hJRC50b1N0cmluZygpID09IFwiMFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N0YXRlID0gRW51bURhdGEuRU5VTV9CVUxMRVRfU1RBVEUuVU5MT0NLO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc3RhdGUgPSBFbnVtRGF0YS5FTlVNX0JVTExFVF9TVEFURS5MT0NLSU5HO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLlNob3dCdWxsZXRFZmZlY3QoKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgU2hvd0J1bGxldEVmZmVjdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1vd25lci5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuU3RhcnRNb3ZpbmcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIFN0YXJ0TW92aW5nKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEudGltZXIuZnJhbWVMb29wKDEsIHRoaXMsIHRoaXMuTW92aW5nKTtcclxuICAgICAgICB0aGlzLlNldEJ1bGxldFRyYWlsRmlsdGVyVGltZSgwKTtcclxuICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZSgxLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuU2V0QnVsbGV0VHJhaWxGaWx0ZXJUaW1lKHRoaXMuX3RyYWlsRmlsdGVyVGltZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIFN0b3BNb3ZpbmcoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhcih0aGlzLCB0aGlzLk1vdmluZyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruaLluWwvueJueaViOeahOaXtumXtOWRqOacn1xyXG4gICAgICogQHBhcmFtIHQg5pe26Ze05ZGo5pyfXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgU2V0QnVsbGV0VHJhaWxGaWx0ZXJUaW1lKHQ6IG51bWJlcikge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9idWxsZXRNb3ZlRWZmZWN0Lm51bUNoaWxkcmVuOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9idWxsZXRNb3ZlRWZmZWN0LmdldENoaWxkQXQoaW5kZXgpIGFzIExheWEuVHJhaWxTcHJpdGUzRDtcclxuICAgICAgICAgICAgZWxlbWVudC50cmFpbEZpbHRlci50aW1lID0gdDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIE1vdmluZygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSB0aGlzLkdldER5bmFtaWNEaXIoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUodGhpcy5fZGlyZWN0aW9uLCB0aGlzLl9tb3ZpbmdTcGVlZCwgdGhpcy5fb2Zmc2V0KTtcclxuICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeWtkOW8uei/kOWKqOaWueWQkSBtb3ZpbmcgZGlyID0gXCIsIHRoaXMuX2RpcmVjdGlvbik7XHJcblxyXG4gICAgICAgIC8vTGF5YS5WZWN0b3IzLnNjYWxlKHRoaXMuX2RpcmVjdGlvbiwgdGhpcy5fbW92aW5nU3BlZWQsIHRoaXMuX29mZnNldCk7XHJcbiAgICAgICAgdGhpcy5tb3duZXIudHJhbnNmb3JtLnRyYW5zbGF0ZSh0aGlzLl9vZmZzZXQsIGZhbHNlKTtcclxuICAgICAgICAvL+WmguaenOmjnuWimeWkliDpgqPkuYjpnIDopoHplIDmr4FcclxuICAgICAgICBpZiAodGhpcy5DaGVja0J1bGxldE91dFdhbGwoKSkge1xyXG4gICAgICAgICAgICAvL05ldFJvb20uSW5zdGFuY2UuU3luY0NoaXBzUmVxKCk7XHJcbiAgICAgICAgICAgIC8v5omT5Ye65Y676L6555WM55qE5a2Q5by5IOmcgOimgeWPkemAgee7meacjeWKoeWZqOWRiuivieaYr+aXoOaViOeahFxyXG5cclxuICAgICAgICAgICAgdGhpcy5TaG9vdFVzZWxlc3NCdWxsZXRSZXEoKTtcclxuICAgICAgICAgICAgdGhpcy5SZW1vdmVCdWxsZXQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vdGhpcy5fY2FtZXJhLndvcmxkVG9WaWV3cG9ydFBvaW50KHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbix0aGlzLl9vdXRQb3MpO1xyXG4gICAgICAgICAgICB0aGlzLl9jYW1lcmEudmlld3BvcnQucHJvamVjdCh0aGlzLm1vd25lci50cmFuc2Zvcm0ucG9zaXRpb24sIHRoaXMuX2NhbWVyYS5wcm9qZWN0aW9uVmlld01hdHJpeCwgdGhpcy5fb3V0UG9zKTtcclxuICAgICAgICAgICAgdGhpcy5SYXlDYXN0Q2hlY2sodGhpcy5fb3V0UG9zKTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIm91dFBvcyA9IFwiICsgdGhpcy5fb3V0UG9zLmVsZW1lbnRzKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIFJheUNhc3RDaGVjayhzY3JlZW5Qb3M6IExheWEuVmVjdG9yMyk6IHZvaWQge1xyXG4gICAgICAgIC8v5LuO5bGP5bmV56m66Ze055Sf5oiQ5bCE57q/XHJcbiAgICAgICAgdGhpcy5fcG9pbnQuZWxlbWVudHNbMF0gPSBzY3JlZW5Qb3MueDsvLyBMYXlhLk1vdXNlTWFuYWdlci5pbnN0YW5jZS5tb3VzZVg7Ly9MYXlhLnN0YWdlLm1vdXNlWDsvLyBcclxuICAgICAgICB0aGlzLl9wb2ludC5lbGVtZW50c1sxXSA9IHNjcmVlblBvcy55Oy8vTGF5YS5Nb3VzZU1hbmFnZXIuaW5zdGFuY2UubW91c2VZOy8vTGF5YS5zdGFnZS5tb3VzZVk7Ly9cclxuICAgICAgICB0aGlzLl9jYW1lcmEudmlld3BvcnRQb2ludFRvUmF5KHRoaXMuX3BvaW50LCB0aGlzLl9yYXkpO1xyXG5cclxuXHJcbiAgICAgICAgLy/mi7/liLDlsITnur/norDmkp7nmoTniankvZNcclxuICAgICAgICB0aGlzLl9zY2VuZS5waHlzaWNzU2ltdWxhdGlvbi5yYXlDYXN0KHRoaXMuX3JheSwgdGhpcy5fb3V0SGl0SW5mbyk7XHJcbiAgICAgICAgLy/lpoLmnpznorDmkp7liLDniankvZNcclxuICAgICAgICBpZiAodGhpcy5fb3V0SGl0SW5mby5zdWNjZWVkZWQpIHtcclxuICAgICAgICAgICAgbGV0IGNvbExheWVyOiBMYXlhLlNwcml0ZTNEID0gdGhpcy5fb3V0SGl0SW5mby5jb2xsaWRlci5vd25lciBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgICAgICBsZXQgZmlzaDogRmlzaEJhc2UgPSBudWxsO1xyXG4gICAgICAgICAgICAvLyAvLyBpZiAoY29sTGF5ZXIubGF5ZXIgPT0gQ29tbW9uQ29uc3RhbnQuTGF5ZXIuRmlzaCkge1xyXG4gICAgICAgICAgICAvLyAvLyAgICAgZmlzaCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkdldEZpc2hCYXNlKHRoaXMuX291dEhpdEluZm8uY29sbGlkZXIub3duZXIpOy8vIHRoaXMuX291dEhpdEluZm8uY29sbGlkZXIub3duZXIucGFyZW50LmdldENvbXBvbmVudChGaXNoQmFzZSkgYXMgRmlzaEJhc2U7XHJcbiAgICAgICAgICAgIC8vIC8vIH1cclxuXHJcbiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5fc3RhdGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9CVUxMRVRfU1RBVEUuVU5MT0NLOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbExheWVyLmxheWVyID09IENvbW1vbkNvbnN0YW50LkxheWVyLkZpc2gpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlzaCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkdldEZpc2hCYXNlKHRoaXMuX291dEhpdEluZm8uY29sbGlkZXIub3duZXIpOy8vIHRoaXMuX291dEhpdEluZm8uY29sbGlkZXIub3duZXIucGFyZW50LmdldENvbXBvbmVudChGaXNoQmFzZSkgYXMgRmlzaEJhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTm9ybWFsQXR0YWNrKGZpc2gsIGNvbExheWVyKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9CVUxMRVRfU1RBVEUuTE9DS0lORzoge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpc2ggPSBGaXNoQ29udHJvbGxlci5JbnN0YW5jZS5GaXNoT2JqRGljdFt0aGlzLl9sb2NrZWRGaXNoSUQudG9TdHJpbmcoKV07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpc2gpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpc2hQb3NWZWMyID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FtZXJhLndvcmxkVG9WaWV3cG9ydFBvaW50KGZpc2guX093bmVyUG9zLCBmaXNoUG9zVmVjMik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChMYXlhLlZlY3RvcjMuZGlzdGFuY2Uoc2NyZWVuUG9zLCBmaXNoUG9zVmVjMikgPCAxNSkvLzE15Li65bGP5bmV5Z2Q5qCH6Led56a7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlJheUNhc3RDaGVja0Zpc2goY29sTGF5ZXIsIGZpc2gpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9CVUxMRVRfU1RBVEUuTE9DS0VEOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHByaXZhdGUgTm9ybWFsQXR0YWNrKGZpc2g6IEZpc2hCYXNlLCBjb2xMYXllcjogTGF5YS5TcHJpdGUzRCkge1xyXG4gICAgICAgIGlmIChmaXNoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmF5Q2FzdENoZWNrRmlzaChjb2xMYXllciwgZmlzaCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGNvbExheWVyLmxheWVyID09IENvbW1vbkNvbnN0YW50LkxheWVyLldhbGwpIHtcclxuICAgICAgICAgICAgdGhpcy5SYXlDYXN0Q2hlY2tXYWxsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgUmF5Q2FzdENoZWNrRmlzaChjb2xMYXllcjogTGF5YS5TcHJpdGUzRCwgZmlzaDogRmlzaEJhc2UpIHtcclxuICAgICAgICBpZiAoIWZpc2guX21Jc0V4aXN0KSByZXR1cm47XHJcblxyXG4gICAgICAgIC8vIOWtkOW8ueaJk+S4remxvOS6hlxyXG4gICAgICAgIGxldCBjbG9uZUlucyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkluc3RhbnRpYXRlRWZmZWN0KENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVFZmZlY3RBcnJheS5GaXNoTmV0UHJlZmFiICsgdGhpcy5fYnVsbGV0SW5mby5fYnVsbGV0U2hvd1R5cGVJZCk7XHJcbiAgICAgICAgY2xvbmVJbnMudHJhbnNmb3JtLnBvc2l0aW9uID0gdGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uO1xyXG4gICAgICAgIGxldCBhZCA9IHV0aWxzLkNvbW1vblV0aWxzLkN1c3RvbUFkZENvbXBvbmVudChjbG9uZUlucywgQXV0b0Rlc3Ryb3kpIGFzIEF1dG9EZXN0cm95O1xyXG4gICAgICAgIGFkLkluaXREYXRhKDUwMDAsIGZhbHNlKTsvL+a4lOe9keeJueaViOacgOmVv+aXtumXtOS4ujXnp5JcclxuXHJcbiAgICAgICAgdGhpcy5SZW1vdmVCdWxsZXQoKTtcclxuXHJcbiAgICAgICAgLy90b2RvIOeJueauiumxvOmAu+i+kVxyXG4gICAgICAgIGlmIChmaXNoKSB7XHJcbiAgICAgICAgICAgIGZpc2guSGl0dGVkKCk7XHJcbiAgICAgICAgICAgIGxldCByZWxhdGVkX2Zpc2hzX2lkOiBBcnJheTxudW1iZXIgfCBMb25nPiA9IG51bGw7XHJcbiAgICAgICAgICAgIHN3aXRjaCAoZmlzaC5fTUZpc2hJbmZvLl9tRmlzaFR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuQm9tYl9maXNoOlxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVsYXRlZF9maXNoc19pZCA9IGZpc2guR2V0UmVsYXRlZEZpc2hzSWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEZpc2hDb250cm9sbGVyLkluc3RhbmNlLl9GaXNoSGl0ZWRUeXBlID0gZmlzaC5fTUZpc2hJbmZvLl9tRmlzaFR5cGU7XHJcbiAgICAgICAgICAgIEZpc2hDb250cm9sbGVyLkluc3RhbmNlLkhpdEZpc2goZmlzaC5fTUZpc2hJbmZvLl9tRmlzaElkLCB0aGlzLl9idWxsZXRJbmZvLCByZWxhdGVkX2Zpc2hzX2lkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBSYXlDYXN0Q2hlY2tXYWxsKCkge1xyXG4gICAgICAgIGxldCBjb2xOYW1lUHJlZml4ID0gdGhpcy5fb3V0SGl0SW5mby5jb2xsaWRlci5vd25lci5uYW1lLnN1YnN0cmluZygwLCA2KTsvL+mVv+W6pjblj6/kv53or4Hlj5bliLDkuIvliJflrZfnrKbkuLLnmoTlrozmlbTlgLxcclxuICAgICAgICBpZiAodGhpcy5fbGFzdEhpdFdhbGxOYW1lID09IGNvbE5hbWVQcmVmaXgpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLl9sYXN0SGl0V2FsbE5hbWUgPSBjb2xOYW1lUHJlZml4O1xyXG4gICAgICAgIHN3aXRjaCAoY29sTmFtZVByZWZpeCkge1xyXG4gICAgICAgICAgICBjYXNlIFwidG9wXCI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLkJ1bGxldFJlZmxlY3QoQ29tbW9uQ29uc3RhbnQuRGlyZWN0aW9uVmVjdG9yLkRvd24pO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJib3R0b21cIjpcclxuICAgICAgICAgICAgICAgIHRoaXMuQnVsbGV0UmVmbGVjdChDb21tb25Db25zdGFudC5EaXJlY3Rpb25WZWN0b3IuVXApO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJsZWZ0XCI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLkJ1bGxldFJlZmxlY3QoQ29tbW9uQ29uc3RhbnQuRGlyZWN0aW9uVmVjdG9yLkxlZnQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJyaWdodFwiOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5CdWxsZXRSZWZsZWN0KENvbW1vbkNvbnN0YW50LkRpcmVjdGlvblZlY3Rvci5SaWdodCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirojrflj5bliqjmgIHot5/ouKrpsbznmoTmlrnlkJEqL1xyXG4gICAgcHJpdmF0ZSBHZXREeW5hbWljRGlyKCkge1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fbG9ja2VkRmlzaElEID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RpcmVjdGlvbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbWVyYS52aWV3cG9ydC5wcm9qZWN0KHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgdGhpcy5fY2FtZXJhLnByb2plY3Rpb25WaWV3TWF0cml4LCB0aGlzLl9vdXRQb3MpO1xyXG4gICAgICAgICAgICBsZXQgb3V0RmlzaFBvcyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgICAgIGxldCBsb2NrZWRGaXNoID0gRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuRmlzaE9iakRpY3RbdGhpcy5fbG9ja2VkRmlzaElELnRvU3RyaW5nKCldO1xyXG4gICAgICAgICAgICBpZiAobG9ja2VkRmlzaCA9PSBudWxsIHx8IGxvY2tlZEZpc2ggPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2NrZWRGaXNoSUQgPSAwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhdGUgPSBFbnVtRGF0YS5FTlVNX0JVTExFVF9TVEFURS5MT0NLRUQ7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZGlyZWN0aW9uOyAvL+WtkOW8uemjnuihjOS4reaMh+WumueahOmxvOW3suaMguaOiVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9jYW1lcmEudmlld3BvcnQucHJvamVjdChsb2NrZWRGaXNoLl9Pd25lclBvcywgdGhpcy5fY2FtZXJhLnByb2plY3Rpb25WaWV3TWF0cml4LCBvdXRGaXNoUG9zKTtcclxuICAgICAgICAgICAgbGV0IGRpciA9IG5ldyBMYXlhLlZlY3RvcjModGhpcy5fb3V0UG9zLnggLSBvdXRGaXNoUG9zLngsIHRoaXMuX291dFBvcy55IC0gb3V0RmlzaFBvcy55LCAwKTtcclxuICAgICAgICAgICAgbmV3IExheWEuVmVjdG9yMy5ub3JtYWxpemUoZGlyLCBkaXIpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGlyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIENoZWNrQnVsbGV0T3V0V2FsbCgpIHtcclxuICAgICAgICBpZiAodGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLnggPiAxMiB8fCB0aGlzLm1vd25lci50cmFuc2Zvcm0ucG9zaXRpb24ueCA8IC0xMikge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbi55ID4gNyB8fCB0aGlzLm1vd25lci50cmFuc2Zvcm0ucG9zaXRpb24ueSA8IC03KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIOWPkemAgeaJk+WHuuWxj+W5leWklueahOaXoOaViOWtkOW8ueivt+axglxyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHByaXZhdGUgU2hvb3RVc2VsZXNzQnVsbGV0UmVxKCkge1xyXG4gICAgICAgIC8vRGVidWcuTG9nKFwi5Y+R6YCB5peg5pWI5a2Q5by577yaIFwiICsgYnV0dGV0RGF0YS5CdWxsZXRJZCArIFwiIOWAjeaVsO+8mlwiICsgYnV0dGV0RGF0YS5CdWxsZXRNdXRpbCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2J1bGxldEluZm8uX3BsYXlJZC50b1N0cmluZygpID09IE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpKSB7XHJcbiAgICAgICAgICAgIGxldCByZXEgPSBuZXcgUm9vbU1zZy5idWxsZXRfdXNlbGVzc19yZXEoKTtcclxuICAgICAgICAgICAgcmVxLnVpZCA9IHRoaXMuX2J1bGxldEluZm8uX3BsYXlJZDtcclxuICAgICAgICAgICAgcmVxLm11bHRpID0gdGhpcy5fYnVsbGV0SW5mby5fYnVsbGV0TXV0aWw7XHJcbiAgICAgICAgICAgIHJlcS5idWxsZXRpZCA9IHRoaXMuX2J1bGxldEluZm8uX2J1bGxldElkO1xyXG4gICAgICAgICAgICAvL05ldFJvb20uSW5zdGFuY2UuQnVsbGV0VXNlTGVzc1JlcShyZXEudWlkLCByZXEubXVsdGksIHJlcS5idWxsZXRpZCk7XHJcbiAgICAgICAgICAgIGlmIChOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQocmVxLnVpZCkpIHtcclxuICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdXNlbGVzc01zZ0RpY3RbcmVxLmJ1bGxldGlkIGFzIG51bWJlcl0gPSByZXE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmoLnmja7lhaXlsITlkJHph49J5ZKM5rOV5ZCR6YePTuaxguWPjeWwhOWQkemHj1LvvJpSID0gSS0yKEnCt04pTlxyXG4gICAgICogQHBhcmFtIG5vcm1hbCDms5XlkJHph49cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBCdWxsZXRSZWZsZWN0KG5vcm1hbDogTGF5YS5WZWN0b3IzKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGFycml2YWxBbmdsZSA9IHRoaXMuX2RpcmVjdGlvbjsvL25ldyBMYXlhLlZlY3RvcjModGhpcy5fZGlyZWN0aW9uLngsIHRoaXMuX2RpcmVjdGlvbi55LCB0aGlzLl9kaXJlY3Rpb24ueik7XHJcbiAgICAgICAgLy8gdXRpbHMuQ29tbW9uVXRpbHMubG9nKHRoaXMuX0hpdFdhbGxOYW1lICsgXCItLS0g5a2Q5by55YWl5bCE6KeS5bqmIHRoaXMuX2RpcmVjdGlvbiA9IFwiLCBhcnJpdmFsQW5nbGUpO1xyXG4gICAgICAgIGxldCBkb3RWYWx1ZSA9IExheWEuVmVjdG9yMy5kb3QoYXJyaXZhbEFuZ2xlLCBub3JtYWwpO1xyXG4gICAgICAgIGxldCByZWZsZXhBbmdsZSA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKG5vcm1hbCwgZG90VmFsdWUgKiAyLCByZWZsZXhBbmdsZSk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnN1YnRyYWN0KGFycml2YWxBbmdsZSwgcmVmbGV4QW5nbGUsIHJlZmxleEFuZ2xlKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMubm9ybWFsaXplKHJlZmxleEFuZ2xlLCB0aGlzLl9kaXJlY3Rpb24pO1xyXG4gICAgICAgIC8vIHV0aWxzLkNvbW1vblV0aWxzLmxvZyh0aGlzLl9IaXRXYWxsTmFtZSArIFwiLS0tIOWtkOW8ueWPjeW8uSBsZWZ0IHRoaXMuX2RpcmVjdGlvbiA9IFwiLCB0aGlzLl9kaXJlY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmVCdWxsZXQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2J1bGxldEluZm8uX3BsYXlJZC50b1N0cmluZygpID09IE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpICYmIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgPiAwKSB7XHJcbiAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgLT0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5TdG9wTW92aW5nKCk7XHJcbiAgICAgICAgLy90aGlzLm1vd25lci5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgLy8gTGF5YS5Qb29sLnJlY292ZXIodGhpcy5fYnVsbGV0SW5mby5fYnVsbGV0U2hvd1R5cGVJZC50b1N0cmluZygpLCB0aGlzLm1vd25lcik7XHJcbiAgICAgICAgdGhpcy5tb3duZXIuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRJbmZvIHtcclxuICAgIC8qKiDlrZDlvLlJRCovXHJcbiAgICBwdWJsaWMgX2J1bGxldElkOiBudW1iZXIgfCBMb25nO1xyXG4gICAgLyoqIOWtkOW8ueeahOWAjeaVsCovXHJcbiAgICBwdWJsaWMgX2J1bGxldE11dGlsOiBudW1iZXI7XHJcbiAgICAvKiog5a2Q5by56KGo546w55qE57G75Z6L57qn5YirSUQo5YWx55SoSUQ65LiO5riU572R6LWE5rqQ5LiA5LiA5a+55bqUKSovXHJcbiAgICBwdWJsaWMgX2J1bGxldFNob3dUeXBlSWQ6IG51bWJlciB8IExvbmc7XHJcbiAgICAvKirooqvplIHlrprnmoTpsbznmoRJRCovXHJcbiAgICBwdWJsaWMgX2xvY2tGaXNoSWQ6IG51bWJlciB8IExvbmc7XHJcbiAgICAvKiog5omA5bGe546p5a62SUQqL1xyXG4gICAgcHVibGljIF9wbGF5SWQ6IG51bWJlciB8IExvbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYnVsbGV0SWQ6IG51bWJlciB8IExvbmcsIG11bHRpOiBudW1iZXIsIGJ1bGxldFNob3dUeXBlSWQ6IG51bWJlciB8IExvbmcsIGxvY2tlZElkOiBudW1iZXIgfCBMb25nLCBwbGF5ZXJJRDogbnVtYmVyIHwgTG9uZykge1xyXG4gICAgICAgIHRoaXMuX2J1bGxldElkID0gYnVsbGV0SWQ7XHJcbiAgICAgICAgdGhpcy5fYnVsbGV0TXV0aWwgPSBtdWx0aTtcclxuICAgICAgICB0aGlzLl9idWxsZXRTaG93VHlwZUlkID0gYnVsbGV0U2hvd1R5cGVJZDtcclxuICAgICAgICB0aGlzLl9sb2NrRmlzaElkID0gbG9ja2VkSWQ7XHJcbiAgICAgICAgdGhpcy5fcGxheUlkID0gcGxheWVySUQ7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQnVsbGV0QmFzZSBmcm9tIFwiLi9CdWxsZXRCYXNlXCI7XHJcblxyXG5tb2R1bGUgSEYzREJ1bGxldENsYXNzZXMge1xyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBCdWxsZXQwMSBleHRlbmRzIEJ1bGxldEJhc2Uge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgQnVsbGV0MDIgZXh0ZW5kcyBCdWxsZXRCYXNle1xyXG4gICAgXHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEJ1bGxldDAzIGV4dGVuZHMgQnVsbGV0QmFzZXtcclxuICAgIFxyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IEhGM0RCdWxsZXRDbGFzc2VzO1xyXG4iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEJhdHRlcnlDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0JhdHRlcnlDb250cm9sbGVyXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuLyoqXHJcbiAqIOmHkeW4gemjnuihjOeahOmAu+i+keexu1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29pbkZseWluZyBleHRlbmRzIExheWEuU2NyaXB0M0Qge1xyXG5cclxuICAgIC8qKiDov5Dliqjml7bpl7QqL1xyXG4gICAgcHJpdmF0ZSBfbW92ZVRpbWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgX21vdmVUb3RhbFRpbWU6IG51bWJlciA9IDAuNTtcclxuICAgIHByaXZhdGUgX2p1bXBUb3RhbFRpbWU6IG51bWJlciA9IDAuMztcclxuXHJcbiAgICBwcml2YXRlIF9kZWxheVRpbWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgX2JEZWxldGU6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9vcmlnaW5Qb3M6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICBwcml2YXRlIF9lbmRQb3M6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcblxyXG4gICAgcHJpdmF0ZSBfZGVsUG9zOiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgcHJpdmF0ZSBfanVtcFBvczogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgIHByaXZhdGUgX2F2ZXJhZ2VTcGVlZDogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgIHByaXZhdGUgX2p1bXBTcGVlZDogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgIHByaXZhdGUgX21vd25lcjogTGF5YS5TcHJpdGUzRDtcclxuXHJcbiAgICBwcml2YXRlIF9nb2xkRWZmZWN0OiBMYXlhLlNwcml0ZTNEO1xyXG5cclxuICAgIHByaXZhdGUgX3VpZDogbnVtYmVyIHwgTG9uZztcclxuICAgIHByaXZhdGUgX2RhdGU6IFJvb21Nc2cuSWZpc2hfYm9udXNfaW5mbztcclxuICAgIC8vcHJpdmF0ZSBfamV0dG9uc2hvdzpudW1iZXI7XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gZHQg5bu25pe26ZSA5q+B5pe26Ze0XHJcbiAgICAgKiBAcGFyYW0gZW5kUG9zIOi/kOWKqOeahOe7k+adn+S9jee9rlxyXG4gICAgICogQHBhcmFtIGJEZWwg5piv5ZCm5Yig6Zmk6K+l6IqC54K5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBJbml0RGF0YShkdDogbnVtYmVyLCBlbmRQb3M6IExheWEuVmVjdG9yMywgYkRlbDogYm9vbGVhbiwgdWlkOiBudW1iZXIgfCBMb25nLCBkYXRhOiBSb29tTXNnLklmaXNoX2JvbnVzX2luZm8sIGpldHRvbnNob3c6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMub3duZXIpIHJldHVybjtcclxuXHJcbiAgICAgICAgdGhpcy5fdWlkID0gdWlkO1xyXG4gICAgICAgIHRoaXMuX2RhdGUgPSBkYXRhO1xyXG4gICAgICAgIC8vdGhpcy5famV0dG9uc2hvdyA9IGpldHRvbnNob3c7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5vd25lcikgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuX21vd25lciA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICBpZiAodGhpcy5fbW93bmVyLnRyYW5zZm9ybSA9PSBudWxsKSByZXR1cm47IC8vIHRvZG9cclxuICAgICAgICB0aGlzLl9kZWxheVRpbWUgPSBkdDtcclxuICAgICAgICB0aGlzLl9iRGVsZXRlID0gYkRlbDtcclxuICAgICAgICB0aGlzLl9vcmlnaW5Qb3MgPSBuZXcgTGF5YS5WZWN0b3IzKHRoaXMuX21vd25lci50cmFuc2Zvcm0ucG9zaXRpb24ueCwgdGhpcy5fbW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbi55LCB0aGlzLl9tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLnopO1xyXG4gICAgICAgIHRoaXMuX2VuZFBvcyA9IGVuZFBvcztcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QodGhpcy5fZW5kUG9zLCB0aGlzLl9vcmlnaW5Qb3MsIHRoaXMuX2RlbFBvcyk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnN1YnRyYWN0KG5ldyBMYXlhLlZlY3RvcjModGhpcy5fZGVsUG9zLnggLyA1LCB0aGlzLl9kZWxQb3MueSAvIDUsIHRoaXMuX2RlbFBvcy56KSwgdGhpcy5fb3JpZ2luUG9zLCB0aGlzLl9qdW1wUG9zKTtcclxuICAgICAgICB0aGlzLl9tb3ZlVGltZSA9IDA7XHJcbiAgICAgICAgLy9MYXlhLnRpbWVyLm9uY2UoZHQsIHRoaXMsIHRoaXMuU3RhcnRNb3ZlKTtcclxuXHJcbiAgICAgICAgdGhpcy5TdGFydE1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIFN0YXJ0TW92ZSgpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgLy90aGlzLl9tb3ZlVG90YWxUaW1lID0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKHRoaXMuX2VuZFBvcywgdGhpcy5fb3JpZ2luUG9zKSAvIDE1O1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZSh0aGlzLl9kZWxQb3MsIDEgLyB0aGlzLl9tb3ZlVG90YWxUaW1lLCB0aGlzLl9hdmVyYWdlU3BlZWQpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZSh0aGlzLl9qdW1wUG9zLCAxIC8gdGhpcy5fanVtcFRvdGFsVGltZSwgdGhpcy5fanVtcFNwZWVkKTtcclxuICAgICAgICAvL0xheWEudGltZXIubG9vcCgxMCwgdGhpcywgdGhpcy5KdW1wTW92ZSk7XHJcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDEwLCB0aGlzLCB0aGlzLkN1cnZ5TW92ZSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSnVtcE1vdmUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX21vdmVUaW1lIDwgdGhpcy5fanVtcFRvdGFsVGltZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9tb3ZlVGltZSArPSAwLjAyO1xyXG4gICAgICAgICAgICBsZXQgc3BlZWR2eSA9IHRoaXMuX2p1bXBTcGVlZC55ICogKC0yKTtcclxuICAgICAgICAgICAgbGV0IGFjY2VsZXJhdGVkeSA9ICh0aGlzLl9qdW1wUG9zLnkgLSBzcGVlZHZ5ICogdGhpcy5fanVtcFRvdGFsVGltZSkgLyAodGhpcy5fanVtcFRvdGFsVGltZSAqIHRoaXMuX2p1bXBUb3RhbFRpbWUpICogMjsgLy8gcyA9IDEvMipnKnQyICsgdnQ7XHJcbiAgICAgICAgICAgIGxldCBQT1MgPSBuZXcgTGF5YS5WZWN0b3IzKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5fanVtcFNwZWVkLnggKiB0aGlzLl9tb3ZlVGltZSxcclxuICAgICAgICAgICAgICAgIHNwZWVkdnkgKiB0aGlzLl9tb3ZlVGltZSArIGFjY2VsZXJhdGVkeSAqICh0aGlzLl9tb3ZlVGltZSAqIHRoaXMuX21vdmVUaW1lKSAvIDIsXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9qdW1wU3BlZWQueiAqIHRoaXMuX21vdmVUaW1lKTtcclxuXHJcbiAgICAgICAgICAgIGxldCB0ZW5kUG9zID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAgICAgTGF5YS5WZWN0b3IzLmFkZCh0aGlzLl9vcmlnaW5Qb3MsIFBPUywgdGVuZFBvcyk7XHJcbiAgICAgICAgICAgIHRoaXMuX21vd25lci50cmFuc2Zvcm0ucG9zaXRpb24gPSB0ZW5kUG9zO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fbW92ZVRpbWUgPSAwO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMuSnVtcE1vdmUpO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmxvb3AoMTAsIHRoaXMsIHRoaXMuQ3VydnlNb3ZlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBDdXJ2eU1vdmUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX21vdmVUaW1lIDwgdGhpcy5fbW92ZVRvdGFsVGltZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9tb3ZlVGltZSArPSAwLjAyO1xyXG4gICAgICAgICAgICBsZXQgc3BlZWR2eSA9IHRoaXMuX2F2ZXJhZ2VTcGVlZC55ICogKC0yKTtcclxuICAgICAgICAgICAgbGV0IGFjY2VsZXJhdGVkeSA9ICh0aGlzLl9kZWxQb3MueSAtIHNwZWVkdnkgKiB0aGlzLl9tb3ZlVG90YWxUaW1lKSAvICh0aGlzLl9tb3ZlVG90YWxUaW1lICogdGhpcy5fbW92ZVRvdGFsVGltZSkgKiAyOyAvLyBzID0gMS8yKmcqdDIgKyB2dDtcclxuICAgICAgICAgICAgbGV0IFBPUyA9IG5ldyBMYXlhLlZlY3RvcjMoXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hdmVyYWdlU3BlZWQueCAqIHRoaXMuX21vdmVUaW1lLFxyXG4gICAgICAgICAgICAgICAgc3BlZWR2eSAqIHRoaXMuX21vdmVUaW1lICsgYWNjZWxlcmF0ZWR5ICogKHRoaXMuX21vdmVUaW1lICogdGhpcy5fbW92ZVRpbWUpIC8gMixcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F2ZXJhZ2VTcGVlZC56ICogdGhpcy5fbW92ZVRpbWUpO1xyXG5cclxuICAgICAgICAgICAgbGV0IHRlbmRQb3MgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuX29yaWdpblBvcywgUE9TLCB0ZW5kUG9zKTtcclxuICAgICAgICAgICAgdGhpcy5fbW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiA9IHRlbmRQb3M7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMuQ3VydnlNb3ZlKTtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuX2RlbGF5VGltZSwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuQ29pbkZseWluZ0ZpbmlzaCh0aGlzLl91aWQsIHRoaXMuX2RhdGUpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB0aGlzLkxvYWRFbmRFZmZlY3QoKTtcclxuICAgICAgICAgICAgdGhpcy5EZXN0cm95U2VsZigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIExvYWRFbmRFZmZlY3QoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fZ29sZEVmZmVjdClcclxuICAgICAgICAgICAgdGhpcy5fZ29sZEVmZmVjdCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkluc3RhbnRpYXRlRWZmZWN0KENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVFZmZlY3RBcnJheS5Hb2xkX0VmZmVjdCk7XHJcbiAgICAgICAgdGhpcy5fZ29sZEVmZmVjdC50cmFuc2Zvcm0ucG9zaXRpb24gPSB0aGlzLl9tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMuX2dvbGRFZmZlY3QuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMjAwMCwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9nb2xkRWZmZWN0LmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgRGVzdHJveVNlbGYoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2JEZWxldGUpXHJcbiAgICAgICAgICAgIHRoaXMub3duZXIuZGVzdHJveSgpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5vd25lci5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxufSIsImltcG9ydCBGaXNoSW5mbyBmcm9tIFwiLi9GaXNoSW5mb1wiO1xyXG5pbXBvcnQgRmlzaEJhc2VDb25maWdEYXRhIGZyb20gXCIuL0Zpc2hCYXNlQ29uZmlnRGF0YVwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IEZpc2hDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0Zpc2hDb250cm9sbGVyXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IEdhbWVFdmVudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvR2FtZUV2ZW50XCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuLi8uLi9HYW1lQ29uZmlnXCI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgQmV6aWVyQ3VydmVycyB9IGZyb20gXCIuLi8uLi91dGlscy9CZXppZXJDdXJ2ZXJzXCI7XHJcbmltcG9ydCBDb25maWdNYW5hZ2VyLCB7IEZpc2hQYXRoTGVuZ3RoIH0gZnJvbSBcIi4uLy4uL21hbmFnZXIvQ29uZmlnTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEZpc2hCYXNlIGV4dGVuZHMgTGF5YS5TY3JpcHQzRCB7XHJcbiAgICAvKiog6bG85piv5ZCm5a2Y5ZyoKi9cclxuICAgIHB1YmxpYyBfbUlzRXhpc3Q6IGJvb2xlYW47XHJcbiAgICAvKirpsbzmmK/lkKbmmoLml7blgZznlZkgKi9cclxuICAgIHByb3RlY3RlZCBfbUlzU3RheTogYm9vbGVhbjtcclxuICAgIC8qKumxvOaYr+WQpuaJp+ihjOi/h+S6huWBnOeVmeWKqOS9nCAqL1xyXG4gICAgcHJvdGVjdGVkIF9tQWxyZWFkeVN0YXk6IGJvb2xlYW47XHJcbiAgICAvKirpsbzlvZPliY3pgJ/luqYgKi9cclxuICAgIHByb3RlY3RlZCBfbUN1cnJlbnRTcGVlZDogbnVtYmVyO1xyXG4gICAgLyoqIOmxvOW9k+WJjeWHuueUn+aXtumXtCovXHJcbiAgICBwcm90ZWN0ZWQgX21DdXJyZW50Q3JlYXRlVGltZTogbnVtYmVyO1xyXG4gICAgLyoqIOmxvOW9k+WJjeaJgOWcqOi3r+WKsueCuSovXHJcbiAgICBwcm90ZWN0ZWQgX21BY3R1YWxQYXRoTm9kZTogbnVtYmVyO1xyXG4gICAgLyoq5b2T5YmN6YCf5bqm5YCN546HICovXHJcbiAgICBwcm90ZWN0ZWQgX21TcGVlZFJhdGU6IG51bWJlcjtcclxuICAgIC8qKuihjOS4uuaVsOaNriAqL1xyXG4gICAgcHJvdGVjdGVkIF9GaXNoQmVoYXZpb3I6IEZpc2hCYXNlQ29uZmlnRGF0YS5GaXNoQmVoYXZpb3I7XHJcbiAgICAvKirliqjkvZzmlbDmja4gKi9cclxuICAgIHByb3RlY3RlZCBfRmlzaEFuaUNsYXNzOiBGaXNoQmFzZUNvbmZpZ0RhdGEuRmlzaEFuaUNsYXNzO1xyXG5cclxuICAgIHByb3RlY3RlZCBfQW5pbWF0b3I6IExheWEuQW5pbWF0b3I7XHJcbiAgICAvKiog6bG85b2T5YmN55qE5Yqo5L2c57G75Z6LKi9cclxuICAgIHByb3RlY3RlZCBfZmlzaEFjdGlvblN0YXRlOiBFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEU7XHJcbiAgICAvKiog5piv5ZCm5pKt6L+H6aKE6K2m54m55pWIKi9cclxuICAgIHByb3RlY3RlZCBfbUlzV2FybmVkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgbW93bmVyOiBMYXlhLk1lc2hTcHJpdGUzRDtcclxuICAgIHByb3RlY3RlZCBfZmlyc3RDaGlsZDogTGF5YS5NZXNoU3ByaXRlM0Q7XHJcbiAgICBwcm90ZWN0ZWQgX2luaXRpYWxGaXJzdENoaWxkU2NhbGU6IExheWEuVmVjdG9yMzsvLyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICBwcm90ZWN0ZWQgX2luaXRpYWxGaXJzdENoaWxkUG9zaXRpb246IExheWEuVmVjdG9yMzsvLyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICBwcm90ZWN0ZWQgX2NhbWVyYVRyYW5zOiBMYXlhLlRyYW5zZm9ybTNEO1xyXG4gICAgLyoqIOWMheWQq+mxvOeahOaJgOacieaVsOaNruS/oeaBryovXHJcbiAgICBwcm90ZWN0ZWQgX2Zpc2hJbmZvOiBGaXNoSW5mbztcclxuXHJcbiAgICBwdWJsaWMgZ2V0IF9NRmlzaEluZm8oKTogRmlzaEluZm8ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9maXNoSW5mbztcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgX093bmVyUG9zKCk6IExheWEuVmVjdG9yMyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb3duZXIudHJhbnNmb3JtLmxvY2FsUG9zaXRpb24gPSB0aGlzLl9pbml0aWFsRmlyc3RDaGlsZFBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMubW93bmVyLnRyYW5zZm9ybS5sb2NhbFNjYWxlID0gdGhpcy5faW5pdGlhbEZpcnN0Q2hpbGRTY2FsZTtcclxuICAgIH1cclxuXHJcbiAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubW93bmVyID0gdGhpcy5vd25lciBhcyBMYXlhLk1lc2hTcHJpdGUzRDtcclxuICAgICAgICB0aGlzLl9maXJzdENoaWxkID0gdGhpcy5tb3duZXIuZ2V0Q2hpbGRBdCgwKSBhcyBMYXlhLk1lc2hTcHJpdGUzRDtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9pbml0aWFsRmlyc3RDaGlsZFNjYWxlKVxyXG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsRmlyc3RDaGlsZFNjYWxlID0gbmV3IExheWEuVmVjdG9yMyh0aGlzLl9maXJzdENoaWxkLnRyYW5zZm9ybS5sb2NhbFNjYWxlLngsIHRoaXMuX2ZpcnN0Q2hpbGQudHJhbnNmb3JtLmxvY2FsU2NhbGUueSwgdGhpcy5fZmlyc3RDaGlsZC50cmFuc2Zvcm0ubG9jYWxTY2FsZS56KTtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9pbml0aWFsRmlyc3RDaGlsZFBvc2l0aW9uKVxyXG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsRmlyc3RDaGlsZFBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMyh0aGlzLl9maXJzdENoaWxkLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uLngsIHRoaXMuX2ZpcnN0Q2hpbGQudHJhbnNmb3JtLmxvY2FsUG9zaXRpb24ueSwgdGhpcy5fZmlyc3RDaGlsZC50cmFuc2Zvcm0ubG9jYWxQb3NpdGlvbi56KTtcclxuICAgICAgICB0aGlzLl9jYW1lcmFUcmFucyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9IdW50U2NlbmVDYW1lcmEudHJhbnNmb3JtIGFzIExheWEuVHJhbnNmb3JtM0Q7XHJcblxyXG4gICAgICAgIHRoaXMuX2Zpc2hJbmZvID0gZmlzaEluZm87XHJcbiAgICAgICAgdGhpcy5fbUN1cnJlbnRDcmVhdGVUaW1lID0gZmlzaEluZm8uX21GaXNoQ3JlYXRlVGltZTtcclxuICAgICAgICB0aGlzLl9tQWN0dWFsUGF0aE5vZGUgPSAwO1xyXG4gICAgICAgIHRoaXMuX21Jc1N0YXkgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9tU3BlZWRSYXRlID0gMTtcclxuICAgICAgICB0aGlzLl9tQWxyZWFkeVN0YXkgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9tSXNXYXJuZWQgPSBmYWxzZTtcclxuICAgICAgICBsZXQgdHlwZSA9IHRoaXMuRmlzaFR5cGVJRCgpOy8vZmlzaEluZm8uX21GaXNoVHlwZTtcclxuXHJcbiAgICAgICAgLy/kuI3og73nm7TmjqVnZXTlhbbmlbDmja7lvJXnlKjmnaXotYvlgLzvvIzlv4Xpobtjb3B55LiA5Lu95Ye65p2l77yIdG9kbyAg5Luj56CB5b6F5LyY5YyW77yJXHJcbiAgICAgICAgdGhpcy5fRmlzaEJlaGF2aW9yID0gRmlzaEJhc2VDb25maWdEYXRhLkZpc2hTd2ltQ29uZmlnLkNvcHlGaXNoQmVoYXZpb3JEYXRhKHR5cGUpOy8vX0Zpc2hCZWhhdmlvckRpY3QuZ2V0KHR5cGUpO1xyXG4gICAgICAgIHRoaXMuSW5pdFBhdGhMZW5ndGgoKTtcclxuICAgICAgICAvLy8vIHRoaXMuX2Zpc2hJbmZvLl9tUGF0aExlbmdodCAqPSAxMDAwMDA7IC8vdG9kbyDov5nkuKrlm7rlrprlgLwxMDAwMDDmmK/lpoLkvZXnoa7lrprnmoRcclxuICAgICAgICB0aGlzLlNldEZpc2hMaWZlVGltZSgpO1xyXG5cclxuICAgICAgICB0aGlzLl9GaXNoQW5pQ2xhc3MgPSBGaXNoQmFzZUNvbmZpZ0RhdGEuRmlzaFN3aW1Db25maWcuX0Zpc2hBbmltYXRlRGljdC5nZXQodHlwZSk7XHJcbiAgICAgICAgdGhpcy5fQW5pbWF0b3IgPSB0aGlzLm1vd25lci5nZXRDaGlsZEF0KDApLmdldENoaWxkQXQoMCkuZ2V0Q29tcG9uZW50KExheWEuQW5pbWF0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Zpc2hBY3Rpb25TdGF0ZSA9IEVudW1EYXRhLkVOVU1fRklTSF9TVEFURS5ERUFUSDtcclxuICAgICAgICB0aGlzLm1vd25lci50cmFuc2Zvcm0ucG9zaXRpb24gPSBuZXcgTGF5YS5WZWN0b3IzKC0xMDAwMCwgMTAwMDAsIDEwMDAwKTtcclxuICAgICAgICB0aGlzLl9tSXNFeGlzdCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5tb3duZXIuYWN0aXZlID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICrkuLvopoHpkojlr7nop4TmoLzkuLo455qE6bG8576k77yM5b6F5pW055CGIO+8iHRvZG8gZmlzaHR5cGXmnInngrnkubHvvIlcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIEZpc2hUeXBlSUQoKSB7XHJcbiAgICAgICAgLy/mgLvlhbHnvJblj7flj6rmnIkxLTI25Y+36bG8ICAzMuWPt+eCuOW8uSAg5YW25L2Z5piv6bG8576kXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Zpc2hJbmZvLl9tTW9kZWwgPT0gOCA/IHRoaXMuX2Zpc2hJbmZvLl9tRmlzaFR5cGUgKyAxMDAgOiB0aGlzLl9maXNoSW5mby5fbUZpc2hUeXBlO1xyXG4gICAgfVxyXG4gICAgcHJvdGVjdGVkIEluaXRQYXRoTGVuZ3RoKCkge1xyXG5cclxuICAgICAgICBsZXQgY29uZmlnTW5nID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5Db25maWdNbmc7XHJcbiAgICAgICAgbGV0IGtleSA9IGNvbmZpZ01uZy5HZXRmaXNoUGF0aExlbmd0aEtleSh0aGlzLkZpc2hUeXBlSUQoKSwgdGhpcy5fZmlzaEluZm8uX21QYXRoSWQpO1xyXG4gICAgICAgIGlmIChudWxsID09IGNvbmZpZ01uZy5fZmlzaFBhdGhMZW5ndGhDb25maWdba2V5XSkge1xyXG4gICAgICAgICAgICBsZXQgdCA9IDA7XHJcbiAgICAgICAgICAgIGxldCB0UGF0aE5vZGVTcGVlZDogQXJyYXk8RmlzaEJhc2VDb25maWdEYXRhLlBhdGhOb2RlSW5mbz4gPSBuZXcgQXJyYXk8RmlzaEJhc2VDb25maWdEYXRhLlBhdGhOb2RlSW5mbz4oKTtcclxuICAgICAgICAgICAgdFBhdGhOb2RlU3BlZWQgPSB0aGlzLl9GaXNoQmVoYXZpb3IuX1BhdGhOb2RlU3BlZWQ7XHJcbiAgICAgICAgICAgIGxldCBhcnJJbmRleCA9IDA7Ly90UGF0aE5vZGVTcGVlZOaVsOe7hOeahOS4i+agh1xyXG4gICAgICAgICAgICBsZXQgcGF0aExlbmd0aCA9IDA7Ly/lvZPliY3ot6/lirLmrrXnmoTplb/luqZcclxuICAgICAgICAgICAgbGV0IHBvaW50OiBMYXlhLlZlY3RvcjMgPSBudWxsO1xyXG4gICAgICAgICAgICB3aGlsZSAodCA8PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcCA9IEJlemllckN1cnZlcnMuR2V0UG9pbnQodGhpcy5fZmlzaEluZm8uX21XYXlQb2ludHMsIHQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG51bGwgIT0gcG9pbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aExlbmd0aCArPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2UocG9pbnQsIHApO1xyXG4gICAgICAgICAgICAgICAgcG9pbnQgPSBwO1xyXG4gICAgICAgICAgICAgICAgdCArPSAwLjAwMTtcclxuICAgICAgICAgICAgICAgIGlmICh0ID49IChhcnJJbmRleCArIDEgPCB0UGF0aE5vZGVTcGVlZC5sZW5ndGggPyB0UGF0aE5vZGVTcGVlZFthcnJJbmRleCArIDFdLl9Ob2RlQmVnaW5Qb2ludCA6IDEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZ3cDIgPSBuZXcgRmlzaEJhc2VDb25maWdEYXRhLlBhdGhOb2RlSW5mbygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZ3cDIuX05vZGVCZWdpblBvaW50ID0gdFBhdGhOb2RlU3BlZWRbYXJySW5kZXhdLl9Ob2RlQmVnaW5Qb2ludDtcclxuICAgICAgICAgICAgICAgICAgICBmd3AyLl9wYXRoTGVuZ3RoID0gcGF0aExlbmd0aCAqIDEwMDAwMDtcclxuICAgICAgICAgICAgICAgICAgICBmd3AyLl9TcGVlZFJhdGUgPSB0UGF0aE5vZGVTcGVlZFthcnJJbmRleF0uX1NwZWVkUmF0ZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgd2Vha09iajogTGF5YS5XZWFrT2JqZWN0ID0gY29uZmlnTW5nLl9maXNoUGF0aExlbmd0aENvbmZpZ1trZXldXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgPT0gd2Vha09iailcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2Vha09iaiA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICAgICAgICAgICAgICB3ZWFrT2JqLnNldCh0UGF0aE5vZGVTcGVlZFthcnJJbmRleF0uX05vZGVCZWdpblBvaW50LCBmd3AyKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25maWdNbmcuX2Zpc2hQYXRoTGVuZ3RoQ29uZmlnW2tleV0gPSB3ZWFrT2JqO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhMZW5ndGggPSAwOyAvL+mHjee9ruS4ujDvvIzlvIDlp4vorqHnrpfkuIvkuIDmrrXot6/lirLplb/luqZcclxuICAgICAgICAgICAgICAgICAgICBhcnJJbmRleCsrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vICBjb25maWdNbmcuX2Zpc2hQYXRoTGVuZ3RoQ29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqIOWIneWni+WMlumxvOeahOeUn+WRveWRqOacnyovXHJcbiAgICBwcm90ZWN0ZWQgU2V0RmlzaExpZmVUaW1lKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX0Zpc2hCZWhhdmlvci5fRmlzaFRvdGFsTGlmdFRpbWUgPSAwO1xyXG5cclxuICAgICAgICBsZXQgdGxlbmdodCA9IHRoaXMuX0Zpc2hCZWhhdmlvci5fUGF0aE5vZGVTcGVlZC5sZW5ndGg7XHJcbiAgICAgICAgbGV0IGNvbmZpZ01uZyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuQ29uZmlnTW5nO1xyXG4gICAgICAgIGxldCBrZXkgPSBjb25maWdNbmcuR2V0ZmlzaFBhdGhMZW5ndGhLZXkodGhpcy5GaXNoVHlwZUlEKCksIHRoaXMuX2Zpc2hJbmZvLl9tUGF0aElkKTtcclxuICAgICAgICBsZXQgd2Vha09iaiA9IGNvbmZpZ01uZy5fZmlzaFBhdGhMZW5ndGhDb25maWdba2V5XTtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGxlbmdodDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgcG9pbnQxID0gdGhpcy5fRmlzaEJlaGF2aW9yLl9QYXRoTm9kZVNwZWVkW2luZGV4XTtcclxuICAgICAgICAgICAgbGV0IHBhdGhOb2RlSW5mbzogRmlzaEJhc2VDb25maWdEYXRhLlBhdGhOb2RlSW5mbyA9IHdlYWtPYmouZ2V0KHBvaW50MS5fTm9kZUJlZ2luUG9pbnQpIGFzIEZpc2hCYXNlQ29uZmlnRGF0YS5QYXRoTm9kZUluZm87XHJcbiAgICAgICAgICAgIHBvaW50MS5fTGlmZVRpbWUgPSBwYXRoTm9kZUluZm8uX3BhdGhMZW5ndGggLyAocGF0aE5vZGVJbmZvLl9TcGVlZFJhdGUgKiB0aGlzLl9maXNoSW5mby5fbVNwZWVkKTtcclxuICAgICAgICAgICAgcG9pbnQxLl9wYXRoTGVuZ3RoID0gcGF0aE5vZGVJbmZvLl9wYXRoTGVuZ3RoO1xyXG4gICAgICAgICAgICBsZXQgcG9pbnQyOiBGaXNoQmFzZUNvbmZpZ0RhdGEuUGF0aE5vZGVJbmZvID0gaW5kZXggKyAxIDwgdGxlbmdodCA/IHRoaXMuX0Zpc2hCZWhhdmlvci5fUGF0aE5vZGVTcGVlZFtpbmRleCArIDFdIDogbnVsbDtcclxuICAgICAgICAgICAgLy8gcG9pbnQxLl9MaWZlVGltZSA9ICgoKChudWxsICE9IHBvaW50MikgPyBwb2ludDIuX05vZGVCZWdpblBvaW50IDogMSkgLSBwb2ludDEuX05vZGVCZWdpblBvaW50KSAqIHRoaXMuX2Zpc2hJbmZvLl9tUGF0aExlbmdodCkgLyAodGhpcy5fZmlzaEluZm8uX21TcGVlZCAqIHBvaW50MS5fU3BlZWRSYXRlKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX0Zpc2hCZWhhdmlvci5fU3RheVBhdGggPiBwb2ludDEuX05vZGVCZWdpblBvaW50ICYmICgobnVsbCA9PSBwb2ludDIpIHx8ICh0aGlzLl9GaXNoQmVoYXZpb3IuX1N0YXlQYXRoIDwgcG9pbnQyLl9Ob2RlQmVnaW5Qb2ludCkpKSB7XHJcbiAgICAgICAgICAgICAgICBwb2ludDEuX0xpZmVUaW1lICs9IHRoaXMuX0Zpc2hCZWhhdmlvci5fU3RheVRpbWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fRmlzaEJlaGF2aW9yLl9GaXNoVG90YWxMaWZ0VGltZSArPSBwb2ludDEuX0xpZmVUaW1lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKiDorqHnrpfpsbznmoTlvZPliY3kvY3nva7nmb7liIbmr5TlkozlvZPliY3pgJ/luqYs6L+U5Zue5L2N572u6IqC54K5Ki9cclxuICAgIHByb3RlY3RlZCBDYWxjdWxhdGVGaXNoQWN0dWFsUGF0aE5vZGUoKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgc3Vydml2YWxUaW1lID0gdGhpcy5HZXRDdXJUaW1lKCkgLSB0aGlzLl9maXNoSW5mby5fbUZpc2hDcmVhdGVUaW1lO1xyXG4gICAgICAgIGxldCBjdXJCZWdpblBhdGhOb2RlID0gMDtcclxuICAgICAgICBsZXQgdGxlbmdodCA9IHRoaXMuX0Zpc2hCZWhhdmlvci5fUGF0aE5vZGVTcGVlZC5sZW5ndGg7XHJcbiAgICAgICAgLy/pgY3ljobmiYDmnInpgJ/luqblj5jljJboioLngrnvvIzmsYLlh7rlvZPliY3psbznmoTov5DliqjnirbmgIFcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGxlbmdodDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgcG9pbnQxID0gdGhpcy5fRmlzaEJlaGF2aW9yLl9QYXRoTm9kZVNwZWVkW2luZGV4XTtcclxuICAgICAgICAgICAgbGV0IHBvaW50MjogRmlzaEJhc2VDb25maWdEYXRhLlBhdGhOb2RlSW5mbyA9IGluZGV4ICsgMSA8IHRsZW5naHQgPyB0aGlzLl9GaXNoQmVoYXZpb3IuX1BhdGhOb2RlU3BlZWRbaW5kZXggKyAxXSA6IG51bGw7XHJcbiAgICAgICAgICAgIHN1cnZpdmFsVGltZSAtPSBwb2ludDEuX0xpZmVUaW1lO1xyXG4gICAgICAgICAgICBpZiAoc3Vydml2YWxUaW1lIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGN1clNwZWVkID0gcG9pbnQxLl9TcGVlZFJhdGUgKiB0aGlzLl9maXNoSW5mby5fbVNwZWVkO1xyXG4gICAgICAgICAgICAgICAgY3VyQmVnaW5QYXRoTm9kZSA9IHBvaW50MS5fTm9kZUJlZ2luUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICBzdXJ2aXZhbFRpbWUgKz0gcG9pbnQxLl9MaWZlVGltZTtcclxuICAgICAgICAgICAgICAgIGxldCBtb3ZlVGltZSA9IHN1cnZpdmFsVGltZTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9GaXNoQmVoYXZpb3IuX1N0YXlQYXRoID4gcG9pbnQxLl9Ob2RlQmVnaW5Qb2ludCAmJiAoKG51bGwgPT0gcG9pbnQyKSB8fCAodGhpcy5fRmlzaEJlaGF2aW9yLl9TdGF5UGF0aCA8IHBvaW50Mi5fTm9kZUJlZ2luUG9pbnQpKSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLy8vbGV0IHN0YXlQYXRoTm9kZVRpbWUgPSAodGhpcy5fRmlzaEJlaGF2aW9yLl9TdGF5UGF0aCAtIGVsZW1lbnQuX05vZGVCZWdpblBvaW50KSAqIHRoaXMuX2Zpc2hJbmZvLl9tUGF0aExlbmdodCAvIGN1clNwZWVkOy8v5Yiw6L6+5YGc55WZ54K577yM5omA5raI6ICX55qE5pe26Ze0XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXlQYXRoTm9kZVRpbWUgPSAoKHRoaXMuX0Zpc2hCZWhhdmlvci5fU3RheVBhdGggLSBwb2ludDEuX05vZGVCZWdpblBvaW50KSAvICgobnVsbCA9PSBwb2ludDIpID8gKDEgLSBwb2ludDEuX05vZGVCZWdpblBvaW50KSA6IChwb2ludDIuX05vZGVCZWdpblBvaW50IC0gcG9pbnQxLl9Ob2RlQmVnaW5Qb2ludCkpKSAqIHBvaW50MS5fcGF0aExlbmd0aCAvIGN1clNwZWVkOy8v5Yiw6L6+5YGc55WZ54K577yM5omA5raI6ICX55qE5pe26Ze0XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN1cnZpdmFsVGltZSA8PSBzdGF5UGF0aE5vZGVUaW1lKS8v6L+Y5pyq5Yiw6L6+5YGc55WZ6KGM5Li66Lev5Yqy6IqC54K5XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVUaW1lID0gc3Vydml2YWxUaW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHN1cnZpdmFsVGltZSA+IHN0YXlQYXRoTm9kZVRpbWUgJiYgc3Vydml2YWxUaW1lIDw9IHN0YXlQYXRoTm9kZVRpbWUgKyB0aGlzLl9GaXNoQmVoYXZpb3IuX1N0YXlUaW1lKSB7Ly/mraPlnKjmkq3mlL7lgZznlZnooYzkuLpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW92ZVRpbWUgPSBzdGF5UGF0aE5vZGVUaW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLk5ld09uU3RheUJlaGF2aW9yKHN0YXlQYXRoTm9kZVRpbWUgKyB0aGlzLl9GaXNoQmVoYXZpb3IuX1N0YXlUaW1lIC0gc3Vydml2YWxUaW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3Vydml2YWxUaW1lID4gc3RheVBhdGhOb2RlVGltZSArIHRoaXMuX0Zpc2hCZWhhdmlvci5fU3RheVRpbWUpIHsvL+W3sue7j+a4uOi/h+S6huWBnOeVmeihjOS4uui3r+WKsuiKgueCuVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb3ZlVGltZSA9IHN1cnZpdmFsVGltZSAtIHRoaXMuX0Zpc2hCZWhhdmlvci5fU3RheVRpbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8vL2xldCB0cG4gPSAobW92ZVRpbWUgKiBjdXJTcGVlZCkgLyB0aGlzLl9maXNoSW5mby5fbVBhdGhMZW5naHQgKyBjdXJCZWdpblBhdGhOb2RlO1xyXG4gICAgICAgICAgICAgICAgbGV0IG5vZGVQb2ludExlbmd0aCA9ICgobnVsbCA9PSBwb2ludDIpID8gKDEgLSBwb2ludDEuX05vZGVCZWdpblBvaW50KSA6IChwb2ludDIuX05vZGVCZWdpblBvaW50IC0gcG9pbnQxLl9Ob2RlQmVnaW5Qb2ludCkpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHRwbiA9IChtb3ZlVGltZSAqIGN1clNwZWVkKSAvIHBvaW50MS5fcGF0aExlbmd0aCAqIG5vZGVQb2ludExlbmd0aCArIGN1ckJlZ2luUGF0aE5vZGU7XHJcbiAgICAgICAgICAgICAgICAvL2xldCB0cG4gPSAobW92ZVRpbWUgLyBwb2ludDEuX0xpZmVUaW1lKSAqICgobnVsbCA9PSBwb2ludDIpID8gKDEgLSBwb2ludDEuX05vZGVCZWdpblBvaW50KSA6IChwb2ludDIuX05vZGVCZWdpblBvaW50IC0gcG9pbnQxLl9Ob2RlQmVnaW5Qb2ludCkpICsgY3VyQmVnaW5QYXRoTm9kZTtcclxuICAgICAgICAgICAgICAgIGlmICgobnVsbCAhPSBwb2ludDIpICYmIHRwbiA+IHBvaW50Mi5fTm9kZUJlZ2luUG9pbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgdHBuID0gcG9pbnQyLl9Ob2RlQmVnaW5Qb2ludDtcclxuICAgICAgICAgICAgICAgIC8vIC8vIC8vLy8gdGhpcy5fbUN1cnJlbnRTcGVlZCA9IGN1clNwZWVkO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX21BY3R1YWxQYXRoTm9kZSA+IHRwbilcclxuICAgICAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJGaXNoTW9kZWxUeXBlPSBcIiArIHRoaXMuX2Zpc2hJbmZvLl9tRmlzaE1vZGVsVHlwZSArIFwiICBBY3R1YWxQYXRoTm9kZT0gXCIgKyB0aGlzLl9tQWN0dWFsUGF0aE5vZGUgKyBcIiAgdFBhdGhOb2RlPT0gXCIgKyB0cG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgKyBcIiAgbW92ZVRpbWU9PSBcIiArIG1vdmVUaW1lICsgXCIgIGN1ckJlZ2luUGF0aE5vZGU9PSBcIiArIGN1ckJlZ2luUGF0aE5vZGUgKyBcIiAgcG9pbnQuX3BhdGhMZW5ndGg9PSBcIiArIHBvaW50MS5fcGF0aExlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fbUFjdHVhbFBhdGhOb2RlID4gdHBuID8gdGhpcy5fbUFjdHVhbFBhdGhOb2RlIDogdHBuOy8v5om+5Yiw5b2T5YmN5L2N572u77yM5o+Q5YmN57uT5p2f5b6q546vXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgICAgICog5qOA5rWL5piv5ZCm5YGc55WZ5b2T5LitXHJcbiAgICAgICAgICogQHBhcmFtIHBhdGhOb2RlIFxyXG4gICAgICAgICAqIEBwYXJhbSBjdXJUaW1lIFxyXG4gICAgICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIE5ld09uU3RheUJlaGF2aW9yKGN1clRpbWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmICghdGhpcy5fbUlzU3RheSAmJiAhdGhpcy5fbUFscmVhZHlTdGF5KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX21Jc1N0YXkgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLl9tQWxyZWFkeVN0YXkgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLlBsYXlBY3Rpb24oRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLlNIT1cpO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoY3VyVGltZSwgdGhpcywgdGhpcy5OZXdDYW5jZWxTdGF5QmVoYXZpb3IpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICog5Y+W5raI5YGc55WZ6KGM5Li6XHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBOZXdDYW5jZWxTdGF5QmVoYXZpb3IoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fbUlzU3RheSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuUGxheUFjdGlvbihFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUuU1dJTU1JTkcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6bG85Y+X5Ye7XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBIaXR0ZWQoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGlmIChzZWxmLlBsYXlBY3Rpb24oRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLkhJVFRFRCkpIHtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHNlbGYuX0Zpc2hBbmlDbGFzcy5fSGl0VGltZSAqIDEwMDAsIHNlbGYsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNlbGYuUGxheUFjdGlvbihFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUuU1dJTU1JTkcpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOenu+mZpOmxvOWvueixoVxyXG4gICAgICogQHBhcmFtIGlzRGVhZCDpsbzmmK/lkKbmrbvkuqFcclxuICAgICAqL1xyXG4gICAgcHVibGljIFJlbW92ZShpc0RlYWQ6IGJvb2xlYW4sIGJvdW5zOiBudW1iZXIgPSAwLCB1aWQ6IG51bWJlciB8IExvbmcgPSAwLCBkZWFkRmlzaFR5cGU6IEVudW1EYXRhLkZpc2hTdWJ0eXBlID0gLTEpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICAgICAgaWYgKGlzRGVhZCkge1xyXG4gICAgICAgICAgICB0aGlzLkRlYWQoYm91bnMsIHVpZCwgZGVhZEZpc2hUeXBlKTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmZpc2hTb3VuZEhlYWQsIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuZmlzaFR5cGVUb1NvdW5kTnVtKHRoaXMuX2Zpc2hJbmZvLl9tRmlzaFR5cGUpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm1vd25lci5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9tSXNFeGlzdCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBTdGFydE1vdmUoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDEwLCB0aGlzLCB0aGlzLk1vdmluZyk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIFN0b3BNb3ZlKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy5Nb3ZpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBHZXRDdXJUaW1lKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyNyZWdpb24gIOmxvOeahOa4uOWKqOmAu+i+kVxyXG4gICAgcHJvdGVjdGVkIE1vdmluZygpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX21Jc1N0YXkpIHJldHVybjtcclxuICAgICAgICBsZXQgY3VycnR0aW1lID0gdGhpcy5HZXRDdXJUaW1lKCk7XHJcbiAgICAgICAgLy/lnKjov5nmnaHot6/nur/kuIrnmoTnlJ/lrZjml7bpl7RcclxuICAgICAgICBsZXQgc3Vydml2YWxUaW1lID0gMDtcclxuICAgICAgICBpZiAoY3VycnR0aW1lIDwgdGhpcy5fbUN1cnJlbnRDcmVhdGVUaW1lKSB7XHJcbiAgICAgICAgICAgIC8v6L+Z57G76bG85Y+v6IO95piv6LaF5YmNIOaOqOi/h+adpSzlj6rmnInnrYnliLDml7bpl7TliLDmiY3lh7rmnaVcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9tQWN0dWFsUGF0aE5vZGUgPSB0aGlzLkNhbGN1bGF0ZUZpc2hBY3R1YWxQYXRoTm9kZSgpO1xyXG4gICAgICAgIGxldCB0ID0gdGhpcy5fbUFjdHVhbFBhdGhOb2RlO1xyXG5cclxuICAgICAgICAvL+ebkea1i+aYr+WQpuenu+WKqOWIsOWimeWkllxyXG4gICAgICAgIHRoaXMuQ2hlY2tGaXNoT3V0V2FsbCgpO1xyXG4gICAgICAgIC8vLy9EZWJ1Zy5Mb2coc3RyaW5nLkZvcm1hdChcIumAn+W6piA6IHswfSDnlJ/lrZjml7bpl7QgOiB7MX0gIOmVv+W6piA6IHsyfSAgIFQgOiB7M30gXCIsIG1XYXlNb3ZlSW5mby5tU3BlZWQsIHN1cnZpdmFsVGltZSwgbVdheU1vdmVJbmZvLm1QYXRoTGVuZ2h0LCB0KSk7XHJcbiAgICAgICAgaWYgKHQgPj0gMSkge1xyXG4gICAgICAgICAgICBGaXNoQ29udHJvbGxlci5JbnN0YW5jZS5PbkRlYWRGaXNoT3JNb3ZlRW5kKHRoaXMuX2Zpc2hJbmZvLl9tRmlzaElkLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLlN3aW1taW5nU3R5bGUodCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9maXNoSW5mby5fbUZpc2hNb2RlbFR5cGUgPiAyMCkgICAvL3RvZG8g6L+Z6YeM5YaZ5q2755qE5pWw5a2X5b6F5pW055CGIDI45piv5pyA5aSn55qE5qih5Z6L57G75Z6LaWTlgLxcclxuICAgICAgICAgICAgICAgIHRoaXMuU2V0VHJhbnNmb3JtKDEwMCAqICgyOCAtIHRoaXMuX2Zpc2hJbmZvLl9tRmlzaE1vZGVsVHlwZSksIHRoaXMuX2ZpcnN0Q2hpbGQudHJhbnNmb3JtLCB0aGlzLl9jYW1lcmFUcmFucyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuU2V0VHJhbnNmb3JtKDIwMCAqICgyOCAtIHRoaXMuX2Zpc2hJbmZvLl9tRmlzaE1vZGVsVHlwZSksIHRoaXMuX2ZpcnN0Q2hpbGQudHJhbnNmb3JtLCB0aGlzLl9jYW1lcmFUcmFucyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6bG855qE5ri45Yqo5pa55byPXHJcbiAgICAgKiBAcGFyYW0gcGF0aE5vZGUg6Lev5Yqy55m+5YiG5q+UXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBTd2ltbWluZ1N0eWxlKHBhdGhOb2RlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKEJlemllckN1cnZlcnMuR2V0UG9pbnQodGhpcy5fZmlzaEluZm8uX21XYXlQb2ludHMsIHBhdGhOb2RlKSwgdGhpcy5fZmlzaEluZm8uX29mZnNldFBvaW50cywgdGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uKTtcclxuICAgICAgICBsZXQgbG9va0RpcjogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKEJlemllckN1cnZlcnMuR2V0UG9pbnQodGhpcy5fZmlzaEluZm8uX21XYXlQb2ludHMsIHBhdGhOb2RlICsgMC4wMSksIHRoaXMuX2Zpc2hJbmZvLl9vZmZzZXRQb2ludHMsIGxvb2tEaXIpO1xyXG4gICAgICAgIGlmICh0aGlzLl9tSXNTdGF5KVxyXG4gICAgICAgICAgICB0aGlzLm1vd25lci50cmFuc2Zvcm0ubG9va0F0KHRoaXMuX2NhbWVyYVRyYW5zLnVwLCBMYXlhLlZlY3RvcjMuVXAsIGZhbHNlKTtcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy90aGlzLm1vd25lci50cmFuc2Zvcm0ubG9va0F0KGxvb2tEaXIsIExheWEuVmVjdG9yMy5VcCwgZmFsc2UpO1xyXG4gICAgICAgICAgICBpZiAobG9va0Rpci56ID4gdGhpcy5fY2FtZXJhVHJhbnMucG9zaXRpb24ueilcclxuICAgICAgICAgICAgICAgIHRoaXMubW93bmVyLnRyYW5zZm9ybS5sb29rQXQobG9va0RpciwgTGF5YS5WZWN0b3IzLlVwLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMubW93bmVyLnRyYW5zZm9ybS5sb29rQXQobG9va0RpciwgQ29tbW9uQ29uc3RhbnQuRGlyZWN0aW9uVmVjdG9yLkRvd24sIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IG9mZnNldDogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QobG9va0RpciwgdGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLCBvZmZzZXQpO1xyXG4gICAgICAgIHRoaXMubW93bmVyLnRyYW5zZm9ybS50cmFuc2xhdGUob2Zmc2V0LCBmYWxzZSk7XHJcblxyXG4gICAgICAgIGlmIChwYXRoTm9kZSA8IDAuMiAmJiAhdGhpcy5fbUlzV2FybmVkICYmICF0aGlzLkNoZWNrRmlzaENlbnRlclBvc0luV2FsbCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX21Jc1dhcm5lZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuRmlzaFdhcm4oKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpgJrov4flsY/luZXlnZDmoIfmo4DmtYvpsbzmmK/lkKblnKjlsY/luZXlhoVcclxuICAgICAqL1xyXG4gICAgcHVibGljIENoZWNrRmlzaENlbnRlclBvc0luV2FsbCgpIHtcclxuICAgICAgICBsZXQgb3V0UG9zID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAodGhpcy5fY2FtZXJhVHJhbnMub3duZXIgYXMgTGF5YS5DYW1lcmEpLndvcmxkVG9WaWV3cG9ydFBvaW50KHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgb3V0UG9zKTtcclxuICAgICAgICAvLyAodGhpcy5fY2FtZXJhVHJhbnMub3duZXIgYXMgTGF5YS5DYW1lcmEpLnZpZXdwb3J0LnByb2plY3QodGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLCAodGhpcy5fY2FtZXJhVHJhbnMub3duZXIgYXMgTGF5YS5DYW1lcmEpLnByb2plY3Rpb25WaWV3TWF0cml4LCBvdXRQb3MpO1xyXG4gICAgICAgIHJldHVybiBvdXRQb3MueCA+IDUwICYmIG91dFBvcy54IDwgR2FtZUNvbmZpZy53aWR0aCAtIDUwICYmIG91dFBvcy55ID4gNTAgJiYgb3V0UG9zLnkgPCBHYW1lQ29uZmlnLmhlaWdodCAtIDUwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vI2VuZHJlZ2lvblxyXG5cclxuICAgIC8vI3JlZ2lvbiAg5Yqo55S76YC76L6R5o6n5Yi2XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PumxvOeahOWKqOS9nOmAu+i+kTwvc3VtbWFyeT5cclxuICAgIC8vLyA8cGFyYW0gbmFtZT1cImVudW1fZmlzaF9zdGF0ZVwiPjwvcGFyYW0+XHJcbiAgICBwcm90ZWN0ZWQgUGxheUFjdGlvbihlbnVtX2Zpc2hfc3RhdGU6IEVudW1EYXRhLkVOVU1fRklTSF9TVEFURSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICBpZiAobnVsbCA9PSBzZWxmLl9BbmltYXRvciB8fCBudWxsID09IHNlbGYuX0Zpc2hBbmlDbGFzcykgcmV0dXJuO1xyXG4gICAgICAgIGlmIChzZWxmLl9maXNoQWN0aW9uU3RhdGUgPT0gZW51bV9maXNoX3N0YXRlKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgc2VsZi5fZmlzaEFjdGlvblN0YXRlID0gZW51bV9maXNoX3N0YXRlO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKGVudW1fZmlzaF9zdGF0ZSkge1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVOVU1fRklTSF9TVEFURS5TV0lNTUlORzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLlBsYXlBbmltYXRpb24oc2VsZi5fRmlzaEFuaUNsYXNzLl9Td2ltTmFtZSk7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLlNIT1c6Ly/lgZznlZnliqjnlLvvvIjlrInmiI/vvIlcclxuICAgICAgICAgICAgICAgIHNlbGYubW93bmVyLnRyYW5zZm9ybS5sb29rQXQoc2VsZi5fY2FtZXJhVHJhbnMudXAsIExheWEuVmVjdG9yMy5VcCwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYuUGxheUFuaW1hdGlvbihzZWxmLl9GaXNoQW5pQ2xhc3MuX1N0YXlOYW1lKTtcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUuUEFVU0U6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLkhJVFRFRDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLlBsYXlBbmltYXRpb24oc2VsZi5fRmlzaEFuaUNsYXNzLl9IaXROYW1lKTtcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUuREVBVEg6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5QbGF5QW5pbWF0aW9uKHNlbGYuX0Zpc2hBbmlDbGFzcy5fRGVhZE5hbWUpO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgUGxheUFuaW1hdGlvbihhbmlOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoYW5pTmFtZSAmJiBhbmlOYW1lICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgbGV0IGFuaVN0YXRlc01hcCA9IHRoaXMuX0FuaW1hdG9yLmdldENvbnRyb2xsZXJMYXllcigwKS5fc3RhdGVzTWFwO1xyXG4gICAgICAgICAgICBsZXQgYW5pbWF0b3JTdGF0ZTogTGF5YS5BbmltYXRvclN0YXRlID0gYW5pU3RhdGVzTWFwW2FuaU5hbWVdO1xyXG4gICAgICAgICAgICBpZiAoYW5pbWF0b3JTdGF0ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX0FuaW1hdG9yLnBsYXkoYW5pTmFtZSk7XHJcbiAgICAgICAgICAgIC8vIHRoaXMuX0FuaW1hdG9yLmNyb3NzRmFkZShhbmlOYW1lLCAwLjUpOy8v5L2/55So6L+Z5Liq5o6l5Y+j5aW95YOP5Lya6YCg5oiQ6bG86Zeq55qEYnVnXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vLyA8c3VtbWFyeT7psbzlj5fnjqnlrrbmlLvlh7vmrbvkuqE8L3N1bW1hcnk+XHJcbiAgICBwcml2YXRlIERlYWQoYm91bnM6IG51bWJlciwgdWlkOiBudW1iZXIgfCBMb25nID0gMCwgZGVhZEZpc2hUeXBlOiBFbnVtRGF0YS5GaXNoU3VidHlwZSA9IC0xKTogdm9pZCB7XHJcbiAgICAgICAgLy/ooqvngq7lvLnmiZPmrbvnmoTmmK/psbznjosv54K45by56bG8XHJcbiAgICAgICAgaWYgKGRlYWRGaXNoVHlwZSAhPSAtMSkgLy9cclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9maXNoSW5mby5fbUZpc2hUeXBlID09IGRlYWRGaXNoVHlwZSkgLy/mnKzpsbzmmK/ngrjlvLnpsbwv6bG8546LXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlmIChCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5nU2hvb3RNb2RlbCA9PSBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfQVVUTyAmJiBOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQodWlkKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goR2FtZUV2ZW50LkhVTlRfSFVOVEVERklTSCwgW2JvdW5zLCB0aGlzLl9maXNoSW5mby5fbUZpc2hUeXBlXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5nU2hvb3RNb2RlbCA9PSBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfQVVUTyAmJiBOZXRMb2dpbi5JbnN0YW5jZS5Jc1NlbGZVaWQodWlkKSkge1xyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuSFVOVF9IVU5URURGSVNILCBbYm91bnMsIHRoaXMuX2Zpc2hJbmZvLl9tRmlzaFR5cGVdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5QbGF5QWN0aW9uKEVudW1EYXRhLkVOVU1fRklTSF9TVEFURS5ERUFUSCk7XHJcbiAgICAgICAgLy90b2RvIOS4jeiDveebtOaOpeWIoOmZpO+8jOW+heWGmeatu+S6oeihqOeOsFxyXG4gICAgICAgIExheWEudGltZXIub25jZSh0aGlzLl9GaXNoQW5pQ2xhc3MuX0RlYWRUaW1lICogMTAwMCwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLm1vd25lci5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8vI2VuZHJlZ2lvblxyXG5cclxuICAgIC8vI3JlZ2lvbiDpsbznmoR66L206K6h566X77yM6Ziy5q2i6bG86YeN5Y+g56m/5o+SXHJcblxyXG4gICAgcHJvdGVjdGVkIFNldFRyYW5zZm9ybShuZXdaUG9zOiBudW1iZXIsIHRyYW5zOiBMYXlhLlRyYW5zZm9ybTNELCBjYW1UcmFuczogTGF5YS5UcmFuc2Zvcm0zRCk6IHZvaWQge1xyXG4gICAgICAgIC8v5rGC5Ye65LiO5pGE5YOP5py655qE5pa55ZCR5Y2V5L2N5ZCR6YePXHJcbiAgICAgICAgbGV0IGRpck5vcm1hbDogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygxLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QodGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLCBjYW1UcmFucy5wb3NpdGlvbiwgZGlyTm9ybWFsKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMubm9ybWFsaXplKGRpck5vcm1hbCwgZGlyTm9ybWFsKTtcclxuICAgICAgICAvL+axguWHuuaWsOS9jee9rnrovbTliLDmkYTlg4/mnLrot53nprvkuI7njrDmnInkvY3nva566L205Yiw5pGE5YOP5py66Led56a755qE5q+U546HXHJcbiAgICAgICAgbGV0IHRyYXRlOiBudW1iZXIgPSAobmV3WlBvcyAtIGNhbVRyYW5zLnBvc2l0aW9uLnopIC8gKHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbi56IC0gY2FtVHJhbnMucG9zaXRpb24ueik7XHJcbiAgICAgICAgbGV0IGFuZ2VsOiBudW1iZXIgPSBMYXlhLlZlY3RvcjMuZG90KGRpck5vcm1hbCwgTGF5YS5WZWN0b3IzLkZvcndhcmRSSCk7XHJcbiAgICAgICAgLy9sZXQgdGFuZ2xlID0gTWF0aC5hY29zKGFuZ2VsKTsvLyoxODA7XHJcbiAgICAgICAgbGV0IGRpcyA9IChuZXdaUG9zIC0gdGhpcy5tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLnopIC8gYW5nZWw7Ly9NYXRoLmNvcyh0YW5nbGUpOy8vIChNYXRoLmNvcygodGFuZ2xlLzE4MCkgKiBNYXRoLlBJKSk7XHJcblxyXG4gICAgICAgIGxldCB0c2NhbGU6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKHRoaXMuX2luaXRpYWxGaXJzdENoaWxkU2NhbGUsIHRyYXRlLCB0c2NhbGUpO1xyXG4gICAgICAgIHRyYW5zLmxvY2FsU2NhbGUgPSB0c2NhbGU7XHJcblxyXG4gICAgICAgIGxldCBkaXJWZWMzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoZGlyTm9ybWFsLCBNYXRoLmFicyhkaXMpLCBkaXJWZWMzKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyVmVjMywgdHJhbnMucG9zaXRpb24pO1xyXG4gICAgICAgIHRyYW5zLnBvc2l0aW9uID0gdHJhbnMucG9zaXRpb247XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uXHJcblxyXG5cclxuICAgIHB1YmxpYyBDaGVja0Zpc2hPdXRXYWxsKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9NRmlzaEluZm8uX21GaXNoSWQudG9TdHJpbmcoKSA9PSBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5Mb2NrZWRGaXNoSUQudG9TdHJpbmcoKSkge1xyXG4gICAgICAgICAgICBsZXQgb3V0UG9zID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAgICAgKHRoaXMuX2NhbWVyYVRyYW5zLm93bmVyIGFzIExheWEuQ2FtZXJhKS52aWV3cG9ydC5wcm9qZWN0KHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgKHRoaXMuX2NhbWVyYVRyYW5zLm93bmVyIGFzIExheWEuQ2FtZXJhKS5wcm9qZWN0aW9uVmlld01hdHJpeCwgb3V0UG9zKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBvZmZzZXQgPSB0aGlzLkdldEZpc2hTaXplKCkgLyAyO1xyXG4gICAgICAgICAgICBpZiAob3V0UG9zLnggPiBHYW1lQ29uZmlnLndpZHRoICsgb2Zmc2V0IHx8IG91dFBvcy54IDwgLW9mZnNldCB8fFxyXG4gICAgICAgICAgICAgICAgb3V0UG9zLnkgPiBHYW1lQ29uZmlnLmhlaWdodCArIG9mZnNldCB8fCBvdXRQb3MueSA8IC1vZmZzZXQpIHtcclxuICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkxvY2tlZEZpc2hJRCA9IDA7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmAmui/h+Wxj+W5leWdkOagh+ajgOa1i+mxvOaYr+WQpuWcqOWxj+W5leWGhVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQ2hlY2tJc0Zpc2hJbldhbGwoKSB7XHJcbiAgICAgICAgbGV0IG91dFBvcyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgKHRoaXMuX2NhbWVyYVRyYW5zLm93bmVyIGFzIExheWEuQ2FtZXJhKS52aWV3cG9ydC5wcm9qZWN0KHRoaXMubW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgKHRoaXMuX2NhbWVyYVRyYW5zLm93bmVyIGFzIExheWEuQ2FtZXJhKS5wcm9qZWN0aW9uVmlld01hdHJpeCwgb3V0UG9zKTtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gdGhpcy5HZXRGaXNoU2l6ZSgpIC8gMjtcclxuXHJcbiAgICAgICAgaWYgKG91dFBvcy54ID4gR2FtZUNvbmZpZy53aWR0aCArIG9mZnNldCB8fCBvdXRQb3MueCA8IC1vZmZzZXQgfHxcclxuICAgICAgICAgICAgb3V0UG9zLnkgPiBHYW1lQ29uZmlnLmhlaWdodCArIG9mZnNldCB8fCBvdXRQb3MueSA8IC1vZmZzZXQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5qih5Z6LeOi9tOmVv+W6puWkp+Wwj++8iOaooeWei+avlOi+g+Wwj+eahOmxvOW/veeVpeS4jeiuoe+8iVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgR2V0RmlzaFNpemUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgR2V0UmVsYXRlZEZpc2hzSWQoKTogKG51bWJlciB8IExvbmcpW10ge1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmxvOmihOitplxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgRmlzaFdhcm4oKTogdm9pZCB7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IHsgRmlzaEJhc2VDb25maWcgfSBmcm9tIFwiLi4vLi4vY29uZmlnL0Zpc2hCYXNlQ29uZmlnXCI7XHJcblxyXG4vKipcclxuICog6YeN5paw5a6a5LmJ6KGo57uT5p6E57G7RmlzaEJhc2VDb25maWfvvIzmlrnkvr/nqIvluo/osIPnlKjlpITnkIZcclxuICovXHJcbmV4cG9ydCBtb2R1bGUgRmlzaEJhc2VDb25maWdEYXRhIHtcclxuICAgIC8qKiDpsbzot6/lirLoioLngrnmlbDmja7nsbsqL1xyXG4gICAgZXhwb3J0IGNsYXNzIFBhdGhOb2RlSW5mbyB7XHJcbiAgICAgICAgLyoqIOmxvOafkOautei3r+WKsueahOiKgueCuei1t+Wni+eCuSovXHJcbiAgICAgICAgcHVibGljIF9Ob2RlQmVnaW5Qb2ludDogbnVtYmVyO1xyXG4gICAgICAgIC8qKiDpsbzmn5DmrrXot6/lirLnmoTnp7vliqjpgJ/njocqL1xyXG4gICAgICAgIHB1YmxpYyBfU3BlZWRSYXRlOiBudW1iZXI7XHJcbiAgICAgICAgLyoqIOmxvOafkOautei3r+WKsueahOeUn+WRveaXtumVvyovXHJcbiAgICAgICAgcHVibGljIF9MaWZlVGltZTogbnVtYmVyID0gMDtcclxuICAgICAgICAvKiog6bG85p+Q5q616Lev5Yqy55qE6Lev56iL6ZW/5bqmKi9cclxuICAgICAgICBwdWJsaWMgX3BhdGhMZW5ndGg6IG51bWJlcjtcclxuICAgIH1cclxuXHJcbiAgICAvKiog6bG855qE6KGM5Li65pWw5o2u57G7Ki9cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoQmVoYXZpb3Ige1xyXG4gICAgICAgIC8qKiDlgZznlZnooYzkuLrnmoTotbflp4voioLngrkqL1xyXG4gICAgICAgIHB1YmxpYyBfU3RheVBhdGg6IG51bWJlciA9IDA7XHJcbiAgICAgICAgLyoqIOWBnOeVmeihjOS4uueahOaXtumVvyovXHJcbiAgICAgICAgcHVibGljIF9TdGF5VGltZTogbnVtYmVyID0gMDtcclxuICAgICAgICAvKiog5a2Y5pS+6Lev5b6E6IqC54K56YCf546H77yI5LiL5qCH5Li65YG25pWw55qE5piva2V55YC86Lev5Yqy5Y2g5q+U77yM5LiL5qCH5Li65aWH5pWw55qE5pivdmFsdWXkuLrpgJ/njofvvIzpobrluo/nm7jpgrvnmoTkuKTkuKrkuLrkuIDnu4TvvIkqL1xyXG4gICAgICAgIHB1YmxpYyBfUGF0aE5vZGVTcGVlZDogQXJyYXk8UGF0aE5vZGVJbmZvPiA9IG5ldyBBcnJheTxQYXRoTm9kZUluZm8+KCk7XHJcbiAgICAgICAgLyoqIOmxvOeahOeUn+WRveaAu+aXtumVvyovXHJcbiAgICAgICAgcHVibGljIF9GaXNoVG90YWxMaWZ0VGltZTogbnVtYmVyID0gMDtcclxuICAgIH1cclxuXHJcbiAgICAvKiog6bG855qE5Yqo5L2c5pWw5o2u57G7Ki9cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoQW5pQ2xhc3Mge1xyXG4gICAgICAgIC8v5Yqo55S75ZCNXHJcbiAgICAgICAgcHVibGljIF9Td2ltTmFtZTogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBfSGl0TmFtZTogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBfRGVhZE5hbWU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgX1N0YXlOYW1lOiBzdHJpbmc7XHJcbiAgICAgICAgLy/liqjnlLvogJfml7ZcclxuICAgICAgICBwdWJsaWMgX0hpdFRpbWU6IG51bWJlcjtcclxuICAgICAgICBwdWJsaWMgX0RlYWRUaW1lOiBudW1iZXI7XHJcbiAgICAgICAgcHVibGljIF9TdGF5VGltZTogbnVtYmVyO1xyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoU3dpbUNvbmZpZyB7XHJcbiAgICAgICAgLyoqIOmxvOeahOihjOS4uuaVsOaNruWIl+ihqO+8iGtleeS4uumxvOexu+Wei0lEO3ZhbHVl5Li66bG86KGM5Li657G777yJKi9cclxuICAgICAgICBwdWJsaWMgc3RhdGljIF9GaXNoQmVoYXZpb3JEaWN0OiBMYXlhLldlYWtPYmplY3QgPSBuZXcgTGF5YS5XZWFrT2JqZWN0KCk7XHJcbiAgICAgICAgLyoqIOmxvOeahOWKqOS9nOaVsOaNruWIl+ihqO+8iGtleeS4uumxvOexu+Wei0lEO3ZhbHVl5Li66bG85Yqo5L2c57G777yJKi9cclxuICAgICAgICBwdWJsaWMgc3RhdGljIF9GaXNoQW5pbWF0ZURpY3Q6IExheWEuV2Vha09iamVjdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuXHJcbiAgICAgICAgLyoqIOmFjee9ruaVsOaNrumihOWkhOeQhu+8jOaWueS+v+iwg+eUqCovXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBQYXJzZUZpc2hCZWhhdmlvckRhdGEoKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHRoaXMuX0Zpc2hCZWhhdmlvckRpY3QgPSBuZXcgTGF5YS5XZWFrT2JqZWN0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX0Zpc2hBbmltYXRlRGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICAgICAgbGV0IGRpY3QgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkNvbmZpZ01uZy5GaXNoQmFzZUNvbmZpZztcclxuICAgICAgICAgICAgZm9yIChsZXQgaXRlcmF0b3IgaW4gZGljdCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkaWN0W2l0ZXJhdG9yXTtcclxuICAgICAgICAgICAgICAgIGxldCBmYmMgPSBuZXcgRmlzaEJhc2VDb25maWcoZWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3RheSA9IGZiYy5fU3RhdHlCZWhhdmlvcjtcclxuICAgICAgICAgICAgICAgIGxldCBzdGF5RGF0YSA9IHN0YXkuc3BsaXQoJywnKTtcclxuICAgICAgICAgICAgICAgIGxldCBzcGVlZCA9IGZiYy5fU3BlZWRCZWhhdmlvcjtcclxuICAgICAgICAgICAgICAgIC8v5ri45Yqo6KGM5Li6IOWBnOeVmSAg5ZKMIOmAn+W6puWPmOWMllxyXG4gICAgICAgICAgICAgICAgbGV0IGZpc2hCZWhhdmlvciA9IG5ldyBGaXNoQmVoYXZpb3IoKTtcclxuICAgICAgICAgICAgICAgIGlmIChzdGF5RGF0YS5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlzaEJlaGF2aW9yLl9TdGF5UGF0aCA9IE51bWJlcihzdGF5RGF0YVswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlzaEJlaGF2aW9yLl9TdGF5VGltZSA9IE51bWJlcihzdGF5RGF0YVsxXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKFwiXCIgIT0gc3BlZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3BlZWREYXRhID0gc3BlZWQuc3BsaXQoJ3wnKTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNwZWVkRGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3BlZWRUZW1wID0gc3BlZWREYXRhW2ldLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0aW5mbzogUGF0aE5vZGVJbmZvID0gbmV3IFBhdGhOb2RlSW5mbygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW5mby5fTm9kZUJlZ2luUG9pbnQgPSBOdW1iZXIoc3BlZWRUZW1wWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGluZm8uX1NwZWVkUmF0ZSA9IE51bWJlcihzcGVlZFRlbXBbMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaXNoQmVoYXZpb3IuX1BhdGhOb2RlU3BlZWQucHVzaCh0aW5mbyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmlzaEJlaGF2aW9yRGljdC5zZXQoZmJjLl9GaXNoVHlwZUlELCBmaXNoQmVoYXZpb3IpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8v5Yqo55S7XHJcbiAgICAgICAgICAgICAgICBsZXQgYW5pQ2xhc3MgPSBuZXcgRmlzaEFuaUNsYXNzKCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3dpbUFuaSA9IGZiYy5fU3dpbUFuaTtcclxuICAgICAgICAgICAgICAgIGxldCBkZWFkQW5pID0gZmJjLl9EZWFkQW5pLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgaGl0QW5pID0gZmJjLl9IaXRBbmkuc3BsaXQoJywnKTtcclxuICAgICAgICAgICAgICAgIGxldCBzdGF5QW5pID0gZmJjLl9TdGF5QW5pMS5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgICAgICAgYW5pQ2xhc3MuX1N3aW1OYW1lID0gc3dpbUFuaTtcclxuICAgICAgICAgICAgICAgIGlmIChkZWFkQW5pLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbmlDbGFzcy5fRGVhZE5hbWUgPSBkZWFkQW5pWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaUNsYXNzLl9EZWFkVGltZSA9IE51bWJlcihkZWFkQW5pWzFdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChoaXRBbmkubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaUNsYXNzLl9IaXROYW1lID0gaGl0QW5pWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaUNsYXNzLl9IaXRUaW1lID0gTnVtYmVyKGhpdEFuaVsxXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoc3RheUFuaS5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5pQ2xhc3MuX1N0YXlOYW1lID0gc3RheUFuaVswXTtcclxuICAgICAgICAgICAgICAgICAgICBhbmlDbGFzcy5fU3RheVRpbWUgPSBOdW1iZXIoc3RheUFuaVsxXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GaXNoQW5pbWF0ZURpY3Quc2V0KGZiYy5fRmlzaFR5cGVJRCwgYW5pQ2xhc3MpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDlpI3liLbpsbzooYzkuLrmlbDmja5cclxuICAgICAgICAgKiBAcGFyYW0gdHlwZSDpsbzop4TmoLznsbvlnotJRFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgQ29weUZpc2hCZWhhdmlvckRhdGEodHlwZTogbnVtYmVyKSB7XHJcbiAgICAgICAgICAgIGxldCBmYjogRmlzaEJlaGF2aW9yID0gbmV3IEZpc2hCZWhhdmlvcigpO1xyXG4gICAgICAgICAgICBsZXQgZmJkOiBGaXNoQmVoYXZpb3IgPSBGaXNoU3dpbUNvbmZpZy5fRmlzaEJlaGF2aW9yRGljdC5nZXQodHlwZSk7XHJcbiAgICAgICAgICAgIGZiLl9TdGF5UGF0aCA9IGZiZC5fU3RheVBhdGg7XHJcbiAgICAgICAgICAgIGZiLl9TdGF5VGltZSA9IGZiZC5fU3RheVRpbWU7XHJcbiAgICAgICAgICAgIGZiLl9QYXRoTm9kZVNwZWVkID0gbmV3IEFycmF5PFBhdGhOb2RlSW5mbz4oKTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGZiZC5fUGF0aE5vZGVTcGVlZC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBmYmQuX1BhdGhOb2RlU3BlZWRbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgbGV0IHRwbmkgPSBuZXcgUGF0aE5vZGVJbmZvKCk7XHJcbiAgICAgICAgICAgICAgICB0cG5pLl9Ob2RlQmVnaW5Qb2ludCA9IGVsZW1lbnQuX05vZGVCZWdpblBvaW50O1xyXG4gICAgICAgICAgICAgICAgdHBuaS5fU3BlZWRSYXRlID0gZWxlbWVudC5fU3BlZWRSYXRlO1xyXG4gICAgICAgICAgICAgICAgZmIuX1BhdGhOb2RlU3BlZWQucHVzaCh0cG5pKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBGaXNoQmFzZUNvbmZpZ0RhdGEiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBXYXlNb3ZlSW5mbyB7XHJcbiAgICAvKiog6bG855qESUQqL1xyXG4gICAgcHVibGljIF9tRmlzaElkOiBudW1iZXIgfCBMb25nO1xyXG4gICAgLyoqIOmxvOexu+WeiyovXHJcbiAgICBwdWJsaWMgX21GaXNoVHlwZTogbnVtYmVyO1xyXG4gICAgLyoqIOmxvOWvueW6lOaooeWei+exu+WeiyovXHJcbiAgICBwdWJsaWMgX21GaXNoTW9kZWxUeXBlOiBudW1iZXI7XHJcbiAgICAvKiog5piv5ZCm5Y+v5Lul56e75YqoKi9cclxuICAgIHB1YmxpYyBfbUNhbk1vdmU6IGJvb2xlYW47XHJcbiAgICAvKiog56e75Yqo6YCf5bqmKi9cclxuICAgIHB1YmxpYyBfbVNwZWVkOiBudW1iZXI7XHJcbiAgICAvKiog6Lev5b6ESUQqL1xyXG4gICAgcHVibGljIF9tUGF0aElkOiBudW1iZXI7XHJcbiAgICAvKiog6Lev5b6E6ZW/5bqmKi9cclxuICAgIHB1YmxpYyBfbVBhdGhMZW5naHQ6IG51bWJlcjtcclxuICAgIC8qKiDooqvlhrDlhrvml7bpl7QqL1xyXG4gICAgcHVibGljIF9tRm9yemVuVGltZTogbnVtYmVyO1xyXG4gICAgLyoqIOi3r+W+hOexu+Wei++8iOmxvOmYtSDmlaPpsbwgYm9zcyAuLi7vvIkqL1xyXG4gICAgcHVibGljIF9tV2F5VHlwZTogbnVtYmVyO1xyXG4gICAgLyoqIOmxvOeahOWHuueUn+aXtumXtCovXHJcbiAgICBwdWJsaWMgX21GaXNoQ3JlYXRlVGltZTogbnVtYmVyO1xyXG4gICAgLyoqIOmxvOaYr+WQpuiiq+WGsOWGuyovXHJcbiAgICBwdWJsaWMgX21Jc0ZyZWV6bjogYm9vbGVhbjtcclxuICAgIC8qKiDpsbzot6/lvoTlhbPplK7oioLngrkqL1xyXG4gICAgcHVibGljIF9tV2F5UG9pbnRzOiBMYXlhLlZlY3RvcjNbXTtcclxuICAgIC8qKiDot6/lvoTlgY/np7sqL1xyXG4gICAgcHVibGljIF9vZmZzZXRQb2ludHM6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAvKiog6bG855qE6KeE5qC8Ki9cclxuICAgIHB1YmxpYyBfbU1vZGVsOiBudW1iZXI7XHJcbn0iLCJpbXBvcnQgRmlzaEluZm8gZnJvbSBcIi4vRmlzaEluZm9cIjtcclxuaW1wb3J0IHsgRmlzaEJhc2UgfSBmcm9tIFwiLi9GaXNoQmFzZVwiO1xyXG5pbXBvcnQgRmlzaENvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvRmlzaENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0TG9naW5cIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5tb2R1bGUgSEYzREZpc2hDbGFzc2VzIHtcclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDEgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDIgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDMgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDQgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDUgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMDYgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDA3IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDA4IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDA5IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG5cclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTAgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTEgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTIgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTMgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTQgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMTUgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDE2IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJvdGVjdGVkIEdldEZpc2hTaXplKCk6IG51bWJlciB7XHJcbiAgICAgICAgICAgIHJldHVybiBDb21tb25Db25zdGFudC5PdXRXYWxsT2Zmc2V0X3NoYXJrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDE3IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDE4IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDE5IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDIwIGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgICAgICAvLyB0aGlzLl9maXJzdENoaWxkLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCA1MDApO1xyXG4gICAgICAgICAgICAvL3RoaXMuX2ZpcnN0Q2hpbGQudHJhbnNmb3JtLmxvY2FsU2NhbGUgPSBuZXcgTGF5YS5WZWN0b3IzKDUxLCA1MSwgNTEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcm90ZWN0ZWQgR2V0RmlzaFNpemUoKTogbnVtYmVyIHtcclxuICAgICAgICAgICAgcmV0dXJuIENvbW1vbkNvbnN0YW50Lk91dFdhbGxPZmZzZXRfc2hhcms7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMjEgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMjIgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMjMgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgKiDpsbzpooToraZcclxuICAgICAgKi9cclxuICAgICAgICBwcm90ZWN0ZWQgRmlzaFdhcm4oKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkZpc2hXYXJuKCk7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLndhcm5TaG93KHRoaXMuX2Zpc2hJbmZvLl9tRmlzaFR5cGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcm90ZWN0ZWQgR2V0RmlzaFNpemUoKTogbnVtYmVyIHtcclxuICAgICAgICAgICAgcmV0dXJuIENvbW1vbkNvbnN0YW50Lk91dFdhbGxPZmZzZXRfc2hhcms7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMjQgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaXNoMjUgZXh0ZW5kcyBGaXNoQmFzZSB7XHJcbiAgICAgICAgSW5pdChmaXNoSW5mbzogRmlzaEluZm8pOiB2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuSW5pdChmaXNoSW5mbyk7XHJcbiAgICAgICAgICAgIExheWEudGltZXIubG9vcCg2MDAwLCB0aGlzLCB0aGlzLlBsYXlTd2ltbWluZ0FjdGlvbjIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLy8gPHN1bW1hcnk+6bG855qE5Yqo5L2c6YC76L6RPC9zdW1tYXJ5PlxyXG4gICAgICAgIC8vLyA8cGFyYW0gbmFtZT1cImVudW1fZmlzaF9zdGF0ZVwiPjwvcGFyYW0+XHJcbiAgICAgICAgcHJvdGVjdGVkIFBsYXlBY3Rpb24oZW51bV9maXNoX3N0YXRlOiBFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUpOiBib29sZWFuIHtcclxuICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgICAgICBpZiAobnVsbCA9PSBzZWxmLl9BbmltYXRvciB8fCBudWxsID09IHNlbGYuX0Zpc2hBbmlDbGFzcykgcmV0dXJuO1xyXG4gICAgICAgICAgICAvLy8vICAgaWYgKHNlbGYuX2Zpc2hBY3Rpb25TdGF0ZSA9PSBlbnVtX2Zpc2hfc3RhdGUpIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgc2VsZi5fZmlzaEFjdGlvblN0YXRlID0gZW51bV9maXNoX3N0YXRlO1xyXG5cclxuICAgICAgICAgICAgc3dpdGNoIChlbnVtX2Zpc2hfc3RhdGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLlNXSU1NSU5HOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLlBsYXlBbmltYXRpb24oc2VsZi5fRmlzaEFuaUNsYXNzLl9Td2ltTmFtZSk7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVOVU1fRklTSF9TVEFURS5TSE9XOi8v5YGc55WZ5Yqo55S777yI5ayJ5oiP77yJXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5tb3duZXIudHJhbnNmb3JtLmxvb2tBdChzZWxmLl9jYW1lcmFUcmFucy51cCwgTGF5YS5WZWN0b3IzLlVwLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYuUGxheUFuaW1hdGlvbihzZWxmLl9GaXNoQW5pQ2xhc3MuX1N0YXlOYW1lKTtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLlBBVVNFOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRU5VTV9GSVNIX1NUQVRFLkhJVFRFRDpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5QbGF5QW5pbWF0aW9uKHNlbGYuX0Zpc2hBbmlDbGFzcy5fSGl0TmFtZSk7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVOVU1fRklTSF9TVEFURS5ERUFUSDpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5QbGF5QW5pbWF0aW9uKHNlbGYuX0Zpc2hBbmlDbGFzcy5fRGVhZE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvdGVjdGVkIFBsYXlBbmltYXRpb24oYW5pTmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgICAgIGlmIChhbmlOYW1lICYmIGFuaU5hbWUgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgbGV0IGFuaVN0YXRlc01hcCA9IHRoaXMuX0FuaW1hdG9yLmdldENvbnRyb2xsZXJMYXllcigwKS5fc3RhdGVzTWFwO1xyXG4gICAgICAgICAgICAgICAgbGV0IGFuaW1hdG9yU3RhdGU6IExheWEuQW5pbWF0b3JTdGF0ZSA9IGFuaVN0YXRlc01hcFthbmlOYW1lXTtcclxuICAgICAgICAgICAgICAgIGlmIChhbmltYXRvclN0YXRlKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX0FuaW1hdG9yLmNyb3NzRmFkZShhbmlOYW1lLCAwLjUpOy8v5L2/55So6L+Z5Liq5o6l5Y+j5aW95YOP5Lya6YCg5oiQ6bG86Zeq55qEYnVnXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiDpsbzpooToraZcclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgcHJvdGVjdGVkIEZpc2hXYXJuKCk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5GaXNoV2FybigpO1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy53YXJuU2hvdyh0aGlzLl9maXNoSW5mby5fbUZpc2hUeXBlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByb3RlY3RlZCBHZXRGaXNoU2l6ZSgpOiBudW1iZXIge1xyXG4gICAgICAgICAgICByZXR1cm4gQ29tbW9uQ29uc3RhbnQuT3V0V2FsbE9mZnNldF9tZXJtYWlkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJvdGVjdGVkIFBsYXlTd2ltbWluZ0FjdGlvbjIoKSB7XHJcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICAgICAgaWYgKHNlbGYuUGxheUFuaW1hdGlvbihcIlN3aW0yXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMzAwMCwgc2VsZiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuUGxheUFjdGlvbihFbnVtRGF0YS5FTlVNX0ZJU0hfU1RBVEUuU1dJTU1JTkcpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2gyNiBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgKiDpsbzpooToraZcclxuICAgICAgICovXHJcbiAgICAgICAgcHJvdGVjdGVkIEZpc2hXYXJuKCk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5GaXNoV2FybigpO1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy53YXJuU2hvdyh0aGlzLl9maXNoSW5mby5fbUZpc2hUeXBlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByb3RlY3RlZCBHZXRGaXNoU2l6ZSgpOiBudW1iZXIge1xyXG4gICAgICAgICAgICByZXR1cm4gQ29tbW9uQ29uc3RhbnQuT3V0V2FsbE9mZnNldF9zaGlwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOeCuOW8uemxvCovXHJcbiAgICBleHBvcnQgY2xhc3MgRmlzaDI3IGV4dGVuZHMgRmlzaEJhc2Uge1xyXG4gICAgICAgIEluaXQoZmlzaEluZm86IEZpc2hJbmZvKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLkluaXQoZmlzaEluZm8pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoq6I635Y+W5bGP5bmV5Lit77yM6IO96KKr54K45by56bG854K45Yiw55qE6bG8Ki9cclxuICAgICAgICBwdWJsaWMgR2V0UmVsYXRlZEZpc2hzSWQoKTogKG51bWJlciB8IExvbmcpW10ge1xyXG4gICAgICAgICAgICBsZXQgZ2V0RmlzaFJhdGUgPSBmdW5jdGlvbiAodHlwZTogbnVtYmVyKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpc2hJbmZvLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpc2hJbmZvW2ldLmZpc2hfdHlwZSA9PSB0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmaXNoSW5mb1tpXS5maXNoX3JhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgcmVsYXRlZEZpc2hzSWRBcnI6IEFycmF5PG51bWJlciB8IExvbmc+ID0gW107XHJcbiAgICAgICAgICAgIGxldCBmaXNoT2JqRGljID0gRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuRmlzaE9iakRpY3Q7XHJcbiAgICAgICAgICAgIGxldCBmaXNoSW5mbyA9IE5ldExvZ2luLkluc3RhbmNlLl9wbGF5ZXJMb2dpbkluZm8uZmlzaF9pbmZvO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gZmlzaE9iakRpYykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGlzSW5XYWxsID0gZmlzaE9iakRpY1trZXldLkNoZWNrSXNGaXNoSW5XYWxsKCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgdHlwZSA9IGZpc2hPYmpEaWNba2V5XS5fTUZpc2hJbmZvLl9tRmlzaFR5cGU7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmF0ZSA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKGdldEZpc2hSYXRlKHR5cGUpKTtcclxuICAgICAgICAgICAgICAgIGlmIChyYXRlIDw9IDMwICYmIGlzSW5XYWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVsYXRlZEZpc2hzSWRBcnIucHVzaChmaXNoT2JqRGljW2tleV0uX01GaXNoSW5mby5fbUZpc2hJZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlbGF0ZWRGaXNoc0lkQXJyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2hLaW5nMSBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2hLaW5nMiBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2hLaW5nMyBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2hLaW5nNCBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpc2hLaW5nNSBleHRlbmRzIEZpc2hCYXNlIHtcclxuICAgICAgICBJbml0KGZpc2hJbmZvOiBGaXNoSW5mbyk6IHZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5Jbml0KGZpc2hJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgSEYzREZpc2hDbGFzc2VzOyIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBHYW1lRXZlbnQgZnJvbSBcIi4uL2NvbnN0YW50L0dhbWVFdmVudFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBMb2FkaW5nUGFuZWwgZnJvbSBcIi4vUGFuZWwvTG9hZGluZ1BhbmVsXCI7XHJcbmltcG9ydCBHYW1lTWFuZ2VyIGZyb20gXCIuLi9tYW5hZ2VyL0dhbWVNYW5nZXJcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVN0YXJ0IHtcclxuICAgIHByaXZhdGUgbV9zY2VuZTNEOiBMYXlhLlNjZW5lM0Q7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkluaXQoKTtcclxuICAgICAgICB0aGlzLkxvYWRMb2FkaW5nUmVzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpooTlhYjliqDovb0gbG9hZGluZyDnlYzpnaLotYTmupBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBMb2FkTG9hZGluZ1JlcygpIHtcclxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChcclxuICAgICAgICAgICAgW3sgdXJsOiBDb21tb25Db25zdGFudC5fZnVpTG9hZGluZ1BhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpTG9hZGluZ1BhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9sb2FkaW5nQmdQYXRoLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aUhlbHBQYXRoLmltYWdlLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aUhlbHBQYXRoLmZ1aSwgdHlwZTogTGF5YS5Mb2FkZXIuQlVGRkVSIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlDb21tb25VSVBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpQ29tbW9uVUlQYXRoLmZ1aSwgdHlwZTogTGF5YS5Mb2FkZXIuQlVGRkVSIH1dLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlMb2FkaW5nUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAgICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlIZWxwUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAgICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlIYWxsUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAgICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlDb21tb25VSVBhdGguUGFja2FnZSk7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkVudGVySGFsbFNjZW5lKHNlbGYuR2FtZUVudGVyLmJpbmQoc2VsZikpO1xyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov57mjqXmnI3liqHlmahcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHYW1lRW50ZXIoKSB7XHJcbiAgICAgICAgd2luZG93W1wiZ19SZW1vdmVTcGxhc2hcIl0oKTtcclxuICAgICAgICB0aGlzLnJlZ2lzdEV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5zdGFydENvbm5lY3QoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHJpdmF0ZSByZWdpc3RFdmVudCgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5BZGRFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhcnRDb25uZWN0KCk6IHZvaWQge1xyXG5cclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJzdGFydENvbm5lY3RcIik7XHJcbiAgICAgICAgbGV0IEdhbWVNbmcgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmc7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuY29ubmVuY3QoR2FtZU1uZy5zZXJ2ZXJJcCwgR2FtZU1uZy5zZXJ2ZXJQb3J0LCBFbnVtRGF0YS5FbnVtU29ja2V0VHlwZS5HQU1FLCBHYW1lTW5nLnRva2VuKTtcclxuICAgIH1cclxufSIsImltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IEZpc2hDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0Zpc2hDb250cm9sbGVyXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgQnVsbGV0QmFzZSBmcm9tIFwiLi4vQnVsbGV0L0J1bGxldEJhc2VcIjtcclxuaW1wb3J0IE5ldFJvb20gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRSb29tXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgSHVudFNjZW5lTWFuYWdlciBmcm9tIFwiLi4vLi4vbWFuYWdlci9IdW50U2NlbmVNYW5hZ2VyXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgSHVudFBhbmVsIGZyb20gXCIuLi9QYW5lbC9IdW50UGFuZWxcIjtcclxuaW1wb3J0IENhbm5vbkNvbmZpZyBmcm9tIFwiLi4vLi4vY29uZmlnL0Nhbm5vbkNvbmZpZ1wiO1xyXG5pbXBvcnQgV2FsbGV0UGFuZWwgZnJvbSBcIi4uL1BhbmVsL1dhbGxldFBhbmVsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG4vKipcclxuICog54Ku5Y+wXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW5ub24ge1xyXG4gICAgcHJpdmF0ZSBtX2d1bk11bHRpTGFiZWw6IGZhaXJ5Z3VpLkdMYWJlbDtcclxuICAgIHByaXZhdGUgbV9ndW46IGZhaXJ5Z3VpLkdMb2FkZXI7XHJcbiAgICBwcml2YXRlIG1fZ3VuTm9kZTogZmFpcnlndWkuR0ltYWdlO1xyXG4gICAgcHJpdmF0ZSBtX3dhaXRJbWc6IGZhaXJ5Z3VpLkdJbWFnZTsgLy/nrYnlvoXliqDlhaVpbWdcclxuICAgIHByaXZhdGUgbV91c2VyTmFtZUxhYmVsOiBMYXlhLkxhYmVsO1xyXG4gICAgcHJpdmF0ZSBtX2NvaW5OdW1Gb250OiBMYXlhLkZvbnRDbGlwO1xyXG4gICAgcHJpdmF0ZSBtX3VzZXJMZXZlbEZvbnQ6IExheWEuRm9udENsaXA7XHJcbiAgICBwcml2YXRlIG1fd2FsbGV0Qm50OiBMYXlhLkltYWdlO1xyXG4gICAgcHJpdmF0ZSBtX2Nhbm5vbjogZmFpcnlndWkuR0NvbXBvbmVudDtcclxuICAgIHByaXZhdGUgbV9sb3NlQnRuOiBmYWlyeWd1aS5HQnV0dG9uO1xyXG4gICAgcHJpdmF0ZSBtX2FkZEJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgbV9jb2luRW5kUG9zOiBMYXlhLlZlY3RvcjM7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2d1bk11bHRpSW5kZXg6IG51bWJlcjsgLy/ngrnlh7vmjInpkq7nmoTntKLlvJUg57Sv5YqgIDHvvIwy77yMM++8jDTvvIw177yMNu+8jDfvvIw477yMOVxyXG4gICAgcHJpdmF0ZSBtX2d1bkdwb3M6IExheWEuUG9pbnQ7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2d1bjNkRGljOiBMYXlhLldlYWtPYmplY3QgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBtX2d1bjNEOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgcHJpdmF0ZSBtX2Jhc2VCZzogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9pbmZvOiBMYXlhLkltYWdlO1xyXG4gICAgcHJpdmF0ZSBtX2d1bjNETm9kZTogTGF5YS5Ob2RlO1xyXG4gICAgcHJpdmF0ZSBtX2d1bkJ1bGxldFBvczogTGF5YS5WZWN0b3IzO1xyXG4gICAgcHJpdmF0ZSBtX3NjZW5lM0Q6IExheWEuU2NlbmUzRDtcclxuICAgIHByaXZhdGUgbV9jaGFuZ2VFZmZlY3Q6IExheWEuU3ByaXRlM0Q7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2RhdGE6IFJvb21Nc2cuSXJvb21fcm9sZV9pbmZvID0gbnVsbDtcclxuICAgIHB1YmxpYyBtX3Bvc2l0aW9uOiBudW1iZXI7IC8v54Ku5Y+w55qE5L2N572uXHJcbiAgICBwdWJsaWMgbV9iSW52ZXJzaW9uOiBib29sZWFuOyAvL+eCruWPsOaYr+WQpuWAkue9rlxyXG4gICAgcHJpdmF0ZSBtX2N1ckd1bjNESW5kZXg6IG51bWJlcjsgLy8zZOeCrueahOe0ouW8lVxyXG4gICAgcHJpdmF0ZSBtX3dhbGxlbnRCdG5Nb25pdG9yOiBMYXlhLkltYWdlO1xyXG5cclxuICAgIHB1YmxpYyBnZXQgQ29pbkVuZFBvcygpOiBMYXlhLlZlY3RvcjMge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1fY29pbkVuZFBvcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IEd1bjNEKCk6IExheWEuU3ByaXRlM0Qge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1fZ3VuM0Q7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZ2V0IEd1bigpOiBmYWlyeWd1aS5HTG9hZGVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tX2d1bjtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgR3VuR3BvcygpOiBMYXlhLlZlY3RvcjMge1xyXG4gICAgICAgIHJldHVybiBuZXcgTGF5YS5WZWN0b3IzKHRoaXMubV9ndW5HcG9zLngsIHRoaXMubV9ndW5HcG9zLnksIDApO1xyXG4gICAgfVxyXG4gICAgcHVibGljIGdldCBEYXRhKCk6IFJvb21Nc2cuSXJvb21fcm9sZV9pbmZvIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tX2RhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IoY2Fubm9uLCBpbmZvOiBmYWlyeWd1aS5HQ29tcG9uZW50LCB3YWl0SW1nLCBpbmRleCkge1xyXG4gICAgICAgIHRoaXMubV9ndW5NdWx0aUluZGV4ID0gMDtcclxuICAgICAgICB0aGlzLm1fY3VyR3VuM0RJbmRleCA9IDA7XHJcbiAgICAgICAgdGhpcy5tX2RhdGEgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLm1fd2FpdEltZyA9IHdhaXRJbWc7XHJcbiAgICAgICAgdGhpcy5tX2Nhbm5vbiA9IGNhbm5vbjtcclxuXHJcbiAgICAgICAgbGV0IGNvbnRyb2xsZXIgPSBjYW5ub24uZ2V0Q29udHJvbGxlcihcImMxXCIpO1xyXG4gICAgICAgIHRoaXMubV9iSW52ZXJzaW9uID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKGluZGV4ID49IDIpIHsgLy8wfjNcclxuICAgICAgICAgICAgdGhpcy5tX2JJbnZlcnNpb24gPSB0cnVlO1xyXG4gICAgICAgICAgICBjb250cm9sbGVyLnNlbGVjdGVkSW5kZXggPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1fcG9zaXRpb24gPSBpbmRleDtcclxuXHJcbiAgICAgICAgLy8gY29udHJvbGxlciA9IHRoaXMubV9pbmZvLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICAvLyBpZiAoaW5kZXggJSAyID09IDApIHtcclxuICAgICAgICAvLyAgICAgY29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gMTtcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIC8v54Ku5Y+w5bqV5bqn5Li6bGF5YeeahFVJ77yM54Ku5L2/55SoM2TotYTmupBcclxuICAgICAgICBsZXQgZnVpQmFzZUJnID0gKGNhbm5vbi5nZXRDaGlsZChcIkJhc2VCZ1wiKSBhcyBmYWlyeWd1aS5HSW1hZ2UpO1xyXG4gICAgICAgIGZ1aUJhc2VCZy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tX2d1biA9IGNhbm5vbi5nZXRDaGlsZChcIkd1blwiKS5hc0xvYWRlcjtcclxuICAgICAgICB0aGlzLm1fZ3VuLnZpc2libGUgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgbGV0IGZ1aUJhc2VCZ1BvcyA9IHRoaXMubV9jYW5ub24ubG9jYWxUb0dsb2JhbChmdWlCYXNlQmcueCwgZnVpQmFzZUJnLnkpO1xyXG4gICAgICAgIHRoaXMubV9iYXNlQmcgPSBuZXcgTGF5YS5JbWFnZShDb21tb25Db25zdGFudC5fYmFzZUJnUGF0aCk7IC8v54Ku55qE5bqV5bqnXHJcbiAgICAgICAgdGhpcy5tX2Jhc2VCZy5hbmNob3JYID0gMC41O1xyXG4gICAgICAgIHRoaXMubV9iYXNlQmcuYW5jaG9yWSA9IDAuNTtcclxuICAgICAgICB0aGlzLm1fYmFzZUJnLnBvcyhmdWlCYXNlQmdQb3MueCwgZnVpQmFzZUJnUG9zLnkpO1xyXG4gICAgICAgIGxldCBodW50UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkdldFBhbmVsQnlJZChFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkh1bnRQYW5lbCkgYXMgSHVudFBhbmVsO1xyXG4gICAgICAgIGh1bnRQYW5lbC5tX2xheWFVSU5vZGUuYWRkQ2hpbGQodGhpcy5tX2Jhc2VCZyk7XHJcbiAgICAgICAgLy8vLyB0aGlzLm1fZ3VuM0ROb2RlID0gaHVudFBhbmVsLm1fZ3VuU2NlbmUzRDtcclxuICAgICAgICAvL3RoaXMubV9ndW4zRE5vZGUgPSBodW50UGFuZWwubV9hd2FyZFNjZW5lM0Q7XHJcblxyXG4gICAgICAgIC8v54Ku5Y+w5Yqg5YeP5oyJ6ZKuXHJcbiAgICAgICAgdGhpcy5tX2xvc2VCdG4gPSBjYW5ub24uZ2V0Q2hpbGQoXCJMb3NlQnRuXCIpO1xyXG4gICAgICAgIHRoaXMubV9sb3NlQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5Pbkxvc3NCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX2xvc2VCdG4ub25DbGljayh0aGlzLCB0aGlzLnBsYXlTb3VuZENoYW5nZUd1bik7XHJcbiAgICAgICAgdGhpcy5tX2FkZEJ0biA9IGNhbm5vbi5nZXRDaGlsZChcIkFkZEJ0blwiKTtcclxuICAgICAgICB0aGlzLm1fYWRkQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PbkFkZEJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fYWRkQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5wbGF5U291bmRDaGFuZ2VHdW4pO1xyXG4gICAgICAgIHRoaXMubV9ndW5NdWx0aUxhYmVsID0gY2Fubm9uLmdldENoaWxkKFwiR3VuUG93ZXJMYWJlbFwiKS5hc0xhYmVsO1xyXG5cclxuICAgICAgICAvL+eCruWPsOaXgeeahOS/oeaBr+ahhiDnlKhsYXlh5Yib5bu6XHJcbiAgICAgICAgaW5mby52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IG5hbWVQb3MgPSBuZXcgTGF5YS5Qb2ludCgyNywgMjUpO1xyXG4gICAgICAgIC8vbGV0IG5hbWVQb3MgPSBuZXcgTGF5YS5Qb2ludCg0NCwgMjUpO1xyXG4gICAgICAgIGxldCBjb2luRm9udFBvcyA9IG5ldyBMYXlhLlBvaW50KDI3LCA2Nik7XHJcbiAgICAgICAgbGV0IGxldmVsRm9udCA9IG5ldyBMYXlhLlBvaW50KDIsIDIzKTtcclxuICAgICAgICBsZXQgY29pbkltZ1BvcyA9IG5ldyBMYXlhLlBvaW50KDE4LCA3NCk7XHJcbiAgICAgICAgbGV0IGxldmVsRm9udEJnUG9zID0gbmV3IExheWEuUG9pbnQoMjIsIDM1KTtcclxuICAgICAgICBsZXQgd2FsbGV0QnRuUG9zID0gbmV3IExheWEuUG9pbnQoMTk2LCA3Nik7XHJcbiAgICAgICAgaWYgKGluZGV4ICUgMiA9PSAxKSB7XHJcbiAgICAgICAgICAgIC8vbmFtZVBvcyA9IG5ldyBMYXlhLlBvaW50KDExLCAyNSk7XHJcbiAgICAgICAgICAgIGNvaW5Gb250UG9zID0gbmV3IExheWEuUG9pbnQoMTQsIDY2KTtcclxuICAgICAgICAgICAgbGV2ZWxGb250ID0gbmV3IExheWEuUG9pbnQoMTc2LCAyMyk7XHJcbiAgICAgICAgICAgIGNvaW5JbWdQb3MgPSBuZXcgTGF5YS5Qb2ludCgxOTEsIDc1KTtcclxuICAgICAgICAgICAgbGV2ZWxGb250QmdQb3MgPSBuZXcgTGF5YS5Qb2ludCgxOTYsIDM1KTtcclxuICAgICAgICAgICAgd2FsbGV0QnRuUG9zID0gbmV3IExheWEuUG9pbnQoMjIsIDc2KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tX2luZm8gPSB1dGlscy5Db21tb25VdGlscy5DcmVhdExheWFJbWcoQ29tbW9uQ29uc3RhbnQuX2luZm9GcmFtZSwgbmV3IExheWEuUG9pbnQoaW5mby54LCBpbmZvLnkpLCBodW50UGFuZWwubV9sYXlhVUlOb2RlLCAwLCAwKTsvL+eCruWPsOS/oeaBr+W6leahhlxyXG4gICAgICAgIGxldCBsYWJlbEJnID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9pbmZvTGFiZWxCZywgbmV3IExheWEuUG9pbnQoNCwgMjEpLCB0aGlzLm1faW5mbywgMCwgMCk7Ly/njqnlrrbmmLXnp7DlupXmoYZcclxuICAgICAgICB0aGlzLm1fdXNlck5hbWVMYWJlbCA9IHV0aWxzLkNvbW1vblV0aWxzLkNyZWF0TGF5YUxhYmVsKG5hbWVQb3MsIDE2MSwgdGhpcy5tX2luZm8sIDIyKTsvL+eOqeWutuaYteensFxyXG4gICAgICAgIHRoaXMubV91c2VyTmFtZUxhYmVsLmNvbG9yID0gXCIjRkZGRkZGXCI7XHJcbiAgICAgICAgbGV0IGxldmVsRm9udEJnID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9pbmZvTGV2ZWxCZywgbGV2ZWxGb250QmdQb3MsIHRoaXMubV9pbmZvKTsvL+eOqeWutuetiee6p+W6leahhlxyXG4gICAgICAgIHRoaXMubV91c2VyTGV2ZWxGb250ID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRGb250Q2xpcChsZXZlbEZvbnQsIENvbW1vbkNvbnN0YW50Ll9sZXZlbEZvbnQsIFwiKissLS4vMDEyMzQ1Njc4OVwiLCB0aGlzLm1faW5mbywgNTEpOy8v562J57qnXHJcbiAgICAgICAgdGhpcy5tX3VzZXJMZXZlbEZvbnQuc2NhbGUoMC44LCAwLjgpO1xyXG4gICAgICAgIGxldmVsRm9udEJnLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm1fdXNlckxldmVsRm9udC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IGNvaW5Gb250QmcgPSB1dGlscy5Db21tb25VdGlscy5DcmVhdExheWFJbWcoQ29tbW9uQ29uc3RhbnQuX2luZm9MYWJlbEJnLCBuZXcgTGF5YS5Qb2ludCg0LCA2MCksIHRoaXMubV9pbmZvLCAwLCAwKTsvL+mHkeW4geaVsOWtl+W6leahhlxyXG4gICAgICAgIGxldCBjb2luSW1nID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9pbmZvQ29pbiwgY29pbkltZ1BvcywgdGhpcy5tX2luZm8pOy8v6YeR5biBaWNvblxyXG4gICAgICAgIHRoaXMubV9jb2luTnVtRm9udCA9IHV0aWxzLkNvbW1vblV0aWxzLkNyZWF0Rm9udENsaXAoY29pbkZvbnRQb3MsIENvbW1vbkNvbnN0YW50Ll9jb2luRm9udCwgXCIuLDAxMjM0NTY3ODlcIiwgdGhpcy5tX2luZm8sIDE3Myk7Ly/ph5HluIHmlbDlrZdcclxuICAgICAgICB0aGlzLm1fd2FsbGV0Qm50ID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9pbmZvV2FsbGVudCwgd2FsbGV0QnRuUG9zLCB0aGlzLm1faW5mbyk7Ly/ph5HluIFpY29uXHJcbiAgICAgICAgdGhpcy5tX3dhbGxlbnRCdG5Nb25pdG9yID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9pbmZvV2FsbGVudCwgbmV3IExheWEuUG9pbnQod2FsbGV0QnRuUG9zLnggKyB0aGlzLm1faW5mby54LCB3YWxsZXRCdG5Qb3MueSArIHRoaXMubV9pbmZvLnkpLCBMYXlhLnN0YWdlKTsvL+mHkeW4gWljb25cclxuICAgICAgICB0aGlzLm1fd2FsbGVudEJ0bk1vbml0b3IuYWxwaGEgPSAwO1xyXG4gICAgICAgIHRoaXMubV93YWxsZW50QnRuTW9uaXRvci5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuT25XYWxsZXRCdG5DbGljayk7XHJcblxyXG4gICAgICAgIHRoaXMubV9ndW5HcG9zID0gdGhpcy5tX2Nhbm5vbi5sb2NhbFRvR2xvYmFsKHRoaXMubV9ndW4ueCwgdGhpcy5tX2d1bi55KTtcclxuICAgICAgICB2YXIgZW5kUG9zID0gdGhpcy5tX2luZm8ubG9jYWxUb0dsb2JhbChuZXcgTGF5YS5Qb2ludChjb2luSW1nLngsIGNvaW5JbWcueSkpO1xyXG4gICAgICAgIHRoaXMubV9jb2luRW5kUG9zID0gbmV3IExheWEuVmVjdG9yMyhlbmRQb3MueCwgZW5kUG9zLnksIDApO1xyXG5cclxuICAgICAgICB0aGlzLm1fY2hhbmdlRWZmZWN0ID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuSW5zdGFudGlhdGVFZmZlY3QoQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZUVmZmVjdEFycmF5LkNoYW5nZUNhbm5vbkVmZmVjdCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEluaXRHdW4zRCgpIHtcclxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMubV9ndW4zZERpYyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9ndW4zZERpYyA9IG5ldyBMYXlhLldlYWtPYmplY3Q7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBwcmVmYWIgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5HZXRDYW5ub25QcmVmYWIoaSArIDEpO1xyXG4gICAgICAgICAgICBpZiAobnVsbCA9PSBwcmVmYWIpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGxldCBjbG9uZUluczogTGF5YS5TcHJpdGUzRCA9IExheWEuU3ByaXRlM0QuaW5zdGFudGlhdGUocHJlZmFiLCBwcmVmYWIucGFyZW50KTtcclxuICAgICAgICAgICAgLy9jbG9uZUlucy5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICBjbG9uZUlucy50cmFuc2Zvcm0ucG9zaXRpb24gPSB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0d1blNjZW5lQ2FtZXJhLCB0aGlzLkd1bkdwb3MpO1xyXG4gICAgICAgICAgICBjbG9uZUlucy50cmFuc2Zvcm0ucm90YXRpb25FdWxlciA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgICAgIHRoaXMubV9ndW4zZERpYy5zZXQoaSwgY2xvbmVJbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1fZ3VuM0QgPSB0aGlzLm1fZ3VuM2REaWMuZ2V0KDApIGFzIExheWEuU3ByaXRlM0Q7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLm1fYkludmVyc2lvbikge1xyXG4gICAgICAgICAgICB0aGlzLm1fYmFzZUJnLnNjYWxlWSA9IC0xO1xyXG4gICAgICAgICAgICB0aGlzLm1fZ3VuM0QudHJhbnNmb3JtLnJvdGF0aW9uRXVsZXIgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDE4MCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgT25Mb3NzQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgdGhpcy5tX2d1bk11bHRpSW5kZXggPSAodGhpcy5tX2d1bk11bHRpSW5kZXggPD0gMCkgPyBOZXRSb29tLkluc3RhbmNlLl9jdXJSb29tSW5mby5iYXR0ZXJ5Lmxlbmd0aCAtIDEgOiB0aGlzLm1fZ3VuTXVsdGlJbmRleCAtIDE7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5DaGFuZ2VCYXR0ZXJ5UmVxKHRoaXMubV9ndW5NdWx0aUluZGV4LCBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mby5yb2xlSWQpO1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlR3VuQnlTZWxmKHRoaXMubV9ndW5NdWx0aUluZGV4KTtcclxuXHJcbiAgICB9XHJcbiAgICBwcml2YXRlIE9uQWRkQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgdGhpcy5tX2d1bk11bHRpSW5kZXggPSAodGhpcy5tX2d1bk11bHRpSW5kZXggPj0gTmV0Um9vbS5JbnN0YW5jZS5fY3VyUm9vbUluZm8uYmF0dGVyeS5sZW5ndGggLSAxKSA/IDAgOiB0aGlzLm1fZ3VuTXVsdGlJbmRleCArIDE7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5DaGFuZ2VCYXR0ZXJ5UmVxKHRoaXMubV9ndW5NdWx0aUluZGV4LCBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mby5yb2xlSWQpO1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlR3VuQnlTZWxmKHRoaXMubV9ndW5NdWx0aUluZGV4KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5YWN6L2s5oyJ6ZKu54K55Ye7XHJcbiAgICAgKiDmnIDpq5jlsYLnmoRmdWnkuI3og73ngrnlh7vnqb/pgI/vvIzmiYDku6Xngq7lj7Dkv6Hmga/moYbkuIrnmoTlhY3ovazmjInpkq7kuI3og73op6blj5Hlk43lupTvvIzlj6rog73otbfliLDkuIDkuKrmmL7npLrlip/og73vvIzlm6DmraTlnKhzdGFnZeS4iua3u+WKoGxheWHlr7nosaF3YWxsZW50QnRuTW9uaXRvcuadpeebkea1i+WTjeW6lFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE9uV2FsbGV0QnRuQ2xpY2soZTogTGF5YS5FdmVudCkge1xyXG4gICAgICAgIHN3aXRjaCAoZS50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgTGF5YS5FdmVudC5NT1VTRV9ET1dOOlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5iUHJvaGliaXRXYWxsZXRCdG4gJiYgdGhpcy5tX3dhbGxldEJudC52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BBdXRvQXR0YWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BMb2NrQXR0YWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuV2FsbGV0TW5nLm1haW5XYWxsZXRSZXEoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5pKt5pS+5pS55Y+Y54Ku5Y+w5aOw6Z+zXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcGxheVNvdW5kQ2hhbmdlR3VuKCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLmNoYW5nZUd1bik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBDaGFuZ2VHdW5CeVNlcnZlKCkge1xyXG4gICAgICAgIHRoaXMubV9ndW5NdWx0aUxhYmVsLnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZCh0aGlzLm1fZGF0YS5idWxsZXRfbXVsdGkgKiBOZXRSb29tLkluc3RhbmNlLl9jdXJSb29tSW5mby5hbnRlKS50b1N0cmluZygpOyAvL+WtkOW8ueWAjeeOh1xyXG4gICAgICAgIGxldCBidWxsZXRSZXNJRCA9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkdldEJhdHRlcnlSZXNJZEJ5TXVsdGkodGhpcy5tX2RhdGEuYnVsbGV0X211bHRpKSAtIDE7XHJcbiAgICAgICAgLy90aGlzLm1fZ3VuLnVybCA9IENvbW1vbkNvbnN0YW50Ll9wcmVIdW50ZXJQYXRoICsgQ29tbW9uQ29uc3RhbnQuX2d1blBpY0FycltidWxsZXRSZXNJRF07XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VHdW4oYnVsbGV0UmVzSUQpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBDaGFuZ2VHdW5CeVNlbGYoaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIGxldCBtdWx0aSA9IE5ldFJvb20uSW5zdGFuY2UuX2N1clJvb21JbmZvLmJhdHRlcnlbdGhpcy5tX2d1bk11bHRpSW5kZXhdO1xyXG4gICAgICAgIHRoaXMubV9kYXRhLmJ1bGxldF9tdWx0aSA9IG11bHRpOyAvL+WuouaIt+err+abtOaWsOiHqui6q+eCruWPsOWAjeeOh1xyXG4gICAgICAgIHRoaXMubV9ndW5NdWx0aUxhYmVsLnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZChtdWx0aSAqIE5ldFJvb20uSW5zdGFuY2UuX2N1clJvb21JbmZvLmFudGUpLnRvU3RyaW5nKCk7IC8v5a2Q5by55YCN546HXHJcbiAgICAgICAgbGV0IGJ1bGxldFJlc0lEID0gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuR2V0QmF0dGVyeVJlc0lkQnlNdWx0aShtdWx0aSkgLSAxO1xyXG4gICAgICAgIC8vdGhpcy5tX2d1bi51cmwgPSBDb21tb25Db25zdGFudC5fcHJlSHVudGVyUGF0aCArIENvbW1vbkNvbnN0YW50Ll9ndW5QaWNBcnJbYnVsbGV0UmVzSURdO1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlR3VuKGJ1bGxldFJlc0lEKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIENoYW5nZUd1bihpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIHJvdGF0ZVogPSB0aGlzLm1fZ3VuM0QudHJhbnNmb3JtLnJvdGF0aW9uRXVsZXIuejtcclxuICAgICAgICBpZiAoaW5kZXggIT0gdGhpcy5tX2N1ckd1bjNESW5kZXgpIHtcclxuICAgICAgICAgICAgdGhpcy5tX2d1bjNELmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLm1fZ3VuM0QgPSB0aGlzLm1fZ3VuM2REaWMuZ2V0KGluZGV4KSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgICAgICB0aGlzLm1fZ3VuM0QuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5tX2d1bjNELnRyYW5zZm9ybS5yb3RhdGlvbkV1bGVyID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCByb3RhdGVaKTtcclxuICAgICAgICAgICAgdGhpcy5tX2N1ckd1bjNESW5kZXggPSBpbmRleDtcclxuICAgICAgICAgICAgdGhpcy5tX2NoYW5nZUVmZmVjdC50cmFuc2Zvcm0ucG9zaXRpb24gPSB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0d1blNjZW5lQ2FtZXJhLCBuZXcgTGF5YS5WZWN0b3IzKHRoaXMubV9ndW5HcG9zLngsIHRoaXMubV9ndW5HcG9zLnksIDApKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMubV9jaGFuZ2VFZmZlY3QuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMubV9jaGFuZ2VFZmZlY3QuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5tX2NoYW5nZUVmZmVjdC50cmFuc2Zvcm0ubG9jYWxQb3NpdGlvblogPSAtMjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUGxheUFuaW1hdGlvbihDYW5ub25Db25maWcuX0lkbGVBbmkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gaWYoIUJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fYnNob290KVxyXG4gICAgICAgIC8vIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5QbGF5QW5pbWF0aW9uKENhbm5vbkNvbmZpZy5fSWRsZUFuaSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgR2V0QnVsbGV0UG9zKCkge1xyXG4gICAgICAgIHZhciBvdXRQb3MgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIC8vTGF5YS5WZWN0b3IzLmFkZCgodGhpcy5tX2d1bjNELmdldENoaWxkQnlOYW1lKFwiQnVsbGV0UG9zXCIpIGFzIExheWEuU3ByaXRlM0QpLnRyYW5zZm9ybS5wb3NpdGlvbiwgdGhpcy5tX2d1bjNELnRyYW5zZm9ybS5wb3NpdGlvbiwgb3V0UG9zKTtcclxuICAgICAgICAvL3RoaXMubV9ndW5CdWxsZXRQb3MgPSBvdXRQb3M7XHJcbiAgICAgICAgdmFyIHdvcmxkUG9zID0gKHRoaXMubV9ndW4zRC5nZXRDaGlsZEJ5TmFtZShcIkJ1bGxldFBvc1wiKSBhcyBMYXlhLlNwcml0ZTNEKS50cmFuc2Zvcm0ucG9zaXRpb247XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0d1blNjZW5lQ2FtZXJhLndvcmxkVG9WaWV3cG9ydFBvaW50KHdvcmxkUG9zLCBvdXRQb3MpO1xyXG4gICAgICAgIHJldHVybiB1dGlscy5Db21tb25VdGlscy5TY3JlZW5Ub1dvcmxkUG9pbnQoR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX0h1bnRTY2VuZUNhbWVyYSwgb3V0UG9zKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLy8jcmVnaW9uIOWtkOW8uemAu+i+kVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yib5bu65a2Q5by5XHJcbiAgICAgKiBAcGFyYW0gZGF0YSDlrZDlvLnmlbDmja5cclxuICAgICAqL1xyXG4gICAgcHVibGljIENyZWF0ZUJ1bGxldChkYXRhOiBSb29tTXNnLnNob290X2J1bGxldF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHRTdGFydFBvcyA9IHRoaXMuR2V0QnVsbGV0UG9zKCk7XHJcbiAgICAgICAgbGV0IHRTdGFydEFuZ2xlID0gdGhpcy5HZXRHdW5BbmdsZShkYXRhLCB0U3RhcnRQb3MpO1xyXG4gICAgICAgIHRoaXMuR3VuM0QudHJhbnNmb3JtLnJvdGF0aW9uRXVsZXIgPSB0U3RhcnRBbmdsZTsgLy/liJvlu7rlrZDlvLnkuYvliY3vvIzlhYjlkIzmraXlpb3ngq7lj7Dop5LluqZcclxuICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIkNyZWF0ZUJ1bGxldCBkYXRhID0gXCIsIGRhdGEpO1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICB0aGlzLlBsYXlBbmltYXRpb24oQ2Fubm9uQ29uZmlnLl9BdHRhY2tBbmkpO1xyXG4gICAgICAgIHRoaXMuUGxheUF0dGFja0ZpcmUoKTtcclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMC4zICogMTAwMCwgdGhpcywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzZWxmLlBsYXlBbmltYXRpb24oQ2Fubm9uQ29uZmlnLl9JZGxlQW5pKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBpZiAoIShkYXRhLmZpc2hpZCA+IDAgJiYgRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuRmlzaE9iakRpY3QuaGFzKGRhdGEuZmlzaGlkKSkpXHJcbiAgICAgICAgLy8gICAgIHJldHVybjsvL+WtkOW8uemUgeWumuS6huS4gOS4quS4jeWtmOWcqOeahOmxvFxyXG4gICAgICAgIGlmIChkYXRhLnVpZC50b1N0cmluZygpID09IE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpKSB7XHJcbiAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgKz0gMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuRkdOdW1Gb250KGRhdGEuamV0dG9uc2hvdyBhcyBudW1iZXIsIGRhdGEudWlkKTtcclxuICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuSXNTZWxmVWlkKGRhdGEudWlkKSkge1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5mZ1dhbGxldFZhbHVlQWZ0ZXJTaG9vdCA9IGRhdGEuamV0dG9uc2hvdyBhcyBudW1iZXI7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgbGV0IGJ1bGxldFJlc0lEID0gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuR2V0QmF0dGVyeVJlc0lkQnlNdWx0aShkYXRhLm11bHRpKTtcclxuICAgICAgICBsZXQgYnVsbGV0ID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuSW5zdGFudGlhdGVCdWxsZXQoYnVsbGV0UmVzSUQpO1xyXG4gICAgICAgIGJ1bGxldC50cmFuc2Zvcm0ucm90YXRpb25FdWxlciA9IHRTdGFydEFuZ2xlOy8vdGhpcy5HZXRCdWxsZXRSb3RhdGUoZGF0YS5hbmdlbCk7XHJcbiAgICAgICAgdGhpcy5wbGF5U291bmRTaG9vdChidWxsZXRSZXNJRCk7XHJcbiAgICAgICAgLy9idWxsZXQudHJhbnNmb3JtLnBvc2l0aW9uID0gQ29tbW9uQ29uc3RhbnQuUG9zVmVjdG9yW3RoaXMubV9kYXRhLnBvc2l0aW9uIC0gMV07XHJcblxyXG4gICAgICAgIC8vYnVsbGV0LnRyYW5zZm9ybS5wb3NpdGlvbiA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fSHVudFNjZW5lQ2FtZXJhLCB0aGlzLm1fZ3VuQnVsbGV0UG9zKTtcclxuICAgICAgICBidWxsZXQudHJhbnNmb3JtLnBvc2l0aW9uID0gdFN0YXJ0UG9zOy8vdGhpcy5HZXRCdWxsZXRQb3MoKTtcclxuICAgICAgICAoYnVsbGV0LmdldENoaWxkQXQoMCkgYXMgTGF5YS5TcHJpdGUzRCkudHJhbnNmb3JtLmxvY2FsUG9zaXRpb24gPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIGxldCBidWxsZXRTY3JpcHQgPSBidWxsZXQuZ2V0Q29tcG9uZW50KEJ1bGxldEJhc2UpIGFzIEJ1bGxldEJhc2U7XHJcbiAgICAgICAgYnVsbGV0U2NyaXB0LkluaXREYXRhKGRhdGEuYnVsbGV0aWQsIGRhdGEubXVsdGksIGJ1bGxldFJlc0lELCBkYXRhLmZpc2hpZCwgZGF0YS51aWQsIGRhdGEuZmlzaGlkKTtcclxuICAgICAgICAvL2J1bGxldFNjcmlwdC5TdGFydE1vdmluZygpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflvpfngq7lj7Dop5LluqZcclxuICAgICAqIEBwYXJhbSBkYXRhIOWtkOW8ueaVsOaNrlxyXG4gICAgICogQHBhcmFtIGJlZ2luUG9zIOi1t+Wni+S9jee9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEdldEd1bkFuZ2xlKGRhdGE6IFJvb21Nc2cuc2hvb3RfYnVsbGV0X3Jlc3AsIGJlZ2luUG9zOiBMYXlhLlZlY3RvcjMpOiBMYXlhLlZlY3RvcjMge1xyXG4gICAgICAgIGlmIChudWxsICE9IGRhdGEpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGEuZmlzaGlkICE9IDApIHtcclxuICAgICAgICAgICAgICAgIGxldCBsb2NrZWRGaXNoID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuR2V0RmlzaFBvaW50QnlJZChkYXRhLmZpc2hpZC50b1N0cmluZygpKTsvL0Zpc2hDb250cm9sbGVyLkluc3RhbmNlLkZpc2hPYmpEaWN0W2RhdGEuZmlzaGlkLnRvU3RyaW5nKCldO1xyXG4gICAgICAgICAgICAgICAgaWYgKG51bGwgIT0gbG9ja2VkRmlzaCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVXBkYXRlQW5nbGVCeVBvcyhsb2NrZWRGaXNoLngsIGxvY2tlZEZpc2gueSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5HZXRCdWxsZXRSb3RhdGUodGhpcy5VcGRhdGVBbmdsZUJ5UG9zKGxvY2tlZEZpc2gueCwgbG9ja2VkRmlzaC55KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuR2V0QnVsbGV0Um90YXRlKGRhdGEuYW5nZWwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKiDngq7lj7Ag5a2Q5by555qE6KeS5bqmKi9cclxuICAgIHByaXZhdGUgR2V0QnVsbGV0Um90YXRlKGFuZ2VsOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gbmV3IExheWEuVmVjdG9yMygwLCAwLCAodGhpcy5tX2JJbnZlcnNpb24gPyAxODAgOiAwKSArIGFuZ2VsKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5pu05pawZmfpkrHljIUqL1xyXG4gICAgcHJpdmF0ZSBGR051bUZvbnQodmFsdWU6IG51bWJlciwgdWlkOiBudW1iZXIgfCBMb25nKSB7XHJcbiAgICAgICAgdGhpcy5tX2NvaW5OdW1Gb250LnZhbHVlID0gKHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKHZhbHVlKSkudG9GaXhlZCgyKTsgLy/ph5HluIHmlbBcclxuICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuSXNTZWxmVWlkKHVpZCkpIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcuc2V0RmdXYWxsZXRWYWx1ZSh2YWx1ZSk7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy51c2VyQ2hpcHMgPSB2YWx1ZTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qC55LqO5a2Q5by557G75Z6L5pKt5pS+5aOw6Z+zXHJcbiAgICAgKiBAcGFyYW0gbnVtIOWtkOW8ueexu+Wei1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHBsYXlTb3VuZFNob290KG51bTogbnVtYmVyKSB7XHJcbiAgICAgICAgc3dpdGNoIChudW0pIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIuc2hvb3QxKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5zaG9vdDIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLnNob290Myk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIEdldEJ1dHRsZVBvcyhhbmdlbDogbnVtYmVyKSB7XHJcbiAgICAgICAgLy8gaWYgKHRoaXMubV9kYXRhLnBvc2l0aW9uID4gMikge1xyXG4gICAgICAgIC8vICAgICBhbmdlbCA9IDE4MCArIGFuZ2VsO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBsZXQgeCA9IE1hdGguc2luKGFuZ2VsKSoxLjA0ODsgLy/ljYrlvoTkuLo2MFxyXG4gICAgICAgIC8vIGxldCB5ID0gTWF0aC5jb3MoYW5nZWwpKjEuMDQ4O1xyXG4gICAgICAgIC8vIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLWFuZ2VsID0gXCIgKyBhbmdlbCk7XHJcbiAgICAgICAgLy8gdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0teCA9IFwiICsgeCk7XHJcbiAgICAgICAgLy8gdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0teSA9IFwiICsgeSk7XHJcbiAgICAgICAgLy8gbGV0IHBvc0NlbnRlciA9IENvbW1vbkNvbnN0YW50LlBvc1ZlY3Rvclt0aGlzLm1fZGF0YS5wb3NpdGlvbiAtIDFdO1xyXG4gICAgICAgIC8vIGxldCBwb3MgPSBuZXcgTGF5YS5WZWN0b3IzKHBvc0NlbnRlci54K3gsIHBvc0NlbnRlci55K3ksIDApO1xyXG5cclxuICAgICAgICAvL3JldHVybiBwb3M7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uXHJcbiAgICAvKipcclxuICAgICAqIOabtOaWsOeOqeWutueCruWPsFVJ5L+h5oGv5bGV56S6XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBVcGRhdGVQbGF5ZXJJbmZvU2hvdygpOiB2b2lkIHtcclxuICAgICAgICBsZXQgaW5mbyA9IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMubV9kYXRhKVxyXG4gICAgICAgICAgICBpbmZvID0gTmV0Um9vbS5JbnN0YW5jZS5fUm9vbVJvbGVJbmZvRGljdFt0aGlzLm1fZGF0YS51aWQudG9TdHJpbmcoKV07XHJcbiAgICAgICAgdGhpcy5VcGRhdGVJbmZvKGluZm8pO1xyXG4gICAgICAgIC8vLy8gQmF0dGVyeVVwZ3JhZGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgVXBkYXRlSW5mbyhkYXRhOiBSb29tTXNnLklyb29tX3JvbGVfaW5mbykge1xyXG4gICAgICAgIHRoaXMubV9kYXRhID0gZGF0YTtcclxuICAgICAgICBsZXQgZGF0YUlzTm90TnVsbCA9IChkYXRhICE9IG51bGwpO1xyXG4gICAgICAgIHRoaXMubV9jYW5ub24udmlzaWJsZSA9IGRhdGFJc05vdE51bGw7XHJcbiAgICAgICAgdGhpcy5tX2luZm8udmlzaWJsZSA9IGRhdGFJc05vdE51bGw7XHJcbiAgICAgICAgdGhpcy5tX3dhaXRJbWcudmlzaWJsZSA9ICFkYXRhSXNOb3ROdWxsO1xyXG4gICAgICAgIHRoaXMubV9ndW4zRC5hY3RpdmUgPSBkYXRhSXNOb3ROdWxsO1xyXG4gICAgICAgIHRoaXMubV9iYXNlQmcudmlzaWJsZSA9IGRhdGFJc05vdE51bGw7XHJcbiAgICAgICAgdGhpcy5tX3dhbGxldEJudC52aXNpYmxlID0gTmV0TG9naW4uSW5zdGFuY2UuaXNPZmZpY2lhbDtcclxuICAgICAgICBpZiAoZGF0YUlzTm90TnVsbCkge1xyXG4gICAgICAgICAgICAvL2lmIChkYXRhLnVpZC50b1N0cmluZygpICE9IE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpKSB7XHJcbiAgICAgICAgICAgIGlmICghTmV0TG9naW4uSW5zdGFuY2UuSXNTZWxmVWlkKGRhdGEudWlkKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX2xvc2VCdG4udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX2FkZEJ0bi52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1fd2FsbGV0Qm50LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy51c2VyQWNjb3VudCA9IHRoaXMubV91c2VyTmFtZUxhYmVsLnRleHQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMubV9wb3NpdGlvbiA9IGRhdGEucG9zaXRpb247XHJcbiAgICAgICAgICAgIHRoaXMuUGxheUFuaW1hdGlvbihDYW5ub25Db25maWcuX0lkbGVBbmkpO1xyXG4gICAgICAgICAgICB0aGlzLm1fZ3VuTXVsdGlJbmRleCA9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkdldEJhdHRlcnlJbmRleEJ5TXVsdGkodGhpcy5tX2RhdGEuYnVsbGV0X211bHRpKTtcclxuICAgICAgICAgICAgdGhpcy5tX3VzZXJOYW1lTGFiZWwudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm5pY2tOYW1lV2l0aFN5bWJvbCh0aGlzLm1fZGF0YS5uaWNrbmFtZSk7IC8v55So5oi35ZCNXHJcbiAgICAgICAgICAgIHRoaXMubV91c2VyTGV2ZWxGb250LnZhbHVlID0gdGhpcy5tX2RhdGEubGV2ZWwudG9TdHJpbmcoKTsgLy/nrYnnuqfmlbBcclxuICAgICAgICAgICAgdGhpcy5GR051bUZvbnQodGhpcy5tX2RhdGEuamV0dG9uX3Nob3cgYXMgbnVtYmVyLCBkYXRhLnVpZCk7XHJcblxyXG5cclxuICAgICAgICAgICAgdGhpcy5DaGFuZ2VHdW5CeVNlcnZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKiDmm7TmlrDph5HluIEqL1xyXG4gICAgcHVibGljIENvaW5GbHlpbmdGaW5pc2godWlkOiBudW1iZXIgfCBMb25nLCBkYXRhOiBSb29tTXNnLklmaXNoX2JvbnVzX2luZm8pIHtcclxuICAgICAgICBsZXQgaW5mbyA9IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMubV9kYXRhKSB7XHJcbiAgICAgICAgICAgIC8vdGhpcy5GR051bUZvbnQodGhpcy5tX2RhdGEuamV0dG9uX3Nob3cgYXMgbnVtYmVyKTtcclxuICAgICAgICAgICAgLy8g6YeR5biB5pWw5a2XXHJcbiAgICAgICAgICAgIGxldCBib3Vuc0ZvbnQ6IExheWEuRm9udENsaXAgPSBGaXNoQ29udHJvbGxlci5JbnN0YW5jZS5DcmVhdEJvdW5zRm9udChkYXRhLmJvbnVzLCB0aGlzLkNvaW5FbmRQb3MsIDAuMywgdWlkKTtcclxuICAgICAgICAgICAgaWYgKG51bGwgPT0gYm91bnNGb250KVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgYkludmVyc2lvbiA9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkdldEJhdHRlcnlCeVVpZCh1aWQpLm1fYkludmVyc2lvbjtcclxuICAgICAgICAgICAgbGV0IG9mZlkgPSAtQ29tbW9uQ29uc3RhbnQuQm91bnNGb250T2ZmWTtcclxuICAgICAgICAgICAgaWYgKGJJbnZlcnNpb24pIHtcclxuICAgICAgICAgICAgICAgIG9mZlkgPSBDb21tb25Db25zdGFudC5Cb3Vuc0ZvbnRPZmZZO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCLph5HluIFcIik7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLmdldENvaW4pO1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGJvdW5zRm9udCwgeyB5OiB0aGlzLkNvaW5FbmRQb3MueSArIG9mZlkgfSwgNTAwLCBMYXlhLkVhc2UuY3ViaWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgYm91bnNGb250LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKEZpc2hDb250cm9sbGVyLkluc3RhbmNlLl9Qb29sU2lnbiwgYm91bnNGb250KTtcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOabtOaWsOWtkOW8ueWAjeaVsFxyXG4gICAgICogQHBhcmFtIG11bHRpIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgVXBkYXRlQnVsbGV0TXVsdGkobXVsdGkpIHtcclxuICAgICAgICB0aGlzLm1fZGF0YS5idWxsZXRfbXVsdGkgPSBtdWx0aTtcclxuICAgICAgICB0aGlzLkNoYW5nZUd1bkJ5U2VydmUoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgVXBkYXRlQW5nbGVCeUFuZ2xlKGFuZ2VsKSB7XHJcbiAgICAgICAgdGhpcy5tX2Nhbm5vbi5yb3RhdGlvbiA9IGFuZ2VsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDmm7TmlrDngq7lj7Dop5LluqbvvIzlubbov5Tlm54qL1xyXG4gICAgcHVibGljIFVwZGF0ZUFuZ2xlQnlQb3MocG9zWCwgcG9zWSkge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMubV9kYXRhKSByZXR1cm47XHJcblxyXG4gICAgICAgIHZhciBkaXJ5ID0gdGhpcy5tX2RhdGEucG9zaXRpb24gPD0gMiA/IC0xIDogMTtcclxuXHJcbiAgICAgICAgdmFyIGRpciA9IG5ldyBMYXlhLlZlY3RvcjIocG9zWCAtIHRoaXMubV9ndW5HcG9zLngsIHBvc1kgLSB0aGlzLm1fZ3VuR3Bvcy55KTtcclxuICAgICAgICB2YXIgZGlybm9yID0gbmV3IExheWEuVmVjdG9yMigwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjIubm9ybWFsaXplKGRpciwgZGlybm9yKTtcclxuICAgICAgICB2YXIgZG90ID0gTGF5YS5WZWN0b3IyLmRvdChuZXcgTGF5YS5WZWN0b3IyKDAsIGRpcnkpLCBkaXJub3IpO1xyXG4gICAgICAgIHZhciByQW5nbGUgPSBNYXRoLmFjb3MoZG90KSAqIDU3LjI5NTc4O1xyXG5cclxuICAgICAgICAvL2RvdOeCueS5mOS4uui0n+aVsO+8jOWImeS4pOWQkemHj+WkueinkuWkp+S6jjkw5bqm77yM54K55Ye75peg5pWIXHJcbiAgICAgICAgLy8gaWYgKGRvdCA8IDApIHtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBlbHNlIHtcclxuICAgICAgICAvLyAgICAgaWYgKGRpcm5vci54IDw9IDApIHtcclxuICAgICAgICAvLyAgICAgICAgIHJBbmdsZSA9IC1yQW5nbGU7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgaWYgKGRpcm5vci54IDw9IDApIHtcclxuICAgICAgICAgICAgckFuZ2xlID0gLXJBbmdsZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgckFuZ2xlID0gdGhpcy5tX2RhdGEucG9zaXRpb24gPD0gMiA/IHJBbmdsZSA6IC1yQW5nbGU7XHJcbiAgICAgICAgLy90aGlzLm1fZ3VuLnJvdGF0aW9uID0gckFuZ2xlO1xyXG4gICAgICAgIHRoaXMubV9ndW4zRC50cmFuc2Zvcm0ucm90YXRpb25FdWxlciA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgckFuZ2xlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJBbmdsZTtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgcHVibGljIFBsYXlBbmltYXRpb24oYW5pTmFtZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuR3VuM0QgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0zZOeCrui1hOa6kOS4uuepulwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYW5pbWF0b3IgPSB0aGlzLkd1bjNELmdldENoaWxkQXQoMCkuZ2V0Q29tcG9uZW50KExheWEuQW5pbWF0b3IpO1xyXG4gICAgICAgIGlmIChhbmlOYW1lICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgbGV0IGFuaVN0YXRlc01hcCA9IGFuaW1hdG9yLmdldENvbnRyb2xsZXJMYXllcigwKS5fc3RhdGVzTWFwO1xyXG4gICAgICAgICAgICBsZXQgYW5pbWF0b3JTdGF0ZSA9IGFuaVN0YXRlc01hcFthbmlOYW1lXTtcclxuICAgICAgICAgICAgaWYgKGFuaW1hdG9yU3RhdGUpXHJcbiAgICAgICAgICAgICAgICBhbmltYXRvci5wbGF5KGFuaU5hbWUpO1xyXG4gICAgICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIlBsYXlBbmltYXRpb24gYW5pTmFtZSA9IFwiLCBhbmlOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFBsYXlBdHRhY2tGaXJlKCkge1xyXG4gICAgICAgIC8vM+WPt+eCruWPsOeahOWWt+eBq+eykuWtkOaViOaenFxyXG4gICAgICAgIGxldCBwYXJ0aWNsZSA9IHRoaXMuR3VuM0QuZ2V0Q2hpbGRBdCgwKS5nZXRDaGlsZEF0KDApLmdldENoaWxkQnlOYW1lKFwiaHVvXCIpIGFzIExheWEuU2h1cmlLZW5QYXJ0aWNsZTNEO1xyXG4gICAgICAgIGlmIChwYXJ0aWNsZSkge1xyXG4gICAgICAgICAgICBsZXQgcGFydGljbGVTeXMgPSBwYXJ0aWNsZS5wYXJ0aWNsZVN5c3RlbTtcclxuICAgICAgICAgICAgcGFydGljbGVTeXMuc3RvcCgpO1xyXG4gICAgICAgICAgICBwYXJ0aWNsZVN5cy5wbGF5KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL+S4ieS4queCruWPsOeahG1lc2hyZW5kZXJlciDllrfngavmlYjmnpxcclxuICAgICAgICBsZXQgZmlyZVNwM0Q6IExheWEuTWVzaFNwcml0ZTNEID0gdGhpcy5HdW4zRC5nZXRDaGlsZEF0KDApLmdldENoaWxkQXQoMCkuZ2V0Q2hpbGRCeU5hbWUoXCJjYW5ub24wMV8xXCIpIGFzIExheWEuTWVzaFNwcml0ZTNEO1xyXG4gICAgICAgIGlmIChmaXJlU3AzRCA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGZpcmVTcDNEID0gKHRoaXMuR3VuM0QuZ2V0Q2hpbGRBdCgwKS5nZXRDaGlsZEJ5TmFtZShcImNhbm5vbjAxXzFcIikgYXMgTGF5YS5NZXNoU3ByaXRlM0QpO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGZpcmVNZXNoUmVuZGVyZXI6IExheWEuTWVzaFJlbmRlcmVyID0gKGZpcmVTcDNEIGFzIExheWEuTWVzaFNwcml0ZTNEKS5tZXNoUmVuZGVyZXI7XHJcbiAgICAgICAgbGV0IGVmZmVjdE1hdGVyaWFsID0gKGZpcmVNZXNoUmVuZGVyZXIubWF0ZXJpYWwgYXMgTGF5YS5FZmZlY3RNYXRlcmlhbCk7XHJcblxyXG4gICAgICAgIExheWEuVHdlZW4udG8oZWZmZWN0TWF0ZXJpYWwsIHsgY29sb3JBOiAyNTUgfSwgNDUsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGVmZmVjdE1hdGVyaWFsLCB7IGNvbG9yQTogMCB9LCA0NSk7XHJcbiAgICAgICAgfSkpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgRXhpdCgpIHtcclxuICAgICAgICB0aGlzLm1fZ3VuM0QgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubV9kYXRhID0gbnVsbDtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgdGhpcy5tX3dhbGxlbnRCdG5Nb25pdG9yLm9mZihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuT25XYWxsZXRCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX3dhbGxlbnRCdG5Nb25pdG9yLnJlbW92ZVNlbGYoKTtcclxuICAgIH1cclxufSIsImltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IEh1bnRlZFBhbmVsIGZyb20gXCIuLi9QYW5lbC9IdW50ZWRQYW5lbFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIdW50ZWRJdGVtIHtcclxuICAgIHByaXZhdGUgbV9maXNoSW1nOiBmYWlyeWd1aS5HTG9hZGVyO1xyXG4gICAgcHJpdmF0ZSBtX2Ftb3VudDogZmFpcnlndWkuR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBtX3ZhbHVlOiBmYWlyeWd1aS5HVGV4dEZpZWxkO1xyXG4gICAgcHJpdmF0ZSBtX2h1bnRlZFBhbmVsOiBIdW50ZWRQYW5lbDtcclxuICAgIHByaXZhdGUgbV9hbW91bnROdW06IG51bWJlcjtcclxuICAgIHByaXZhdGUgbV92YWx1ZU51bTogbnVtYmVyO1xyXG4gICAgcHVibGljIEdhbWVPYmplY3Q6IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3Iob3duZXI6IGZhaXJ5Z3VpLkdDb21wb25lbnQsIHBhbmVsOiBIdW50ZWRQYW5lbCkge1xyXG4gICAgICAgIHRoaXMubV9maXNoSW1nID0gb3duZXIuZ2V0Q2hpbGQoXCJGaXNoSW1nXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIHRoaXMubV9hbW91bnQgPSBvd25lci5nZXRDaGlsZChcIkFtb3VudFwiKS5hc0xhYmVsOyB0aGlzLm1fYW1vdW50LmVuc3VyZVNpemVDb3JyZWN0KCk7XHJcbiAgICAgICAgdGhpcy5tX3ZhbHVlID0gb3duZXIuZ2V0Q2hpbGQoXCJWYWx1ZVwiKS5hc1RleHRGaWVsZDsgdGhpcy5tX3ZhbHVlLmVuc3VyZVNpemVDb3JyZWN0KCk7XHJcblxyXG4gICAgICAgIHRoaXMubV9odW50ZWRQYW5lbCA9IHBhbmVsO1xyXG4gICAgICAgIHRoaXMuR2FtZU9iamVjdCA9IG93bmVyXHJcbiAgICB9XHJcblxyXG4gICAgLy9pZOS7jjHlvIDlp4tcclxuICAgIHB1YmxpYyBJbml0VUkodmFsdWU6IG51bWJlciwgZmlzaFR5cGU6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubV9hbW91bnROdW0gPSAxO1xyXG4gICAgICAgIHRoaXMubV92YWx1ZU51bSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMubV9hbW91bnQudGV4dCA9IHRoaXMubV9hbW91bnROdW0udG9TdHJpbmcoKTtcclxuICAgICAgICB0aGlzLm1fdmFsdWUudGV4dCA9IHRoaXMubV92YWx1ZU51bS50b0ZpeGVkKDIpO1xyXG4gICAgICAgIHRoaXMubV9maXNoSW1nLnVybCA9IENvbW1vbkNvbnN0YW50Ll9wcmVDb21tb25QYXRoICsgZmlzaFR5cGU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBBZGRBbW91bnQodmFsdWU6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubV9hbW91bnROdW0rKztcclxuICAgICAgICB0aGlzLm1fdmFsdWVOdW0gKz0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5tX2Ftb3VudC50ZXh0ID0gdGhpcy5tX2Ftb3VudE51bS50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMubV92YWx1ZS50ZXh0ID0gdGhpcy5tX3ZhbHVlTnVtLnRvRml4ZWQoMik7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMuaHVudGVkSXRlbVZhbHVlRm9udFNpemUodGhpcy5tX3ZhbHVlKTtcclxuICAgIH1cclxufSIsIlxyXG4vKipcclxuICog5o2V6bG85Zy65pmv6I+c5Y2V5qCPXHJcbiAqL1xyXG5pbXBvcnQgU291bmQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L1NvdW5kTmFtZUNvbnN0YW50XCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBIdW50UGFuZWwgZnJvbSBcIi4uL1BhbmVsL0h1bnRQYW5lbFwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0TG9naW5cIjtcclxuaW1wb3J0IHsgVGlwVHlwZSB9IGZyb20gXCIuLi8uLi9tYW5hZ2VyL1RpcE1hbmFnZXJcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgUHJvbXB0UGFuZWwgZnJvbSBcIi4uL1BhbmVsL1Byb21wdFBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnUge1xyXG5cclxuICAgIHByaXZhdGUgbV9tZW51OiBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSBtX3BhbmVsQ29udHJvbGxlcjogZmFpcnlndWkuQ29udHJvbGxlcjtcclxuICAgIHByaXZhdGUgbV9wYXJlbnQ6IEh1bnRQYW5lbDtcclxuICAgIHByaXZhdGUgbV9zZWxmQ29udHJvbGxlcjogZmFpcnlndWkuQ29udHJvbGxlcjtcclxuICAgIGNvbnN0cnVjdG9yKG1lbnU6IGZhaXJ5Z3VpLkdDb21wb25lbnQsIGNvbnRyb2xsZXI6IGZhaXJ5Z3VpLkNvbnRyb2xsZXIsIHBhcmVudDogSHVudFBhbmVsKSB7XHJcbiAgICAgICAgdGhpcy5tX21lbnUgPSBtZW51O1xyXG4gICAgICAgIHRoaXMubV9wYW5lbENvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xyXG4gICAgICAgIHRoaXMubV9wYXJlbnQgPSBwYXJlbnQ7XHJcblxyXG4gICAgICAgIExheWEuc3RhZ2Uub24oTGF5YS5FdmVudC5SRVNJWkUsIHRoaXMsIHRoaXMuT25SZXNpemUpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gMDtcclxuICAgICAgICBpZiAodXRpbHMuQ29tbW9uVXRpbHMuaXNBcHAoKSAmJiB1dGlscy5Db21tb25VdGlscy5pc0lwaG9uWEFkYXB0ZSgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9wYW5lbENvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubV9zZWxmQ29udHJvbGxlciA9IHRoaXMubV9tZW51LmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICB0aGlzLm1fc2VsZkNvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IDA7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJNZW51QnRuXCIpLm9uQ2xpY2sodGhpcywgdGhpcy5Pbk1lbnVCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJTZXRCdG5cIikub25DbGljayh0aGlzLCB0aGlzLk9uU2V0QnRuQ2xpY2spO1xyXG4gICAgICAgIHRoaXMubV9tZW51LmdldENoaWxkKFwiRXhjZWxCdG5cIikub25DbGljayh0aGlzLCB0aGlzLk9uRXhjZWxCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJIZWxwQnRuXCIpLm9uQ2xpY2sodGhpcywgdGhpcy5PbkhlbHBCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJFeGl0QnRuXCIpLm9uQ2xpY2sodGhpcywgdGhpcy5PbkV4aXRCdG5DbGljayk7XHJcblxyXG4gICAgICAgIHRoaXMubV9tZW51LmdldENoaWxkKFwiTWVudUJ0blwiKS5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbkNsaWNrKTsgfSk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJTZXRCdG5cIikub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25PcGVuKTsgfSk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJFeGNlbEJ0blwiKS5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pOyB9KTtcclxuICAgICAgICB0aGlzLm1fbWVudS5nZXRDaGlsZChcIkhlbHBCdG5cIikub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25PcGVuKTsgfSk7XHJcbiAgICAgICAgdGhpcy5tX21lbnUuZ2V0Q2hpbGQoXCJFeGl0QnRuXCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uT3Blbik7IH0pO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAqIFxyXG4gICog5pKt5pS+5oyJ6ZKu54K55Ye75aOw6Z+zXHJcbiAgKi9cclxuICAgIHByaXZhdGUgb25QbGF5U291bmQoc3RyOiBzdHJpbmcpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBzdHIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6K6+572u5oyJ6ZKuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25TZXRCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlNldHRpbmdQYW5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBPbkhlbHBCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkhlbHBQYW5lbCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaKpeihqFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE9uRXhjZWxCdG5DbGljaygpIHtcclxuICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmlzUGxheSkge1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuRGVtb0FjY1RpcCwgVGlwVHlwZS5PTkVDTE9TRSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB3aW5kb3cub3BlbihHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcucmVwb3J0VXJsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIE9uRXhpdEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIC8vR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5zdG9wTXVzaWMoKTtcclxuICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5TdG9wQXV0b0F0dGFjaygpO1xyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BMb2NrQXR0YWNrKCk7XHJcblxyXG4gICAgICAgIGxldCBwcm9tcHRQYW5lbDogUHJvbXB0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlByb21wdFBhbmVsKSBhcyBQcm9tcHRQYW5lbDtcclxuICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5FeGl0SHVudFNjZW5lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5FeGl0SHVudFNjZW5lKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5bGP5bmV5a696auY44CB57+76L2s5Y+Y5YyW5qOA5rWLKi9cclxuICAgIHByaXZhdGUgT25SZXNpemUoKSB7XHJcbiAgICAgICAgaWYgKHV0aWxzLkNvbW1vblV0aWxzLmlzQXBwKCkgJiYgdXRpbHMuQ29tbW9uVXRpbHMuaXNJcGhvblhBZGFwdGUoKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID09IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubV9wYW5lbENvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IDI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID09IDEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubV9wYW5lbENvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1fcGFuZWxDb250cm9sbGVyLnNlbGVjdGVkSW5kZXggPT0gMikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLm1fcGFuZWxDb250cm9sbGVyLnNlbGVjdGVkSW5kZXggPT0gMykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIE9uTWVudUJ0bkNsaWNrKCkge1xyXG4gICAgICAgIGlmICh1dGlscy5Db21tb25VdGlscy5pc0FwcCgpICYmIHV0aWxzLkNvbW1vblV0aWxzLmlzSXBob25YQWRhcHRlKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gdGhpcy5tX3BhbmVsQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID09IDIgPyAzIDogMjsgLy/mnInnlZnmtbdcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9wYW5lbENvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IHRoaXMubV9wYW5lbENvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9PSAwID8gMSA6IDA7IC8v5peg55WZ5rW3XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnNoZWV0ID09IDApIC8v6ZqQ6JeP5oql6KGo5oyJ6ZKuXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLm1fc2VsZkNvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IHRoaXMubV9zZWxmQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID09IDAgPyAyIDogMDsgLy/mjInpkq7mmL7npLrjgIHpmpDol48gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9zZWxmQ29udHJvbGxlci5zZWxlY3RlZEluZGV4ID0gdGhpcy5tX3NlbGZDb250cm9sbGVyLnNlbGVjdGVkSW5kZXggPT0gMCA/IDEgOiAwOyAvL+aMiemSruaYvuekuuOAgemakOiXjyBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5zZWVMb2coKTtcclxuXHJcbiAgICB9XHJcbiAgICAvLyNlbmRyZWdpb25cclxufSIsImltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IFNlbGVjdFBhbmVsIGZyb20gXCIuLi9QYW5lbC9TZWxlY3RQYW5lbFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VsZWN0SXRlbXtcclxuICAgIHByaXZhdGUgbV9maXNoSW1nOmZhaXJ5Z3VpLkdMb2FkZXI7XHJcbiAgICBwcml2YXRlIG1fdmFsdWU6ZmFpcnlndWkuR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBtX2NvbnRyb2xsZXI6ZmFpcnlndWkuQ29udHJvbGxlcjtcclxuICAgIHByaXZhdGUgbV90eXBlOm51bWJlcjtcclxuICAgIHByaXZhdGUgbV9zZWxlY3RQYW5lbDpTZWxlY3RQYW5lbDtcclxuICAgIFxyXG4gICAgcHVibGljIGdldCBGaXNoVHlwZSgpIDogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tX3R5cGU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3Iob3duZXI6ZmFpcnlndWkuR0NvbXBvbmVudCwgcGFuZWw6U2VsZWN0UGFuZWwpe1xyXG4gICAgICAgIHRoaXMubV9maXNoSW1nID0gb3duZXIuZ2V0Q2hpbGQoXCJGaXNoSW1nXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIHRoaXMubV92YWx1ZSA9IG93bmVyLmdldENoaWxkKFwiVmFsdWVcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLm1fY29udHJvbGxlciA9IG93bmVyLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICB0aGlzLm1fc2VsZWN0UGFuZWwgPSBwYW5lbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ2hhbmdlVUkodmFsdWU6bnVtYmVyLCBmaXNoVHlwZTpudW1iZXIpe1xyXG4gICAgICAgIGlmKHZhbHVlICE9IDApe1xyXG4gICAgICAgICAgICB0aGlzLm1fdmFsdWUudGV4dCA9ICh1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZCh2YWx1ZSkpLnRvRml4ZWQoMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMubV92YWx1ZS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubV9maXNoSW1nLnVybCA9IENvbW1vbkNvbnN0YW50Ll9wcmVDb21tb25QYXRoICsgZmlzaFR5cGU7XHJcbiAgICAgICAgdGhpcy5tX3R5cGUgPSBmaXNoVHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgT25jbGlja2VkKCl7XHJcbiAgICAgICAgbGV0IGJjbGlja2VkOmJvb2xlYW4gPSB0aGlzLm1fY29udHJvbGxlci5zZWxlY3RlZEluZGV4ID09IDE/IGZhbHNlOiB0cnVlO1xyXG4gICAgICAgIHRoaXMuU2V0Q2xpY2tlZChiY2xpY2tlZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFNldENsaWNrZWQoYkNsaWNrZWQ6Ym9vbGVhbil7XHJcbiAgICAgICAgdGhpcy5tX2NvbnRyb2xsZXIuc2VsZWN0ZWRJbmRleCA9IGJDbGlja2VkPyAxOiAwO1xyXG4gICAgICAgIC8v6YCJ5Lit54q25oCBXHJcbiAgICAgICAgaWYoYkNsaWNrZWQpe1xyXG4gICAgICAgICAgICB0aGlzLm1fc2VsZWN0UGFuZWwubV9hdXRvQXR0YWNrQXJyW3RoaXMubV90eXBlXSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMubV9zZWxlY3RQYW5lbC5tX2F1dG9BdHRhY2tBcnJbdGhpcy5tX3R5cGVdID0gZmFsc2U7ICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IE5ldEFjdCBmcm9tIFwiLi4vLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldEFjdFwiO1xyXG5pbXBvcnQgeyBFbnVtIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2xpYnMvcHJvdG9idWYtbGlicmFyeVwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IFNUQVRVUyA9IEVudW1EYXRhLkFDVFNUQVRVUztcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWJhdGVBY3QgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcblxyXG4gICAgLyoqIOa0u+WKqOaXtumXtOaYvuekuiovXHJcbiAgICBwcml2YXRlIHRpbWVUZXg6IGZhaXJ5Z3VpLkdMYWJlbDtcclxuICAgIC8qKua0u+WKqOeKtuaAgeaOp+WItiAqL1xyXG4gICAgcHJpdmF0ZSBjb246IGZhaXJ5Z3VpLkNvbnRyb2xsZXI7XHJcbiAgICAvKirkuLvpnaLmnb8gKi9cclxuICAgIHByaXZhdGUgY29tOiBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG4gICAgLyoq5rS75Yqo54q25oCBICovXHJcbiAgICBwcml2YXRlIGFjdFM6IFNUQVRVUyA9IFNUQVRVUy5BQ1RTSE9XU1RBUlRCRUZPUkU7XHJcbiAgICBwcml2YXRlIHNob3dTdGFydFRpbWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgc2hvd0VuZFRpbWU6IG51bWJlcjtcclxuICAgIHByaXZhdGUgYWN0U3RhcnRUaW1lOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIGFjdEVuZFRpbWU6IG51bWJlcjtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpIH07XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5BQ1RMSVNUUkVTUCwgdGhpcywgdGhpcy5hY3RJbmZvKTtcclxuICAgICAgICBOZXRBY3QuSW5zdGFuY2UuYWN0TGlzdFJlcSgpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0VGltZUxhYmVsKGNvbTogZmFpcnlndWkuR0NvbXBvbmVudCkge1xyXG4gICAgICAgIHRoaXMudGltZVRleCA9IGNvbS5nZXRDaGlsZChcInRpbWVcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmNvbiA9IGNvbS5nZXRDb250cm9sbGVyKFwiYzFcIik7XHJcbiAgICAgICAgdGhpcy5jb20gPSBjb207XHJcbiAgICAgICAgdGhpcy5jb20udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudGltZVRleC50ZXh0ID0gXCIwMDowMDowMFwiO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmtLvliqjor6bmg4VcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhY3RJbmZvKGRhdGE6IEFjdE1zZy5JYWN0X2luZm8pIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coZGF0YSk7XHJcbiAgICAgICAgaWYgKGRhdGEudHlwZSAhPSA3KSB7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0Q2xvc2UoKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNob3dTdGFydFRpbWUgPSBkYXRhLnNob3dfc3RhcnRfdGltZTtcclxuICAgICAgICB0aGlzLnNob3dFbmRUaW1lID0gZGF0YS5zaG93X2VuZF90aW1lO1xyXG4gICAgICAgIHRoaXMuYWN0U3RhcnRUaW1lID0gZGF0YS5zdGFydF90aW1lO1xyXG4gICAgICAgIHRoaXMuYWN0RW5kVGltZSA9IGRhdGEuZW5kX3RpbWU7XHJcbiAgICAgICAgaWYgKHV0aWxzLkNvbW1vblV0aWxzLmdldE5vd0FjdHVhbFRpbWVTdGFtcCgpID49IHRoaXMuc2hvd1N0YXJ0VGltZSAqIDEwMDApIHtcclxuICAgICAgICAgICAgdGhpcy5hY3RTID0gU1RBVFVTLkFDVFNIT1dTVEFSVF9TVEFSVDtcclxuICAgICAgICAgICAgdGhpcy5hY3RzaG93U3RhcnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHV0aWxzLkNvbW1vblV0aWxzLmdldE5vd0FjdHVhbFRpbWVTdGFtcCgpID49IHRoaXMuYWN0U3RhcnRUaW1lICogMTAwMCkge1xyXG4gICAgICAgICAgICB0aGlzLmFjdFMgPSBTVEFUVVMuQUNUU1RBUlRfRU5EO1xyXG4gICAgICAgICAgICB0aGlzLmFjdFN0YXJ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh1dGlscy5Db21tb25VdGlscy5nZXROb3dBY3R1YWxUaW1lU3RhbXAoKSA+PSB0aGlzLmFjdEVuZFRpbWUgKiAxMDAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0UyA9IFNUQVRVUy5BQ1RFTkRfU0hPV0VORDtcclxuICAgICAgICAgICAgdGhpcy5hY3RDbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodXRpbHMuQ29tbW9uVXRpbHMuZ2V0Tm93QWN0dWFsVGltZVN0YW1wKCkgPj0gdGhpcy5zaG93RW5kVGltZSAqIDEwMDApIHtcclxuICAgICAgICAgICAgdGhpcy5hY3RTID0gU1RBVFVTLkFDVFNIT1dFTkRBRlRFUjtcclxuICAgICAgICAgICAgdGhpcy5hY3RDbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmFjdFMpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwic2hvd1N0YXJ0VGltZTpcIiArIHRoaXMuc2hvd1N0YXJ0VGltZSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJzaG93RW5kVGltZTpcIiArIHRoaXMuc2hvd0VuZFRpbWUpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiYWN0U3RhcnRUaW1lOlwiICsgdGhpcy5hY3RTdGFydFRpbWUpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiYWN0RW5kVGltZTpcIiArIHRoaXMuYWN0RW5kVGltZSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJub3dUaW1lOlwiICsgdXRpbHMuQ29tbW9uVXRpbHMuZ2V0Tm93QWN0dWFsVGltZVN0YW1wKCkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAqIOaJk+W8gOa0u+WKqOWJjeeahOaPkOekuuWbvuagh1xyXG4gKi9cclxuICAgIHByaXZhdGUgYWN0c2hvd1N0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMuY29tLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY29uLnNldFNlbGVjdGVkSW5kZXgoMSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaJk+W8gOa0u+WKqOaXtueahOaPkOekuuWbvuagh1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFjdFN0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMuY29tLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY29uLnNldFNlbGVjdGVkSW5kZXgoMCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWFs+mXreWbvuagh1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFjdENsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuY29tLnZpc2libGUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5hY3RTID09IFNUQVRVUy5BQ1RTSE9XU1RBUlRCRUZPUkUgfHwgdGhpcy5hY3RTID09IFNUQVRVUy5BQ1RTSE9XRU5EQUZURVIgfHwgdGhpcy5hY3RTID09IFNUQVRVUy5BQ1RFTkRfU0hPV0VORCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuYWN0UyA9PSBTVEFUVVMuQUNUU0hPV1NUQVJUX1NUQVJUKSB7XHJcbiAgICAgICAgICAgIHZhciBzdHI6IHN0cmluZyA9IHV0aWxzLkNvbW1vblV0aWxzLmdldFRpbWVEaWZmZXJlbmNlKHRoaXMuYWN0U3RhcnRUaW1lKTtcclxuICAgICAgICAgICAgaWYgKHN0ciAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVUZXgudGV4dCA9IHN0cjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWN0UyA9IFNUQVRVUy5BQ1RTVEFSVF9FTkQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjdFN0YXJ0KCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuYWN0UyA9PSBTVEFUVVMuQUNUU1RBUlRfRU5EKSB7XHJcblxyXG4gICAgICAgICAgICB2YXIgc3RyOiBzdHJpbmcgPSB1dGlscy5Db21tb25VdGlscy5nZXRUaW1lRGlmZmVyZW5jZSh0aGlzLmFjdEVuZFRpbWUpO1xyXG4gICAgICAgICAgICBpZiAoc3RyICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZVRleC50ZXh0ID0gc3RyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hY3RTID0gU1RBVFVTLkFDVFNIT1dFTkRBRlRFUjtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWN0Q2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uRGlzYWJsZSgpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuQUNUTElTVFJFU1AsIHRoaXMsIHRoaXMuYWN0SW5mbyk7XHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQWRkV2VicGFnZSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5TliKnmtLvliqjliJvlu7rlhoXltYzlvLnmoYZcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVJZnJhbWUoKTogdm9pZCB7XHJcbiAgICAgICAgLy/ngrnmjInpkq7nmoTml7blgJkg5ri45oiP5Yqg5LiK6L2s6I+K6Iqx5pWI5p6c77yM54S25ZCO5omn6KGM5Lul5LiL5Luj56CBXHJcbiAgICAgICAgdmFyIGlmcmFtZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWVEaXYpO1xyXG4gICAgICAgIGlmcmFtZURpdi5pZCA9IFwiaWZyYW1lRGl2XCI7XHJcbiAgICAgICAgaWZyYW1lRGl2LnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xyXG4gICAgICAgIGlmcmFtZURpdi5zdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xyXG4gICAgICAgIGlmcmFtZURpdi5zdHlsZS5oZWlnaHQgPSBcIjEwMCVcIjtcclxuICAgICAgICBpZnJhbWVEaXYuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xyXG4gICAgICAgIC8vaWZyYW1lRGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuXHJcbiAgICAgICAgdmFyIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XHJcbiAgICAgICAgaWZyYW1lRGl2LmFwcGVuZENoaWxkKGlmcmFtZSk7XHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLmhlaWdodCA9IFwiMTAwJVwiO1xyXG5cclxuICAgICAgICBpZihHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuYWN0VXJsLmluZGV4T2YoXCI/XCIpPjApe1xyXG4gICAgICAgICAgICBpZnJhbWUuc3JjID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmFjdFVybCArIFwiJmdhbWVfaWQ9XCIgKyBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuZ2FtZV9pZDsgLy/mjaLmiJDmtLvliqjpobXpnaJcclxuICAgICAgICB9XHJcbiAgICAgICAgaWZyYW1lLnNyYyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5hY3RVcmwgKyBcIj9nYW1lX2lkPVwiICsgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmdhbWVfaWQ7IC8v5o2i5oiQ5rS75Yqo6aG16Z2iXHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLnpJbmRleCA9IFwiOTk5OTk5OTk5OVwiO1xyXG4gICAgICAgIGlmcmFtZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vaWZyYW1lRGl2LnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGNsb3NlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgICAgICB2YXIgb2JqID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYW1lVmVyc2lvblwiKTtcclxuICAgICAgICBpZiAob2JqKSB7XHJcbiAgICAgICAgICB2YXIgZ2FtZVZlcnNpb24gPSBvYmouZ2V0QXR0cmlidXRlKFwidmFsdWVcIik7XHJcbiAgICAgICAgICBjbG9zZUJ0bi5zcmMgPSBcIi4uL2Zpc2hfY29tbW9uL2Z1bGxTY3JlZW4vYnV0dG9uX2diLnBuZz92PVwiICsgZ2FtZVZlcnNpb247XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsb3NlQnRuLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xyXG4gICAgICAgIGNsb3NlQnRuLnN0eWxlLnJpZ2h0ID0gXCIwXCI7XHJcbiAgICAgICAgY2xvc2VCdG4uc3R5bGUudG9wID0gXCIwXCI7XHJcbiAgICAgICAgaWZyYW1lRGl2LmFwcGVuZENoaWxkKGNsb3NlQnRuKTtcclxuICAgICAgICBjbG9zZUJ0bi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpZnJhbWVEaXZcIik7XHJcbiAgICAgICAgICAgIGRpdi5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGRpdik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgb25SZXNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBpc0xhbmRzY2FwZSA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPiBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcclxuICAgICAgICAgICAgdmFyIHNjYWxlWCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggLyAoaXNMYW5kc2NhcGUgPyAxOTIwIDogMTA4MCk7XHJcbiAgICAgICAgICAgIHZhciBzY2FsZVkgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCAvIChpc0xhbmRzY2FwZSA/IDEwODAgOiAxOTIwKTtcclxuICAgICAgICAgICAgdmFyIHNjYWxlID0gc2NhbGVYID4gc2NhbGVZID8gc2NhbGVZIDogc2NhbGVYO1xyXG4gICAgICAgICAgICBjbG9zZUJ0bi5zdHlsZS53aWR0aCA9IDk0ICogc2NhbGUgKiAxLjIgKyBcInB4XCI7IC8v57yp5pS+XHJcbiAgICAgICAgICAgIGNsb3NlQnRuLnN0eWxlLmhlaWdodCA9IDk2ICogc2NhbGUgKiAxLjIgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIGNsb3NlQnRuLnN0eWxlLnJpZ2h0ID0gOTQgKiBzY2FsZSAqIDAuNSArIFwicHhcIjtcclxuICAgICAgICAgICAgY2xvc2VCdG4uc3R5bGUudG9wID0gOTYgKiBzY2FsZSAqIDAuNSArIFwicHhcIjsgLy/nlZnkuIDngrnmmK/pmLLmraLngrnliLBTYWZhcmnpgqPkupvmtY/op4jlmajnvKnlsI9cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG9uUmVzaXplKCk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgb25SZXNpemUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC8qKlxyXG4gICAgLy8gICrov5Tlm57kuLvpobXpnaJcclxuICAgIC8vICAqL1xyXG4gICAgLy8gcHVibGljIHN0YXRpYyBhZGRCYWNrTWFpblBhZ2UoKTogdm9pZCB7XHJcblxyXG4gICAgLy8gICAgIHZhciBpZnJhbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaWZyYW1lRGl2KTtcclxuICAgIC8vICAgICBpZnJhbWVEaXYuaWQgPSBcImlmcmFtZURpdlwiO1xyXG4gICAgLy8gICAgIGlmcmFtZURpdi5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcclxuICAgIC8vICAgICBpZnJhbWVEaXYuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcclxuICAgIC8vICAgICBpZnJhbWVEaXYuc3R5bGUuaGVpZ2h0ID0gXCIxMDAlXCI7XHJcbiAgICAvLyAgICAgaWZyYW1lRGl2LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcclxuICAgIC8vICAgICAvL2lmcmFtZURpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblxyXG4gICAgLy8gICAgIHZhciBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xyXG4gICAgLy8gICAgIGlmcmFtZURpdi5hcHBlbmRDaGlsZChpZnJhbWUpO1xyXG4gICAgLy8gICAgIGlmcmFtZS5zdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xyXG4gICAgLy8gICAgIGlmcmFtZS5zdHlsZS5oZWlnaHQgPSBcIjEwMCVcIjtcclxuXHJcbiAgICAvLyAgICAgaWZyYW1lLnNyYyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5sb2JieVVybDsgLy/mjaLmiJDmtLvliqjpobXpnaJcclxuICAgIC8vICAgICBpZnJhbWUuc3R5bGUuekluZGV4ID0gXCI5OTk5OTk5OTk5XCI7XHJcbiAgICAvLyAgICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vICAgICAgICAgLy9pZnJhbWVEaXYuc3R5bGUuZGlzcGxheSA9IFwiaW5saW5lXCI7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIC8qKlxyXG4gICAgLy8gICog5YWz6Zet6aG16Z2iXHJcbiAgICAvLyAgKi9cclxuICAgIC8vIHB1YmxpYyBzdGF0aWMgY2xvc2VQYWdlKCk6IHZvaWQge1xyXG4gICAgLy8gICAgIHZhciB1c2VyQWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xyXG5cclxuICAgIC8vICAgICBpZiAodXNlckFnZW50LmluZGV4T2YoXCJGaXJlZm94XCIpICE9IC0xIHx8IHVzZXJBZ2VudC5pbmRleE9mKFwiUHJlc3RvXCIpICE9IC0xKSB7XHJcbiAgICAvLyAgICAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIC8vICAgICAgICAgd2luZG93LmNsb3NlKCk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIGVsc2UgaWYgKHVzZXJBZ2VudC5pbmRleE9mKCdBbmRyb2lkJykgIT0tMSB8fCB1c2VyQWdlbnQuaW5kZXhPZignaVBob25lJykgIT0tMSkge1xyXG4gICAgLy8gICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShcImFib3V0OmJsYW5rXCIpO1xyXG4gICAgLy8gICAgICAgICAvL3dpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIC8vICAgICAgICAgLy93aW5kb3cuY2xvc2UoKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgZWxzZSB7XHJcbiAgICAvLyAgICAgICAgIHdpbmRvdy5vcGVuZXIgPSBudWxsO1xyXG4gICAgLy8gICAgICAgICB3aW5kb3cub3BlbihcIlwiLCBcIl9zZWxmXCIpO1xyXG4gICAgLy8gICAgICAgICB3aW5kb3cuY2xvc2UoKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcblxyXG59IiwiZXhwb3J0IGNsYXNzIGNhbWVyYU1vdmUgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBwcml2YXRlIGNhbWVyYTpMYXlhLkNhbWVyYTtcclxuICAgIHByaXZhdGUgbnVtOm51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKSB9O1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICB0aGlzLmNhbWVyYT0gdGhpcy5vd25lciBhcyBMYXlhLkNhbWVyYTtcclxuICAgICB0aGlzLmNhbWVyYS50cmFuc2Zvcm0ucm90YXRpb25FdWxlcj0gbmV3IExheWEuVmVjdG9yMygwLDE4MCwtMCk7XHJcbiAgICAgdGhpcy5udW09MDtcclxuICAgICBMYXlhLnRpbWVyLmZyYW1lTG9vcCgxLHRoaXMsdGhpcy5jYW1lcmFNb3ZlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaRhOWDj+acuuenu+WKqFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNhbWVyYU1vdmUoKXtcclxuICAgICAgICB2YXIgeD0gdGhpcy5udW0rKztcclxuICAgICAgICB2YXIgeT1NYXRoLnNpbih4KjAuMDEpO1xyXG4gICAgICAgIHRoaXMuY2FtZXJhLnRyYW5zZm9ybS5yb3RhdGlvbkV1bGVyPSBuZXcgTGF5YS5WZWN0b3IzKDAsMTgwK3ksLTApO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEh0dHAge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgeG1saHR0cDtcclxuICAgIC8v55So5oi35Y+R6YCB6K+35rGC55qE5pa55rOVXHJcbiAgICBwdWJsaWMgc3RhdGljIGh0dHBTZW5kKG1ldGhvZCwgdXJsLCBkYXRhLCBjYWxsYmFjaywgZmFpbGJhY2spOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdmFyIHhtbGh0dHByZXF1ZXN0O1xyXG4gICAgICAgIHhtbGh0dHByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgaWYgKHhtbGh0dHByZXF1ZXN0Lm92ZXJyaWRlTWltZVR5cGUpIHtcclxuICAgICAgICAgICAgeG1saHR0cHJlcXVlc3Qub3ZlcnJpZGVNaW1lVHlwZShcInRleHQveG1sXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpZiAoKSB7XHJcblxyXG4gICAgICAgIC8vIH0gZWxzZSBpZiAod2luZG93LkFjdGl2ZVhPYmplY3QpIHtcclxuICAgICAgICAvLyAgICAgdmFyIGFjdGl2ZU5hbWUgPSBbXCJNU1hNTDIuWE1MSFRUUFwiLCBcIk1pY3Jvc29mdC5YTUxIVFRQXCJdO1xyXG4gICAgICAgIC8vICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFjdGl2ZU5hbWUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAvLyAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgeG1saHR0cHJlcXVlc3QgPSBuZXcgQWN0aXZlWE9iamVjdChhY3RpdmVOYW1lW2ldKTtcclxuICAgICAgICAvLyAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAvLyAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuXHJcbiAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIGlmICh4bWxodHRwcmVxdWVzdCA9PSB1bmRlZmluZWQgfHwgeG1saHR0cHJlcXVlc3QgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJYTUxIdHRwUmVxdWVzdOWvueixoeWIm+W7uuWksei0pe+8ge+8gVwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnhtbGh0dHAgPSB4bWxodHRwcmVxdWVzdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMueG1saHR0cCAhPSB1bmRlZmluZWQgJiYgdGhpcy54bWxodHRwICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZCA9IG1ldGhvZC50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1ldGhvZCAhPSBcIkdFVFwiICYmIG1ldGhvZCAhPSBcIlBPU1RcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIkhUVFDnmoTor7fmsYLmlrnms5Xlv4XpobvkuLpHRVTmiJZQT1NUISEhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh1cmwgPT0gbnVsbCB8fCB1cmwgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiSFRUUOeahOivt+axguWcsOWdgOW/hemhu+iuvue9ru+8gVwiKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YXIgdGVtcHhtbGh0dHAgPSB0aGlzLnhtbGh0dHA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnhtbGh0dHAub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZW1weG1saHR0cC5yZWFkeVN0YXRlID09IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlbXB4bWxodHRwLnN0YXR1cyA9PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZVRleHQgPSB0ZW1weG1saHR0cC5yZXNwb25zZVRleHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzcG9uc2VYTUwgPSB0ZW1weG1saHR0cC5yZXBvbnNlWE1MO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrID09IHVuZGVmaW5lZCB8fCBjYWxsYmFjayA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi5rKh5pyJ6K6+572u5aSE55CG5pWw5o2u5q2j56Gu6L+U5Zue55qE5pa55rOVXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIui/lOWbnueahOaVsOaNru+8mlwiICsgcmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2socmVzcG9uc2VUZXh0LCByZXNwb25zZVhNTCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmFpbGJhY2sgPT0gdW5kZWZpbmVkIHx8IGZhaWxiYWNrID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLmsqHmnInorr7nva7lpITnkIbmlbDmja7ov5Tlm57lpLHotKXnmoTlpITnkIbmlrnms5XvvIFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiSFRUUOeahOWTjeW6lOegge+8mlwiICsgdGVtcHhtbGh0dHAuc3RhdHVzICsgXCIs5ZON5bqU56CB55qE5paH5pys5L+h5oGv77yaXCIgKyB0ZW1weG1saHR0cC5zdGF0dXNUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbGJhY2sodGVtcHhtbGh0dHAuc3RhdHVzLCB0ZW1weG1saHR0cC5zdGF0dXNUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgLy/op6PlhrPot6jln5/nmoTpl67pophcclxuICAgICAgICAgICAgICAgIGlmICh1cmwuaW5kZXhPZihcImh0dHA6Ly9cIikgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHVybC5yZXBsYWNlKFwiP1wiLCBcIiZcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gXCJQcm94eT91cmw9XCIgKyB1cmw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnhtbGh0dHAub3BlbihtZXRob2QsIHVybCwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8v5aaC5p6c5pivUE9TVOaWueW8j++8jOmcgOimgeiuvue9ruivt+axguWktFxyXG4gICAgICAgICAgICAgICAgLy8gaWYgKG1ldGhvZCA9PSBcIlBPU1RcIikge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMueG1saHR0cC5wcm9jZXNzUmVxQ2hhbmdlKFwiQ29udGVudC10eXBlXCIsIFwiYXBwbGljYXRpb24veC13d3ctZm91ci11cmxlbmNvZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgLy90aGlzLnhtbGh0dHAud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMueG1saHR0cC5zZW5kKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgLy90aGlzLnhtbGh0dHAuc2VuZCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMueG1saHR0cC5vbmVycm9yID0gZnVuY3Rpb24gKGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcImNvbm5lY3QgZXJyb3IgXCIgKyBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZhaWxiYWNrKHRlbXB4bWxodHRwLnN0YXR1cywgdGVtcHhtbGh0dHAuc3RhdHVzVGV4dCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiWE1MSHR0cFJlcXVlc3Tlr7nosaHliJvlu7rlpLHotKXvvIzml6Dms5Xlj5HpgIHmlbDmja7vvIFcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy53YXJuKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlhbPpl63mjqXlj6NcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBodHRwQWJvcnQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMueG1saHR0cCAhPSBudWxsIHx8IHRoaXMueG1saHR0cCAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy54bWxodHRwLmFib3J0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IE5ldEpwUG9vbCBmcm9tIFwiLi4vLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldEpwUG9vbFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGpwQmVhdCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByaXZhdGUganBUZXg6IGZhaXJ5Z3VpLkdMYWJlbDtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpIH07XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5KUE5VTUJFUiwgdGhpcywgdGhpcy5qcCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9rmpwdGV4dFxyXG4gICAgICogQHBhcmFtIGpwVGV4dCBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldEpwVGV4dChqcFRleHQ6IGZhaXJ5Z3VpLkdMYWJlbCkge1xyXG4gICAgICAgIHRoaXMuanBUZXggPSBqcFRleHQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOebkeaOp+iOt+W+l2pwXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGpwKGRhdGE6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuanBTaG93TnVtKGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZCM5q2lanDot7PliqhcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN5bkpwRGF0YSgpIHtcclxuICAgICAgICBpZiAoTmV0SnBQb29sLkluc3RhbmNlLl9KcEFtb3VudCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuanBTaG93TnVtKE5ldEpwUG9vbC5JbnN0YW5jZS5fSnBBbW91bnQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Yid5aeL5YyWanAg6YeR6aKdXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGpwU2hvd051bShudW06IExvbmcgfCBOdW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmpwVGV4LnRleHQgPSAoTnVtYmVyKG51bSkgKiAwLjAxKS50b0ZpeGVkKDIpO1xyXG4gICAgICAgIGlmIChudW0gPT0gMCkgcmV0dXJuO1xyXG4gICAgICAgIExheWEudGltZXIubG9vcCgyMDAwLCB0aGlzLCB0aGlzLmpwTnVtKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICoganDot7PliqhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBqcE51bSgpIHtcclxuICAgICAgICB0aGlzLmpwVGV4LnRleHQgPSAoTnVtYmVyKHRoaXMuanBUZXgudGV4dCkgKyAwLjAyKS50b0ZpeGVkKDIpO1xyXG4gICAgfVxyXG4gICAgLy8gb25VcGRhdGUoKSB7XHJcbiAgICAvLyAgICAgdmFyIHQgPSBMYXlhLnRpbWVyLmN1cnJGcmFtZSowLjAwMTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyggTGF5YS50aW1lci5sb29wICk7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coXCJ0OlwiK3BhcnNlSW50KHQudG9TdHJpbmcoKSkgKTtcclxuICAgIC8vICAgICB0aGlzLmpwVGV4LnRleHQgPSAoTnVtYmVyKHRoaXMuanBUZXgudGV4dCkrdCkudG9GaXhlZCgyKTtcclxuICAgIC8vIH1cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHTGlzdCA9IGZhaXJ5Z3VpLkdMaXN0O1xyXG5pbXBvcnQgVHJhbnNpdGlvbiA9IGZhaXJ5Z3VpLlRyYW5zaXRpb247XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuZXhwb3J0IGNsYXNzIE1hcnF1ZWVNb3ZlIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgcHJpdmF0ZSBtYXJxdWVlQ29tOiBHQ29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSBtYXJxdWVlVGV4dENvbTogR0NvbXBvbmVudDtcclxuICAgIHByaXZhdGUgbWFycXVlZUxpc3Q6IEdMaXN0O1xyXG4gICAgcHJpdmF0ZSBpc1Jvb206IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIGFyck1lc3NhZ2VXb3JsZDogQXJyYXk8c3RyaW5nPjtcclxuICAgIHByaXZhdGUgYXJyTWVzc2FnZVJvb206IEFycmF5PHN0cmluZz47XHJcbiAgICBwcml2YXRlIHN0YXJ0WDogbnVtYmVyID0gOTQwOy8v5YWs5ZGK5byA5aeL56e75Yqo55qE5L2N572uXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKSB9O1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLmFyck1lc3NhZ2VXb3JsZCA9IG5ldyBBcnJheTxzdHJpbmc+KCk7XHJcbiAgICAgICAgdGhpcy5hcnJNZXNzYWdlUm9vbSA9IG5ldyBBcnJheTxzdHJpbmc+KCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkpQQkNBU1QsIHRoaXMsIHRoaXMuanBCY2FzdCk7Ly9qcOW5v+aSrVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5CQ0FTVE1TR1JFU1AsIHRoaXMsIHRoaXMuYmNhc3RNc2cpOy8v5L+h5oGv5bm/5pKtXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkJDQVNUV09STERSRVNQLCB0aGlzLCB0aGlzLmJjYXN0V29ybGQpOy8v5YWo5bGA5bm/5pKtXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkJDQVNUUk9PTVJFU1AsIHRoaXMsIHRoaXMuYmNhc3RSb29tKTsvL+aIv+mXtOW5v+aSrVxyXG4gICAgICAgIC8vdGhpcy50ZXN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmtYvor5Xkvb/nlKhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSB0ZXN0KCkge1xyXG4gICAgICAgIHZhciB0ZTE6IHN0cmluZyA9IFwi5rWLMDAwMTAwMDEwMDAxMDAwMTAwMDEwMDExXCJcclxuICAgICAgICB2YXIgdGU6IHN0cmluZyA9IFwi5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55So5rWL6K+V5L2/55SoXCI7XHJcbiAgICAgICAgdGhpcy5hcnJNZXNzYWdlUm9vbS5wdXNoKHRlICsgdGUxICsgdGUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7kuLvpnaLmnb9cclxuICAgICAqIEBwYXJhbSBtYWluQ29tIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0TWFycXVlZUNvbShtYWluQ29tOiBHQ29tcG9uZW50LCBpc1Jvb206IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLm1hcnF1ZWVDb20gPSBtYWluQ29tO1xyXG4gICAgICAgIHRoaXMuaXNSb29tID0gaXNSb29tO1xyXG4gICAgICAgIHRoaXMubWFycXVlZUxpc3QgPSB0aGlzLm1hcnF1ZWVDb20uZ2V0Q2hpbGQoXCJjb250ZW50TGlzdFwiKS5hc0xpc3Q7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGJjYXN0TXNnKGRhdGE6IEJyb2FkQ2FzdE1zZy5iY2FzdF9tc2dfcmVzcCkge1xyXG4gICAgICAgIHRoaXMuYXJyTWVzc2FnZVdvcmxkLnB1c2godGhpcy5nZXRNc2dTdHJpbmcoZGF0YSkpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBiY2FzdFdvcmxkKGRhdGE6IEJyb2FkQ2FzdE1zZy5iY2FzdF93b3JsZF9yZXNwKSB7XHJcbiAgICAgICAgdGhpcy5hcnJNZXNzYWdlV29ybGQucHVzaChkYXRhLmNvbnRlbnQpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBiY2FzdFJvb20oZGF0YTogQnJvYWRDYXN0TXNnLmJjYXN0X3Jvb21fcmVzcCkge1xyXG4gICAgICAgIHRoaXMuYXJyTWVzc2FnZVJvb20ucHVzaChkYXRhLmNvbnRlbnQpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBqcEJjYXN0KGRhdGE6IFBvb2xNc2cuYmNhc3RfanBfcmVzcCkge1xyXG4gICAgICAgIHRoaXMuYXJyTWVzc2FnZVdvcmxkLnB1c2godGhpcy5nZXRKcFN0cmluZyhkYXRhKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflvpdtc2dcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdldE1zZ1N0cmluZyhkYXRhOiBCcm9hZENhc3RNc2cuYmNhc3RfbXNnX3Jlc3ApOiBzdHJpbmcge1xyXG4gICAgICAgIHZhciBtc2c6IENvbW1vbk1zZy5JZG1zZ19jb250ZW50W10gPSBkYXRhLm1zZy5jb250ZW50O1xyXG4gICAgICAgIGxldCBjaGFyOiBzdHJpbmc7XHJcbiAgICAgICAgbGV0IGZpc2hJZDogbnVtYmVyO1xyXG4gICAgICAgIGxldCBudW06IHN0cmluZztcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKG1zZ1tpXS5tc2dfdHlwZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImNoYXJzXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgY2hhciA9IG1zZ1tpXS5jaGFycztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJmaXNoX25hbWVcIjpcclxuICAgICAgICAgICAgICAgICAgICBmaXNoSWQgPSBtc2dbaV0uaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwibnVtYmVyXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgbnVtID0gbXNnW2ldLm51bWJlci50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvL3ZhciBtc2dTdHI6IHN0cmluZyA9IFwi5oGt5ZacW2NvbG9yPSNmZmZmMDBdezB9Wy9jb2xvcl3lh7vmnYAgW2NvbG9yPSNmZmZmMDBdezF9Wy9jb2xvcl3ojrflvpdbY29sb3I9I0ZGRkYwMF17Mn1bL2NvbG9yXeWAjemHkeW4geWlluWKsVwiO1xyXG4gICAgICAgIHZhciBtc2dTdHI6IHN0cmluZyA9IFwi5oGt5ZacezB95Ye75p2AezF96I635b6XezJ95YCN6YeR5biB5aWW5YqxXCI7XHJcbiAgICAgICAgcmV0dXJuIG1zZ1N0ci5yZXBsYWNlKFwiezB9XCIsIGNoYXIpLnJlcGxhY2UoXCJ7MX1cIiwgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5nZXRTb3VuZENvZmlnKClbZmlzaElkIC0gMV1bXCJmaXNobmFtZVwiXS50b1N0cmluZygpKS5yZXBsYWNlKFwiezJ9XCIsIG51bSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiOt+W+l2pwXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZXRKcFN0cmluZyhkYXRhOiBQb29sTXNnLmJjYXN0X2pwX3Jlc3ApOiBzdHJpbmcge1xyXG4gICAgICAgIHZhciBtc2c6IENvbW1vbk1zZy5JZG1zZ19jb250ZW50W10gPSBkYXRhLmNvbnRlbnQuY29udGVudDtcclxuICAgICAgICBsZXQgY2hhcjE6IHN0cmluZyA9IG51bGw7XHJcbiAgICAgICAgbGV0IG51bTogbnVtYmVyO1xyXG4gICAgICAgIGxldCBjaGFyMjogc3RyaW5nID0gbnVsbDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKG1zZ1tpXS5tc2dfdHlwZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImNoYXJzXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXIxID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hhcjEgPSBtc2dbaV0uY2hhcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFyMiA9IG1zZ1tpXS5jaGFycztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwibnVtYmVyXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgbnVtID0gTnVtYmVyKG1zZ1tpXS5udW1iZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgbXNnU3RyOiBzdHJpbmcgPSBcIuaBreWWnHswfeiOt+W+l0pQ5aSn5aWWezF9LOWlluWKsXsyfemHkeW4gVwiO1xyXG4gICAgICAgIHJldHVybiBtc2dTdHIucmVwbGFjZShcInswfVwiLCBjaGFyMSkucmVwbGFjZShcInsxfVwiLCB1dGlscy5Db21tb25VdGlscy5qcFdpbm5lclRvVHlwZShkYXRhLnNjb3JlX2xldmVsKSkucmVwbGFjZShcInsyfVwiLCBjaGFyMik7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgd2hpbGUgKHRoaXMuYXJyTWVzc2FnZVJvb20ubGVuZ3RoID4gMCAmJiAhdGhpcy5tYXJxdWVlQ29tLnZpc2libGUgJiYgdGhpcy5pc1Jvb20pIHtcclxuICAgICAgICAgICAgdGhpcy5vblNob3codGhpcy5hcnJNZXNzYWdlUm9vbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHdoaWxlICh0aGlzLmFyck1lc3NhZ2VXb3JsZC5sZW5ndGggPiAwICYmICF0aGlzLm1hcnF1ZWVDb20udmlzaWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLm9uU2hvdyh0aGlzLmFyck1lc3NhZ2VXb3JsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICog5bGV56S65YWs5ZGKXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblNob3coYXJyOiBBcnJheTxzdHJpbmc+KSB7XHJcbiAgICAgICAgdGhpcy5tYXJxdWVlQ29tLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubWFycXVlZUxpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICB2YXIgaXRlbUNvbTogR0NvbXBvbmVudCA9IHRoaXMubWFycXVlZUxpc3QuYWRkSXRlbUZyb21Qb29sKCkuYXNDb207XHJcbiAgICAgICAgdmFyIHRleDogZmFpcnlndWkuR0xhYmVsID0gaXRlbUNvbS5nZXRDaGlsZChcIlRleHRcIikuYXNMYWJlbDtcclxuICAgICAgICB0ZXgudGV4dCA9IGFyci5zaGlmdCgpO1xyXG4gICAgICAgIHZhciBsOiBudW1iZXIgPSB0ZXgudGV4dC5sZW5ndGg7XHJcbiAgICAgICAgdGV4LndpZHRoID0gMjYgKiBsO1xyXG4gICAgICAgIHRoaXMubWFycXVlZUxpc3QuZW5zdXJlQm91bmRzQ29ycmVjdCgpO1xyXG4gICAgICAgIHRleC54ID0gdGhpcy5zdGFydFg7XHJcbiAgICAgICAgdmFyIHc6IG51bWJlciA9IHRleC53aWR0aDtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRleCwgeyB4OiAtKHcpIH0sIGwgKiA1MCArIDQwMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkhpZGUpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmakOiXj+WFrOWRilxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uSGlkZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1hcnF1ZWVDb20udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWz6Zet5YWs5ZGKXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9uSGlkZSgpO1xyXG4gICAgICAgIHRoaXMubWFycXVlZUxpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuSlBCQ0FTVCwgdGhpcywgdGhpcy5iY2FzdFdvcmxkKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuQkNBU1RNU0dSRVNQLCB0aGlzLCB0aGlzLmJjYXN0TXNnKTsvL+S/oeaBr+W5v+aSrVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5CQ0FTVFdPUkxEUkVTUCwgdGhpcywgdGhpcy5iY2FzdFdvcmxkKTsvL+WFqOWxgOW5v+aSrVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5CQ0FTVFJPT01SRVNQLCB0aGlzLCB0aGlzLmJjYXN0Um9vbSk7Ly/miL/pl7Tlub/mkq1cclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgR0xpc3QgPSBmYWlyeWd1aS5HTGlzdDtcclxuaW1wb3J0IFRyYW5zaXRpb24gPSBmYWlyeWd1aS5UcmFuc2l0aW9uO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCB7IE1hcnF1ZWVNb3ZlIH0gZnJvbSBcIi4vTWFycXVlZU1vdmVcIjtcclxuaW1wb3J0IEJhc2VQYW5lbCBmcm9tIFwiLi4vLi4vUGFuZWwvQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFycXVlZVBhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIC8vIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogTWFycXVlZTtcclxuICAgIHByaXZhdGUgaXNSb29tOiBib29sZWFuO1xyXG4gICAgLy8gcHVibGljIHN0YXRpYyBnZXQgSW5zdGFuY2UoKTogTWFycXVlZSB7XHJcbiAgICAvLyAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgLy8gICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBNYXJxdWVlKCk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcclxuICAgIC8vIH1cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihpc1Jvb206IGJvb2xlYW4pIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuaXNSb29tID0gaXNSb29tO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlNYXJxdWVlUGF0aC5pbWFnZSwgQ29tbW9uQ29uc3RhbnQuX2Z1aU1hcnF1ZWVQYXRoLmZ1aSwgdGhpcywgdGhpcy5vbkxvYWRNYXJxdWVlKTtcclxuICAgIH1cclxuICAgIC8vIC8qKlxyXG4gICAgLy8gICog5Yib5bu65YWs5ZGKXHJcbiAgICAvLyAgKiBAcGFyYW0gaXNSb29tIOaYr+WQpuaYr+aIv+mXtOeahOWFrOWRilxyXG4gICAgLy8gICovXHJcbiAgICAvLyBwdWJsaWMgY3JlYXRlTWFycXVlZShpc1Jvb206IGJvb2xlYW4pIHtcclxuICAgIC8vICAgICB0aGlzLmlzUm9vbSA9IGlzUm9vbTtcclxuICAgIC8vICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmxvYWRVSShDb21tb25Db25zdGFudC5fZnVpTWFycXVlZVBhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlNYXJxdWVlUGF0aC5mdWksIHRoaXMsIHRoaXMub25Mb2FkTWFycXVlZSk7XHJcbiAgICAvLyB9XHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZE1hcnF1ZWUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tX2Z1aSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuZ2V0TWFpbkNvbShDb21tb25Db25zdGFudC5fZnVpTWFycXVlZVBhdGguUGFja2FnZSwgXCJNYXJxdWVlXCIsIFwiTWFycXVlZUNvbVwiKTtcclxuICAgICAgICB2YXIgbWFyOiBNYXJxdWVlTW92ZSA9IHRoaXMubV9mdWkuZGlzcGxheU9iamVjdC5hZGRDb21wb25lbnQoTWFycXVlZU1vdmUpO1xyXG4gICAgICAgIG1hci5zZXRNYXJxdWVlQ29tKHRoaXMubV9mdWksIHRoaXMuaXNSb29tKTtcclxuICAgICAgICB0aGlzLm1fZnVpLnZpc2libGUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWz6Zet5YWs5ZGKXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBkaXNwb3NlTWFycXVlZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIXRoaXMubV9mdWkpIHJldHVybjtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTWFycXVlZVBhbmVsKTtcclxuICAgIH1cclxufSIsImltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBTZWxlY3RQYW5lbCBmcm9tIFwiLi9TZWxlY3RQYW5lbFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgSHVudGVkUGFuZWwgZnJvbSBcIi4vSHVudGVkUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcbmltcG9ydCBHYW1lRXZlbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0dhbWVFdmVudFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXV0b0F0dGFja1BhbmVsIGV4dGVuZHMgQmFzZVBhbmVse1xyXG4gICAgcHJpdmF0ZSBtX3NlbGVjdFBhbmVsOlNlbGVjdFBhbmVsO1xyXG4gICAgcHJpdmF0ZSBtX2h1bnRlZFBhbmVsOkh1bnRlZFBhbmVsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGlkKXtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgICB0aGlzLm1fZnVpID0gZmFpcnlndWkuVUlQYWNrYWdlLmNyZWF0ZU9iamVjdChcIkh1bnRlclVJXCIsIFwiQXV0b0F0dGFja1BhbmVsXCIpLmFzQ29tO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQWRkRlVJKHRoaXMubV9mdWkpO1xyXG4gICAgICAgIHRoaXMubV9zZWxlY3RQYW5lbCA9IG5ldyBTZWxlY3RQYW5lbCh0aGlzLm1fZnVpLmdldENoaWxkKFwiU2VsZWN0UGFuZWxcIikuYXNDb20sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMubV9odW50ZWRQYW5lbCA9IG5ldyBIdW50ZWRQYW5lbCh0aGlzLm1fZnVpLmdldENoaWxkKFwiSHVudGVkUGFuZWxcIikuYXNDb20sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiQ2xvc2VCdG5cIikuYXNCdXR0b24ub25DbGljayh0aGlzLCB0aGlzLk9uY2xvc2VCdG5DbGljayk7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEdhbWVFdmVudC5IVU5UX0hVTlRFREZJU0gsIHRoaXMubV9odW50ZWRQYW5lbCwgdGhpcy5tX2h1bnRlZFBhbmVsLk9uSHVudGVkRmlzaCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluaXQoKXtcclxuICAgICAgICB0aGlzLm1fZnVpLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIGlmKEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iQXV0b0F0dGFjayl7XHJcbiAgICAgICAgICAgIHRoaXMuU2hvd0h1bnRlZFBhbmVsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuU2hvd1NlbGVjdFBhbmVsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgU2hvd0h1bnRlZFBhbmVsKCl7XHJcbiAgICAgICAgdGhpcy5tX2h1bnRlZFBhbmVsLlNob3dTZWxmKHRydWUpO1xyXG4gICAgICAgIHRoaXMubV9zZWxlY3RQYW5lbC5TaG93U2VsZihmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTaG93U2VsZWN0UGFuZWxcclxuICAgICAqL1xyXG4gICAgcHVibGljIFNob3dTZWxlY3RQYW5lbCgpIHtcclxuICAgICAgICB0aGlzLm1faHVudGVkUGFuZWwuU2hvd1NlbGYoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMubV9zZWxlY3RQYW5lbC5TaG93U2VsZih0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgT25jbG9zZUJ0bkNsaWNrKCl7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tX3NlbGVjdFBhbmVsLlJlbW92ZVVudXNlU2VsZWN0ZWRJdGVtKCk7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENsZWFySHVudGVkUGFuZWwoKXtcclxuICAgICAgICB0aGlzLm1faHVudGVkUGFuZWwuQ2xlYXJQYW5lbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBSZW1vdmVBbGxFdmVudHMoKSB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoR2FtZUV2ZW50LkhVTlRfSFVOVEVERklTSCwgdGhpcy5tX2h1bnRlZFBhbmVsLCB0aGlzLm1faHVudGVkUGFuZWwuT25IdW50ZWRGaXNoKTtcclxuICAgIH1cclxufSIsImltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZVBhbmVsIGV4dGVuZHMgTGF5YS5TcHJpdGUge1xyXG4gICAgcHJvdGVjdGVkIG1fZnVpOiBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG4gICAgcHVibGljIG1fbmFtZUlEOiBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlO1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLm1fZnVpID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVtb3ZlQWxsRXZlbnRzKCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgSGlkZSgpIHtcclxuICAgICAgICB0aGlzLm1fZnVpLnZpc2libGUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgU2hvdygpIHtcclxuICAgICAgICBpZiAoIXRoaXMubV9mdWkpIHJldHVybjtcclxuICAgICAgICB0aGlzLm1fZnVpLnZpc2libGUgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDbG9zZShiUmVtb3ZlOiBib29sZWFuID0gdHJ1ZSwgaWQ6IEVudW1EYXRhLkVudW1QYW5lbFR5cGUgPSB0aGlzLm1fbmFtZUlEKSB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5SZW1vdmVGVUkodGhpcy5tX2Z1aSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5kZXN0cm95KGlkKTtcclxuICAgICAgICB0aGlzLlJlbW92ZUFsbEV2ZW50cygpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgR1NsaWRlciA9IGZhaXJ5Z3VpLkdTbGlkZXI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IFJlc291cmNlTWFuZ2VyIGZyb20gXCIuLi8uLi9tYW5hZ2VyL1Jlc291cmNlTWFuZ2VyXCI7XHJcbmltcG9ydCBOZXRSb2xlSW5mbyBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvbGVJbmZvXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuaW1wb3J0IEV2ZW50TmV0UmVzcG9uc2UgZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRBd2FyZCBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldEF3YXJkXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IEJhc2VQYW5lbCBmcm9tIFwiLi9CYXNlUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGdW5kVGlwUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHJpdmF0ZSB0aW1lVGV4OiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIGN1cnJBbW91bnRUZXg6IGZhaXJ5Z3VpLkdMYWJlbDtcclxuICAgIHByaXZhdGUgaGlnaHRlc3RSZWNlaXZlVGV4OiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIGlzVGlwQnRuOiBmYWlyeWd1aS5HQnV0dG9uO1xyXG4gICAgcHJpdmF0ZSBjdXVyVGlwU3RhdHVzOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIGRhdGE6IEF3YXJkTXNnLmx2X2F3YXJkX25vdGljZV9yZXNwID0gbnVsbDtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihkYXRhOiBBd2FyZE1zZy5sdl9hd2FyZF9ub3RpY2VfcmVzcCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmxvYWRVSShDb21tb25Db25zdGFudC5fZnVpRnVuZFRpcFBhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlGdW5kVGlwUGF0aC5mdWksIHRoaXMsIHRoaXMub25Mb2FkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1fZnVpID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5nZXRNYWluQ29tKENvbW1vbkNvbnN0YW50Ll9mdWlGdW5kVGlwUGF0aC5QYWNrYWdlLCBcIkZ1bmRUaXBcIiwgXCJGdW5kVGlwQ29tXCIpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5EU1RBVEVSRVNQLCB0aGlzLCB0aGlzLmFjdEVuZFRpbWUpO1xyXG4gICAgICAgIHRoaXMudGltZVRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJ0aW1lVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdGhpcy5jdXJyQW1vdW50VGV4ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImN1cnJBbW91bnRUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmhpZ2h0ZXN0UmVjZWl2ZVRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJoaWdodGVzdFJlY2VpdmVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmlzVGlwQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImlzVGlwXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuaXNUaXBCdG4ub25DbGljayh0aGlzLCB0aGlzLm9uSXNUaXBDbGljayk7XHJcbiAgICAgICAgdmFyIGdvRnVuZDogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJnb0J0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBnb0Z1bmQub25DbGljayh0aGlzLCB0aGlzLm9uR29GdW5kQ2xpY2spO1xyXG4gICAgICAgIHZhciBjbG9zZUJ0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZUJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBjbG9zZUJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5TeW5jQ2hpcHNSZXEoKTtcclxuICAgICAgICBOZXRSb2xlSW5mby5JbnN0YW5jZS5sdkluZm9SZXEoKTtcclxuICAgICAgICB0aGlzLmluaXREYXRhKCk7XHJcbiAgICAgICAgaWYgKE5ldEF3YXJkLkluc3RhbmNlICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5hY3RFbmRUaW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgKiDmtLvliqjnu5PmnZ/ml7bpl7RcclxuICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBhY3RFbmRUaW1lKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEudGltZXIubG9vcCgyMDAsIHRoaXMsIHRoaXMudGltZVNob3cpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmtLvliqjml7bpl7TmmL7npLpcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSB0aW1lU2hvdygpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhOZXRBd2FyZC5JbnN0YW5jZS5lbmRUaW1lKTtcclxuICAgICAgICB0aGlzLnRpbWVUZXgudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLmdldFRpbWVEaWZmZXJlbmNlKE5ldEF3YXJkLkluc3RhbmNlLmVuZFRpbWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDnrYnnuqfpgJrnn6XnmoTph5Hpop1cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBpbml0RGF0YSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmN1cnJBbW91bnRUZXgudGV4dCA9IChOdW1iZXIodGhpcy5kYXRhLmF3YXJkKSAqIDAuMDEpLnRvRml4ZWQoMik7XHJcbiAgICAgICAgdGhpcy5oaWdodGVzdFJlY2VpdmVUZXgudGV4dCA9IChOdW1iZXIodGhpcy5kYXRhLm1heF9hd2FyZCkgKiAwLjAxKS50b0ZpeGVkKDIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5LuK5pel5piv5ZCm5o+Q56S6XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Jc1RpcENsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmN1dXJUaXBTdGF0dXMpIHtcclxuICAgICAgICAgICAgdGhpcy5jdXVyVGlwU3RhdHVzID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmN1dXJUaXBTdGF0dXMgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Y675Y2H57qn5Z+66YeRXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Hb0Z1bmRDbGljaygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9uQ2xvc2UoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkdyb3d0aEZ1bmRQYW5lbCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHRhcmdlbnRDb20g5YWz6Zet55uu5qCHXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICBOZXRBd2FyZC5JbnN0YW5jZS5pc0hhdmVGdW5kVGlwID0gZmFsc2U7XHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhcih0aGlzLCB0aGlzLnRpbWVTaG93KTtcclxuICAgICAgICBOZXRBd2FyZC5JbnN0YW5jZS5sdkF3YXJkTm90aWNlU2V0UmVxKHRoaXMuY3V1clRpcFN0YXR1cyk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbG9zZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRTVEFURVJFU1AsIHRoaXMsIHRoaXMuYWN0RW5kVGltZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5jbG9zZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkZ1bmRUaXBQYW5lbCk7XHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgR1NsaWRlciA9IGZhaXJ5Z3VpLkdTbGlkZXI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRBd2FyZCBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldEF3YXJkXCI7XHJcbmltcG9ydCBMYW5nIGZyb20gXCIuLi8uLi9jb25zdGFudC9MYW5ndWFnZUNvbnN0YW50XCI7XHJcbmltcG9ydCB7IFRpcFR5cGUgfSBmcm9tIFwiLi4vLi4vbWFuYWdlci9UaXBNYW5hZ2VyXCI7XHJcbmltcG9ydCBMdkRldGFpbFBhbmVsIGZyb20gXCIuL0x2RGV0YWlsUGFuZWxcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyb3d0aEZ1bmRQYW5lbCBleHRlbmRzIEJhc2VQYW5lbCB7XHJcbiAgICBwcml2YXRlIGluZm9MaXN0OiBmYWlyeWd1aS5HTGlzdDtcclxuICAgIHByaXZhdGUgdGltZVRleDogZmFpcnlndWkuR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBidXlJZDogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgYnV5UHJpY2U6IG51bWJlcjtcclxuICAgIC8qKuW9k+WJjeetiee6pyAqL1xyXG4gICAgcHJpdmF0ZSBjdXJyRnVuZElkOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0hhdmVHcm93dGhGdW5kUGFuZSkgcmV0dXJuO1xyXG4gICAgICAgIGVsc2UgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlR3Jvd3RoRnVuZFBhbmUgPSB0cnVlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlHcm93dGhGdW5kUGF0aC5pbWFnZSwgQ29tbW9uQ29uc3RhbnQuX2Z1aUdyb3d0aEZ1bmRQYXRoLmZ1aSwgdGhpcywgdGhpcy5vbkxvYWQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5EQ09ORklHUkVTUCwgdGhpcywgdGhpcy5pbml0SW5mb0xpc3QpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5ESU5GT1JFU1AsIHRoaXMsIHRoaXMuZnVuZElkKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuR1JPV1RIRlVORFNUQVRFUkVTUCwgdGhpcywgdGhpcy5hY3RFbmRUaW1lKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuR1JPV1RIRlVOREJVWVJFU1AsIHRoaXMsIHRoaXMuZ3Jvd3RoRnVuZEJ1eVJlc3ApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296K6+572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aUdyb3d0aEZ1bmRQYXRoLlBhY2thZ2UsIFwiR3Jvd3RoRnVuZFwiLCBcIkdyb3d0aEZ1bmRDb21cIik7XHJcbiAgICAgICAgdGhpcy5pbmZvTGlzdCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJpbmZvTGlzdFwiKS5hc0xpc3Q7XHJcbiAgICAgICAgdGhpcy50aW1lVGV4ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInRpbWVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB2YXIgYWN0RGV0YWlsc0J0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJoZWxwQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIGFjdERldGFpbHNCdG4ub25DbGljayh0aGlzLCB0aGlzLm9uQWN0RGV0YWlsc0NsaWNrKTtcclxuICAgICAgICBhY3REZXRhaWxzQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5zb3VuZFBsYXkpO1xyXG4gICAgICAgIHZhciBsdkJvbnVzQnRuOiBmYWlyeWd1aS5HQnV0dG9uID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImx2Qm9udXNcIikuYXNCdXR0b247XHJcbiAgICAgICAgbHZCb251c0J0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25MdkJvbnVzQ2xpY2spO1xyXG4gICAgICAgIGx2Qm9udXNCdG4ub25DbGljayh0aGlzLCB0aGlzLnNvdW5kUGxheSk7XHJcbiAgICAgICAgdmFyIGNsb3NlQnRuOiBmYWlyeWd1aS5HQnV0dG9uID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNsb3NlQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIGNsb3NlQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5vbkNsb3NlKTtcclxuICAgICAgICBOZXRBd2FyZC5JbnN0YW5jZS5ncm93dGhGdW5kSW5mb1JlcSgpO1xyXG4gICAgICAgIE5ldEF3YXJkLkluc3RhbmNlLmdyb3d0aEZ1bmRTdGF0ZVJlcSgpO1xyXG4gICAgICAgIHRoaXMucmVmcmVoRnVuZENvbmZpZygpO1xyXG4gICAgICAgIE5ldEF3YXJkLkluc3RhbmNlLmdyb3d0aEZ1bmRTdGF0ZVJlcSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yi35paw6YWN572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmVmcmVoRnVuZENvbmZpZygpOiB2b2lkIHtcclxuICAgICAgICBOZXRBd2FyZC5JbnN0YW5jZS5ncm93dGhGdW5kQ29uZmlnUmVxKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOa0u+WKqOe7k+adn+aXtumXtFxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYWN0RW5kVGltZShkYXRhOiBBd2FyZE1zZy5ncm93dGhfZnVuZF9zdGF0ZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDIwMCwgdGhpcywgdGhpcy50aW1lU2hvdyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOa0u+WKqOaXtumXtOaYvuekulxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHRpbWVTaG93KCkge1xyXG4gICAgICAgIHRoaXMudGltZVRleC50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMuZ2V0VGltZURpZmZlcmVuY2UoTmV0QXdhcmQuSW5zdGFuY2UuZW5kVGltZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmiJDplb/ln7rph5HotK3kubDlj43ppohcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdyb3d0aEZ1bmRCdXlSZXNwKGRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX2J1eV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jdXJyRnVuZElkID0gZGF0YS5mdW5kX2lkO1xyXG4gICAgICAgIHRoaXMucmVmcmVoRnVuZENvbmZpZygpO1xyXG4gICAgICAgIHRoaXMuYXdhcmRDb2RlKGRhdGEuY29kZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOW9k+WJjeWfuumHkeaho+asoVxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZnVuZElkKGRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX2luZm9fcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY3VyckZ1bmRJZCA9IGRhdGEuZnVuZF9pZDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMlumFjee9ruS/oeaBr1xyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaW5pdEluZm9MaXN0KGRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX2NvbmZpZ19yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbmZvTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIHZhciBpbmZvOiBBcnJheTxBd2FyZE1zZy5ncm93dGhfZnVuZF9jb25maWc+ID0gZGF0YS5jb25maWdzO1xyXG4gICAgICAgIGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBpbmZvLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBpbmZvQ29tOiBHQ29tcG9uZW50ID0gdGhpcy5pbmZvTGlzdC5hZGRJdGVtRnJvbVBvb2woKS5hc0NvbTtcclxuICAgICAgICAgICAgdmFyIGJnTG9hZGVyOiBmYWlyeWd1aS5HTG9hZGVyID0gaW5mb0NvbS5nZXRDaGlsZChcImJnTG9hZGVyXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgICAgICBiZ0xvYWRlci5pY29uID0gXCJ1aTovL0dyb3d0aEZ1bmQvXCIgKyBpO1xyXG4gICAgICAgICAgICB2YXIgYmdMb2FkZXI6IGZhaXJ5Z3VpLkdMb2FkZXIgPSBpbmZvQ29tLmdldENoaWxkKFwidGlwTG9hZGVyXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgICAgICBiZ0xvYWRlci5pY29uID0gXCJ1aTovL0dyb3d0aEZ1bmQvXCIgKyBcInRpcFwiICsgaTtcclxuICAgICAgICAgICAgaW5mb0NvbS5nZXRDaGlsZChcInRpbWVzVGV4XCIpLnRleHQgPSAoaW5mb1tpXS5yZWJhdGVfcGVyKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICBpbmZvQ29tLmdldENoaWxkKFwicHJpY2VUZXhcIikudGV4dCA9IChOdW1iZXIoaW5mb1tpXS5wcmljZSkgKiAwLjAxKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICBpbmZvQ29tLmdldENoaWxkKFwicmViYXRlVGV4XCIpLnRleHQgPSAoTnVtYmVyKGluZm9baV0ucmViYXRlKSAqIDAuMDEpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIHZhciBieVN0YXR1c0NvbTogR0NvbXBvbmVudCA9IGluZm9Db20uZ2V0Q2hpbGQoXCJieVN0YXR1c0NvbVwiKS5hc0NvbTtcclxuICAgICAgICAgICAgdmFyIGJ1eTogZmFpcnlndWkuR0J1dHRvbiA9IGJ5U3RhdHVzQ29tLmdldENoaWxkKFwiYnV5QnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgICAgICB2YXIgYzogZmFpcnlndWkuQ29udHJvbGxlciA9IGJ5U3RhdHVzQ29tLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICAgICAgYy5zZWxlY3RlZEluZGV4ID0gMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuY3VyckZ1bmRJZCA8IDIpIHtcclxuICAgICAgICAgICAgICAgIGMuc2VsZWN0ZWRJbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSBpbmZvW2ldLmZ1bmRfaWQ7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJpY2UgPSBOdW1iZXIoaW5mb1tpXS5wcmljZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ5QnRuKGJ1eSwgaWQsIHByaWNlKTtcclxuICAgICAgICAgICAgICAgIC8vYnV5Lm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soaWQsIHByaWNlKSB9KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSBpbmZvW2ldLmZ1bmRfaWQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoaWQgPT0gdGhpcy5jdXJyRnVuZElkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYy5zZWxlY3RlZEluZGV4ID0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlkID4gdGhpcy5jdXJyRnVuZElkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYy5zZWxlY3RlZEluZGV4ID0gMztcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHJpY2UgPSBOdW1iZXIoaW5mb1tpXS5wcmljZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJQcmljZSA9IE51bWJlcihpbmZvW3RoaXMuY3VyckZ1bmRJZCAtIDJdLnByaWNlKTsvL+etiee6p+aYr+S7jjHlvIDlp4tcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ5QnRuKGJ1eSwgaWQsIHByaWNlIC0gY3VyclByaWNlKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBidXkub25DbGljayh0aGlzLCAoKSA9PiB0aGlzLm9uQnV5Q2xpY2soaWQsIHByaWNlIC0gY3VyclByaWNlKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjLnNlbGVjdGVkSW5kZXggPSAyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaW5mb0xpc3QuZW5zdXJlQm91bmRzQ29ycmVjdCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOi0reS5sOaMiemSrlxyXG4gICAgICogQHBhcmFtIGJ5QnRuIFxyXG4gICAgICogQHBhcmFtIGlkIFxyXG4gICAgICogQHBhcmFtIHByaWNlIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGJ5QnRuKGJ5QnRuOiBmYWlyeWd1aS5HQnV0dG9uLCBpZDogbnVtYmVyLCBwcmljZTogbnVtYmVyKTogdm9pZCB7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoaWQpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSBwcmljZTtcclxuICAgICAgICAgICAgICAgIGJ5QnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soMSwgcCkgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSBwcmljZTtcclxuICAgICAgICAgICAgICAgIGJ5QnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soMiwgcCkgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSBwcmljZTtcclxuICAgICAgICAgICAgICAgIGJ5QnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soMywgcCkgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSBwcmljZTtcclxuICAgICAgICAgICAgICAgIGJ5QnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soNCwgcCkgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSBwcmljZTtcclxuICAgICAgICAgICAgICAgIGJ5QnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uQnV5Q2xpY2soNCwgcCkgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6LSt5Lmw5Z+66YeR5by55qGGXHJcbiAgICAgKiBAcGFyYW0gaWQgXHJcbiAgICAgKiBAcGFyYW0gcHJpY2UgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25CdXlDbGljayhpZDogbnVtYmVyLCBwcmljZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbGljayk7XHJcbiAgICAgICAgdGhpcy5idXlJZCA9IGlkO1xyXG4gICAgICAgIHRoaXMuYnV5UHJpY2UgPSBwcmljZTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5sdkZ1bmRDaC50aXBzTGV2ZWxCdXkucmVwbGFjZShcInswfVwiLCAocHJpY2UgKiAwLjAxKS50b1N0cmluZygpKSwgVGlwVHlwZS5ZRVNOT0NIT0lDRSwgZnVuY3Rpb24gKGlzVHJ1ZTogYm9vbGVhbikge1xyXG4gICAgICAgICAgICBpZiAoaXNUcnVlKSB7XHJcbiAgICAgICAgICAgICAgICBOZXRBd2FyZC5JbnN0YW5jZS5ncm93dEZ1bmRCdXlSZXEoaWQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm56Gu5a6a6LSt5LmwXHJcbiAgICAgKiBAcGFyYW0gaXNUcnVlIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGlzVHJ1ZShpc1RydWU6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgICAgICBpZiAoaXNUcnVlKSB7XHJcbiAgICAgICAgICAgIE5ldEF3YXJkLkluc3RhbmNlLmdyb3d0RnVuZEJ1eVJlcSh0aGlzLmJ1eUlkKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOa0u+WKqOivtOaYjlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uQWN0RGV0YWlsc0NsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTHZEZXRhaWxQYW5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnrYnnuqflpZbph5FcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkx2Qm9udXNDbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkxldmVsQm9udXNQYW5lbCk7XHJcbiAgICAgICAgdGhpcy5vbkNsb3NlKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHRhcmdlbnRDb20g5YWz6Zet55uu5qCHXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMudGltZVNob3cpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUdyb3d0aEZ1bmRQYW5lID0gZmFsc2U7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbG9zZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRDT05GSUdSRVNQLCB0aGlzLCB0aGlzLmluaXRJbmZvTGlzdCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRJTkZPUkVTUCwgdGhpcywgdGhpcy5mdW5kSWQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5EU1RBVEVSRVNQLCB0aGlzLCB0aGlzLmFjdEVuZFRpbWUpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5EQlVZUkVTUCwgdGhpcywgdGhpcy5ncm93dGhGdW5kQnV5UmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5jbG9zZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkdyb3d0aEZ1bmRQYW5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlo7Dpn7Pmkq3mlL5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzb3VuZFBsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25PcGVuKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Z+66YeR5ZCN5a2X6L2s5YyWXHJcbiAgICAgKiBAcGFyYW0gaWQgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgbnVtVG9GdW5kTmFtZShpZDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICB2YXIgc3RyOiBzdHJpbmcgPSBudWxsO1xyXG4gICAgICAgIHN3aXRjaCAoaWQpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgc3RyID0gXCLlhajmsJHln7rph5FcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICBzdHIgPSBcIuiNo+iAgOWfuumHkVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIHN0ciA9IFwi5bCK5Lqr5Z+66YeRXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgc3RyID0gXCLosarljY7ln7rph5FcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgICAgICBzdHIgPSBcIuiHs+iHu+WfuumHkVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHN0cjtcclxuICAgIH1cclxuICAgIHByaXZhdGUgYXdhcmRDb2RlKGZ1bmRCdXk6IEF3YXJkTXNnLmF3YXJkX2NvZGUpOiB2b2lkIHtcclxuICAgICAgICB2YXIgY29kZSA9IEF3YXJkTXNnLmF3YXJkX2NvZGU7XHJcbiAgICAgICAgc3dpdGNoIChmdW5kQnV5KSB7XHJcbiAgICAgICAgICAgIGNhc2UgY29kZS5zdWNjZXNzOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6LSt5Lmw77ya6YeR5biB5oiQ5YqfXCIpO1xyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKExhbmcubHZGdW5kQ2gudGlwRnVuZEJ1eS5yZXBsYWNlKFwiezB9XCIsICh0aGlzLmJ1eVByaWNlICogMC4wMSkudG9TdHJpbmcoKSkucmVwbGFjZShcInsxfVwiLCB0aGlzLm51bVRvRnVuZE5hbWUodGhpcy5idXlJZCkpLCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUuZmFpbDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIui0reS5sO+8mumHkeW4geWksei0pVwiKTtcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmx2RnVuZENoLnRpcFB1cmNoYXNlRmFpbGVkLCBUaXBUeXBlLk9ORUNMT1NFKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUub3V0X29mX2Nhc2g6XHJcbiAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLotK3kubDvvJrph5HluIHkuI3otrNcIik7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5sdkZ1bmRDaC50aXBzR29sZExlc3MsIFRpcFR5cGUuT05FQ0xPU0UpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgY29kZS50b3BfZnVuX2lkOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6LSt5Lmw77ya5b2T5YmN5bey57uP5piv5pyA6auY5qGj5qyh5Z+66YeRXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgY29kZS5sdl9oYWRfcmV3YXJkOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6LSt5Lmw77ya5b2T5YmN5aWW5Yqx5bey57uP6aKG5Y+WXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgY29kZS5sZXZlbG5vdDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIui0reS5sO+8muW9k+WJjeWlluWKseacqua7oei2s+mihuWPluadoeS7tlwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUucHJldl9yZXdhcmQ6XHJcbiAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLotK3kubDvvJrliY3nva7lpZblirHmnKrpooblj5ZcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBjb2RlLmhhZF9ib3VnaHQ6XHJcbiAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLotK3kubDvvJrmtLvliqjlt7Lnu4/kubDkuoZcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBjb2RlLmFjdF9lbmQ6XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0FjdEVuZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBHQ29tcG9uZW50PWZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBDb250cm9sbGVyPWZhaXJ5Z3VpLkNvbnRyb2xsZXI7XHJcbmltcG9ydCBIYW5kbGVyPWxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlcj1sYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBOZXRSb29tIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9vbVwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgU291bmQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L1NvdW5kTmFtZUNvbnN0YW50XCI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICBjbGFzcyAgR3VpZGVQYW5lbCBleHRlbmRzIEJhc2VQYW5lbHtcclxuICBwcml2YXRlIGd1aWRlQ29tOkdDb21wb25lbnQ7XHJcbiAgcHJpdmF0ZSBjbDpDb250cm9sbGVyO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlHdWlkZVBhdGguaW1hZ2UsQ29tbW9uQ29uc3RhbnQuX2Z1aUd1aWRlUGF0aC5mdWksdGhpcyx0aGlzLm9uTG9hZFNldHRpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296K6+572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkU2V0dGluZygpOnZvaWR7ICAgICAgICBcclxuICAgICAgICB0aGlzLmd1aWRlQ29tPUdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuZ2V0TWFpbkNvbShDb21tb25Db25zdGFudC5fZnVpR3VpZGVQYXRoLlBhY2thZ2UsXCJHdWlkZVwiLFwiR3VpZGVDb21cIik7XHJcbiAgICAgICAgZmFpcnlndWkuR1Jvb3QuaW5zdC5zZXRDaGlsZEluZGV4KHRoaXMuZ3VpZGVDb20sKzIpO1xyXG4gICAgICAgIHRoaXMuY2w9dGhpcy5ndWlkZUNvbS5nZXRDb250cm9sbGVyKFwiR3VpZGVDbFwiKTtcclxuICAgICAgICB2YXIgY2xvc2VCdG46ZmFpcnlndWkuR0J1dHRvbj10aGlzLmd1aWRlQ29tLmdldENoaWxkKFwiY2xvc2VcIikuYXNCdXR0b247XHJcbiAgICAgICAgY2xvc2VCdG4ub25DbGljayh0aGlzLCgpPT57dGhpcy5vbmNsb3NlKCk7fSApO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOeCueWHu+ehruiupFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uY2xvc2UoKTp2b2lke1xyXG4gICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCxTb3VuZC5zb3VuZEtleUFyci5vbkNsaWNrKTtcclxuICAgICAgICAgIHRoaXMuY2wuc2VsZWN0ZWRJbmRleD0xO1xyXG4gICAgICAgICAgdGhpcy5zZW50Tm92aWNlKCk7XHJcbiAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMzAwLHRoaXMsdGhpcy5vbkdlYXJTdG9wKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKqOeUu+e7k+adn+WIoOmZpOW8leWvvOeVjOmdolxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uR2VhclN0b3AoKTp2b2lke1xyXG4gICAgICAgIHRoaXMuZ3VpZGVDb20uZGlzcG9zZSgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcucmVtb3ZlVUlQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlHdWlkZVBhdGguUGFja2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj5HpgIHlt7Lnu4/lvJXlr7zkuobnu5nmnI3liqHnq69cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzZW50Tm92aWNlKCk6dm9pZHsgICAgICAgXHJcbiAgICAgIE5ldFJvb20uSW5zdGFuY2UuTm92aWNlUHJvbXB0UmVxKCk7ICBcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgU2NlbmVNYW5hZ2VyIGZyb20gXCIuLi8uLi9tYW5hZ2VyL1NjZW5lTWFuYWdlclwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgU291bmQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L1NvdW5kTmFtZUNvbnN0YW50XCI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IEV2ZW50TmV0UmVzcG9uc2UgZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRSb29tIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9vbVwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IHsgY2FtZXJhTW92ZSB9IGZyb20gXCIuLi9Mb2dpbi9DYW1lcmEvQ2FtZXJhTW92ZVwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IGpwQmVhdCBmcm9tIFwiLi4vTG9naW4vSnAvSnBCZWF0XCI7XHJcbmltcG9ydCBGcmVlVHJhbldhbGxldCBmcm9tIFwiLi9XYWxsZXRQYW5lbFwiO1xyXG5pbXBvcnQgTmV0Um9sZUluZm8gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRSb2xlSW5mb1wiO1xyXG5pbXBvcnQgTmV0SnBQb29sIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0SnBQb29sXCI7XHJcbmltcG9ydCB7IFRpcFR5cGUgfSBmcm9tIFwiLi4vLi4vbWFuYWdlci9UaXBNYW5hZ2VyXCI7XHJcbmltcG9ydCBMYW5nIGZyb20gXCIuLi8uLi9jb25zdGFudC9MYW5ndWFnZUNvbnN0YW50XCI7XHJcbmltcG9ydCBSZWJhdGVBY3QgZnJvbSBcIi4uL0xvZ2luL0FjdC9SZWJhdGVBY3RcIjtcclxuaW1wb3J0IHsgQWRkV2VicGFnZSB9IGZyb20gXCIuLi9Mb2dpbi9BZGRXZWJwYWdlcy9BZGRXZWJwYWdlXCI7XHJcbmltcG9ydCBOZXRBd2FyZCBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldEF3YXJkXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0TG9naW5cIjtcclxuaW1wb3J0IE5ldFJlcG9ydCBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJlcG9ydFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIYWxsUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHJpdmF0ZSBtX2lzbGFuZEluZm9QYW5lbEVmZmVjdDogZmFpcnlndWkuR0NvbXBvbmVudDsgLy/lspvkv6Hmga/pnaLmnb/nmoTmlYjmnpxcclxuICAgIHByaXZhdGUgbV9pc2xhbmRJbmZvUGFuZWw6IGZhaXJ5Z3VpLkdDb21wb25lbnQ7IC8v5bKb5L+h5oGv6Z2i5p2/XHJcbiAgICBwcml2YXRlIGZ1bmRDb206IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIGx2Q29tOiBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSByZWJhdGVDb206IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIG5hbWVUZXh0OiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIGNvaW5UZXh0OiBmYWlyeWd1aS5HVGV4dEZpZWxkO1xyXG4gICAgcHJpdmF0ZSBsdlRleHQ6IGZhaXJ5Z3VpLkdMYWJlbDtcclxuICAgIHByaXZhdGUgZXhwUGVyOiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIGVuZFRpbWVUZXg6IGZhaXJ5Z3VpLkdMYWJlbDsvL+a0u+WKqOe7k+adn+aXtumXtFxyXG4gICAgcHJpdmF0ZSBleHBQcm9ncmVzczogZmFpcnlndWkuR1Byb2dyZXNzQmFyO1xyXG4gICAgcHJpdmF0ZSB3YWxsZXRCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIHNldHRpbmdCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIGhlbHBCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIHJlcG9ydEJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgcmFua2luZ0J0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUganBCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIHByZUJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgbmV4dEJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgZmFzdEJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgcmViYXRlQWN0QnRuOiBmYWlyeWd1aS5HQnV0dG9uO1xyXG4gICAgcHJpdmF0ZSBiYWNrTWFpblBhZ2VCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIHBlcnNvbm5hbEluZm9CdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIGx2Qm9udXNCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIGdyb3d0aEZ1bmRCdG46IGZhaXJ5Z3VpLkdCdXR0b247XHJcbiAgICBwcml2YXRlIGx2TmV3OiBmYWlyeWd1aS5HSW1hZ2U7Ly/nibnmropuZXcg5pyJ562J57qn5aWW6YeR5Y+v5Lul6aKG5Y+W55qE5pe25YCZIOWHuueOsCBcclxuXHJcbiAgICBwcml2YXRlIG1fY3VySXNsYW5kSW5kZXg6IG51bWJlcjsgLy/lvZPliY3lspvlsb/nmoTkuIvmoIdcclxuICAgIHByaXZhdGUgbV9iTW92aW5nOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBtX3NjZW5lM0Q6IExheWEuU2NlbmUzRDtcclxuICAgIHByaXZhdGUgbV9pc2xhbmRBcnI6IEFycmF5PExheWEuU3ByaXRlM0Q+ID0gW107XHJcbiAgICBwcml2YXRlIG1fc2NlbmVNbmc6IFNjZW5lTWFuYWdlcjtcclxuICAgIHByaXZhdGUgbV9pc2xhbmRidXQ6IExheWEuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBtX2RpcmVjdGlvbjogbnVtYmVyID0gQ29tbW9uQ29uc3RhbnQuRElSSUNUSU9OLkhPUklaT05UQUw7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2JIYWxsUGFuZWxGaW5pc2hlZCA9IGZhbHNlO1xyXG4gICAgY29uc3RydWN0b3IoaWQpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMubV9zY2VuZU1uZyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmc7XHJcbiAgICAgICAgdGhpcy5tX2JNb3ZpbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm1fY3VySXNsYW5kSW5kZXggPSAwO1xyXG4gICAgICAgIHRoaXMubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICB0aGlzLm1fYkhhbGxQYW5lbEZpbmlzaGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOi/m+WFpeWkp+WOhVxyXG4gICAgICogQHBhcmFtIHNjZW5lM0QgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBFbnRlckFmdGVyKHNjZW5lM0Q6IExheWEuU2NlbmUzRCkge1xyXG5cclxuICAgICAgICAvL3RoaXMuU2hvd0VmZmVjdCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MT0dJTlJFU1JPTEVJTkZPLCB0aGlzLCB0aGlzLkluaXRSb2xlSW5mbyk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoR2FtZUV2ZW50LkdBTUVfUkVDT05ORUNULCB0aGlzLCB0aGlzLlJlY29ubmVjdCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5FbnRlclJvb21SZXNwLCB0aGlzLCB0aGlzLkVudGVyUm9vbVJlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuU3luY0NoaXBzUmVzcCwgdGhpcywgdGhpcy5zeW5jQ2hpcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5NcVN5bmNDaGlwc1Jlc3AsIHRoaXMsIHRoaXMubXFTeW5jQ2hpcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWSU5GT1JFU1AsIHRoaXMsIHRoaXMubHZJbmZvKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuR1JPV1RIRlVORFNUQVRFUkVTUCwgdGhpcywgdGhpcy5hY3RFbmRUaW1lKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuU1dJVENIUkVTUCwgdGhpcywgdGhpcy5vblN3aXRjaCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWQVdBUkRSRVNQLCB0aGlzLCB0aGlzLnN5bkx2TmV3KTtcclxuICAgICAgICB0aGlzLkluaXRTY2VuZShzY2VuZTNEKTtcclxuICAgICAgICB0aGlzLkluaXRGdWkoKTtcclxuICAgICAgICAvL3RoaXMuSW5pdFJvbGVJbmZvKCk7XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VQYW5lbEluZm8odGhpcy5tX2N1cklzbGFuZEluZGV4KTtcclxuICAgICAgICBOZXRSb29tLkluc3RhbmNlLlN5bmNDaGlwc1JlcSgpO1xyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmJQcm9oaWJpdFdhbGxldEJ0biA9IHRydWU7XHJcblxyXG4gICAgICAgIE5ldFJlcG9ydC5JbnN0YW5jZS5TY3JlZW5SZXBvcnRSZXEoKTtcclxuICAgICAgICBMYXlhLnN0YWdlLm9uKExheWEuRXZlbnQuUkVTSVpFLCB0aGlzLCB0aGlzLm9uU3RhZ2VDaGFuZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5bGP5bmV5qiq56uW5bGP5YiH5o2i77yM5a696auY5Y+Y5YyWXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25TdGFnZUNoYW5nZSgpIHtcclxuICAgICAgICBsZXQgc2NyZWVuV2lkdGg6IG51bWJlciA9IExheWEuQnJvd3Nlci5jbGllbnRXaWR0aDtcclxuICAgICAgICBsZXQgc2NyZWVuSGVpZ2h0OiBudW1iZXIgPSBMYXlhLkJyb3dzZXIuY2xpZW50SGVpZ2h0O1xyXG5cclxuICAgICAgICBpZiAodGhpcy5tX2RpcmVjdGlvbiA9PT0gQ29tbW9uQ29uc3RhbnQuRElSSUNUSU9OLkhPUklaT05UQUwgJiYgc2NyZWVuV2lkdGggPCBzY3JlZW5IZWlnaHQpIHtcclxuICAgICAgICAgICAgLy90aGlzLm9uRGlyZWN0aW9uQ2hhbmdlVG9WZXJ0aWNhbCgpO1xyXG4gICAgICAgICAgICBOZXRSZXBvcnQuSW5zdGFuY2UuU2NyZWVuUmVwb3J0UmVxKCk7XHJcbiAgICAgICAgICAgIHRoaXMubV9kaXJlY3Rpb24gPSBDb21tb25Db25zdGFudC5ESVJJQ1RJT04uVkVSVElDQUw7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLSBvblN0YWdlQ2hhbmdlIOerluWxj1wiKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMubV9kaXJlY3Rpb24gPT09IENvbW1vbkNvbnN0YW50LkRJUklDVElPTi5WRVJUSUNBTCAmJiBzY3JlZW5XaWR0aCA+PSBzY3JlZW5IZWlnaHQpIHtcclxuICAgICAgICAgICAgLy90aGlzLm9uRGlyZWN0aW9uQ2hhbmdlVG9Ib3Jpem9udGFsKCk7XHJcbiAgICAgICAgICAgIE5ldFJlcG9ydC5JbnN0YW5jZS5TY3JlZW5SZXBvcnRSZXEoKTtcclxuICAgICAgICAgICAgdGhpcy5tX2RpcmVjdGlvbiA9IENvbW1vbkNvbnN0YW50LkRJUklDVElPTi5IT1JJWk9OVEFMO1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0gb25TdGFnZUNoYW5nZSDmqKrlsY9cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMljNEXHJcbiAgICAgKiBAcGFyYW0gc2NlbmUzRCBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBJbml0U2NlbmUoc2NlbmUzRDogTGF5YS5TY2VuZTNEKSB7XHJcbiAgICAgICAgdGhpcy5tX3NjZW5lM0QgPSBzY2VuZTNEO1xyXG4gICAgICAgIHRoaXMubV9zY2VuZTNELmFtYmllbnRDb2xvciA9IG5ldyBMYXlhLlZlY3RvcjMoMSwgMSwgMSk7XHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZChuZXcgTGF5YS5JbWFnZShDb21tb25Db25zdGFudC5faGFsbEJnUGF0aCkpO1xyXG4gICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5tX3NjZW5lM0QpO1xyXG4gICAgICAgIC8v5re75Yqg5bKbXHJcbiAgICAgICAgdmFyIE5vZGUgPSB0aGlzLm1fc2NlbmUzRC5nZXRDaGlsZEJ5TmFtZShcIklzbGFuZFwiKSBhcyBMYXlhLk5vZGU7XHJcbiAgICAgICAgdmFyIGNhbWVyYSA9IHRoaXMubV9zY2VuZTNELmdldENoaWxkQnlOYW1lKFwiTWFpbiBDYW1lcmFcIikgYXMgTGF5YS5DYW1lcmE7XHJcbiAgICAgICAgY2FtZXJhLmFkZENvbXBvbmVudChjYW1lcmFNb3ZlKTtcclxuICAgICAgICB2YXIgbnVtID0gTm9kZS5udW1DaGlsZHJlbjtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bTsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBzcDNEID0gTm9kZS5nZXRDaGlsZEF0KGkpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgICAgIHRoaXMubV9pc2xhbmRBcnIucHVzaChzcDNEKTtcclxuICAgICAgICAgICAgaWYgKGkgIT0gMCkge1xyXG4gICAgICAgICAgICAgICAgc3AzRC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNwM0QuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMljJEXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgSW5pdEZ1aSgpOiB2b2lkIHtcclxuICAgICAgICBmYWlyeWd1aS5VSVBhY2thZ2UuYWRkUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpSGFsbFVJUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAvLy8vICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlIYWxsUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICB0aGlzLm1fZnVpID0gZmFpcnlndWkuVUlQYWNrYWdlLmNyZWF0ZU9iamVjdChcIkhhbGxVSVwiLCBcIkhhbGxQYW5lbFwiKS5hc0NvbTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkFkZEZVSSh0aGlzLm1fZnVpKTtcclxuICAgICAgICB0aGlzLm5hbWVUZXh0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm5hbWVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmNvaW5UZXh0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNvaW5UZXhcIikuYXNUZXh0RmllbGQ7XHJcbiAgICAgICAgdGhpcy5sdlRleHQgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibHZUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmV4cFByb2dyZXNzID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImx2UHJvZ3Jlc3NCYXJcIikuYXNQcm9ncmVzcztcclxuICAgICAgICB0aGlzLmV4cFBlciA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJsdlBlclwiKS5hc0xhYmVsO1xyXG5cclxuICAgICAgICB2YXIganAgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwianBcIikuYXNDb207XHJcbiAgICAgICAgdGhpcy5qcEJ0biA9IGpwLmdldENoaWxkKFwianBCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5qcEJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25KcEJ0bkNsaWNrKTtcclxuICAgICAgICB2YXIganBiOiBqcEJlYXQgPSBqcC5kaXNwbGF5T2JqZWN0LmFkZENvbXBvbmVudChqcEJlYXQpO1xyXG4gICAgICAgIGpwYi5zZXRKcFRleHQoanAuZ2V0Q2hpbGQoXCJqcE51bVRleFwiKS5hc0xhYmVsKTtcclxuICAgICAgICBqcGIuc3luSnBEYXRhKCk7XHJcbiAgICAgICAgdGhpcy5iYWNrTWFpblBhZ2VCdG4gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiYmFja01haW5QYWdlQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuYmFja01haW5QYWdlQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5vbkJhY2tNYWluUGFnZSk7XHJcbiAgICAgICAgdGhpcy5iYWNrTWFpblBhZ0J0blNob3coKTtcclxuICAgICAgICB0aGlzLndhbGxldEJ0biA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJ3YWxsZXRCdG5cIikuYXNCdXR0b247IHRoaXMud2FsbGV0QnRuLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLndhbGxldEJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMuT25XYWxsZXRCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5zZXR0aW5nQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInNldHRpbmdCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5zZXR0aW5nQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PblNldEJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLnJlcG9ydEJ0biA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJyZXBvcnRCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5yZXBvcnRCdG4ub25DbGljayh0aGlzLCB0aGlzLk9uRXhjZWxCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5oZWxwQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImhlbHBCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5oZWxwQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PbkhlbHBCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5yYW5raW5nQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInJhbmtCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5yYW5raW5nQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PblJhbmtCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5wcmVCdG4gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwicHJlQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMucHJlQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PbkxlZnRCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5uZXh0QnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm5leHRCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5uZXh0QnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PblJpZ2h0QnRuQ2xpY2spO1xyXG4gICAgICAgIHRoaXMuZmFzdEJ0biA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJmYXN0QnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuZmFzdEJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMuT25RdWlja0dhbWVDbGljayk7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEluZm9QYW5lbCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJJc2xhbmRJbmZvRWZmZWN0XCIpLmFzQ29tXHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEluZm9QYW5lbC5nZXRDaGlsZChcIlJhdGVCdG5cIikub25DbGljayh0aGlzLCB0aGlzLk9uR2FtZUJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiYmdCdG5cIikub25DbGljayh0aGlzLCB0aGlzLk9uR2FtZUJ0bkNsaWNrKTtcclxuXHJcbiAgICAgICAgbGV0IGNvbnRvcmxsZXI6IGZhaXJ5Z3VpLkNvbnRyb2xsZXIgPSB0aGlzLm1fZnVpLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICBjb250b3JsbGVyLnNlbGVjdGVkSW5kZXggPSBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuc2hlZXQgPT0gMCA/IDEgOiAwO1xyXG5cclxuICAgICAgICB0aGlzLmluaXRBY3RGdWkoKTtcclxuICAgICAgICB0aGlzLnJvbGUoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnVzZXJBY2NvdW50LCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcudXNlckNoaXBzKTsgLy/pu5jorqTlgLzjgIHorrDlvZXnmoTmiL/pl7TlhoXnmoTlgLxcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLk1hcnF1ZWVQYW5lbCwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog55Sx5LqOZnVp5aSq5aSaIOWIhuW8gGFjdOeahOWNleeLrOWkhOeQhlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGluaXRBY3RGdWkoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZWJhdGVDb20gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwicmViYXRlQWN0XCIpLmFzQ29tO1xyXG4gICAgICAgIHRoaXMucmViYXRlQWN0QnRuID0gdGhpcy5yZWJhdGVDb20uZ2V0Q2hpbGQoXCJyZWJhdGVBY3RCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5yZWJhdGVBY3RCdG4ub25DbGljayh0aGlzLCB0aGlzLm9uUmViYXRlQWN0QnRuQ2xpY2spO1xyXG4gICAgICAgIHRoaXMucmViYXR3QWN0U2hvdygpO1xyXG4gICAgICAgIHRoaXMucGVyc29ubmFsSW5mb0J0biA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJwZXJzb25hbEluZm9CdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5wZXJzb25uYWxJbmZvQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5vblBlcnNvbmFsSW5mb0J0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLnBlcnNvbm5hbEluZm9CdG4udG91Y2hhYmxlID0gIUdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5pc1BsYXk7XHJcbiAgICAgICAgdGhpcy5sdkNvbSA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJsdkNvbVwiKS5hc0NvbTtcclxuICAgICAgICB0aGlzLmx2Qm9udXNCdG4gPSB0aGlzLmx2Q29tLmdldENoaWxkKFwibHZCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5sdk5ldyA9IHRoaXMubHZDb20uZ2V0Q2hpbGQoXCJsdk5ld1wiKS5hc0ltYWdlO1xyXG4gICAgICAgIHRoaXMubHZOZXcudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubHZCb251c0J0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25MdkJvbnVzQnRuQ2xpY2spO1xyXG4gICAgICAgIHRoaXMuZnVuZENvbSA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJmdW5kQ29tXCIpLmFzQ29tO1xyXG4gICAgICAgIHRoaXMuZW5kVGltZVRleCA9IHRoaXMuZnVuZENvbS5nZXRDaGlsZChcInRpbWVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmdyb3d0aEZ1bmRCdG4gPSB0aGlzLmZ1bmRDb20uZ2V0Q2hpbGQoXCJmdW5kQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuZ3Jvd3RoRnVuZEJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25Hcm93dGhGdW5kQnRuQ2xpY2spO1xyXG4gICAgICAgIHRoaXMuZnVuZENvbS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5sdkNvbS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zeW5EYXRhKCk7XHJcbiAgICAgICAgdGhpcy5zb3VuZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6L+U5Zue5aSn5Y6F5oyJ6ZKu5pi+56S6XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYmFja01haW5QYWdCdG5TaG93KCkge1xyXG4gICAgICAgIGlmICghdXRpbHMuQ29tbW9uVXRpbHMuaXNBcHAoKSkge1xyXG4gICAgICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnJldHVybiA9PSBcIjBcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iYWNrTWFpblBhZ2VCdG4udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKChHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubG9iYnlVcmwgPT0gbnVsbCB8fCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubG9iYnlVcmwgPT0gXCJcIikgJiYgTGF5YS5Ccm93c2VyLm9uUEMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYmFja01haW5QYWdlQnRuLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5ZCM5q2l6L+U5Yip5rS75Yqo5pi+56S6XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmViYXR3QWN0U2hvdygpIHtcclxuICAgICAgICBpZiAodXRpbHMuQ29tbW9uVXRpbHMuaXNBcHAoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlYmF0ZUNvbS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgcmJBY3Q6IFJlYmF0ZUFjdCA9IHRoaXMucmViYXRlQ29tLmRpc3BsYXlPYmplY3QuYWRkQ29tcG9uZW50KFJlYmF0ZUFjdCk7XHJcbiAgICAgICAgICAgIHJiQWN0LnNldFRpbWVMYWJlbCh0aGlzLnJlYmF0ZUNvbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAqIOa0u+WKqOe7k+adn+aXtumXtFxyXG4gICAqIEBwYXJhbSBkYXRhIFxyXG4gICAqL1xyXG4gICAgcHJpdmF0ZSBhY3RFbmRUaW1lKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEudGltZXIubG9vcCgyMDAsIHRoaXMsIHRoaXMudGltZVNob3cpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmtLvliqjml7bpl7TmmL7npLpcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSB0aW1lU2hvdygpIHtcclxuICAgICAgICB0aGlzLmx2Q29tLnZpc2libGUgPSBOZXRMb2dpbi5JbnN0YW5jZS5pc09uTHZTdztcclxuICAgICAgICBpZiAodXRpbHMuQ29tbW9uVXRpbHMuZ2V0VGltZURpZmZlcmVuY2UoTmV0QXdhcmQuSW5zdGFuY2UuZW5kVGltZSkgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLmZ1bmRDb20udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0FjdEVuZCA9IHRydWU7XHJcbiAgICAgICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy50aW1lU2hvdyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZnVuZENvbS52aXNpYmxlID0gTmV0TG9naW4uSW5zdGFuY2UuaXNPbkx2U3c7XHJcbiAgICAgICAgICAgIHRoaXMuZW5kVGltZVRleC50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMuZ2V0VGltZURpZmZlcmVuY2UoTmV0QXdhcmQuSW5zdGFuY2UuZW5kVGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5byA5YWzXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Td2l0Y2goKSB7XHJcbiAgICAgICAgLy8vLyAgY29uc29sZS5sb2coXCLlvIDlhbNcIik7XHJcbiAgICAgICAgLy8vLyAgY29uc29sZS5sb2coTmV0TG9naW4uSW5zdGFuY2UuaXNPbkx2U3cpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDlkIzmraXmlbDmja5cclxuICAgICAqIEBwYXJhbSBqcGIgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc3luRGF0YSgpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgaWYgKE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvICE9IG51bGwpIHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0QnRuLnZpc2libGUgPSBOZXRMb2dpbi5JbnN0YW5jZS5pc09mZmljaWFsO1xyXG4gICAgICAgICAgICB0aGlzLm9uU3dpdGNoKCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaENoaXAoKTtcclxuICAgICAgICAgICAgdGhpcy5yZWZyZXNoTHYoKTtcclxuICAgICAgICAgICAgdGhpcy5yZWZyZXNoRW5kVGltZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog5Yid5aeL5YyW6KeS6Imy5L+h5oGvKi9cclxuICAgIHByaXZhdGUgSW5pdFJvbGVJbmZvKCk6IHZvaWQge1xyXG5cclxuICAgICAgICBsZXQgZGF0YTogUm9sZU1zZy5yb2xlX2luZm8gPSBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mbyBhcyBSb2xlTXNnLnJvbGVfaW5mbztcclxuICAgICAgICBpZiAoZGF0YSA9PSBudWxsKSByZXR1cm47XHJcblxyXG4gICAgICAgIHRoaXMud2FsbGV0QnRuLnZpc2libGUgPSBOZXRMb2dpbi5JbnN0YW5jZS5pc09mZmljaWFsO1xyXG4gICAgICAgIGlmIChkYXRhLmpldHRvbl9zaG93ID09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5PbldhbGxldEJ0bkNsaWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVmcmVzaEx2KCk7XHJcbiAgICAgICAgdGhpcy5yZWZyZXNoRW5kVGltZSgpO1xyXG4gICAgICAgIHRoaXMucm9sZShkYXRhLm5pY2tuYW1lLCBkYXRhLmpldHRvbl9zaG93KTtcclxuICAgICAgICB0aGlzLm1fYkhhbGxQYW5lbEZpbmlzaGVkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIt+aWsOaXtumXtFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlZnJlc2hFbmRUaW1lKCk6IHZvaWQge1xyXG4gICAgICAgIE5ldEF3YXJkLkluc3RhbmNlLmdyb3d0aEZ1bmRTdGF0ZVJlcSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDliLfmlrDph5HluIFcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZWZyZXNoQ2hpcCgpOiB2b2lkIHtcclxuICAgICAgICBOZXRSb29tLkluc3RhbmNlLlN5bmNDaGlwc1JlcSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDliLfmlrDnrYnnuqdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZWZyZXNoTHYoKTogdm9pZCB7XHJcbiAgICAgICAgTmV0Um9sZUluZm8uSW5zdGFuY2UubHZJbmZvUmVxKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiOt+W+l+WQjOatpemHkeW4gVxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc3luY0NoaXAoZGF0YTogUm9vbU1zZy5zeW5jX2NoaXBzX3Jlc3ApOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdGhpcy5tX2JIYWxsUGFuZWxGaW5pc2hlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5yb2xlKE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLm5pY2tuYW1lLCBkYXRhLmNoaXBzKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635b6X5ZCM5q2l6YeR5biBKOeUqOS6juWFjei9rClcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG1xU3luY0NoaXAoZGF0YTogUm9vbU1zZy5tcV9zeW5jX2NoaXBzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnJvbGUoTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ubmlja25hbWUsIGRhdGEuY2hpcHMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflvpflkIzmraXnrYnnuqdcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGx2SW5mbyhkYXRhOiBSb2xlSW5mb01zZy5sdl9pbmZvX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmV4cChkYXRhLm5lZWRfZXhwLCBkYXRhLmV4cCwgZGF0YS5sdik7Ly/kuI7mtLvliqjnm7jlhbPnu4/pqozlgLxcclxuICAgICAgICB0aGlzLmx2TmV3U2hvdyhkYXRhLmx2LCBkYXRhLnJld2FyZF9sdiArIDEpOy8v5Yid5aeL5YyW562J57qnbmV35qCH6K+GXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlkIzmraXnrYnnuqduZXfmoIfor4ZcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzeW5Mdk5ldyhkYXRhOiBBd2FyZE1zZy5sdl9hd2FyZF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGRhdGEuY29kZSA9PSBBd2FyZE1zZy5hd2FyZF9jb2RlLnN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgdGhpcy5sdk5ld1Nob3coTmV0Um9sZUluZm8uSW5zdGFuY2UubHZJbmZvLmx2LCBkYXRhLm5leHRfbHYpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog562J57qn6YeM6Z2i55qEbmV3IOWxleekumxvZ2luXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgbHZOZXdTaG93KGN1cnJMdjogbnVtYmVyLCBuZXh0THY6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmIChjdXJyTHYgPj0gbmV4dEx2KS8v5Y+v6aKG5Y+WXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmx2TmV3LnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHsvL+S4jeWPr+mihuWPllxyXG4gICAgICAgICAgICB0aGlzLmx2TmV3LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOinkuiJslxyXG4gICAgICogQHBhcmFtIG5hbWUg5ZCN5a2XXHJcbiAgICAgKiBAcGFyYW0gY29pbiDph5HluIFcclxuICAgICAqIEBwYXJhbSBsdiDnrYnnuqdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByb2xlKG5hbWU6IHN0cmluZywgY29pbjogbnVtYmVyIHwgTG9uZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubmFtZVRleHQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm5pY2tOYW1lV2l0aFN5bWJvbChuYW1lKTtcclxuICAgICAgICB0aGlzLmNvaW5UZXh0LnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGb3JtYXQoTnVtYmVyKGNvaW4pKTtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5jb2luQXV0b0ZvbnRTaXplKHRoaXMuY29pblRleHQpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOe7j+mqjOWAvCBcclxuICAgICAqIEBwYXJhbSBuZWVkRXhwIOmcgOimgeeahOe7j+mqjOWAvFxyXG4gICAgICogQHBhcmFtIGV4cCDlvZPliY3nu4/pqozlgLxcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBleHAobmVlZEV4cDogTG9uZyB8IG51bWJlciwgZXhwOiBMb25nIHwgbnVtYmVyLCBsdjogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sdlRleHQudGV4dCA9IGx2LnRvU3RyaW5nKCk7XHJcbiAgICAgICAgaWYgKG5lZWRFeHAgPT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLmV4cFByb2dyZXNzLnZhbHVlID0gMDtcclxuICAgICAgICAgICAgdGhpcy5leHBQZXIudGV4dCA9IFwiMC4wMCVcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBlID0gTnVtYmVyKGV4cCkgLyBOdW1iZXIobmVlZEV4cCk7XHJcbiAgICAgICAgICAgIHRoaXMuZXhwUHJvZ3Jlc3MudmFsdWUgPSBOdW1iZXIoZXhwKTtcclxuICAgICAgICAgICAgdGhpcy5leHBQcm9ncmVzcy5tYXggPSBOdW1iZXIobmVlZEV4cCk7XHJcbiAgICAgICAgICAgIHRoaXMuZXhwUGVyLnRleHQgPSAoZSAqIDEwMCkudG9GaXhlZCgwKSArIFwiJVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5aOw6Z+zXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc291bmQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXR0aW5nQnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uT3BlbikgfSk7XHJcbiAgICAgICAgdGhpcy5yZXBvcnRCdG4ub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25PcGVuKSB9KTtcclxuICAgICAgICB0aGlzLnJlYmF0ZUFjdEJ0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pIH0pO1xyXG4gICAgICAgIHRoaXMuaGVscEJ0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pIH0pO1xyXG4gICAgICAgIHRoaXMucmFua2luZ0J0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pIH0pO1xyXG4gICAgICAgIHRoaXMuanBCdG4ub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25PcGVuKSB9KTtcclxuICAgICAgICB0aGlzLndhbGxldEJ0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pIH0pO1xyXG4gICAgICAgIHRoaXMucHJlQnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLnJhdGVTZWxlY3QpIH0pO1xyXG4gICAgICAgIHRoaXMubmV4dEJ0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5yYXRlU2VsZWN0KSB9KTtcclxuICAgICAgICB0aGlzLmZhc3RCdG4ub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25DbGljaykgfSk7XHJcbiAgICAgICAgdGhpcy5iYWNrTWFpblBhZ2VCdG4ub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25DbGljaykgfSk7XHJcbiAgICAgICAgdGhpcy5wZXJzb25uYWxJbmZvQnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uT3BlbikgfSk7XHJcbiAgICAgICAgdGhpcy5sdkJvbnVzQnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uT3BlbikgfSk7XHJcbiAgICAgICAgdGhpcy5ncm93dGhGdW5kQnRuLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uT3BlbikgfSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImJnQnRuXCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xpY2spIH0pO1xyXG4gICAgICAgIHRoaXMubV9pc2xhbmRJbmZvUGFuZWwuZ2V0Q2hpbGQoXCJSYXRlQnRuXCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xpY2spIH0pO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheU11c2ljKFNvdW5kLnNvdW5kQmdBcnIuaGFsbEJnTXVzaWMpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcml2YXRlIFJlY29ubmVjdCgpIHtcclxuXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOi/m+aIv+ivt+axgiDvvIjov5vmiL/miJDlip/mlLbliLDnmoTmtojmga/vvIlcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEVudGVyUm9vbVJlc3AoZGF0YTogUm9vbU1zZy5yZWFkeV9yb29tX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkVudGVySHVudFNjZW5lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIOaSreaUvuaMiemSrueCueWHu+WjsOmfs1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uUGxheVNvdW5kKHN0cjogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgc3RyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE9uU2V0QnRuQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5TZXR0aW5nUGFuZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5biu5YqpXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25IZWxwQnRuQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5IZWxwUGFuZWwpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmiqXooahcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBPbkV4Y2VsQnRuQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5pc1BsYXkpIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LkRlbW9BY2NUaXAsIFRpcFR5cGUuT05FQ0xPU0UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgd2luZG93Lm9wZW4oR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnJlcG9ydFVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmjpLooYzmppxcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBPblJhbmtCdG5DbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlJhbmtpbmdQYW5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBqcFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uSnBCdG5DbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkpwUGFuZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWN6L2sXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25XYWxsZXRCdG5DbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5tYWluV2FsbGV0UmVxKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5TliKnmtLvliqhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblJlYmF0ZUFjdEJ0bkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIEFkZFdlYnBhZ2UuY3JlYXRlSWZyYW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuKrkurrkv6Hmga9cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblBlcnNvbmFsSW5mb0J0bkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUGVyc29uYWxJbmZvUGFuZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog562J57qn5aWW6YeRXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25MdkJvbnVzQnRuQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5MZXZlbEJvbnVzUGFuZWwpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmiJDplb/ln7rph5FcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkdyb3d0aEZ1bmRCdG5DbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkdyb3d0aEZ1bmRQYW5lbCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOi/lOWbnuS4u+mhtemdolxyXG4gICAgICog6L+U5Zue6YC76L6R5Y+C6ICDICBodHRwOi8vd2lraS5ibGl6em1pLmxvY2FsL3BhZ2VzL3ZpZXdwYWdlLmFjdGlvbj9wYWdlSWQ9MjgyMTM2NDhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkJhY2tNYWluUGFnZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodXRpbHMuQ29tbW9uVXRpbHMuaXNBcHAoKSkge1xyXG4gICAgICAgICAgICB3aW5kb3cuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubG9iYnlVcmwgIT0gbnVsbCAmJiBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubG9iYnlVcmwgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiIC0tLS0tIOS4u+eVjOmdoui/lOWbniBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubG9iYnlVcmwgPSBcIiwgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmxvYmJ5VXJsKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5sb2JieVVybCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihcImFib3V0OmJsYW5rXCIsIFwiX3NlbGZcIikuY2xvc2UoKTsgLy/lhbPpl63nvZHpobVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpZihMYXlhLkJyb3dzZXIub25QQyl7XHJcbiAgICAgICAgLy8gICBBZGRXZWJwYWdlLmFkZEJhY2tNYWluUGFnZSgpO1xyXG4gICAgICAgIC8vICAgfVxyXG4gICAgICAgIC8vICAgZWxzZXtcclxuICAgICAgICAvLyAgICBBZGRXZWJwYWdlLmNsb3NlUGFnZSgpO1xyXG4gICAgICAgIC8vICAgfVxyXG5cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye75Y+z5oyJ6ZKuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25SaWdodEJ0bkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLm1fYk1vdmluZykgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMubV9iTW92aW5nID0gdHJ1ZTtcclxuICAgICAgICB2YXIgaW5kZXggPSB0aGlzLm1fY3VySXNsYW5kSW5kZXg7XHJcbiAgICAgICAgaWYgKCsrdGhpcy5tX2N1cklzbGFuZEluZGV4ID49IENvbW1vbkNvbnN0YW50LkNfSXNsYW5kQW1vdW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9jdXJJc2xhbmRJbmRleCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubV9pc2xhbmRBcnJbdGhpcy5tX2N1cklzbGFuZEluZGV4XS50cmFuc2Zvcm0ucG9zaXRpb24gPSBuZXcgTGF5YS5WZWN0b3IzKC1Db21tb25Db25zdGFudC5DX0lzbGFuZE1vdmVYLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9pc2xhbmRBcnJbdGhpcy5tX2N1cklzbGFuZEluZGV4XS50cmFuc2Zvcm0sIHsgbG9jYWxQb3NpdGlvblg6IDAgfSwgQ29tbW9uQ29uc3RhbnQuQ19Jc2xhbmRNb3ZlVGltZSwgTGF5YS5FYXNlLnNpbmVPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5TaG93RWZmZWN0KSk7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEFyclt0aGlzLm1fY3VySXNsYW5kSW5kZXhdLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLm1faXNsYW5kQXJyW2luZGV4XS50cmFuc2Zvcm0sIHsgbG9jYWxQb3NpdGlvblg6IENvbW1vbkNvbnN0YW50LkNfSXNsYW5kTW92ZVggfSwgQ29tbW9uQ29uc3RhbnQuQ19Jc2xhbmRNb3ZlVGltZSwgTGF5YS5FYXNlLnNpbmVPdXQsIG51bGwpO1xyXG4gICAgICAgIHRoaXMubV9pc2xhbmRJbmZvUGFuZWwudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlUGFuZWxJbmZvKHRoaXMubV9jdXJJc2xhbmRJbmRleCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye75bem5oyJ6ZKuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25MZWZ0QnRuQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubV9iTW92aW5nKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5tX2JNb3ZpbmcgPSB0cnVlO1xyXG4gICAgICAgIHZhciBpbmRleCA9IHRoaXMubV9jdXJJc2xhbmRJbmRleDtcclxuICAgICAgICBpZiAoLS10aGlzLm1fY3VySXNsYW5kSW5kZXggPD0gLTEpIHtcclxuICAgICAgICAgICAgdGhpcy5tX2N1cklzbGFuZEluZGV4ID0gQ29tbW9uQ29uc3RhbnQuQ19Jc2xhbmRBbW91bnQgLSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1faXNsYW5kQXJyW3RoaXMubV9jdXJJc2xhbmRJbmRleF0udHJhbnNmb3JtLnBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMyhDb21tb25Db25zdGFudC5DX0lzbGFuZE1vdmVYLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9pc2xhbmRBcnJbdGhpcy5tX2N1cklzbGFuZEluZGV4XS50cmFuc2Zvcm0sIHsgbG9jYWxQb3NpdGlvblg6IDAgfSwgQ29tbW9uQ29uc3RhbnQuQ19Jc2xhbmRNb3ZlVGltZSwgTGF5YS5FYXNlLnNpbmVPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5TaG93RWZmZWN0KSk7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEFyclt0aGlzLm1fY3VySXNsYW5kSW5kZXhdLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLm1faXNsYW5kQXJyW2luZGV4XS50cmFuc2Zvcm0sIHsgbG9jYWxQb3NpdGlvblg6IC1Db21tb25Db25zdGFudC5DX0lzbGFuZE1vdmVYIH0sIENvbW1vbkNvbnN0YW50LkNfSXNsYW5kTW92ZVRpbWUsIExheWEuRWFzZS5zaW5lT3V0LCBudWxsKTtcclxuICAgICAgICB0aGlzLm1faXNsYW5kSW5mb1BhbmVsLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLkNoYW5nZVBhbmVsSW5mbyh0aGlzLm1fY3VySXNsYW5kSW5kZXgpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOi/m+WFpea4uOaIj1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE9uR2FtZUJ0bkNsaWNrKCkge1xyXG4gICAgICAgIGlmICh0aGlzLm1fYkhhbGxQYW5lbEZpbmlzaGVkKSB7XHJcbiAgICAgICAgICAgIE5ldFJvb20uSW5zdGFuY2UuRW50ZXJSb29tUmVxKHRoaXMubV9jdXJJc2xhbmRJbmRleCArIDEsIFJvbGVNc2cubXNnX3JlbG9naW5fY29kZS5SRUxPR0lOX05PUk1BTCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5b+r6YCf5ri45oiPXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgT25RdWlja0dhbWVDbGljaygpIHtcclxuICAgICAgICBpZiAodGhpcy5tX2JIYWxsUGFuZWxGaW5pc2hlZCkge1xyXG4gICAgICAgICAgICBOZXRSb29tLkluc3RhbmNlLkVudGVyUm9vbVJlcSgxLCBSb2xlTXNnLm1zZ19yZWxvZ2luX2NvZGUuUkVMT0dJTl9OT1JNQUwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgRXhpdEhhbGxTY2VuZSgpIHtcclxuICAgICAgICAvL+WNuOi9vTNk6LWE5rqQ57yT5a2YXHJcbiAgICAgICAgTGF5YS5zdGFnZS5vZmYoTGF5YS5FdmVudC5SRVNJWkUsIHRoaXMsIHRoaXMub25TdGFnZUNoYW5nZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5zdG9wQWxsKCk7XHJcbiAgICAgICAgdGhpcy5tX3NjZW5lM0QuZGVzdHJveSh0cnVlKTtcclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcuQ2xvc2VXYWxsdFBhbmVsKCk7XHJcblxyXG4gICAgICAgIC8vLy8gZmFpcnlndWkuVUlQYWNrYWdlLnJlbW92ZVBhY2thZ2UoQ29tbW9uQ29uc3RhbnQuX2Z1aUhhbGxVSVBhdGguUGFja2FnZSk7XHJcbiAgICAgICAgLy8vLyAgZmFpcnlndWkuVUlQYWNrYWdlLnJlbW92ZVBhY2thZ2UoQ29tbW9uQ29uc3RhbnQuX2Z1aUhhbGxQYXRoLlBhY2thZ2UpO1xyXG5cclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuUmVsZWFzZUFsbDNEKENvbW1vbkNvbnN0YW50Ll9oYWxsU2NlbmVQYXRoX2pzb24pO1xyXG4gICAgICAgIExheWEubG9hZGVyLmNsZWFyUmVzKENvbW1vbkNvbnN0YW50Ll9oYWxsUGF0aF9scyk7Ly8gY29uc29sZS5sb2coXCJFeGl0SGFsbFNjZW5lIGNsZWFyUmVzID0gXCIsIExheWEubG9hZGVyLmdldFJlcyhDb21tb25Db25zdGFudC5faGFsbFBhdGhfbHMpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLlJlbGVhc2VGdWlSZXNCeUdyb3VwTmFtZShDb21tb25Db25zdGFudC5fZ3JvdXBOYW1lX2Z1aVJlcyk7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEFyciA9IFtdO1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy50aW1lU2hvdyk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLkxPR0lOUkVTUk9MRUlORk8sIHRoaXMsIHRoaXMuSW5pdFJvbGVJbmZvKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShHYW1lRXZlbnQuR0FNRV9SRUNPTk5FQ1QsIHRoaXMsIHRoaXMuUmVjb25uZWN0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLkVudGVyUm9vbVJlc3AsIHRoaXMsIHRoaXMuRW50ZXJSb29tUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLnN5bmNDaGlwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLk1xU3luY0NoaXBzUmVzcCwgdGhpcywgdGhpcy5tcVN5bmNDaGlwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuTFZJTkZPUkVTUCwgdGhpcywgdGhpcy5sdkluZm8pO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5HUk9XVEhGVU5EU1RBVEVSRVNQLCB0aGlzLCB0aGlzLmFjdEVuZFRpbWUpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5TV0lUQ0hSRVNQLCB0aGlzLCB0aGlzLm9uU3dpdGNoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuTFZBV0FSRFJFU1AsIHRoaXMsIHRoaXMuc3luTHZOZXcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5bKb5bG/6Z2i5p2/5L+h5oGvXHJcbiAgICAgKiBAcGFyYW0gaW5kZXggXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgQ2hhbmdlUGFuZWxJbmZvKGluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICB2YXIgdGl0bGVJbWcgPSB0aGlzLm1faXNsYW5kSW5mb1BhbmVsLmdldENoaWxkKFwibmFtZUxvYWRlclwiKS5hc0xvYWRlcjtcclxuICAgICAgICB2YXIgbGltaXRJbWcgPSB0aGlzLm1faXNsYW5kSW5mb1BhbmVsLmdldENoaWxkKFwiYnVsbGV0TG9hZGVyXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIHZhciByYXRlTG9hZGVyID0gdGhpcy5tX2lzbGFuZEluZm9QYW5lbC5nZXRDaGlsZChcInJhdGVMb2FkZXJcIikuYXNMb2FkZXI7XHJcbiAgICAgICAgdmFyIHJhdGVCdG4gPSB0aGlzLm1faXNsYW5kSW5mb1BhbmVsLmdldENoaWxkKFwiUmF0ZUJ0blwiKS5hc0J1dHRvbjtcclxuXHJcbiAgICAgICAgdGl0bGVJbWcudXJsID0gQ29tbW9uQ29uc3RhbnQuX3ByZWxhbmRJbmZvUGF0aCArIENvbW1vbkNvbnN0YW50Ll9pc2xhbmRJbmZvQXJyW2luZGV4XS50aXRsZTtcclxuICAgICAgICBsaW1pdEltZy51cmwgPSBDb21tb25Db25zdGFudC5fcHJlbGFuZEluZm9QYXRoICsgQ29tbW9uQ29uc3RhbnQuX2lzbGFuZEluZm9BcnJbaW5kZXhdLmxpbWl0O1xyXG4gICAgICAgIHJhdGVMb2FkZXIudXJsID0gQ29tbW9uQ29uc3RhbnQuX3ByZWxhbmRJbmZvUGF0aCArIENvbW1vbkNvbnN0YW50Ll9pc2xhbmRJbmZvQXJyW2luZGV4XS5yYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5bKb5bG/56e75Yqo5pWI5p6cXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgU2hvd0VmZmVjdCgpIHtcclxuICAgICAgICB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLnJhdGVXaW5kb3cpO1xyXG4gICAgICAgIHRoaXMubV9iTW92aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEluZm9QYW5lbC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tX2lzbGFuZEluZm9QYW5lbC52aXNpYmxlID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcblxyXG5cclxufSIsImltcG9ydCBIYW5kbGVyID0gbGF5YS51dGlscy5IYW5kbGVyO1xyXG5pbXBvcnQgTG9hZGVyID0gbGF5YS5uZXQuTG9hZGVyO1xyXG5pbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHTGlzdCA9IGZhaXJ5Z3VpLkdMaXN0O1xyXG5pbXBvcnQgR0ltYWdlID0gZmFpcnlndWkuR0ltYWdlO1xyXG5pbXBvcnQgR09iamVjdCA9IGZhaXJ5Z3VpLkdPYmplY3Q7XHJcbmltcG9ydCBHTGFiZWwgPSBmYWlyeWd1aS5HTGFiZWw7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVscFBhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgZmlzaEljb25MaXN0OiBHTGlzdDtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0hhdmVIZWxwUGFuZWwpIHJldHVybjtcclxuICAgICAgICBlbHNlIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUhlbHBQYW5lbCA9IHRydWU7XHJcbiAgICAgICAgLy8gLy8gTGF5YS5sb2FkZXIubG9hZChbXHJcbiAgICAgICAgLy8gLy8gICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpSGVscFBhdGguaW1hZ2UsIHR5cGU6IExvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgIC8vIC8vICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aUhlbHBQYXRoLmZ1aSwgdHlwZTogTG9hZGVyLkJVRkZFUiB9LFxyXG4gICAgICAgIC8vIC8vICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aUNvbW1vblVJUGF0aC5pbWFnZSwgdHlwZTogTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgLy8gLy8gICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpQ29tbW9uVUlQYXRoLmZ1aSwgdHlwZTogTG9hZGVyLkJVRkZFUiB9LFxyXG4gICAgICAgIC8vIC8vIF0sIEhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25Mb2FkSGVscCkpO1xyXG4gICAgICAgIHRoaXMub25Mb2FkSGVscCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gdHJ1ZTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3orr7nva5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkxvYWRIZWxwKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aUhlbHBQYXRoLlBhY2thZ2UsIFwiSGVscFwiLCBcIkhlbHBQYW5lbFwiKTtcclxuICAgICAgICAvLy8vICBmYWlyeWd1aS5VSVBhY2thZ2UuYWRkUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpQ29tbW9uVUlQYXRoLlBhY2thZ2UpO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZVwiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm41XCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLndpbmRvd0NoYW5nZSkgfSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm42XCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLndpbmRvd0NoYW5nZSkgfSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm43XCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLndpbmRvd0NoYW5nZSkgfSk7XHJcbiAgICAgICAgdGhpcy5maXNoSWNvbkxpc3QgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibjUzXCIpLmFzTGlzdDtcclxuICAgICAgICB0aGlzLmZpc2hJY29uTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIGlmICghTmV0TG9naW4uSW5zdGFuY2UuX3BsYXllckxvZ2luSW5mbykgcmV0dXJuO1xyXG4gICAgICAgIGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBOZXRMb2dpbi5JbnN0YW5jZS5fcGxheWVyTG9naW5JbmZvLmZpc2hfaW5mby5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgbnVtOiBudW1iZXIgPSBOZXRMb2dpbi5JbnN0YW5jZS5fcGxheWVyTG9naW5JbmZvLmZpc2hfaW5mb1tpXS5maXNoX3R5cGU7XHJcbiAgICAgICAgICAgIGlmIChudW0gPj0gRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjEgJiYgbnVtIDwgMzIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobnVtID4gMzIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgZmlzaEljb25Db206IEdDb21wb25lbnQgPSB0aGlzLmZpc2hJY29uTGlzdC5hZGRJdGVtRnJvbVBvb2woKS5hc0NvbTtcclxuICAgICAgICAgICAgdmFyIGZpc2hJY29uOiBHSW1hZ2UgPSBmaXNoSWNvbkNvbS5nZXRDaGlsZChcImZpc2hJY29uXCIpLmFzSW1hZ2U7XHJcbiAgICAgICAgICAgIHZhciBmaXNoVmFsdWU6IEdMYWJlbCA9IGZpc2hJY29uQ29tLmdldENoaWxkKFwiZmlzaFZhbHVlXCIpLmFzTGFiZWw7XHJcbiAgICAgICAgICAgIGZpc2hJY29uLmljb24gPSBcInVpOi8vQ29tbW9uVUkvXCIgKyAobnVtKTtcclxuICAgICAgICAgICAgaWYgKG51bSA9PSAyNikge1xyXG4gICAgICAgICAgICAgICAgZmlzaFZhbHVlLnRleHQgPSBcIjUtMjAwXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAobnVtID09IDMyKSB7XHJcbiAgICAgICAgICAgICAgICBmaXNoVmFsdWUudGV4dCA9IFwi5YWo5bGP54K45by5XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAobnVtID09IDI3KSB7XHJcbiAgICAgICAgICAgICAgICBmaXNoVmFsdWUudGV4dCA9IFwi6bG8546LXCI7XHJcbiAgICAgICAgICAgICAgICBmaXNoSWNvbi5pY29uID0gXCJ1aTovL0NvbW1vblVJL1wiICsgKG51bSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gZWxzZSBpZiAobnVtID09IDIxKSB7XHJcbiAgICAgICAgICAgIC8vICAgICBmaXNoVmFsdWUudGV4dCA9IFwi5YWo5bGP5Yaw5Ya7XCI7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBmaXNoVmFsdWUudGV4dCA9ICh1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZChOZXRMb2dpbi5JbnN0YW5jZS5fcGxheWVyTG9naW5JbmZvLmZpc2hfaW5mb1tpXS5maXNoX3JhdGUpKS50b0ZpeGVkKDIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZmlzaEljb25MaXN0LmVuc3VyZUJvdW5kc0NvcnJlY3QoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAgICogXHJcbiAgICAgICAqIOaSreaUvuaMiemSrueCueWHu+WjsOmfs1xyXG4gICAgICAgKi9cclxuICAgIHByaXZhdGUgb25QbGF5U291bmQoc3RyOiBzdHJpbmcpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBzdHIpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuZmlzaEljb25MaXN0LnJlbW92ZUNoaWxkcmVuVG9Qb29sKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlSGVscFBhbmVsID0gZmFsc2U7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5iUHJvaGliaXRXYWxsZXRCdG4gPSBmYWxzZTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSGVscFBhbmVsKTtcclxuICAgIH1cclxufSIsImltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcblxyXG4vKiog54iG6YeR5biB6L2s55uY54m55pWIKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHVudEF3YXJkUGFuZWwgZXh0ZW5kcyBMYXlhLlNwcml0ZSB7XHJcbiAgICBwcml2YXRlIG1fYXdhcmQ6TGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9maXNoSW1nOkxheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIG1fYXdhcmRGb250OkxheWEuRm9udENsaXA7IC8v6L2s55uY5LiK55qE5pWw5a2XXHJcbiAgICBwcml2YXRlIG1fbnVtOm51bWJlcjtcclxuICAgIHByaXZhdGUgbV90b3RhbE51bTpudW1iZXI7XHJcbiAgICBwcml2YXRlIG1fYlBhbmVsRWZmZWN0RmluaXNoZWQgPSBmYWxzZTtcclxuICAgIHByaXZhdGUgbV9iQXdhcmRUZXh0RWZmZWN0RmluaXNoZWQgPSBmYWxzZTtcclxuICAgIHByaXZhdGUgbV9lZmZlY3RQb3M6TGF5YS5WZWN0b3IzO1xyXG4gICAgcHJpdmF0ZSBtX2VmZmVjdFNjYWxlOm51bWJlcjtcclxuICAgIHByaXZhdGUgbV9yZWFkTGlnaHQ6TGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV91aWQ6bnVtYmVyO1xyXG4gICAgY29uc3RydWN0b3Iob3duZXJVaWQsIGZpc2hUeXBlOkVudW1EYXRhLkZpc2hTdWJ0eXBlLCByZXdhcmQ6bnVtYmVyLCBiSGFsZjpib29sZWFuKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMubV9udW0gPSAwO1xyXG4gICAgICAgIHRoaXMubV90b3RhbE51bSA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKHJld2FyZCk7XHJcbiAgICAgICAgdGhpcy5tX3VpZCA9IG93bmVyVWlkO1xyXG5cclxuICAgICAgICB2YXIgZmlzaFBhdGggPSBDb21tb25Db25zdGFudC5fZmlzaDIwUGF0aDtcclxuICAgICAgICB2YXIgZmlzaFBvcyA9IG5ldyBMYXlhLlBvaW50KDMwLCA2KTtcclxuICAgICAgICBzd2l0Y2goZmlzaFR5cGUpe1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkZpc2hfMjA6e1xyXG4gICAgICAgICAgICAgICAgZmlzaFBhdGggPSBDb21tb25Db25zdGFudC5fZmlzaDIwUGF0aDtcclxuICAgICAgICAgICAgICAgIGZpc2hQb3MgPSBuZXcgTGF5YS5Qb2ludCg1NywgMTYpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5Hb2xkZW5fU2hhcms6e1xyXG4gICAgICAgICAgICAgICAgZmlzaFBhdGggPSBDb21tb25Db25zdGFudC5fZmlzaDIzUGF0aDtcclxuICAgICAgICAgICAgICAgIGZpc2hQb3MgPSBuZXcgTGF5YS5Qb2ludCgzMCwgNik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLk1lcm1haWQ6e1xyXG4gICAgICAgICAgICAgICAgZmlzaFBhdGggPSBDb21tb25Db25zdGFudC5fZmlzaDI1UGF0aDsgIFxyXG4gICAgICAgICAgICAgICAgZmlzaFBvcyA9IG5ldyBMYXlhLlBvaW50KDQ5LCA3OSk7ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubV9lZmZlY3RQb3MgPSBuZXcgTGF5YS5WZWN0b3IzKDY0MCwgMzIwLCAwKTtcclxuICAgICAgICB0aGlzLm1fZWZmZWN0U2NhbGUgPSAxO1xyXG4gICAgICAgIC8v5Y2K5bGP6L2s55uYXHJcbiAgICAgICAgaWYoYkhhbGYpe1xyXG4gICAgICAgICAgICB0aGlzLm1fZWZmZWN0U2NhbGUgPSAwLjU7XHJcbiAgICAgICAgICAgIGxldCBwbGF5ZXJQb3MgPSBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5HZXRCYXR0ZXJ5QnlVaWQob3duZXJVaWQpLm1fcG9zaXRpb247XHJcbiAgICAgICAgICAgIHRoaXMubV9lZmZlY3RQb3MgPSBDb21tb25Db25zdGFudC5IYWxmQXdhcmRQb3NbcGxheWVyUG9zIC0gMV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8v6L2s55uY5ZCO55qE57qi5YWJXHJcbiAgICAgICAgdGhpcy5tX3JlYWRMaWdodCA9IG5ldyBMYXlhLkltYWdlKENvbW1vbkNvbnN0YW50Ll96aHVhbnBhbkxpZ2h0UGF0aCk7XHJcbiAgICAgICAgdGhpcy5tX3JlYWRMaWdodC5hbmNob3JYID0gMC41O1xyXG4gICAgICAgIHRoaXMubV9yZWFkTGlnaHQuYW5jaG9yWSA9IDAuNTtcclxuICAgICAgICB0aGlzLm1fcmVhZExpZ2h0LnNjYWxlKHRoaXMubV9lZmZlY3RTY2FsZSwgdGhpcy5tX2VmZmVjdFNjYWxlKTsgIFxyXG4gICAgICAgIHRoaXMubV9yZWFkTGlnaHQucG9zKHRoaXMubV9lZmZlY3RQb3MueCwgdGhpcy5tX2VmZmVjdFBvcy55KTsgXHJcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDUwLCB0aGlzLCAoKT0+e1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9yZWFkTGlnaHQsIHtyb3RhdGlvbjp0aGlzLm1fcmVhZExpZ2h0LnJvdGF0aW9uICsgMTB9LCA1MCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICAvL+i9rOebmFxyXG4gICAgICAgIHRoaXMubV9hd2FyZCA9IG5ldyBMYXlhLkltYWdlKENvbW1vbkNvbnN0YW50Ll96aHVhbnBhblBhdGgpO1xyXG4gICAgICAgIHRoaXMubV9hd2FyZC5hbmNob3JYID0gMC41O1xyXG4gICAgICAgIHRoaXMubV9hd2FyZC5hbmNob3JZID0gMC41O1xyXG4gICAgICAgIHRoaXMubV9hd2FyZC5zY2FsZSh0aGlzLm1fZWZmZWN0U2NhbGUsIHRoaXMubV9lZmZlY3RTY2FsZSk7ICAgICBcclxuICAgICAgICB0aGlzLm1fYXdhcmQucG9zKHRoaXMubV9lZmZlY3RQb3MueCwgdGhpcy5tX2VmZmVjdFBvcy55KTsgXHJcbiAgICAgICAgdGhpcy5tX2Zpc2hJbWcgPSBuZXcgTGF5YS5JbWFnZShmaXNoUGF0aCk7ICAgICAgXHJcbiAgICAgICAgdGhpcy5tX2Zpc2hJbWcucG9zKGZpc2hQb3MueCwgZmlzaFBvcy55KTsgIFxyXG4gICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5tX3JlYWRMaWdodCk7XHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLm1fYXdhcmQpOyBcclxuICAgICAgICB0aGlzLm1fYXdhcmQuYWRkQ2hpbGQodGhpcy5tX2Zpc2hJbWcpOyBcclxuICAgICAgICBcclxuICAgICAgICAvLyDlpKfovaznm5jkuIrnmoTlrZfkvZNcclxuICAgICAgICB0aGlzLm1fYXdhcmRGb250ID0gbmV3IExheWEuRm9udENsaXAoQ29tbW9uQ29uc3RhbnQuX2F3YXJkRm9udCwgXCIuKzAxMjM0NTY3ODlcIik7XHJcbiAgICAgICAgdGhpcy5tX2F3YXJkRm9udC5hbGlnbiA9IFwiY2VudGVyXCI7XHJcbiAgICAgICAgdGhpcy5tX2F3YXJkRm9udC5wb3MoMjE1LCAyNjApO1xyXG4gICAgICAgIHRoaXMubV9hd2FyZEZvbnQuYW5jaG9yWCA9IDAuNTtcclxuICAgICAgICB0aGlzLm1fYXdhcmRGb250LmFuY2hvclkgPSAwLjU7XHJcbiAgICAgICAgdGhpcy5tX2F3YXJkLmFkZENoaWxkKHRoaXMubV9hd2FyZEZvbnQpOyBcclxuXHJcbiAgICAgICAgdGhpcy5TaG93RWZmZWN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBQYW5lbEVmZmVjdCgpe1xyXG4gICAgICAgIHRoaXMubV9hd2FyZC5zY2FsZVggPSAwLjE7XHJcbiAgICAgICAgdGhpcy5tX2F3YXJkLnNjYWxlWSA9IDAuMTtcclxuICAgICAgICBsZXQgbWF4U2NhbGUgPSB0aGlzLm1fZWZmZWN0U2NhbGUgKyAwLjQ7XHJcbiAgICAgICAgbGV0IG1pblNjYWxlID0gdGhpcy5tX2VmZmVjdFNjYWxlIC0gMC4yO1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5tX2F3YXJkLCB7c2NhbGVYOjEuMSwgc2NhbGVZOjEuMX0sIDEwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKT0+e1xyXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9hd2FyZCwge3NjYWxlWDowLjgsIHNjYWxlWTowLjh9LCAxMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCk9PntcclxuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5tX2F3YXJkLCB7c2NhbGVYOnRoaXMubV9lZmZlY3RTY2FsZSwgc2NhbGVZOnRoaXMubV9lZmZlY3RTY2FsZX0sIDEwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubV9iUGFuZWxFZmZlY3RGaW5pc2hlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBBd2FyZFRleHRFZmZlY3QoKXtcclxuICAgICAgICBMYXlhLnRpbWVyLmxvb3AoMzAsIHRoaXMsIHRoaXMuQ2hhbmdlTnVtKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgQ2hhbmdlTnVtKCl7XHJcbiAgICAgICAgdGhpcy5tX251bSArPSB0aGlzLm1fdG90YWxOdW0vMjA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYodGhpcy5tX251bSA+PSB0aGlzLm1fdG90YWxOdW0pe1xyXG4gICAgICAgICAgICB0aGlzLm1fbnVtID0gdGhpcy5tX3RvdGFsTnVtO1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0tLS0tLS1tX3RvdGFsTnVtID0gXCIsIHRoaXMubV90b3RhbE51bSk7XHJcbiAgICAgICAgICAgIHRoaXMubV9iQXdhcmRUZXh0RWZmZWN0RmluaXNoZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMuQ2hhbmdlTnVtKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubV9hd2FyZEZvbnQudmFsdWUgPSB0aGlzLm1fbnVtLnRvRml4ZWQoMik7IFxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBTaG93RWZmZWN0KCl7XHJcbiAgICAgICAgbGV0IGF3YXJkTGlnaHQgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5JbnN0YW50aWF0ZUVmZmVjdChDb21tb25Db25zdGFudC5faHVudFNjZW5lRWZmZWN0QXJyYXkuSGFsZlNjcmVlbkRyYXdSZXdhcmQpO1xyXG4gICAgICAgIGF3YXJkTGlnaHQudHJhbnNmb3JtLnBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMygwLDAsMCk7XHJcbiAgICAgICAgYXdhcmRMaWdodC5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuUGFuZWxFZmZlY3QoKTtcclxuICAgICAgICB0aGlzLkF3YXJkVGV4dEVmZmVjdCgpO1xyXG4gICAgICAgIHRoaXMuUmVtb3ZlQWZ0ZXJFZmZlY3RGaW5pc2hlZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgUmVtb3ZlQWZ0ZXJFZmZlY3RGaW5pc2hlZCgpIHtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdmFyIENoZWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5tX2JBd2FyZFRleHRFZmZlY3RGaW5pc2hlZCAmJiB0aGlzLm1fYlBhbmVsRWZmZWN0RmluaXNoZWQpIHtcclxuICAgICAgICAgICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1fcmVhZExpZ2h0LmRlc3Ryb3kodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9hd2FyZCwgeyBzY2FsZVg6IDAuNSwgc2NhbGVZOiAwLjUgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZW5kUG9zID0gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuR2V0QmF0dGVyeUJ5VWlkKHRoaXMubV91aWQpLkd1bkdwb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLm1fYXdhcmQsIHsgeDogZW5kUG9zLngsIHk6IGVuZFBvcy55IH0sIDE1MCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdGhpcy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZGVzdHJveSh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2JQYW5lbEVmZmVjdEZpbmlzaGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubV9iQXdhcmRUZXh0RWZmZWN0RmluaXNoZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBMYXlhLnRpbWVyLmxvb3AoNTAwLCB0aGlzLCBDaGVjayk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQ2Fubm9uIGZyb20gXCIuLi9JdGVtL0Nhbm5vblwiO1xyXG5pbXBvcnQgR3VpZGVQYW5lbCBmcm9tIFwiLi9HdWlkZVBhbmVsXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IE1lbnUgZnJvbSBcIi4uL0l0ZW0vTWVudVwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IE5ldFJvb20gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRSb29tXCI7XHJcbmltcG9ydCBIdW50U2NlbmVNYW5hZ2VyIGZyb20gXCIuLi8uLi9tYW5hZ2VyL0h1bnRTY2VuZU1hbmFnZXJcIjtcclxuaW1wb3J0IEJhdHRlcnlDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0JhdHRlcnlDb250cm9sbGVyXCI7XHJcbmltcG9ydCBFdmVudE5ldFJlc3BvbnNlIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvRXZlbnROZXRSZXNwb25zZVwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IEF1dG9BdHRhY2tQYW5lbCBmcm9tIFwiLi9BdXRvQXR0YWNrUGFuZWxcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgRmlzaENvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIvRmlzaENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IEh1bnRBd2FyZFBhbmVsIGZyb20gXCIuL0h1bnRBd2FyZFBhbmVsXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IGpwQmVhdCBmcm9tIFwiLi4vTG9naW4vSnAvSnBCZWF0XCI7XHJcbmltcG9ydCBQcm9tcHRQYW5lbCBmcm9tIFwiLi9Qcm9tcHRQYW5lbFwiO1xyXG5pbXBvcnQgTmV0V2FsbGV0IGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0V2FsbGV0XCI7XHJcbmltcG9ydCBOZXRSZXBvcnQgZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRSZXBvcnRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEh1bnRQYW5lbCBleHRlbmRzIEJhc2VQYW5lbCB7XHJcbiAgICBwdWJsaWMgbV9zY2VuZTNEOiBMYXlhLlNjZW5lM0QgPSBudWxsO1xyXG4gICAgcHVibGljIG1fZ3VuU2NlbmUzRDogTGF5YS5TY2VuZTNEID0gbnVsbDsgLy/ngq7nmoTlsZXnpLrlnLrmma9cclxuICAgIHB1YmxpYyBtX2F3YXJkU2NlbmUzRDogTGF5YS5TY2VuZTNEID0gbnVsbDsgLy/niIbph5HluIHnmoTlsZXnpLrlnLrmma9cclxuICAgIHB1YmxpYyBtX2xheWFVSU5vZGU6IExheWEuTm9kZTsgLy9sYXlhVUlcclxuICAgIC8vICBwdWJsaWMgbV9odW50U2NlbmVDYW1lcmE6IExheWEuQ2FtZXJhO1xyXG4gICAgcHJpdmF0ZSBtX2lzU2hvb3QgPSBmYWxzZTtcclxuICAgIHByaXZhdGUgbV9pc01vdmluZyA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBtX2xvY2tCdG5NYXNrOiBmYWlyeWd1aS5HSW1hZ2U7XHJcbiAgICBwcml2YXRlIG1fYXV0b0J0bk1hc2s6IGZhaXJ5Z3VpLkdJbWFnZTtcclxuICAgIHByaXZhdGUgbV9tZW51OiBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5cclxuICAgIHByaXZhdGUgbV9sb2NrTWFza0ltZzogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9hdXRvTWFza0ltZzogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9sb2NrVGV4dEltZzogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9hdXRvVGV4dEltZzogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9sb2NrQnRuRWZmZWN0OiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgcHJpdmF0ZSBtX2F1dG9CdG5FZmZlY3Q6IExheWEuU3ByaXRlM0Q7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2JnMTogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgbV9iZzI6IExheWEuSW1hZ2U7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2RpcmVjdGlvbjogbnVtYmVyID0gQ29tbW9uQ29uc3RhbnQuRElSSUNUSU9OLkhPUklaT05UQUw7XHJcblxyXG4gICAgcHJpdmF0ZSBtX2F3YXJkRWZmZWN0QXJyOiBBcnJheTxIdW50QXdhcmRQYW5lbD47XHJcblxyXG4gICAgY29uc3RydWN0b3IoaWQpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMubV9uYW1lSUQgPSBpZDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmt7vliqDlvJXlr7znlYzpnaJcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHdWlkZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8uaXNfbmV3ICYmIHV0aWxzLkNvbW1vblV0aWxzLmlzRmlyc3RFbnRlclJvb20pIHtcclxuICAgICAgICAgICAgbmV3IEd1aWRlUGFuZWwoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMuaXNGaXJzdEVudGVyUm9vbSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDliJ3lp4vljJZ1aeS/oeaBr1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgSW5pdEZ1aSgpIHtcclxuICAgICAgICB0aGlzLkd1aWRlKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5NYXJxdWVlUGFuZWwsIHRydWUpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheU11c2ljUm9vbShOZXRMb2dpbi5JbnN0YW5jZS5fY3VyUm9vbUluZGV4KTtcclxuICAgICAgICAvLy8vICBmYWlyeWd1aS5VSVBhY2thZ2UuYWRkUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguUGFja2FnZSk7XHJcbiAgICAgICAgZmFpcnlndWkuVUlQYWNrYWdlLmFkZFBhY2thZ2UoQ29tbW9uQ29uc3RhbnQuX2Z1aUh1bnRlclVJUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAvLy8vICBmYWlyeWd1aS5VSVBhY2thZ2UuYWRkUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpQ29tbW9uVUlQYXRoLlBhY2thZ2UpO1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBmYWlyeWd1aS5VSVBhY2thZ2UuY3JlYXRlT2JqZWN0KFwiSHVudGVyVUlcIiwgXCJIdW50ZXJQYW5lbFwiKS5hc0NvbTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkFkZEZVSSh0aGlzLm1fZnVpKTtcclxuXHJcbiAgICAgICAgbGV0IGpwOiBmYWlyeWd1aS5HQ29tcG9uZW50ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImpwXCIpLmFzQ29tO1xyXG4gICAgICAgIGxldCBqcGI6IGpwQmVhdCA9IGpwLmRpc3BsYXlPYmplY3QuYWRkQ29tcG9uZW50KGpwQmVhdCk7XHJcbiAgICAgICAganBiLnNldEpwVGV4dChqcC5nZXRDaGlsZChcImpwTnVtVGV4XCIpLmFzTGFiZWwpO1xyXG4gICAgICAgIGpwYi5zeW5KcERhdGEoKTtcclxuICAgICAgICAvL+W3puS+p+iPnOWNlVxyXG4gICAgICAgIHRoaXMubV9tZW51ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIk1lbnVcIikuYXNDb207XHJcbiAgICAgICAgbGV0IGNvbnRyb2xsZXIgPSB0aGlzLm1fZnVpLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICBuZXcgTWVudSh0aGlzLm1fbWVudSwgY29udHJvbGxlciwgdGhpcyk7XHJcblxyXG5cclxuICAgICAgICAvL+eCruWPsFxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCB3YWl0SW1nID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIldhaXRJbWdcIiArIGkpLmFzSW1hZ2U7XHJcbiAgICAgICAgICAgIHdhaXRJbWcudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgY2Fubm9uU2VhdCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJDYW5ub25cIiArIGkpLmFzQ29tO1xyXG4gICAgICAgICAgICBsZXQgY2Fubm9uSW5mbyA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJDYW5ub25JbmZvXCIgKyBpKS5hc0NvbTtcclxuICAgICAgICAgICAgbGV0IGNhbm5vbiA9IG5ldyBDYW5ub24oY2Fubm9uU2VhdCwgY2Fubm9uSW5mbywgd2FpdEltZywgaSkgYXMgQ2Fubm9uO1xyXG4gICAgICAgICAgICBjYW5ub24uSW5pdEd1bjNEKCk7XHJcbiAgICAgICAgICAgIGNhbm5vbi5VcGRhdGVQbGF5ZXJJbmZvU2hvdygpO1xyXG4gICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5CYXR0ZXJ5QXJyLnB1c2goY2Fubm9uKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v6Ieq5Yqo5pS75Ye744CB6ZSB5a6a5pS75Ye7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcIkF1dG9CdG5cIikuYXNCdXR0b24ub25DbGljayh0aGlzLCB0aGlzLk9uQXV0b0J0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fYXV0b0J0bk1hc2sgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiQXV0b0Rvd25JbWdcIikuYXNJbWFnZTtcclxuICAgICAgICB0aGlzLm1fYXV0b0J0bk1hc2sudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJMb2NrQnRuXCIpLmFzQnV0dG9uLm9uQ2xpY2sodGhpcywgdGhpcy5PbkxvY2tCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tCdG5NYXNrID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIkxvY2tEb3duSW1nXCIpLmFzSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tCdG5NYXNrLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICBsZXQgbG9ja1RleHQgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiTG9ja0ltZ1wiKS5hc0xvYWRlcjtcclxuICAgICAgICBsZXQgYXV0b1RleHQgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiQXV0b0ltZ1wiKS5hc0xvYWRlcjtcclxuICAgICAgICAvL2Z1aeeahOmUgeWumuaUu+WHu+WSjOiHquWKqOaNlemxvOaUu+WHu+aMiemSruS4jueJueaViOeahOWxgue6p+ayoeazleiwg+aVtO+8jOS9v+eUqGxheWHnmoR1aeadpeaYvuekulxyXG4gICAgICAgIHZhciBsb2NrQnRuOiBMYXlhLkltYWdlID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9sb2NrSW1nUGF0aCwgbmV3IExheWEuUG9pbnQodGhpcy5tX2xvY2tCdG5NYXNrLngsIHRoaXMubV9sb2NrQnRuTWFzay55KSwgdGhpcy5tX2xheWFVSU5vZGUpO1xyXG4gICAgICAgIGxvY2tCdG4uek9yZGVyID0gRW51bURhdGEuU0NSRUVOX1pPREVSLkh1bnRQYW5lbFVJO1xyXG4gICAgICAgIHZhciBhdXRvQnRuOiBMYXlhLkltYWdlID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9hdXRvSW1nUGF0aCwgbmV3IExheWEuUG9pbnQodGhpcy5tX2F1dG9CdG5NYXNrLngsIHRoaXMubV9hdXRvQnRuTWFzay55KSwgdGhpcy5tX2xheWFVSU5vZGUpO1xyXG4gICAgICAgIGF1dG9CdG4uek9yZGVyID0gRW51bURhdGEuU0NSRUVOX1pPREVSLkh1bnRQYW5lbFVJO1xyXG4gICAgICAgIHRoaXMubV9sb2NrTWFza0ltZyA9IHV0aWxzLkNvbW1vblV0aWxzLkNyZWF0TGF5YUltZyhDb21tb25Db25zdGFudC5fbG9ja0ltZ01hc2tQYXRoLCBuZXcgTGF5YS5Qb2ludCh0aGlzLm1fbG9ja0J0bk1hc2sueCwgdGhpcy5tX2xvY2tCdG5NYXNrLnkpLCB0aGlzLm1fbGF5YVVJTm9kZSk7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tNYXNrSW1nLnpPcmRlciA9IEVudW1EYXRhLlNDUkVFTl9aT0RFUi5IdW50UGFuZWxVSTtcclxuICAgICAgICB0aGlzLm1fYXV0b01hc2tJbWcgPSB1dGlscy5Db21tb25VdGlscy5DcmVhdExheWFJbWcoQ29tbW9uQ29uc3RhbnQuX2F1dG9JbWdNYXNrUGF0aCwgbmV3IExheWEuUG9pbnQodGhpcy5tX2F1dG9CdG5NYXNrLngsIHRoaXMubV9hdXRvQnRuTWFzay55KSwgdGhpcy5tX2xheWFVSU5vZGUpO1xyXG4gICAgICAgIHRoaXMubV9hdXRvTWFza0ltZy56T3JkZXIgPSBFbnVtRGF0YS5TQ1JFRU5fWk9ERVIuSHVudFBhbmVsVUk7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tNYXNrSW1nLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm1fYXV0b01hc2tJbWcudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubV9hdXRvVGV4dEltZyA9IHV0aWxzLkNvbW1vblV0aWxzLkNyZWF0TGF5YUltZyhDb21tb25Db25zdGFudC5fYXV0b1RleHRJbWdQYXRoLCBuZXcgTGF5YS5Qb2ludChhdXRvVGV4dC54LCBhdXRvVGV4dC55KSwgdGhpcy5tX2xheWFVSU5vZGUpO1xyXG4gICAgICAgIHRoaXMubV9hdXRvVGV4dEltZy56T3JkZXIgPSBFbnVtRGF0YS5TQ1JFRU5fWk9ERVIuSHVudFBhbmVsVUk7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tUZXh0SW1nID0gdXRpbHMuQ29tbW9uVXRpbHMuQ3JlYXRMYXlhSW1nKENvbW1vbkNvbnN0YW50Ll9sb2NrVGV4dEltZ1BhdGgsIG5ldyBMYXlhLlBvaW50KGxvY2tUZXh0LngsIGxvY2tUZXh0LnkpLCB0aGlzLm1fbGF5YVVJTm9kZSk7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tUZXh0SW1nLnpPcmRlciA9IEVudW1EYXRhLlNDUkVFTl9aT0RFUi5IdW50UGFuZWxVSTtcclxuICAgICAgICAvL+eJueaViFxyXG4gICAgICAgIHRoaXMubV9sb2NrQnRuRWZmZWN0ID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuSW5zdGFudGlhdGVFZmZlY3QoQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZUVmZmVjdEFycmF5LkxvY2tCdXR0b25FZmZlY3QpO1xyXG4gICAgICAgIHRoaXMubV9hdXRvQnRuRWZmZWN0ID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuSW5zdGFudGlhdGVFZmZlY3QoQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZUVmZmVjdEFycmF5LkxvY2tCdXR0b25FZmZlY3QpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pdE1vdXNlRXZlbnQoKSB7XHJcbiAgICAgICAgdmFyIG1vbml0b3IgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiTW9uaXRvclwiKS5hc0ltYWdlO1xyXG4gICAgICAgIG1vbml0b3Iub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLk1vdXNlSGFuZGxlcik7XHJcbiAgICAgICAgbW9uaXRvci5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLk1vdXNlSGFuZGxlcik7XHJcbiAgICAgICAgbW9uaXRvci5vbihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMuTW91c2VIYW5kbGVyKTtcclxuICAgICAgICBtb25pdG9yLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLk1vdXNlSGFuZGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEVudGVyQWZ0ZXIoc2NlbmUzRDogTGF5YS5TY2VuZTNEKSB7XHJcbiAgICAgICAgdGhpcy5tX2F3YXJkRWZmZWN0QXJyID0gW107XHJcbiAgICAgICAgdGhpcy5tX3NjZW5lM0QgPSBzY2VuZTNEO1xyXG4gICAgICAgIC8vIHRoaXMubV9odW50U2NlbmVDYW1lcmEgPSB0aGlzLm1fc2NlbmUzRC5nZXRDaGlsZEJ5TmFtZShcIk1haW4gQ2FtZXJhXCIpIGFzIExheWEuQ2FtZXJhO1xyXG4gICAgICAgIHRoaXMubV9iZzEgPSBuZXcgTGF5YS5JbWFnZShDb21tb25Db25zdGFudC5faHVudGVyQmdQYXRoMSk7IC8v6IOM5pmv5Zu+XHJcbiAgICAgICAgdGhpcy5tX2JnMiA9IG5ldyBMYXlhLkltYWdlKENvbW1vbkNvbnN0YW50Ll9odW50ZXJCZ1BhdGgyKTsgdGhpcy5tX2JnMi5wb3MoQ29tbW9uQ29uc3RhbnQuQkd3aWR0aCwgMCk7IC8v6IOM5pmv5Zu+XHJcbiAgICAgICAgbGV0IGJnTm9kZTogTGF5YS5Ob2RlID0gbmV3IExheWEuU3ByaXRlKCk7XHJcbiAgICAgICAgYmdOb2RlLmFkZENoaWxkKHRoaXMubV9iZzEpO1xyXG4gICAgICAgIGJnTm9kZS5hZGRDaGlsZCh0aGlzLm1fYmcyKTtcclxuICAgICAgICB0aGlzLmFkZENoaWxkKGJnTm9kZSk7XHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZChzY2VuZTNEKTsgLy/psbznmoQzZOi1hOa6kFxyXG4gICAgICAgIC8vdGhpcy5tX2F3YXJkTm9kZSA9IG5ldyBMYXlhLlNwcml0ZSgpOyAvL+eIhumHkeW4geiKgueCuVxyXG4gICAgICAgIC8vdGhpcy5hZGRDaGlsZCh0aGlzLm1fYXdhcmROb2RlKTtcclxuICAgICAgICB0aGlzLm1fbGF5YVVJTm9kZSA9IG5ldyBMYXlhLlNwcml0ZSgpOyAvL+eCruWPsOeahOW6leW6p25vZGVcclxuICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMubV9sYXlhVUlOb2RlKTtcclxuXHJcbiAgICAgICAgdGhpcy5tX2d1blNjZW5lM0QgPSBMYXlhLmxvYWRlci5nZXRSZXMoQ29tbW9uQ29uc3RhbnQuX2d1blNjZW5lUGF0aCk7IC8v54Ku5Y+wM2TotYTmupBcclxuICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMubV9ndW5TY2VuZTNEKTtcclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuRW50ZXJSb29tSW5pdCh0aGlzLm1fc2NlbmUzRCwgdGhpcy5tX2d1blNjZW5lM0QpO1xyXG4gICAgICAgIHRoaXMuSW5pdEZ1aSgpOyAvL+acgOS4iuWxgueahGZ1aVxyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChHYW1lRXZlbnQuR0FNRV9SRUNPTk5FQ1QsIHRoaXMsIHRoaXMuUmVjb25uZWN0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChHYW1lRXZlbnQuSFVOVF9BVVRPQVRUQUNLLCB0aGlzLCB0aGlzLk9uQXV0b0F0dGFja0V2ZW50KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChHYW1lRXZlbnQuSFVOVF9MT0NLQVRUQUNLLCB0aGlzLCB0aGlzLk9uTG9ja0F0dGFja0V2ZW50KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudE5ldFJlc3BvbnNlLlJlYWR5Um9vbVJlc3AsIHRoaXMsIHRoaXMuUmVhZHlSb29tUmVzcCk7XHJcblxyXG4gICAgICAgIE5ldFJvb20uSW5zdGFuY2UuUmVhZHlSb29tUmVxKCk7XHJcbiAgICAgICAgTmV0UmVwb3J0Lkluc3RhbmNlLlNjcmVlblJlcG9ydFJlcSgpO1xyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmJQcm9oaWJpdFdhbGxldEJ0biA9IGZhbHNlO1xyXG4gICAgICAgIC8vTGF5YS5sb2FkZXIuY3JlYXRlKENvbW1vbkNvbnN0YW50Ll90b3BTY2VuZVBhdGgsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHNjZW5lOkxheWEuU2NlbmUzRCk9PntcclxuICAgICAgICAvL3RoaXMuYWRkQ2hpbGQoc2NlbmUpO1xyXG4gICAgICAgIC8vfSksIG51bGwpO1xyXG5cclxuICAgICAgICBMYXlhLnRpbWVyLmxvb3AoMC4xLCB0aGlzLCB0aGlzLk1vdmVCZyk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5vbihMYXlhLkV2ZW50LlJFU0laRSwgdGhpcywgdGhpcy5vblN0YWdlQ2hhbmdlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOenu+WKqOiDjOaZr+WbvlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE1vdmVCZygpIHtcclxuICAgICAgICBpZiAodGhpcy5tX2JnMS54IDwgLUNvbW1vbkNvbnN0YW50LkJHT2ZmU2V0TWF4KSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9iZzEueCA9IHRoaXMubV9iZzIueCArIENvbW1vbkNvbnN0YW50LkJHd2lkdGggLSA2O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5tX2JnMi54IDwgLUNvbW1vbkNvbnN0YW50LkJHT2ZmU2V0TWF4KSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9iZzIueCA9IHRoaXMubV9iZzEueCArIENvbW1vbkNvbnN0YW50LkJHd2lkdGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5tX2JnMSwgeyB4OiB0aGlzLm1fYmcxLnggLSAwLjMgfSwgMC4xKTtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMubV9iZzIsIHsgeDogdGhpcy5tX2JnMi54IC0gMC4zIH0sIDAuMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlsY/luZXmqKrnq5blsY/liIfmjaLvvIzlrr3pq5jlj5jljJZcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblN0YWdlQ2hhbmdlKCkge1xyXG4gICAgICAgIGxldCBzY3JlZW5XaWR0aDogbnVtYmVyID0gTGF5YS5Ccm93c2VyLmNsaWVudFdpZHRoO1xyXG4gICAgICAgIGxldCBzY3JlZW5IZWlnaHQ6IG51bWJlciA9IExheWEuQnJvd3Nlci5jbGllbnRIZWlnaHQ7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLm1fZGlyZWN0aW9uID09PSBDb21tb25Db25zdGFudC5ESVJJQ1RJT04uSE9SSVpPTlRBTCAmJiBzY3JlZW5XaWR0aCA8IHNjcmVlbkhlaWdodCkge1xyXG4gICAgICAgICAgICAvL3RoaXMub25EaXJlY3Rpb25DaGFuZ2VUb1ZlcnRpY2FsKCk7XHJcbiAgICAgICAgICAgIE5ldFJlcG9ydC5JbnN0YW5jZS5TY3JlZW5SZXBvcnRSZXEoKTtcclxuICAgICAgICAgICAgdGhpcy5tX2RpcmVjdGlvbiA9IENvbW1vbkNvbnN0YW50LkRJUklDVElPTi5WRVJUSUNBTDtcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tIG9uU3RhZ2VDaGFuZ2Ug56uW5bGPXCIpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5tX2RpcmVjdGlvbiA9PT0gQ29tbW9uQ29uc3RhbnQuRElSSUNUSU9OLlZFUlRJQ0FMICYmIHNjcmVlbldpZHRoID49IHNjcmVlbkhlaWdodCkge1xyXG4gICAgICAgICAgICAvL3RoaXMub25EaXJlY3Rpb25DaGFuZ2VUb0hvcml6b250YWwoKTtcclxuICAgICAgICAgICAgTmV0UmVwb3J0Lkluc3RhbmNlLlNjcmVlblJlcG9ydFJlcSgpO1xyXG4gICAgICAgICAgICB0aGlzLm1fZGlyZWN0aW9uID0gQ29tbW9uQ29uc3RhbnQuRElSSUNUSU9OLkhPUklaT05UQUw7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLSBvblN0YWdlQ2hhbmdlIOaoquWxj1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBNb3VzZUhhbmRsZXIoZTogTGF5YS5FdmVudCkge1xyXG4gICAgICAgIHN3aXRjaCAoZS50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgTGF5YS5FdmVudC5NT1VTRV9ET1dOOlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fYkF1dG9BdHRhY2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuTW91c2VEb3duUG9pbnQgPSBuZXcgTGF5YS5Qb2ludChMYXlhLnN0YWdlLm1vdXNlWCwgTGF5YS5zdGFnZS5tb3VzZVkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5iQXV0b0F0dGFja01vdXNlRG93biA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5q2j5Zyo5o2V54yO6YCJ5Lit55qE6bG8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fYlNlbGVjdGVkRmlzaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuU3RvcEF1dG9BdHRhY2ssIENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LlN0b3BBdXRvQXR0YWNrKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fYkxvY2tBdHRhY2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpc2hpZCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkdldEZpc2hJZChMYXlhLnN0YWdlLm1vdXNlWCwgTGF5YS5zdGFnZS5tb3VzZVkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlzaGlkLnRvU3RyaW5nKCkgIT0gXCIwXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLkxvY2tlZEZpc2hJRCA9IGZpc2hpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuU2hvb3QodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIExheWEuRXZlbnQuTU9VU0VfTU9WRTpcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMYXlhLkV2ZW50Lk1PVVNFX09VVDpcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIUdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iQXV0b0F0dGFjayAmJiAhR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX2JMb2NrQXR0YWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290KGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgTGF5YS5FdmVudC5NT1VTRV9VUDpcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIUdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iQXV0b0F0dGFjayAmJiAhR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX2JMb2NrQXR0YWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290KGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy8g6Ieq5Yqo5pS75Ye7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iQXV0b0F0dGFjaykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5iQXV0b0F0dGFja01vdXNlRG93biA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5Nb3VzZURvd25Qb2ludCA9IG5ldyBMYXlhLlBvaW50KExheWEuc3RhZ2UubW91c2VYLCBMYXlhLnN0YWdlLm1vdXNlWSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQXdhcmRFZmZlY3Qob3duZXJVaWQsIGZpc2hUeXBlLCByZXdhcmQsIGJIYWxmKSB7XHJcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMubV9hd2FyZEVmZmVjdEFyci5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGF3YXJkOiBIdW50QXdhcmRQYW5lbCA9IG51bGw7XHJcbiAgICAgICAgYXdhcmQgPSBuZXcgSHVudEF3YXJkUGFuZWwob3duZXJVaWQsIGZpc2hUeXBlLCByZXdhcmQsIGJIYWxmKTtcclxuICAgICAgICBhd2FyZC56T3JkZXIgPSBFbnVtRGF0YS5TQ1JFRU5fWk9ERVIuQXdhcmRQYW5lbDtcclxuICAgICAgICB0aGlzLm1fbGF5YVVJTm9kZS5hZGRDaGlsZChhd2FyZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uIOmUgeWumuaUu+WHu+OAgeiHquWKqOaUu+WHu1xyXG4gICAgcHJpdmF0ZSBPbkF1dG9CdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pO1xyXG4gICAgICAgIGlmICghR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcuSXNmZ1dhbGxldEVub3VnaCgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBhdXRvQXR0YWNrUGFuZWw6IEF1dG9BdHRhY2tQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuQXV0b0F0dGFja1BhbmVsKSBhcyBBdXRvQXR0YWNrUGFuZWw7XHJcbiAgICAgICAgYXV0b0F0dGFja1BhbmVsLmluaXQoKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgT25Mb2NrQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbGljayk7XHJcbiAgICAgICAgaWYgKCFHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5Jc2ZnV2FsbGV0RW5vdWdoKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iQXV0b0F0dGFjaykge1xyXG4gICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlN0b3BBdXRvQXR0YWNrLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5TdG9wQXV0b0F0dGFjayk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLk9uTG9ja0F0dGFja0V2ZW50KEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iTG9ja0F0dGFjayA/IGZhbHNlIDogdHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgT25BdXRvQXR0YWNrRXZlbnQoYkF1dG86IGJvb2xlYW4pIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fYkF1dG9BdHRhY2sgPSBiQXV0bztcclxuICAgICAgICB0aGlzLm1fYXV0b01hc2tJbWcudmlzaWJsZSA9IGJBdXRvO1xyXG4gICAgICAgIGlmICghYkF1dG8pIHtcclxuICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuTG9ja2VkRmlzaElEID0gMDtcclxuICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuSGlkZUxvY2tMaW5lRWZmZWN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByZXM6IHN0cmluZyA9IGJBdXRvID8gQ29tbW9uQ29uc3RhbnQuX2NhbmNsZUF1dG9UZXh0SW1nUGF0aCA6IENvbW1vbkNvbnN0YW50Ll9hdXRvVGV4dEltZ1BhdGg7XHJcbiAgICAgICAgdGhpcy5tX2F1dG9UZXh0SW1nLnNraW4gPSByZXM7XHJcblxyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290TW9kZSA9IGJBdXRvID8gRW51bURhdGEuU2hvb3RUeXBlLlNIT09UX0FVVE8gOiBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfTk9STUFMO1xyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290KGJBdXRvKTtcclxuXHJcbiAgICAgICAgdGhpcy5tX2F1dG9CdG5FZmZlY3QuYWN0aXZlID0gYkF1dG87XHJcbiAgICAgICAgaWYgKGJBdXRvKSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9hdXRvQnRuRWZmZWN0LnRyYW5zZm9ybS5wb3NpdGlvbiA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fR3VuU2NlbmVDYW1lcmEsIG5ldyBMYXlhLlZlY3RvcjModGhpcy5tX2F1dG9CdG5NYXNrLngsIHRoaXMubV9hdXRvQnRuTWFzay55LCAwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgT25Mb2NrQXR0YWNrRXZlbnQoYkxvY2s6IGJvb2xlYW4pIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fYkxvY2tBdHRhY2sgPSBiTG9jaztcclxuICAgICAgICB0aGlzLm1fbG9ja01hc2tJbWcudmlzaWJsZSA9IGJMb2NrO1xyXG4gICAgICAgIGlmICghYkxvY2spIHtcclxuICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuTG9ja2VkRmlzaElEID0gMDtcclxuICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuSGlkZUxvY2tMaW5lRWZmZWN0KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBsZXQgbG9ja0ltZyA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJMb2NrSW1nXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIC8vIGxldCByZXM6IHN0cmluZyA9IGJMb2NrID8gXCJxdXhpYW9zdW9kaW5nXCIgOiBcInN1b2Rpbmdnb25namlcIjtcclxuICAgICAgICAvLyBsb2NrSW1nLnVybCA9IENvbW1vbkNvbnN0YW50Ll9wcmVIdW50ZXJQYXRoICsgcmVzO1xyXG4gICAgICAgIC8vIOabtOaNoue6ueeQhlxyXG4gICAgICAgIGxldCByZXM6IHN0cmluZyA9IGJMb2NrID8gQ29tbW9uQ29uc3RhbnQuX2NhbmNsZUxvY2tUZXh0SW1nUGF0aCA6IENvbW1vbkNvbnN0YW50Ll9sb2NrVGV4dEltZ1BhdGg7XHJcbiAgICAgICAgdGhpcy5tX2xvY2tUZXh0SW1nLnNraW4gPSByZXM7XHJcblxyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290TW9kZSA9IGJMb2NrID8gRW51bURhdGEuU2hvb3RUeXBlLlNIT09UX0xPQ0sgOiBFbnVtRGF0YS5TaG9vdFR5cGUuU0hPT1RfTk9STUFMO1xyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290KGJMb2NrKTtcclxuXHJcbiAgICAgICAgdGhpcy5tX2xvY2tCdG5FZmZlY3QuYWN0aXZlID0gYkxvY2s7XHJcbiAgICAgICAgaWYgKGJMb2NrKSB7XHJcbiAgICAgICAgICAgIHRoaXMubV9sb2NrQnRuRWZmZWN0LnRyYW5zZm9ybS5wb3NpdGlvbiA9IHV0aWxzLkNvbW1vblV0aWxzLlNjcmVlblRvV29ybGRQb2ludChHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy5fR3VuU2NlbmVDYW1lcmEsIG5ldyBMYXlhLlZlY3RvcjModGhpcy5tX2xvY2tCdG5NYXNrLngsIHRoaXMubV9sb2NrQnRuTWFzay55LCAwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8jZW5kcmVnaW9uXHJcblxyXG5cclxuICAgIC8vI2VuZHJlZ2lvbiDmlq3nur/ph43ov55cclxuICAgIHByaXZhdGUgUmVjb25uZWN0KCkge1xyXG4gICAgICAgIEZpc2hDb250cm9sbGVyLkluc3RhbmNlLlJlY29ubmVjdCgpO1xyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlJlY29ubmVjdCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50TmV0UmVzcG9uc2UuRW50ZXJSb29tUmVzcCwgdGhpcywgdGhpcy5FbnRlclJvb21SZXNwKTtcclxuICAgICAgICBOZXRSb29tLkluc3RhbmNlLkVudGVyUm9vbVJlcShOZXRMb2dpbi5JbnN0YW5jZS5fY3VyUm9vbUluZGV4LCBSb2xlTXNnLm1zZ19yZWxvZ2luX2NvZGUuUkVMT0dJTl9SRUNPTk5FQ1QpO1xyXG4gICAgICAgIC8vICBOZXRSb29tLkluc3RhbmNlLlJlYWR5Um9vbVJlcSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgRW50ZXJSb29tUmVzcCgpIHtcclxuICAgICAgICB0aGlzLk9uQXV0b0F0dGFja0V2ZW50KGZhbHNlKTtcclxuICAgICAgICB0aGlzLk9uTG9ja0F0dGFja0V2ZW50KGZhbHNlKTtcclxuICAgICAgICBOZXRSb29tLkluc3RhbmNlLlJlYWR5Um9vbVJlcSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlh4blpIfmiL/pl7TlrozmiJAqL1xyXG4gICAgcHJpdmF0ZSBSZWFkeVJvb21SZXNwKCkge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLeWHhuWkh+aIv+mXtOWujOaIkC0tLVwiKTtcclxuICAgICAgICB0aGlzLkluaXRNb3VzZUV2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uXHJcblxyXG4gICAgcHVibGljIEV4aXRIdW50U2NlbmUoKSB7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5MZWF2ZVJvb21SZXEoKTtcclxuXHJcbiAgICAgICAgLy8vLyBmYWlyeWd1aS5VSVBhY2thZ2UucmVtb3ZlUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguUGFja2FnZSk7XHJcbiAgICAgICAgLy8vLyAgZmFpcnlndWkuVUlQYWNrYWdlLnJlbW92ZVBhY2thZ2UoQ29tbW9uQ29uc3RhbnQuX2Z1aUh1bnRlclVJUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICAvLy8vICBmYWlyeWd1aS5VSVBhY2thZ2UucmVtb3ZlUGFja2FnZShDb21tb25Db25zdGFudC5fZnVpQ29tbW9uVUlQYXRoLlBhY2thZ2UpO1xyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShHYW1lRXZlbnQuR0FNRV9SRUNPTk5FQ1QsIHRoaXMsIHRoaXMuUmVjb25uZWN0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShHYW1lRXZlbnQuSFVOVF9MT0NLQVRUQUNLLCB0aGlzLCB0aGlzLk9uTG9ja0F0dGFja0V2ZW50KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShHYW1lRXZlbnQuSFVOVF9BVVRPQVRUQUNLLCB0aGlzLCB0aGlzLk9uQXV0b0F0dGFja0V2ZW50KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudE5ldFJlc3BvbnNlLkVudGVyUm9vbVJlc3AsIHRoaXMsIHRoaXMuRW50ZXJSb29tUmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5SZWFkeVJvb21SZXNwLCB0aGlzLCB0aGlzLlJlYWR5Um9vbVJlc3ApO1xyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuQXV0b0F0dGFja1BhbmVsKTtcclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuc3RvcE11c2ljKCk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5vZmYoTGF5YS5FdmVudC5SRVNJWkUsIHRoaXMsIHRoaXMub25TdGFnZUNoYW5nZSk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5yZWxlYXNlTW91c2VFdmVudCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkV4aXRIdW50U2NlbmUoKTtcclxuXHJcbiAgICAgICAgLy/ljbjovb0zZOi1hOa6kOe8k+WtmFxyXG4gICAgICAgIC8vIC8vIHRoaXMubV9zY2VuZTNELmRlc3Ryb3kodHJ1ZSk7XHJcbiAgICAgICAgLy8gLy8gdGhpcy5tX2d1blNjZW5lM0QuZGVzdHJveSh0cnVlKTtcclxuICAgICAgICAvLyAvLyBMYXlhLmxvYWRlci5jbGVhclJlcyhDb21tb25Db25zdGFudC5fZ3VuU2NlbmVQYXRoKTtcclxuICAgICAgICAvLyAvLyBMYXlhLmxvYWRlci5jbGVhclJlcyhDb21tb25Db25zdGFudC5faHVudFNjZW5lUGF0aCk7XHJcbiAgICAgICAgLy8gLy8gTGF5YS5sb2FkZXIuY2xlYXJSZXMoQ29tbW9uQ29uc3RhbnQuX2h1bnRlckJnUGF0aCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgQXV0b0F0dGFja1BhbmVsIGZyb20gXCIuL0F1dG9BdHRhY2tQYW5lbFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IEh1bnRlZEl0ZW0gZnJvbSBcIi4uL0l0ZW0vSHVudGVkSXRlbVwiO1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRMb2dpblwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IEZpc2hDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0Zpc2hDb250cm9sbGVyXCI7XHJcblxyXG4vKipcclxuICog5o2V54yO55WM6Z2i6Ieq5Yqo5pS75Ye76Z2i5p2/LS3mmL7npLrlt7Loh6rliqjmjZXliLDnmoTpsbznmoTpnaLmnb9cclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHVudGVkUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHJpdmF0ZSBtX2NvbnRyb2w6IEF1dG9BdHRhY2tQYW5lbDtcclxuICAgIHByaXZhdGUgbV9saXN0OiBmYWlyeWd1aS5HTGlzdDtcclxuICAgIHByaXZhdGUgbV9odW50ZWRJdGVtRGljOntbdHlwZTpudW1iZXJdOkh1bnRlZEl0ZW19O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG93bmVyOiBmYWlyeWd1aS5HQ29tcG9uZW50LCBjb250cm9sOiBBdXRvQXR0YWNrUGFuZWwpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIG93bmVyLmdldENoaWxkKFwiQ2FuY2VsQnRuXCIpLmFzQnV0dG9uLm9uQ2xpY2sodGhpcywgdGhpcy5PbkNhbmNlbEJ0bkNsaWNrKTtcclxuICAgICAgICBvd25lci5nZXRDaGlsZChcIkNoYW5nZUJ0blwiKS5hc0J1dHRvbi5vbkNsaWNrKHRoaXMsIHRoaXMuT25DaGFuZ2VCdG5DbGljayk7XHJcbiAgICAgICAgdGhpcy5tX2xpc3QgPSBvd25lci5nZXRDaGlsZChcIkxpc3RcIikuYXNMaXN0O1xyXG4gICAgICAgIHRoaXMubV9jb250cm9sID0gY29udHJvbDtcclxuICAgICAgICB0aGlzLm1fZnVpID0gb3duZXI7XHJcbiAgICAgICAgdGhpcy5tX2h1bnRlZEl0ZW1EaWMgPSB7fTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgU2hvd1NlbGYodmlzaWJsZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMubV9mdWkudmlzaWJsZSA9IHZpc2libGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBPbkNoYW5nZUJ0bkNsaWNrKCkge1xyXG4gICAgICAgIHRoaXMubV9jb250cm9sLlNob3dTZWxlY3RQYW5lbCgpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBPbkNhbmNlbEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIHRoaXMubV9saXN0LnJlbW92ZUNoaWxkcmVuVG9Qb29sKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuSFVOVF9BVVRPQVRUQUNLLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5tX2NvbnRyb2wuT25jbG9zZUJ0bkNsaWNrKCk7XHJcbiAgICAgICAgdGhpcy5DbGVhclBhbmVsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSBhcmdzIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgT25IdW50ZWRGaXNoKGFyZ3M6IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLm1fbGlzdCA9PSBudWxsIHx8IHRoaXMubV9saXN0ID09IHVuZGVmaW5lZCkgcmV0dXJuO1xyXG4gICAgICAgIGxldCBib3VuczogbnVtYmVyID0gYXJnc1swXTtcclxuICAgICAgICBsZXQgdHlwZTogbnVtYmVyID0gYXJnc1sxXTtcclxuXHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iU2VsZWN0ZWRGaXNoKSAge1xyXG4gICAgICAgICAgICAvL+WtmOWcqOS4gOenjeeJueauiuaDheWGte+8jOWImumHjeaWsOmAieaLqeS6huimgeiHquWKqOaUu+WHu+eahOmxvOeahOWQjOaXtu+8jOS5i+WJjeiHquWKqOaUu+WHu+eKtuaAgeeahOmxvOiiq+aJk+atu++8jOaJgOS7peWcqOatpOWkhOimgeWkmuS4gOWxguWIpOaWrVxyXG4gICAgICAgICAgICBpZihCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5nQXV0b0F0dGFja0Fyclt0eXBlXSAhPSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAvL+mxvOeOi+S4jeWkhOeQhlxyXG4gICAgICAgICAgICBpZihGaXNoQ29udHJvbGxlci5JbnN0YW5jZS5Jc0Zpc2hLaW5nKHR5cGUpKSByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgaHVudGVkSXRlbTogSHVudGVkSXRlbSA9IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMubV9odW50ZWRJdGVtRGljW3R5cGVdKSB7XHJcbiAgICAgICAgICAgIGh1bnRlZEl0ZW0gPSB0aGlzLm1faHVudGVkSXRlbURpY1t0eXBlXTtcclxuICAgICAgICAgICAgaHVudGVkSXRlbS5BZGRBbW91bnQodXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQoYm91bnMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcInRoaXMubV9saXN0ID0gXCIsIHRoaXMubV9saXN0KTtcclxuICAgICAgICAgICAgbGV0IGl0ZW06IGZhaXJ5Z3VpLkdDb21wb25lbnQgPSB0aGlzLm1fbGlzdC5hZGRJdGVtRnJvbVBvb2woKS5hc0NvbTtcclxuICAgICAgICAgICAgaHVudGVkSXRlbSA9IG5ldyBIdW50ZWRJdGVtKGl0ZW0sIHRoaXMpO1xyXG4gICAgICAgICAgICBsZXQgZmlzaEluZm8gPSBOZXRMb2dpbi5JbnN0YW5jZS5fcGxheWVyTG9naW5JbmZvLmZpc2hfaW5mbztcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaXNoSW5mby5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT0gZmlzaEluZm9baV0uZmlzaF90eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy92YXIgcmF0ZSA9IGZpc2hJbmZvW2ldLmZpc2hfcmF0ZTtcclxuICAgICAgICAgICAgICAgICAgICBodW50ZWRJdGVtLkluaXRVSSh1dGlscy5Db21tb25VdGlscy5udW1iZXJGaXhlZChib3VucyksIHR5cGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubV9odW50ZWRJdGVtRGljW3R5cGVdID0gaHVudGVkSXRlbTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENsZWFyUGFuZWwoKXtcclxuICAgICAgICB0aGlzLm1fbGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIHRoaXMubV9odW50ZWRJdGVtRGljID0ge307XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgR0xpc3QgPSBmYWlyeWd1aS5HTGlzdDtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IE5ldFdhbm5lcnMgZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRXYW5uZXJzXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEpwUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHJpdmF0ZSBqcExpc3Q6IEdMaXN0O1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUpwUGFuZWwpIHJldHVybjtcclxuICAgICAgICBlbHNlIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUpwUGFuZWwgPSB0cnVlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlKcFBhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlKcFBhdGguZnVpLCB0aGlzLCB0aGlzLm9uTG9hZEpwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuV0lOTkVSUkVTUCwgdGhpcywgdGhpcy5qcExpc3RJbmZvKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZEpwKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aUpwUGF0aC5QYWNrYWdlLCBcIkpwXCIsIFwianBQYW5lbFwiKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiY2xvc2VcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuanBMaXN0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImpwTGlzdFwiKS5hc0xpc3Q7XHJcbiAgICAgICAgTmV0V2FubmVycy5JbnN0YW5jZS53aW5uZXJzUmVxKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBqcExpc3RJbmZvKGRhdGE6IFdpbm5lck1zZy53aW5uZXJzX3Jlc3ApIHtcclxuICAgICAgICB0aGlzLmpwTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBkYXRhLnJvbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGl0ZW1Db206IEdDb21wb25lbnQgPSB0aGlzLmpwTGlzdC5hZGRJdGVtRnJvbVBvb2woKS5hc0NvbTtcclxuICAgICAgICAgICAgaXRlbUNvbS5nZXRDaGlsZChcImRhdGFcIikudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlclRvRGF0YVRpbWUoZGF0YS5yb2xlW2ldLmRhdGUpO1xyXG4gICAgICAgICAgICBpdGVtQ29tLmdldENoaWxkKFwibmFtZVwiKS50ZXh0ID0gZGF0YS5yb2xlW2ldLm5pY2tuYW1lO1xyXG4gICAgICAgICAgICBpdGVtQ29tLmdldENoaWxkKFwiZ3JhZGVcIikudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLmpwV2lubmVyVG9UeXBlKGRhdGEucm9sZVtpXS5hd2FyZExldmVsKTtcclxuICAgICAgICAgICAgaXRlbUNvbS5nZXRDaGlsZChcImFtb3VudFwiKS50ZXh0ID0gKE51bWJlcihkYXRhLnJvbGVbaV0uYXdhcmQpIC8gMTAwKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICB0aGlzLmpwTGlzdC5lbnN1cmVCb3VuZHNDb3JyZWN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiDmkq3mlL7mjInpkq7ngrnlh7vlo7Dpn7NcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblBsYXlTb3VuZChzdHI6IHN0cmluZykge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIHN0cik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWFs+mXrVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uQ2xvc2UoKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlSnBQYW5lbCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIub25DbG9zZSk7XHJcbiAgICAgICAgdGhpcy5qcExpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuV0lOTkVSUkVTUCwgdGhpcywgdGhpcy5qcExpc3RJbmZvKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSnBQYW5lbCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHU2xpZGVyID0gZmFpcnlndWkuR1NsaWRlcjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IE5ldFJvbGVJbmZvIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9sZUluZm9cIjtcclxuaW1wb3J0IExhbmcgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0xhbmd1YWdlQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgVGlwVHlwZSB9IGZyb20gXCIuLi8uLi9tYW5hZ2VyL1RpcE1hbmFnZXJcIjtcclxuaW1wb3J0IE5ldEF3YXJkIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0QXdhcmRcIjtcclxuaW1wb3J0IEx2RGV0YWlsUGFuZWwgZnJvbSBcIi4vTHZEZXRhaWxQYW5lbFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGV2ZWxCb251c1BhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgdXBncmFkZUNvbnRyOiBmYWlyeWd1aS5Db250cm9sbGVyOy8v5piv5ZCm5bey57uP5Y2H57qn5o6n5Yi2XHJcbiAgICBwcml2YXRlIGx2UmVDb250cjogZmFpcnlndWkuQ29udHJvbGxlcjsvL+etiee6p+mihuWPluaOp+WItlxyXG4gICAgcHJpdmF0ZSB0aXBDb250cjogZmFpcnlndWkuQ29udHJvbGxlcjsvL+aPkOekuuahhlxyXG4gICAgcHJpdmF0ZSBidXlNb25leVRleDogZmFpcnlndWkuR0xhYmVsOy8v6LSt5Lmw5Z+66YeR6ZyA6KaB5aSa5bCR6ZKxdGV4dFxyXG4gICAgcHJpdmF0ZSBjdXJyVG90YWxSZVRleDogZmFpcnlndWkuR0xhYmVsOy8v5b2T5YmN57Sv6K6h6aKG5Y+W5aWW6YeRdGV4dFxyXG4gICAgcHJpdmF0ZSBjdXJyUmVMdlRleDogZmFpcnlndWkuR0xhYmVsOy8v5b2T5YmN6aKG5Y+W562J57qndGV4dFxyXG4gICAgcHJpdmF0ZSBjdXJyUmVSZXdhcmRUZXg6IGZhaXJ5Z3VpLkdMYWJlbDsvL+W9k+WJjeetiee6p+mihuWPluWllumHkXRleHRcclxuICAgIHByaXZhdGUgcHJlQnRuOiBmYWlyeWd1aS5HQnV0dG9uOy8v5LiK5LiA5Liq5oyJ6ZKuXHJcbiAgICBwcml2YXRlIG5leHRCdG46IGZhaXJ5Z3VpLkdCdXR0b247Ly/kuIvkuIDkuKrmjInpkq5cclxuICAgIHByaXZhdGUgcmVCdG46IGZhaXJ5Z3VpLkdCdXR0b247Ly/pooblj5bmjInpkq5cclxuICAgIHByaXZhdGUgZXhwTGlzdDogZmFpcnlndWkuR0xpc3Q7Ly/ln7rph5HliJfooahcclxuICAgIHByaXZhdGUgY3VyckZ1bmRJZDogbnVtYmVyOy8v5b2T5YmN5Z+66YeRXHJcbiAgICBwcml2YXRlIGN1cnJUb3RhbFJlOiBudW1iZXI7Ly/lvZPliY3ntK/orqHpooblj5blpZbph5FcclxuICAgIHByaXZhdGUgY3Vyckx2OiBudW1iZXI7Ly/lvZPliY3nrYnnuqdcclxuICAgIHByaXZhdGUgbmV4dEx2OiBudW1iZXI7Ly/kuIvkuIDnrYnnuqdcclxuICAgIHByaXZhdGUgY3VyclJlTHY6IG51bWJlcjsvL+W9k+WJjemihuWPluetiee6p1xyXG4gICAgcHJpdmF0ZSBjdXJyUmVSZXdhcmQ6IG51bWJlcjsvL+W9k+WJjeetiee6p+mihuWPluWllumHkVxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgaWYgKEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUxldmVsQm9udXNQYW5lbCkgcmV0dXJuO1xyXG4gICAgICAgIGVsc2UgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlTGV2ZWxCb251c1BhbmVsID0gdHJ1ZTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmxvYWRVSShDb21tb25Db25zdGFudC5fZnVpTGV2ZWxCb251c1BhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlMZXZlbEJvbnVzUGF0aC5mdWksIHRoaXMsIHRoaXMub25Mb2FkKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuTFZDT05GSUdSRVNQLCB0aGlzLCB0aGlzLmluaXRJbmZvTGlzdCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWQVdBUkRSRVNQLCB0aGlzLCB0aGlzLnJlTHZBd2FyZERhdGEpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MVklORk9SRVNQLCB0aGlzLCB0aGlzLmluaXRMdkF3YXJkRGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3orr7nva4gIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1fZnVpID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5nZXRNYWluQ29tKENvbW1vbkNvbnN0YW50Ll9mdWlMZXZlbEJvbnVzUGF0aC5QYWNrYWdlLCBcIkxldmVsQm9udXNcIiwgXCJMZXZlbEJvbnVzXCIpO1xyXG4gICAgICAgIHZhciB0aXBDb20gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwidGlwQ29tXCIpLmFzQ29tO1xyXG4gICAgICAgIHRoaXMudGlwQ29udHIgPSB0aXBDb20uZ2V0Q29udHJvbGxlcihcImMxXCIpO1xyXG4gICAgICAgIHRoaXMuYnV5TW9uZXlUZXggPSB0aXBDb20uZ2V0Q2hpbGQoXCJidXlNb25leVRleFwiKS5hc0xhYmVsO1xyXG4gICAgICAgIHZhciB1cGdyYWRlQ29tID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInVwZ3JhZGVDb21cIikuYXNDb207XHJcbiAgICAgICAgdGhpcy51cGdyYWRlQ29udHIgPSB1cGdyYWRlQ29tLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICB1cGdyYWRlQ29tLmdldENoaWxkKFwidXBncmFkZUJ0blwiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25VcGdyYWRlQ2xpY2spO1xyXG4gICAgICAgIHVwZ3JhZGVDb20uZ2V0Q2hpbGQoXCJ1cGdyYWRlQnRuXCIpLm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLnNvdW5kUGxheShTb3VuZC5zb3VuZEtleUFyci5vbk9wZW4pIH0pO1xyXG4gICAgICAgIHZhciByZWNlaXZlQ29tID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInJlY2VpdmVDb21cIikuYXNDb207XHJcbiAgICAgICAgdGhpcy5sdlJlQ29udHIgPSByZWNlaXZlQ29tLmdldENvbnRyb2xsZXIoXCJjMVwiKTtcclxuICAgICAgICB0aGlzLnJlQnRuID0gcmVjZWl2ZUNvbS5nZXRDaGlsZChcInJlQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuZXhwTGlzdCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJFeHBMaXN0XCIpLmFzTGlzdDtcclxuICAgICAgICB0aGlzLnByZUJ0biA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJwcmVCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5uZXh0QnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm5leHRCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5wcmVCdG4ub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25sdkNvbmZpZ1JlcUNsaWNrKHRoaXMuY3VyckZ1bmRJZCAtIDEpIH0pO1xyXG4gICAgICAgIHRoaXMubmV4dEJ0bi5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5vbmx2Q29uZmlnUmVxQ2xpY2sodGhpcy5jdXJyRnVuZElkICsgMSkgfSk7XHJcbiAgICAgICAgdGhpcy5jdXJyVG90YWxSZVRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJhbGxCb3Vuc1RleFwiKS5hc0xhYmVsO1xyXG4gICAgICAgIHRoaXMuY3VyclJlTHZUZXggPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibHZUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLmN1cnJSZVJld2FyZFRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJib3Vuc1RleFwiKS5hc0xhYmVsO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJyZWNvcmRCdG5cIikub25DbGljayh0aGlzLCB0aGlzLm9uUmVjb3JkQ2xpY2spO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJyZWNvcmRCdG5cIikub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMuc291bmRQbGF5KFNvdW5kLnNvdW5kS2V5QXJyLm9uT3BlbikgfSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImRldGFpbHNCdG5cIikub25DbGljayh0aGlzLCB0aGlzLm9uSGVscENsaWNrKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiZGV0YWlsc0J0blwiKS5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5zb3VuZFBsYXkoU291bmQuc291bmRLZXlBcnIub25PcGVuKSB9KTtcclxuICAgICAgICB2YXIgY2xvc2VCdG46IGZhaXJ5Z3VpLkdCdXR0b24gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiY2xvc2VCdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgY2xvc2VCdG4ub25DbGljayh0aGlzLCB0aGlzLm9uQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMucmVmcmVzaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICrliJ3lp4vjgIHlpLHotKXkuYvlkI7ph43mlrDliLfmlrBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZWZyZXNoKCk6IHZvaWQge1xyXG4gICAgICAgIE5ldFJvbGVJbmZvLkluc3RhbmNlLmx2SW5mb1JlcSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDliJ3lp4vljJblpZbph5HmlbDmja5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBpbml0THZBd2FyZERhdGEoKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIGluZm8gPSBOZXRSb2xlSW5mby5JbnN0YW5jZS5sdkluZm87XHJcbiAgICAgICAgdGhpcy5jdXJyRnVuZElkID0gTmV0Um9sZUluZm8uSW5zdGFuY2UubHZJbmZvLmZ1bmRfaWQ7XHJcbiAgICAgICAgTmV0Um9sZUluZm8uSW5zdGFuY2UubHZDb25maWdSZXEodGhpcy5jdXJyRnVuZElkKTtcclxuICAgICAgICB0aGlzLmN1cnJMdiA9IGluZm8ubHY7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImV4cEx2VGV4XCIpLnRleHQgPSBpbmZvLmx2ICsgXCLnuqdcIjtcclxuICAgICAgICB2YXIgZXhwUHJlOiBmYWlyeWd1aS5HTGFiZWwgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiZXhwUHJlVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdmFyIGV4cFNsaTogZmFpcnlndWkuR1NsaWRlciA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJleHBTbGlcIikuYXNTbGlkZXI7XHJcbiAgICAgICAgdmFyIG5lZWRFeHA6IG51bWJlciA9IGluZm8ubmVlZF9leHAgYXMgbnVtYmVyO1xyXG4gICAgICAgIHZhciBleHA6IG51bWJlciA9IGluZm8uZXhwIGFzIG51bWJlcjtcclxuICAgICAgICBpZiAobmVlZEV4cCA9PSAwKSB7XHJcbiAgICAgICAgICAgIGV4cFByZS50ZXh0ID0gXCIwLjAwJVwiO1xyXG4gICAgICAgICAgICBleHBTbGkudmFsdWUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgZXhwU2xpLm1heCA9IG5lZWRFeHA7XHJcbiAgICAgICAgICAgIGV4cFNsaS52YWx1ZSA9IGV4cDtcclxuICAgICAgICAgICAgZXhwUHJlLnRleHQgPSAoZXhwIC8gbmVlZEV4cCAqIDEwMCkudG9GaXhlZCgwKSArIFwiJVwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiZGlzTmV4dEV4cFRleFwiKS50ZXh0ID0gKG5lZWRFeHAgLSBleHApLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcIm5leHRCb3Vuc1RleFwiKS50ZXh0ID0gKE51bWJlcihpbmZvLm5leHRfcmV3YXJkKSAqIDAuMDEpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5jdXJyVG90YWxSZVRleC50ZXh0ID0gKE51bWJlcihpbmZvLnRvdGFsX3Jld2FyZCkgKiAwLjAxKS50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMuY3VyclRvdGFsUmUgPSBpbmZvLnRvdGFsX3Jld2FyZCBhcyBudW1iZXI7XHJcbiAgICAgICAgdGhpcy5hd2FyZFJlKGluZm8ubHYsIGluZm8ubmV4dF9yZXdhcmRfbHYsIE51bWJlcihpbmZvLnJld2FyZCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6aKG5Y+W562J57qn5Y+N6aaI57uT5p6cXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZUx2QXdhcmREYXRhKGRhdGE6IEF3YXJkTXNnLmx2X2F3YXJkX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5hd2FyZENvZGUoZGF0YS5jb2RlKSkge1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5sdkZ1bmRDaC50aXBMZXZlbFJlY2VpdmVkLnJlcGxhY2UoXCJ7MH1cIiwgKHRoaXMuY3VyclJlUmV3YXJkICogMC4wMSkudG9TdHJpbmcoKSksIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJUb3RhbFJlID0gTnVtYmVyKHRoaXMuY3VyclRvdGFsUmUpICsgTnVtYmVyKHRoaXMuY3VyclJlUmV3YXJkKTtcclxuICAgICAgICAgICAgdGhpcy5jdXJyVG90YWxSZVRleC50ZXh0ID0gKHRoaXMuY3VyclRvdGFsUmUgKiAwLjAxKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICB0aGlzLmF3YXJkUmUoZGF0YS5sdiwgZGF0YS5uZXh0X2x2LCBOdW1iZXIoZGF0YS5yZXdhcmQpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmx2RnVuZENoLnRpcFJlY2VpdmVGYWlsZWQsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICB0aGlzLnJlZnJlc2goKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmihuWPluetieWlluWllumHkVxyXG4gICAgICogQHBhcmFtIGx2IFxyXG4gICAgICogQHBhcmFtIG5leHRMdiBcclxuICAgICAqIEBwYXJhbSByZXdhcmQgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYXdhcmRSZShsdjogbnVtYmVyLCBuZXh0THY6IG51bWJlciwgcmV3YXJkOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmN1cnJSZUx2ID0gbHY7XHJcbiAgICAgICAgdGhpcy5uZXh0THYgPSBuZXh0THY7XHJcbiAgICAgICAgdGhpcy5jdXJyUmVSZXdhcmQgPSByZXdhcmQ7XHJcbiAgICAgICAgdGhpcy5jdXJyUmVMdlRleC50ZXh0ID0gbmV4dEx2LnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5jdXJyUmVSZXdhcmRUZXgudGV4dCA9IE51bWJlcihyZXdhcmQgKiAwLjAxKS50b1N0cmluZygpO1xyXG4gICAgICAgIGlmIChuZXh0THYgPT0gMCkgey8v5bey57uP6aKG5Y+W5pyA6auY562J57qnXHJcbiAgICAgICAgICAgIHRoaXMubHZSZUNvbnRyLnNldFNlbGVjdGVkSW5kZXgoMyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJMdiA+PSBuZXh0THYpLy/lj6/pooblj5ZcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sdlJlQ29udHIuc2V0U2VsZWN0ZWRJbmRleCgyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVCdG4ub25DbGljayh0aGlzLCB0aGlzLm9uUmVMdkF3YXJkQ2xpY2spO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Ugey8v5LiN5Y+v6aKG5Y+WXHJcbiAgICAgICAgICAgICAgICB0aGlzLmx2UmVDb250ci5zZXRTZWxlY3RlZEluZGV4KDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6aKG5Y+W562J57qnXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25SZUx2QXdhcmRDbGljaygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmx2UmVDb250ci5zZWxlY3RlZEluZGV4ID0gMTtcclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCwgdGhpcywgdGhpcy5vblBsYXlBd2FyZEFuaSlcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5pKt5pS+6aKG5Y+W5Yqo55S7XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25QbGF5QXdhcmRBbmkoKSB7XHJcbiAgICAgICAgTmV0QXdhcmQuSW5zdGFuY2UubHZBd2FyZFJlcSh0aGlzLm5leHRMdilcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICrln7rph5HlpZbph5HmlbDmja7liJfooahcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGluaXRJbmZvTGlzdChkYXRhOiBSb2xlSW5mb01zZy5sdl9jb25maWdfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHZhciB0aXA6IGZhaXJ5Z3VpLkdMb2FkZXIgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwidGlwTG9hZGVyXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIHRoaXMuY3VyckZ1bmRJZCA9IGRhdGEuZnVuZF9pZDtcclxuICAgICAgICB0aGlzLmlzU2hvd01vbmV5KGRhdGEuZnVuZF9pZCk7XHJcbiAgICAgICAgdGhpcy5pc0J1eShkYXRhLmJ1eV9tYXJrKTtcclxuICAgICAgICB0aGlzLmJ1eU1vbmV5VGV4LnRleHQgPSAoTnVtYmVyKGRhdGEucHJpY2UpICogMC4wMSkudG9TdHJpbmcoKTtcclxuICAgICAgICB0aGlzLmV4cExpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICB2YXIgY29uZmlncyA9IGRhdGEuY29uZmlncztcclxuICAgICAgICB0aXAuaWNvbiA9IFwidWk6Ly9MZXZlbEJvbnVzL1wiICsgXCJ0aXBcIiArIChOdW1iZXIoZGF0YS5mdW5kX2lkKSAtIDEpO1xyXG4gICAgICAgIGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBjb25maWdzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBpbmZvQ29tOiBHQ29tcG9uZW50ID0gdGhpcy5leHBMaXN0LmFkZEl0ZW1Gcm9tUG9vbCgpLmFzQ29tO1xyXG4gICAgICAgICAgICBpbmZvQ29tLmdldENoaWxkKFwibHZUZXhcIikudGV4dCA9IGNvbmZpZ3NbaV0ubHYudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgaW5mb0NvbS5nZXRDaGlsZChcImV4cFRleFwiKS50ZXh0ID0gY29uZmlnc1tpXS5leHAudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgaW5mb0NvbS5nZXRDaGlsZChcImF3YXJkVGV4XCIpLnRleHQgPSAoTnVtYmVyKGNvbmZpZ3NbaV0uYXdhcmQpICogMC4wMSkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5leHBMaXN0LmVuc3VyZUJvdW5kc0NvcnJlY3QoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDngrnlh7vor7fmsYLln7rph5HmmL7npLpcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbmx2Q29uZmlnUmVxQ2xpY2soaWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc291bmRQbGF5KFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xpY2spO1xyXG4gICAgICAgIGlmIChpZCA+IDUpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBOZXRSb2xlSW5mby5JbnN0YW5jZS5sdkNvbmZpZ1JlcShpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/kuI3mmK/lhajmsJHnrYnnuqdcclxuICAgICAqIEBwYXJhbSBpZCBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBpc1Nob3dNb25leShpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGlkID09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy50aXBDb250ci5zZXRTZWxlY3RlZEluZGV4KDEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudGlwQ29udHIuc2V0U2VsZWN0ZWRJbmRleCgwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuW3sue7j+i0reS5sFxyXG4gICAgICogQHBhcmFtIGJ1eU1hcmsgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaXNCdXkoYnV5TWFyazogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKGJ1eU1hcmsgPT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnVwZ3JhZGVDb250ci5zZXRTZWxlY3RlZEluZGV4KDApO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5jdXJyRnVuZElkID09IDUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubmV4dEJ0bi52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRCdG4udmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZUJ0bi52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChidXlNYXJrID09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy51cGdyYWRlQ29udHIuc2V0U2VsZWN0ZWRJbmRleCgxKTtcclxuICAgICAgICAgICAgdGhpcy5wcmVCdG4udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy51cGdyYWRlQ29udHIuc2V0U2VsZWN0ZWRJbmRleCgxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDluK7liqnmjInpkq5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkhlbHBDbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkx2RGV0YWlsUGFuZWwpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDliY3lvoDljYfnuqdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblVwZ3JhZGVDbGljaygpOiB2b2lkIHtcclxuICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNBY3RFbmQpIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKExhbmcubHZGdW5kQ2gudGlwQWN0RW5kLCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuR3Jvd3RoRnVuZFBhbmVsKTtcclxuICAgICAgICAgICAgdGhpcy5vbkNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6aKG5Y+W6K6w5b2VXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25SZWNvcmRDbGljaygpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkx2UmVjb3Jkc1BhbmVsKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2VudENvbSDlhbPpl63nm67moIdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZUxldmVsQm9udXNQYW5lbCA9IGZhbHNlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xvc2UpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MVkNPTkZJR1JFU1AsIHRoaXMsIHRoaXMuaW5pdEluZm9MaXN0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLnJlbW92ZShFdmVudENvbnN0YW50UmVzcG9uc2UuTFZBV0FSRFJFU1AsIHRoaXMsIHRoaXMucmVMdkF3YXJkRGF0YSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWSU5GT1JFU1AsIHRoaXMsIHRoaXMuaW5pdEx2QXdhcmREYXRhKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTGV2ZWxCb251c1BhbmVsKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5aOw6Z+z5pKt5pS+XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc291bmRQbGF5KHN0cjogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgc3RyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5aWW6YeR6aKG5Y+W54q25oCBXHJcbiAgICAgKiBAcGFyYW0gcmVjZUx2Qm9udXMgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYXdhcmRDb2RlKHJlY2VMdkJvbnVzOiBBd2FyZE1zZy5hd2FyZF9jb2RlKTogYm9vbGVhbiB7XHJcbiAgICAgICAgdmFyIGF3YXJkX2NvZGUgPSBBd2FyZE1zZy5hd2FyZF9jb2RlO1xyXG4gICAgICAgIHZhciBpc1RydWU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgICAgICBzd2l0Y2ggKHJlY2VMdkJvbnVzKSB7XHJcbiAgICAgICAgICAgIGNhc2UgYXdhcmRfY29kZS5zdWNjZXNzOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6aKG5Y+W77ya6YeR5biB5oiQ5YqfXCIpO1xyXG4gICAgICAgICAgICAgICAgaXNUcnVlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGF3YXJkX2NvZGUuZmFpbDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIumihuWPlu+8mumHkeW4geWksei0pVwiKTsvL+abtOaWsOaVtOS4qumdouadvyAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgYXdhcmRfY29kZS5vdXRfb2ZfY2FzaDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIumihuWPlu+8mumHkeW4geS4jei2s1wiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGF3YXJkX2NvZGUudG9wX2Z1bl9pZDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIumihuWPlu+8muW9k+WJjeW3sue7j+aYr+acgOmrmOaho+asoeWfuumHkVwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGF3YXJkX2NvZGUubHZfaGFkX3Jld2FyZDpcclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIumihuWPlu+8muW9k+WJjeWlluWKseW3sue7j+mihuWPllwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGF3YXJkX2NvZGUubGV2ZWxub3Q6XHJcbiAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLpooblj5bvvJrlvZPliY3lpZblirHmnKrmu6HotrPpooblj5bmnaHku7ZcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBhd2FyZF9jb2RlLnByZXZfcmV3YXJkOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6aKG5Y+W77ya5YmN572u5aWW5Yqx5pyq6aKG5Y+WXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgYXdhcmRfY29kZS5oYWRfYm91Z2h0OlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6aKG5Y+W77ya5rS75Yqo5bey57uP57uT5p2fXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgYXdhcmRfY29kZS5hY3RfZW5kOlxyXG4gICAgICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi5rS75Yqo5bey57uP57uT5p2fXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGlzVHJ1ZTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2FkaW5nUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG5cclxuICAgIHByaXZhdGUgbV9Mb2FkaW5nUHJvZ3Jlc3M6IGZhaXJ5Z3VpLkdQcm9ncmVzc0JhcjtcclxuICAgIHByaXZhdGUgbV9jb250ZW50OiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIG1fcHJvZ3Jlc3NUaXRsZTogZmFpcnlndWkuR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBtX3Byb2dyZXNzTG9hZGVyOiBmYWlyeWd1aS5HTG9hZGVyO1xyXG4gICAgY29uc3RydWN0b3IoaWQpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgICAvLy8vZmFpcnlndWkuVUlQYWNrYWdlLmFkZFBhY2thZ2UoQ29tbW9uQ29uc3RhbnQuX2Z1aUxvYWRpbmdQYXRoLlBhY2thZ2UpO1xyXG4gICAgICAgIHRoaXMubV9jb250ZW50ID0gXCJcIjtcclxuICAgICAgICB0aGlzLm1fZnVpID0gZmFpcnlndWkuVUlQYWNrYWdlLmNyZWF0ZU9iamVjdChcIkxvYWRpbmdcIiwgXCJMb2FkaW5nUGFuZWxcIikuYXNDb207XHJcbiAgICAgICAgdGhpcy5tX0xvYWRpbmdQcm9ncmVzcyA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJMb2FkaW5nQmFyXCIpLmFzUHJvZ3Jlc3M7XHJcbiAgICAgICAgdGhpcy5tX3Byb2dyZXNzVGl0bGUgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwidmFsdWVcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLm1fcHJvZ3Jlc3NMb2FkZXIgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibG9hZGVyXCIpLmFzTG9hZGVyO1xyXG4gICAgICAgIHRoaXMubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICB0aGlzLkluaXRVSSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pdFVJKCkge1xyXG4gICAgICAgIHRoaXMuYWRkQ2hpbGQobmV3IExheWEuSW1hZ2UoQ29tbW9uQ29uc3RhbnQuX2xvYWRpbmdCZ1BhdGgpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkFkZEZVSSh0aGlzLm1fZnVpKTtcclxuICAgICAgICB0aGlzLlNldFByb2dyZXNzKDApO1xyXG4gICAgICAgIHZhciByOiBOdW1iZXIgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxMCArIDEpO1xyXG4gICAgICAgIHRoaXMubV9wcm9ncmVzc0xvYWRlci5pY29uID0gXCJ1aTovL0xvYWRpbmcvXCIgKyBcInRpc2hpX1wiICsgKChyID4gNSkgPyA0IDogcik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIFNldFByb2dyZXNzKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1fTG9hZGluZ1Byb2dyZXNzLnZhbHVlID0gTWF0aC5yb3VuZCh2YWx1ZSAqIDEwMCk7XHJcbiAgICAgICAgdGhpcy5tX3Byb2dyZXNzVGl0bGUudGV4dCA9IE1hdGgucm91bmQodmFsdWUgKiAxMDApICsgXCIlXCI7XHJcbiAgICAgICAgaWYgKHRoaXMubV9Mb2FkaW5nUHJvZ3Jlc3MudmFsdWUgPiB0aGlzLm1fTG9hZGluZ1Byb2dyZXNzLm1heCkge1xyXG4gICAgICAgICAgICB0aGlzLm1fTG9hZGluZ1Byb2dyZXNzLnZhbHVlID0gdGhpcy5tX0xvYWRpbmdQcm9ncmVzcy5tYXg7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgU2V0Q29udGVudChjb250ZW50OiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLm1fY29udGVudCA9IGNvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG5cclxufSIsImltcG9ydCBHQ29tcG9uZW50ID0gZmFpcnlndWkuR0NvbXBvbmVudDtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEx2RGV0YWlsUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aUx2RGV0YWlsc1BhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlMdkRldGFpbHNQYXRoLmZ1aSwgdGhpcywgdGhpcy5vbkxvYWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296K6+572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aUx2RGV0YWlsc1BhdGguUGFja2FnZSwgXCJMdkRldGFpbHNcIiwgXCJsdkRldGFpbHNDb21cIik7XHJcblxyXG4gICAgICAgIHZhciBjbG9zZUJ0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZUJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBjbG9zZUJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICogXHJcbiAgICAqIEBwYXJhbSB0YXJnZW50Q29tIOWFs+mXreebruagh1xyXG4gICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5vbkNsb3NlKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTHZEZXRhaWxQYW5lbCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgeyBIdHRwIH0gZnJvbSBcIi4uL0xvZ2luL0h0dHAvSHR0cFwiO1xyXG5pbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEx2UmVjb3Jkc1BhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgbGlzdDogZmFpcnlndWkuR0xpc3Q7XHJcbiAgICBwcml2YXRlIGN1cnJQYWdlOiBudW1iZXIgPSAxO1xyXG4gICAgcHJpdmF0ZSBtYXhQYWdlOiBudW1iZXIgPSAxMjtcclxuICAgIHByaXZhdGUgdG90YWxQYWdlOiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBudW1QYWdlOiBudW1iZXIgPSAxO1xyXG4gICAgcHJpdmF0ZSBkYXRhQXJyOiBBcnJheTxzdHJpbmc+O1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKClcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmxvYWRVSShDb21tb25Db25zdGFudC5fZnVpTHZSZWNvcmRzUGF0aC5pbWFnZSwgQ29tbW9uQ29uc3RhbnQuX2Z1aUx2UmVjb3Jkc1BhdGguZnVpLCB0aGlzLCB0aGlzLm9uTG9hZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3orr7nva5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkxvYWQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tX2Z1aSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuZ2V0TWFpbkNvbShDb21tb25Db25zdGFudC5fZnVpTHZSZWNvcmRzUGF0aC5QYWNrYWdlLCBcIkx2UmVjb3Jkc1wiLCBcImx2UmVjb3Jkc0NvbVwiKTtcclxuICAgICAgICB0aGlzLmxpc3QgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiaW5mb0xpc3RcIikuYXNMaXN0O1xyXG4gICAgICAgIHRoaXMubGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIC8vdGhpcy5saXN0Lm9uKGZhaXJ5Z3VpLkV2ZW50cy5QVUxMX0RPV05fUkVMRUFTRSx0aGlzLHRoaXMub25QdWxsRG93blJlbGVhc2UpO1xyXG4gICAgICAgIHRoaXMubGlzdC5vbihmYWlyeWd1aS5FdmVudHMuUFVMTF9VUF9SRUxFQVNFLCB0aGlzLCB0aGlzLm9uUHVsbFVwUmVsZWFzZSk7XHJcbiAgICAgICAgdmFyIGNsb3NlQnRuOiBmYWlyeWd1aS5HQnV0dG9uID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNsb3NlQnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIGNsb3NlQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5vbkNsb3NlKTtcclxuICAgICAgICAvLy8vICBjb25zb2xlLmxvZyhcIuWKoOi9vVwiKTtcclxuICAgICAgICB0aGlzLkh0dHBSZWNvcmQodGhpcy5jdXJyUGFnZSwgdGhpcy5tYXhQYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uUHVsbERvd25SZWxlYXNlKCk6IHZvaWQge1xyXG4gICAgICAgIC8vLy8gIGNvbnNvbGUubG9nKFwi5LiK5ouJXCIpO1xyXG4gICAgICAgIGlmICh0aGlzLmN1cnJQYWdlIDw9IDEpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5jdXJyUGFnZSAtPSAxO1xyXG4gICAgICAgICAgICB0aGlzLkh0dHBSZWNvcmQodGhpcy5jdXJyUGFnZSwgdGhpcy5tYXhQYWdlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBvblB1bGxVcFJlbGVhc2UoKTogdm9pZCB7XHJcbiAgICAgICAgLy8vLyAgY29uc29sZS5sb2coXCLkuIvmi4lcIik7XHJcbiAgICAgICAgaWYgKHRoaXMuY3VyclBhZ2UgPj0gdGhpcy5udW1QYWdlKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyclBhZ2UgKz0gMTtcclxuICAgICAgICAgICAgdGhpcy5IdHRwUmVjb3JkKHRoaXMuY3VyclBhZ2UsIHRoaXMubWF4UGFnZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOivt+axguaVsOaNrlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEh0dHBSZWNvcmQocGFnZTogbnVtYmVyLCBtYVg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIC8vLy9jb25zb2xlLmxvZyhHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuaGlzdG9yeVVybCk7XHJcbiAgICAgICAgbGV0IGRhdGFVcmwgPSBcIj9hcGlfdHlwZT1mdW5kX2dvdF9hd2FyZHMmcGFnZT1cIiArIHBhZ2UgKyBcIiZzaXplPVwiICsgbWFYO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuaGlzdG9yeVVybC5pbmRleE9mKCc/JykgPiAwKSB7XHJcbiAgICAgICAgICAgIGRhdGFVcmwgPSBcIiRhcGlfdHlwZT1mdW5kX2dvdF9hd2FyZHMmcGFnZT1cIiArIHBhZ2UgKyBcIiZzaXplPVwiICsgbWFYO1xyXG4gICAgICAgIH1cclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJkYXRhVXJsOiBcIiArIGRhdGFVcmwpO1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcInJlcXVlc3RVcmw6IFwiICsgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmhpc3RvcnlVcmwgKyBkYXRhVXJsKTtcclxuICAgICAgICBIdHRwLmh0dHBTZW5kKFwiR0VUXCIsIEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5oaXN0b3J5VXJsICsgZGF0YVVybCwgbnVsbCwgdGhpcy5zdWNjZXNzQ2FsbEJhY2suYmluZCh0aGlzKSwgdGhpcy5mYWlsQ2FsbEJhY2suYmluZCh0aGlzKSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5oiQ5Yqf6L+U5Zue5pWw5o2uXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzdWNjZXNzQ2FsbEJhY2soZGF0YTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgLy8vL2NvbnNvbGUubG9nKFwi5Y6G5Y+y6K6w5b2V5pWw5o2uXCIpO1xyXG4gICAgICAgIHZhciBqID0ge1xyXG4gICAgICAgICAgICBcImluZm9cIjoge1xyXG4gICAgICAgICAgICAgICAgXCJzdGF0dXNcIjogMCwgXCJkYXRhXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgW3sgXCJpZFwiOiBcIjBcIiwgXCJ1c2VyX2lkXCI6IDAsIFwiYWN0aW9uXCI6IDAsIFwiZ2FtZV9pZFwiOiAwLCBcImN1cnJlbnRfYXdhcmRzXCI6IFwiXCIsIFwiY3VycmVudF9nb3RfbGV2X2lkXCI6IDAsIFwiY3JlYXRlX3RpbWVcIjogMCB9XSxcclxuICAgICAgICAgICAgICAgIFwicGFnZV9pbmZvXCI6IHsgXCJ0b3RhbFwiOiAwLCBcInBhZ2VfbnVtXCI6IDAgfVxyXG4gICAgICAgICAgICB9LCBcInBhZ2VcIjogMCwgXCJnYW1lX2xpc3RfaW5mb1wiOiBbXSwgXCJ0aW1lem9uZVwiOiAtNFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8vL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgIGlmIChkYXRhICE9IG51bGwpIHtcclxuICAgICAgICAgICAgaiA9IG51bGw7XHJcbiAgICAgICAgICAgIGogPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaW5mbyA9IGouaW5mbztcclxuICAgICAgICB2YXIgcGFnZSA9IGluZm8ucGFnZV9pbmZvO1xyXG4gICAgICAgIHZhciBkYXRhcyA9IGluZm8uZGF0YTtcclxuICAgICAgICB0aGlzLm51bVBhZ2UgPSBwYWdlLnBhZ2VfbnVtO1xyXG4gICAgICAgIC8vIHRoaXMuIGxpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICBmb3IgKHZhciBpOiBudW1iZXIgPSAwOyBpIDwgZGF0YXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGluZm9Db206IEdDb21wb25lbnQgPSB0aGlzLmxpc3QuYWRkSXRlbUZyb21Qb29sKCkuYXNDb207XHJcbiAgICAgICAgICAgIGluZm9Db20uZ2V0Q2hpbGQoXCJsdlRleFwiKS50ZXh0ID0gZGF0YXNbaV0uY3VycmVudF9nb3RfbGV2X2lkLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIGluZm9Db20uZ2V0Q2hpbGQoXCJhbW91bnRUZXhcIikudGV4dCA9IGRhdGFzW2ldLmN1cnJlbnRfYXdhcmRzLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIGluZm9Db20uZ2V0Q2hpbGQoXCJhY2NvdW50TnVtVGV4XCIpLnRleHQgPSBkYXRhc1tpXS5pZC50b1N0cmluZygpO1xyXG4gICAgICAgICAgICBpbmZvQ29tLmdldENoaWxkKFwidGltZVRleFwiKS50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyVG9EYXRhVGltZShOdW1iZXIoZGF0YXNbaV0uY3JlYXRlX3RpbWUpKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICB0aGlzLmxpc3QuZW5zdXJlQm91bmRzQ29ycmVjdCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlpLHotKXov5Tlm57mlbDmja5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBmYWlsQ2FsbEJhY2soKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5saXN0LnJlbW92ZUNoaWxkcmVuVG9Qb29sKCk7XHJcbiAgICAgICAgLy8vL2NvbnNvbGUubG9nKFwi5oqx5q2J77yM5L2g5bey57uP5aSx5Y675L+h5oGvXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2VudENvbSDlhbPpl63nm67moIdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIEh0dHAuaHR0cEFib3J0KCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbG9zZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5jbG9zZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkx2UmVjb3Jkc1BhbmVsKTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHU2xpZGVyID0gZmFpcnlndWkuR1NsaWRlcjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgUmVzb3VyY2VNYW5nZXIgZnJvbSBcIi4uLy4uL21hbmFnZXIvUmVzb3VyY2VNYW5nZXJcIjtcclxuaW1wb3J0IE5ldFJvbGVJbmZvIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9sZUluZm9cIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0TG9naW5cIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRSb29tIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9vbVwiO1xyXG5pbXBvcnQgRXZlbnROZXRSZXNwb25zZSBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL0V2ZW50TmV0UmVzcG9uc2VcIjtcclxuaW1wb3J0IEJhc2VQYW5lbCBmcm9tIFwiLi9CYXNlUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQZXJzb25hbEluZm9QYW5lbCBleHRlbmRzIEJhc2VQYW5lbCB7XHJcbiAgICBwcml2YXRlIGludHJvR3JvdXA6IGZhaXJ5Z3VpLkdHcm91cDtcclxuICAgIHByaXZhdGUgaW50cm9UczogZmFpcnlndWkuVHJhbnNpdGlvbjtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0hhdmVQZXJzb25JbmZvUGFuZWwpIHJldHVybjtcclxuICAgICAgICBlbHNlIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZVBlcnNvbkluZm9QYW5lbCA9IHRydWU7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aVBlcnNvbmFsSW5mb1BhdGguaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlQZXJzb25hbEluZm9QYXRoLmZ1aSwgdGhpcywgdGhpcy5vbkxvYWQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MVklORk9SRVNQLCB0aGlzLCB0aGlzLmx2SW5mbyk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5TeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLnN5bmNDaGlwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1fZnVpID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5nZXRNYWluQ29tKENvbW1vbkNvbnN0YW50Ll9mdWlQZXJzb25hbEluZm9QYXRoLlBhY2thZ2UsIFwiUGVyc29uYWxJbmZvXCIsIFwiUGVyc29uYWxJbmZvXCIpO1xyXG5cclxuICAgICAgICB2YXIgcGxheU5hbWVUZXggPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibmFtZVRleFwiKS5hc0xhYmVsO1xyXG4gICAgICAgIHBsYXlOYW1lVGV4LnRleHQgPSBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mby5uaWNrbmFtZTtcclxuICAgICAgICB2YXIgaWRUZXggPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiaWRUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICBpZFRleC50ZXh0ID0gTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8uYWNjb3VudDtcclxuICAgICAgICB0aGlzLmludHJvR3JvdXAgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiaW50cm9HclwiKS5hc0dyb3VwO1xyXG4gICAgICAgIHRoaXMuaW50cm9Hcm91cC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pbnRyb1RzID0gdGhpcy5tX2Z1aS5nZXRUcmFuc2l0aW9uKFwidDBcIik7XHJcbiAgICAgICAgdmFyIGhlbHBCdG46IGZhaXJ5Z3VpLkdCdXR0b24gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwiaW50ckJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBoZWxwQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5vbkhlbHApO1xyXG4gICAgICAgIHZhciBjbG9zZUJ0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZUJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBjbG9zZUJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5TeW5jQ2hpcHNSZXEoKTtcclxuICAgICAgICBOZXRSb2xlSW5mby5JbnN0YW5jZS5sdkluZm9SZXEoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICog6I635b6X5ZCM5q2l6YeR5biBXHJcbiAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgKi9cclxuICAgIHByaXZhdGUgc3luY0NoaXAoZGF0YTogUm9vbU1zZy5zeW5jX2NoaXBzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB2YXIgY29pblRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjb2luVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgY29pblRleC50ZXh0ID0gKE51bWJlcihkYXRhLmNoaXBzKSAvIDEwMCkudG9GaXhlZCgyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog562J57qn5L+h5oGvXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgbHZJbmZvKCk6IHZvaWQge1xyXG4gICAgICAgIHZhciBsdlRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJsdlRleFwiKS5hc0xhYmVsO1xyXG4gICAgICAgIGx2VGV4LnRleHQgPSBOZXRSb2xlSW5mby5JbnN0YW5jZS5sdkluZm8ubHYgKyBcIue6p1wiO1xyXG4gICAgICAgIHRoaXMuZXhwRm9ybWF0KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOe7j+mqjOWAvFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGV4cEZvcm1hdCgpIHtcclxuICAgICAgICB2YXIgdjE6IG51bWJlciA9IE5ldFJvbGVJbmZvLkluc3RhbmNlLmx2SW5mby5leHAgYXMgbnVtYmVyO1xyXG4gICAgICAgIHZhciB2MjogbnVtYmVyID0gTmV0Um9sZUluZm8uSW5zdGFuY2UubHZJbmZvLm5lZWRfZXhwIGFzIG51bWJlcjtcclxuICAgICAgICB2YXIgY3VyckV4cFRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjdXJyRXhwVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgY3VyckV4cFRleC50ZXh0ID0gdjEgKyBcIi9cIiArIHYyO1xyXG4gICAgICAgIHZhciBjdXJyRXhwU2xpID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImV4cFNsaVwiKS5hc1NsaWRlcjtcclxuICAgICAgICB2YXIgY3VyckV4cFByZVRleCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJleHBQcmVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ubmVlZF9leHAgPT0gMCkge1xyXG4gICAgICAgICAgICBjdXJyRXhwU2xpLnZhbHVlID0gMDtcclxuICAgICAgICAgICAgY3VyckV4cFByZVRleC50ZXh0ID0gXCIwLjAwJVwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY3VyckV4cFNsaS52YWx1ZSA9IHYxO1xyXG4gICAgICAgICAgICBjdXJyRXhwU2xpLm1heCA9IHYyO1xyXG4gICAgICAgICAgICBjdXJyRXhwUHJlVGV4LnRleHQgPSAodjEgLyB2MiAqIDEwMCkudG9GaXhlZCgwKSArIFwiJVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOW4ruWKqeaMiemSrlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uSGVscCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmludHJvR3JvdXAudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5pbnRyb1RzLnBsYXkoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2VudENvbSDlhbPpl63nm67moIdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZVBlcnNvbkluZm9QYW5lbCA9IGZhbHNlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xvc2UpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MVklORk9SRVNQLCB0aGlzLCB0aGlzLmx2SW5mbyk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5TeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLnN5bmNDaGlwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUGVyc29uYWxJbmZvUGFuZWwpO1xyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4uL1BhbmVsL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IEdhbWVFdmVudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvR2FtZUV2ZW50XCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IEJhdHRlcnlDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0JhdHRlcnlDb250cm9sbGVyXCI7XHJcblxyXG4vKipcclxuICog5o+Q56S65by55qGGXHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb21wdFBhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuXHJcbiAgICBwcml2YXRlIG1fY29udGVudDogZmFpcnlndWkuR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBtX2NhbmNlbEJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgbV9jb25maXJtQnRuOiBmYWlyeWd1aS5HQnV0dG9uO1xyXG4gICAgcHJpdmF0ZSBtX3R5cGU6IEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGlkOiBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgdGhpcy5tX2Z1aSA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5jcmVhdGVPYmplY3QoXCJIYWxsXCIsIFwiUmVjb25uZWN0VGlwXCIpLmFzQ29tO1xyXG4gICAgICAgIHRoaXMubV9jb25maXJtQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIkNvbmZpcm1CdG5cIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy5tX2NvbmZpcm1CdG4ub25DbGljayh0aGlzLCB0aGlzLk9uQ29uZmlybUJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fY2FuY2VsQnRuID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIkNhbmNlbEJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICB0aGlzLm1fY2FuY2VsQnRuLm9uQ2xpY2sodGhpcywgdGhpcy5PbkNhbmNlbEJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fY29udGVudCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJDb250ZW50TGFiZWxcIikuYXNMYWJlbDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkFkZEZVSSh0aGlzLm1fZnVpKTtcclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5iUHJvaGliaXRXYWxsZXRCdG4gPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBJbml0RGF0YSh0eXBlOiBFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZSwgdGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5tX3R5cGUgPSB0eXBlO1xyXG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLkV4aXRIdW50U2NlbmU6IC8v6YCA5Ye65o2V54yO5Zy65pmvXHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVByb21wdFR5cGUuU3RvcEF1dG9BdHRhY2s6IC8v5YGc5q2i6Ieq5Yqo5o2V6bG8XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2NhbmNlbEJ0bi52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fY29uZmlybUJ0bi54ID0gNjgwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWU6Ly/lvILlnLDnmbvlvZXmj5DnpLrmoYZcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fY2FuY2VsQnRuLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fY29uZmlybUJ0bi54ID0gNTYzO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5tX2NvbnRlbnQudGV4dCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBPbkNvbmZpcm1CdG5DbGljaygpIHtcclxuXHJcbiAgICAgICAgc3dpdGNoICh0aGlzLm1fdHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLkV4aXRIdW50U2NlbmU6IC8v6YCA5Ye65o2V54yO5Zy65pmvXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5FbnRlckhhbGxTY2VuZSgoKSA9PiB7IH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlN0b3BBdXRvQXR0YWNrOiAvL+WBnOatouiHquWKqOaNlemxvFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goR2FtZUV2ZW50LkhVTlRfQVVUT0FUVEFDSywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWU6Ly/lvILlnLDnmbvlvZXmj5DnpLrmoYZcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5yZWZyZXNoR2FtZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLkNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBPbkNhbmNlbEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIC8vIGlmIChtYW5hZ2VyLlRvdWNoTW92ZUZ1bGxTY3JlZW4uaW5zdGFuY2UuaXNBbmRyb2lkQXBwKSB7XHJcbiAgICAgICAgLy8gICAgIHdpbmRvdy5jbG9zZSgpO1xyXG4gICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmxvYmJ5VXJsO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmJQcm9oaWJpdFdhbGxldEJ0biA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuQ2xvc2UoKTtcclxuICAgIH1cclxufSIsImltcG9ydCBIYW5kbGVyID0gbGF5YS51dGlscy5IYW5kbGVyO1xyXG5pbXBvcnQgTG9hZGVyID0gbGF5YS5uZXQuTG9hZGVyO1xyXG5pbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHTGlzdCA9IGZhaXJ5Z3VpLkdMaXN0O1xyXG5pbXBvcnQgR0ltYWdlID0gZmFpcnlndWkuR0ltYWdlO1xyXG5pbXBvcnQgR09iamVjdCA9IGZhaXJ5Z3VpLkdPYmplY3Q7XHJcbmltcG9ydCBHTGFiZWwgPSBmYWlyeWd1aS5HTGFiZWw7XHJcbmltcG9ydCBHQnV0dG9uID0gZmFpcnlndWkuR0J1dHRvbjtcclxuaW1wb3J0IEdHcm91cCA9IGZhaXJ5Z3VpLkdHcm91cDtcclxuaW1wb3J0IENvbnRyb2xsZXIgPSBmYWlyeWd1aS5Db250cm9sbGVyO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgTmV0UmFua2luZyBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJhbmtpbmdcIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmFua2luZ1BhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgdGhpc1JhbmtCdXQ6IEdCdXR0b247XHJcbiAgICBwcml2YXRlIGxhc3RSYW5rQnV0OiBHQnV0dG9uO1xyXG4gICAgcHJpdmF0ZSB0aGlzUmFua0xpc3Q6IEdMaXN0O1xyXG4gICAgcHJpdmF0ZSBsYXN0UmFua0xpc3Q6IEdMaXN0O1xyXG4gICAgcHJpdmF0ZSBzZWxmUmFua1RleDogR0xhYmVsO1xyXG4gICAgcHJpdmF0ZSBzZWxmUmFua0ltYWc6IEdJbWFnZTtcclxuICAgIHByaXZhdGUgc2VsZkNvaW46IEdMYWJlbDtcclxuICAgIHByaXZhdGUgdGFiQzogQ29udHJvbGxlcjtcclxuICAgIHByaXZhdGUgY3VyclBhZ2U6IG51bWJlciA9IDE7XHJcbiAgICBwcml2YXRlIGlzRW5kUGFnZTogQm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBpU0NhbkNsaWNrOiBib29sZWFuID0gdHJ1ZTtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0hhdmVSYW5rUGFuZWwpIHJldHVybjtcclxuICAgICAgICBlbHNlIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZVJhbmtQYW5lbCA9IHRydWU7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aVJhbmtpbmdQYXRoLmltYWdlLCBDb21tb25Db25zdGFudC5fZnVpUmFua2luZ1BhdGguZnVpLCB0aGlzLCB0aGlzLm9uTG9hZFJhbmtpbmcpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5SQU5LUkVTUCwgdGhpcywgdGhpcy5yYW5rUmVzcCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3orr7nva5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkxvYWRSYW5raW5nKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aVJhbmtpbmdQYXRoLlBhY2thZ2UsIFwiUmFua2luZ1wiLCBcIlJhbmtpbmdQYW5lbFwiKTtcclxuICAgICAgICB0aGlzLnRhYkMgPSB0aGlzLm1fZnVpLmdldENvbnRyb2xsZXIoXCJ0YWJcIik7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNsb3NlXCIpLm9uQ2xpY2sodGhpcywgdGhpcy5vbkNsb3NlKTtcclxuICAgICAgICB0aGlzLnRoaXNSYW5rQnV0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInRoaXNXZWVrQnV0XCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMubGFzdFJhbmtCdXQgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwibGFzdFdlZWtCdXRcIikuYXNCdXR0b247XHJcbiAgICAgICAgdGhpcy50aGlzUmFua0J1dC5vbkNsaWNrKHRoaXMsIHRoaXMub25DbGlja1RoaXNSYW5rKTtcclxuICAgICAgICB0aGlzLmxhc3RSYW5rQnV0Lm9uQ2xpY2sodGhpcywgdGhpcy5vbkNsaWNrTGFzdFJhbmspO1xyXG4gICAgICAgIHRoaXMudGhpc1JhbmtCdXQub25DbGljayh0aGlzLCAoKSA9PiB7IHRoaXMub25QbGF5U291bmQoU291bmQuc291bmRLZXlBcnIud2luZG93Q2hhbmdlKSB9KTtcclxuICAgICAgICB0aGlzLmxhc3RSYW5rQnV0Lm9uQ2xpY2sodGhpcywgKCkgPT4geyB0aGlzLm9uUGxheVNvdW5kKFNvdW5kLnNvdW5kS2V5QXJyLndpbmRvd0NoYW5nZSkgfSk7XHJcbiAgICAgICAgdGhpcy50aGlzUmFua0xpc3QgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwidGhpc1dlZWtMaXN0XCIpLmFzTGlzdDtcclxuICAgICAgICB0aGlzLnRoaXNSYW5rTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIHRoaXMubGFzdFJhbmtMaXN0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImxhc3RXZWVrTGlzdFwiKS5hc0xpc3Q7XHJcbiAgICAgICAgdGhpcy5sYXN0UmFua0xpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICB0aGlzLnNlbGZSYW5rVGV4ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInNlbGZIYXZlUmFua25nXCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdGhpcy5zZWxmUmFua0ltYWcgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwic2VsZk5vUmFua2luZ1wiKS5hc0ltYWdlO1xyXG4gICAgICAgIHRoaXMuc2VsZkNvaW4gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwic2VsZkNvaW5cIikuYXNDb20uZ2V0Q2hpbGQoXCJjb2luVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdGhpcy5zZWxmQ29pbi50ZXh0ID0gXCIwXCI7XHJcbiAgICAgICAgdmFyIG5hbWVUeHQ6IGZhaXJ5Z3VpLkdUZXh0RmllbGQgPSB0aGlzLm1fZnVpLmdldENoaWxkKFwic2VsZk5hbWVcIikuYXNDb20uZ2V0Q2hpbGQoXCJwbGF5TmFtZVRleFwiKS5hc1RleHRGaWVsZDtcclxuICAgICAgICBpZiAoIU5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvKSByZXR1cm47XHJcbiAgICAgICAgbmFtZVR4dC50ZXh0ID0gTmV0TG9naW4uSW5zdGFuY2UuUm9sZUluZm8ubmlja25hbWU7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubmFtZUF1dG9Gb250U2l6ZShuYW1lVHh0KTtcclxuICAgICAgICB0aGlzLnJhbmtUaGlzV2Vla1JlcSgpO1xyXG4gICAgICAgIC8vdGhpcy50YWJDLnNlbGVjdGVkSW5kZXggPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye75pys5ZGoXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja1RoaXNSYW5rKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmlTQ2FuQ2xpY2spIHtcclxuICAgICAgICAgICAgdGhpcy5pU0NhbkNsaWNrID0gZmFsc2U7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsIHRoaXMud2FpdFJlc2gpO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJQYWdlID0gMTtcclxuICAgICAgICAgICAgdGhpcy5yYW5rVGhpc1dlZWtSZXEoKTtcclxuICAgICAgICAgICAgdGhpcy50aGlzUmFua0xpc3QucmVtb3ZlQ2hpbGRyZW5Ub1Bvb2woKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDngrnlh7vkuIrlkahcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsaWNrTGFzdFJhbmsoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuaVNDYW5DbGljaykge1xyXG4gICAgICAgICAgICB0aGlzLmlTQ2FuQ2xpY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDUwMCwgdGhpcywgdGhpcy53YWl0UmVzaCk7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyclBhZ2UgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLnJhbmtMYXN0V2Vla1JlcSgpO1xyXG4gICAgICAgICAgICB0aGlzLmxhc3RSYW5rTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOetieW+heWIt+aWsFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHdhaXRSZXNoKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaVNDYW5DbGljayA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmnKzlkajmlbDmja7or7fmsYJcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByYW5rVGhpc1dlZWtSZXEoKSB7XHJcbiAgICAgICAgTmV0UmFua2luZy5JbnN0YW5jZS5yYW5rUmVxKHRoaXMuY3VyclBhZ2UsIFJhbmtNc2cucmFua190eXBlLnJhbmtfdGhpc193ZWVrKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5LiK5ZGo5pWw5o2u6K+35rGCXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmFua0xhc3RXZWVrUmVxKCkge1xyXG4gICAgICAgIE5ldFJhbmtpbmcuSW5zdGFuY2UucmFua1JlcSh0aGlzLmN1cnJQYWdlLCBSYW5rTXNnLnJhbmtfdHlwZS5yYW5rX2xhc3Rfd2Vlayk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaOkuihjOamnOaVsOaNrlxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmFua1Jlc3AoZGF0YTogUmFua01zZy5yYW5rX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICAvLy8vIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgIGlmICh0aGlzLnRhYkMuc2VsZWN0ZWRJbmRleCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdEluZm8oZGF0YSwgdGhpcy50aGlzUmFua0xpc3QsIHRydWUpO1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGFiQy5zZWxlY3RlZEluZGV4ID09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5saXN0SW5mbyhkYXRhLCB0aGlzLmxhc3RSYW5rTGlzdCwgZmFsc2UpO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuIvmi4lcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblB1bGxVcFJlbGVhc2UoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNFbmRQYWdlKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8vLyAgY29uc29sZS5sb2coXCLkuIvmi4lcIik7XHJcbiAgICAgICAgdGhpcy5jdXJyUGFnZSArPSAxO1xyXG4gICAgICAgIHRoaXMucmVmcmVzaERhdGEoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5LiK5ouJXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25QdWxsRG93blJlbGVhc2UoKTogdm9pZCB7XHJcbiAgICAgICAgLy8vLyBjb25zb2xlLmxvZyhcIuS4iuaLiVwiKTtcclxuICAgICAgICAvLyB0aGlzLmN1cnJQYWdlIC09IDE7XHJcbiAgICAgICAgLy8gaWYgKHRoaXMuY3VyclBhZ2UgPT0gMCkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLmN1cnJQYWdlID0gMTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gdGhpcy5yZWZyZXNoRGF0YSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ouW5ou95Yi35paw5pWw5o2uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmVmcmVzaERhdGEoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGFiQy5zZWxlY3RlZEluZGV4ID09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yYW5rVGhpc1dlZWtSZXEoKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMudGFiQy5zZWxlY3RlZEluZGV4ID09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5yYW5rTGFzdFdlZWtSZXEoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaOkuihjOamnOWIl+ihqFxyXG4gICAgICogQHBhcmFtIGRhdGEg5o6S6KGM5qac5pWw5o2uXHJcbiAgICAgKiBAcGFyYW0gbGlzdCDmjpLooYzmppzliJfooahcclxuICAgICAqIEBwYXJhbSBpc1RoaXNXZWVrIOaYr+WQpuaYr+acrOWRqOaVsOaNrlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGxpc3RJbmZvKGRhdGE6IFJhbmtNc2cucmFua19yZXNwLCBsaXN0OiBHTGlzdCwgaXNUaGlzV2VlazogYm9vbGVhbikge1xyXG4gICAgICAgIGxpc3Qub24oZmFpcnlndWkuRXZlbnRzLlBVTExfRE9XTl9SRUxFQVNFLCB0aGlzLCB0aGlzLm9uUHVsbERvd25SZWxlYXNlKTtcclxuICAgICAgICBsaXN0Lm9uKGZhaXJ5Z3VpLkV2ZW50cy5QVUxMX1VQX1JFTEVBU0UsIHRoaXMsIHRoaXMub25QdWxsVXBSZWxlYXNlKTtcclxuICAgICAgICBpZiAoZGF0YS5zZWxmX3JhbmsgPT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZSYW5rSW1hZy52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5zZWxmUmFua1RleC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxmUmFua0ltYWcudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGZSYW5rVGV4LnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwic2VsZlJhbmtpbmdcIikudGV4dCA9IGRhdGEuc2VsZl9yYW5rLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpc1RoaXNXZWVrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZkNvaW4udGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdChOdW1iZXIoZGF0YS5zY29yZSkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZkNvaW4udGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdChOdW1iZXIoZGF0YS5sYXN0X3Njb3JlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkYXRhLnJvbGUubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChkYXRhLnJvbGUubGVuZ3RoIDwgMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXNFbmRQYWdlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXNFbmRQYWdlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9saXN0LnJlbW92ZUNoaWxkcmVuVG9Qb29sKCk7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBkYXRhLnJvbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciByYW5raW5nSXRlbUNvbTogR0NvbXBvbmVudCA9IGxpc3QuYWRkSXRlbUZyb21Qb29sKCkuYXNDb207XHJcbiAgICAgICAgICAgICAgICB2YXIgcmFua2luZ1RleDogR0dyb3VwID0gcmFua2luZ0l0ZW1Db20uZ2V0Q2hpbGQoXCJyYW5raW5nVGV4XCIpLmFzR3JvdXA7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmFua2luZ0ltYWc6IEdJbWFnZSA9IHJhbmtpbmdJdGVtQ29tLmdldENoaWxkKFwicmFua2luZ0ltZ1wiKS5hc0ltYWdlO1xyXG4gICAgICAgICAgICAgICAgdmFyIHBsYXlOYW1lQ29tOiBHQ29tcG9uZW50ID0gcmFua2luZ0l0ZW1Db20uZ2V0Q2hpbGQoXCJwbGF5TmFtZVwiKS5hc0NvbTtcclxuICAgICAgICAgICAgICAgIHZhciBjb2luTnVtQ29tOiBHQ29tcG9uZW50ID0gcmFua2luZ0l0ZW1Db20uZ2V0Q2hpbGQoXCJjb2luTnVtXCIpLmFzQ29tO1xyXG4gICAgICAgICAgICAgICAgdmFyIHBsYXlOYW1lOiBHTGFiZWwgPSBwbGF5TmFtZUNvbS5nZXRDaGlsZChcInBsYXlOYW1lVGV4XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29pbk51bTogR0xhYmVsID0gY29pbk51bUNvbS5nZXRDaGlsZChcImNvaW5UZXhcIikuYXNMYWJlbDtcclxuICAgICAgICAgICAgICAgIHZhciBudW06IG51bWJlciA9IGkgKyAoKHRoaXMuY3VyclBhZ2UgLSAxKSAqIDEwKTtcclxuICAgICAgICAgICAgICAgIGlmIChudW0gPCAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFua2luZ0ltYWcudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFua2luZ1RleC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFua2luZ0ltYWcuaWNvbiA9IFwidWk6Ly9SYW5raW5nL1wiICsgXCJyYW5raW5nXCIgKyAobnVtICsgMSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmtpbmdJbWFnLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICByYW5raW5nVGV4LnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmtpbmdJdGVtQ29tLmdldENoaWxkKFwicmFua2luZ1wiKS50ZXh0ID0gKG51bSArIDEpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwbGF5TmFtZS50ZXh0ID0gZGF0YS5yb2xlW2ldLm5pY2tuYW1lO1xyXG4gICAgICAgICAgICAgICAgY29pbk51bS50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRm9ybWF0KE51bWJlcihkYXRhLnJvbGVbaV0uc2NvcmUpKTtcclxuICAgICAgICAgICAgICAgIGxpc3QuZW5zdXJlQm91bmRzQ29ycmVjdCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiDmkq3mlL7mjInpkq7ngrnlh7vlo7Dpn7NcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblBsYXlTb3VuZChzdHI6IHN0cmluZykge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIHN0cik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWFs+mXrVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uQ2xvc2UoKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlUmFua1BhbmVsID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5vblBsYXlTb3VuZChTb3VuZC5zb3VuZEtleUFyci5vbkNsb3NlKTtcclxuICAgICAgICB0aGlzLnRoaXNSYW5rTGlzdC5yZW1vdmVDaGlsZHJlblRvUG9vbCgpO1xyXG4gICAgICAgIHRoaXMubGFzdFJhbmtMaXN0LnJlbW92ZUNoaWxkcmVuVG9Qb29sKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLlJBTktSRVNQLCB0aGlzLCB0aGlzLnJhbmtSZXNwKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmFua2luZ1BhbmVsKTtcclxuICAgIH1cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4uL1BhbmVsL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbi8qKlxyXG4gKiDmlq3nur/oh6rliqjph43ov57nmoR1aVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVjb25uZWN0dGluZ1RpcCBleHRlbmRzIEJhc2VQYW5lbHtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoaWQ6RW51bURhdGEuRW51bVBhbmVsVHlwZSl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLm1fZnVpID0gZmFpcnlndWkuVUlQYWNrYWdlLmNyZWF0ZU9iamVjdChcIkhhbGxcIiwgXCJSZWNvbm5lY3RVSVwiKS5hc0NvbTtcclxuICAgICAgICB2YXIgdHJhbnM6ZmFpcnlndWkuVHJhbnNpdGlvbiA9IHRoaXMubV9mdWkuZ2V0VHJhbnNpdGlvbihcInQwXCIpO1xyXG4gICAgICAgIHRyYW5zLnBsYXkoKTtcclxuICAgICAgICB0aGlzLm1fZnVpLm5hbWUgPSBcIlJlY29ubmVjdHRpbmdUaXBcIjtcclxuICAgICAgICB0aGlzLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5BZGRGVUkodGhpcy5tX2Z1aSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQmFzZVBhbmVsIGZyb20gXCIuL0Jhc2VQYW5lbFwiO1xyXG5pbXBvcnQgU2VsZWN0SXRlbSBmcm9tIFwiLi4vSXRlbS9TZWxlY3RJdGVtXCI7XHJcbmltcG9ydCBBdXRvQXR0YWNrUGFuZWwgZnJvbSBcIi4vQXV0b0F0dGFja1BhbmVsXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgR2FtZUV2ZW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IEJhdHRlcnlDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0JhdHRlcnlDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IEZpc2hDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0Zpc2hDb250cm9sbGVyXCI7XHJcblxyXG4vKipcclxuICog5o2V54yO55WM6Z2i6Ieq5Yqo5pS75Ye76Z2i5p2/LS3pgInmi6npnaLmnb9cclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VsZWN0UGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWx7XHJcbiAgICBwcml2YXRlIG1fbGlzdDpmYWlyeWd1aS5HTGlzdDtcclxuICAgIHByaXZhdGUgbV9jb250cm9sOkF1dG9BdHRhY2tQYW5lbDtcclxuICAgIHByaXZhdGUgbV9zZWxlY3RJdGVtRGljOkxheWEuV2Vha09iamVjdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgIHB1YmxpYyBtX2F1dG9BdHRhY2tBcnI6QXJyYXk8Ym9vbGVhbj47XHJcbiAgICBjb25zdHJ1Y3Rvcihvd25lcjpmYWlyeWd1aS5HQ29tcG9uZW50LCBjb250cm9sOkF1dG9BdHRhY2tQYW5lbCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBvd25lci5nZXRDaGlsZChcIlJlU2VsZWN0QnRuXCIpLmFzQnV0dG9uLm9uQ2xpY2sodGhpcywgdGhpcy5PblJlU2VsZWN0QnRuQ2xpY2spO1xyXG4gICAgICAgIG93bmVyLmdldENoaWxkKFwiU2VsZWN0QWxsQnRuXCIpLmFzQnV0dG9uLm9uQ2xpY2sodGhpcywgdGhpcy5PblNlbGVjdEFsbEJ0bkNsaWNrKTtcclxuICAgICAgICBvd25lci5nZXRDaGlsZChcIlN0YXJ0SHVudEJ0blwiKS5hc0J1dHRvbi5vbkNsaWNrKHRoaXMsIHRoaXMuT25TdGFydEh1bnRCdG5DbGljayk7XHJcbiAgICAgICAgb3duZXIuZ2V0Q2hpbGQoXCJMb2FkTGFzdFNldEJ0blwiKS5hc0J1dHRvbi5vbkNsaWNrKHRoaXMsIHRoaXMuT25Mb2FkTGFzdFNldEJ0bkNsaWNrKTtcclxuICAgICAgICB0aGlzLm1fZnVpID0gb3duZXI7XHJcbiAgICAgICAgdGhpcy5tX2xpc3QgPSBvd25lci5nZXRDaGlsZChcIkxpc3RcIikuYXNMaXN0O1xyXG4gICAgICAgIHRoaXMubV9saXN0Lm9uKGZhaXJ5Z3VpLkV2ZW50cy5DTElDS19JVEVNLCB0aGlzLCB0aGlzLm9uQ2xpY2tJdGVtKTtcclxuICAgICAgICB0aGlzLm1fbGlzdC5mb2xkSW52aXNpYmxlSXRlbXMgPSB0cnVlOyAvL2l0ZW3kuI3lj6/op4Hml7bvvIxsaXN05LiN5pi+56S6XHJcbiAgICAgICAgdGhpcy5tX2NvbnRyb2wgPSBjb250cm9sO1xyXG5cclxuICAgICAgICB0aGlzLm1fYXV0b0F0dGFja0FyciA9IG5ldyBBcnJheSgyOCk7XHJcbiAgICAgICAgdGhpcy5Mb2FkU2VsZWN0RmlzaENvbmZpZygpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcml2YXRlIENoYW5nZUl0ZW1VSShpdGVtOmZhaXJ5Z3VpLkdDb21wb25lbnQsIHR5cGU6bnVtYmVyLCByYXRlOm51bWJlcil7XHJcbiAgICAgICAgdmFyIHNlbGVjdEl0ZW06U2VsZWN0SXRlbSA9IHRoaXMuR2V0U2VsZWN0SXRlbShpdGVtKTtcclxuICAgICAgICBzZWxlY3RJdGVtLkNoYW5nZVVJKHJhdGUsIHR5cGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgR2V0U2VsZWN0SXRlbShpdGVtOmZhaXJ5Z3VpLkdDb21wb25lbnQpe1xyXG4gICAgICAgIGxldCBrZXkgPSB0aGlzLm1fbGlzdC5nZXRDaGlsZEluZGV4KGl0ZW0pO1xyXG4gICAgICAgIHZhciBzZWxlY3RJdGVtOlNlbGVjdEl0ZW0gPSBudWxsO1xyXG4gICAgICAgIGlmKHRoaXMubV9zZWxlY3RJdGVtRGljLmhhcyhrZXkpKXtcclxuICAgICAgICAgICAgc2VsZWN0SXRlbSA9IHRoaXMubV9zZWxlY3RJdGVtRGljLmdldChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBzZWxlY3RJdGVtID0gbmV3IFNlbGVjdEl0ZW0oaXRlbSwgdGhpcyk7XHJcbiAgICAgICAgICAgIHRoaXMubV9zZWxlY3RJdGVtRGljLnNldChrZXksIHNlbGVjdEl0ZW0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHNlbGVjdEl0ZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3psbznmoTphY3nva7kv6Hmga9cclxuICAgICovXHJcbiAgICBwcml2YXRlIExvYWRTZWxlY3RGaXNoQ29uZmlnKCl7XHJcbiAgICAgICAgbGV0IGZpc2hJbmZvID0gTmV0TG9naW4uSW5zdGFuY2UuX3BsYXllckxvZ2luSW5mby5maXNoX2luZm87XHJcbiAgICAgICAgZm9yKHZhciBpPTA7IGk8ZmlzaEluZm8ubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICB2YXIgdHlwZSA9IGZpc2hJbmZvW2ldLmZpc2hfdHlwZTtcclxuICAgICAgICAgICAgLy8gLy9pZih0eXBlID4gRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjEgJiYgdHlwZSA8PSBFbnVtRGF0YS5GaXNoU3VidHlwZS5LaW5nX2Zpc2hmNSkgLy8yN34zMSDkuLo15Liq6bG8546L77yM5Y+q5pi+56S65LiA5Liq5Y2z5Y+vXHJcbiAgICAgICAgICAgIC8vIGlmICh0eXBlID49IEVudW1EYXRhLkZpc2hTdWJ0eXBlLktpbmdfZmlzaGYxICYmIHR5cGUgPD0gRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjUpIC8vMjd+MzEg5Li6NeS4qumxvOeOi++8jOmDveS4jeaYvuekulxyXG4gICAgICAgICAgICAvLyB7XHJcbiAgICAgICAgICAgIC8vICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYoRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuSXNGaXNoS2luZyh0eXBlKSkgY29udGludWU7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGUgPiBFbnVtRGF0YS5GaXNoU3VidHlwZS5Cb21iX2Zpc2gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcmF0ZSA9IGZpc2hJbmZvW2ldLmZpc2hfcmF0ZTtcclxuICAgICAgICAgICAgbGV0IGl0ZW0gPSB0aGlzLm1fbGlzdC5hZGRJdGVtRnJvbVBvb2woKS5hc0NvbTtcclxuICAgICAgICAgICAgdGhpcy5DaGFuZ2VJdGVtVUkoaXRlbSwgdHlwZSwgcmF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vI3JlZ2lvbiAg5oyJ6ZKu5ZON5bqU5LqL5Lu2XHJcbiAgICBwcml2YXRlIE9uUmVTZWxlY3RCdG5DbGljaygpe1xyXG4gICAgICAgIGZvcih2YXIgaT0wOyBpPHRoaXMubV9saXN0Ll9jaGlsZHJlbi5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGxldCBzZWxlY3RJdGVtOlNlbGVjdEl0ZW0gPSB0aGlzLm1fc2VsZWN0SXRlbURpYy5nZXQoaSk7XHJcbiAgICAgICAgICAgIHNlbGVjdEl0ZW0uU2V0Q2xpY2tlZChmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBPblNlbGVjdEFsbEJ0bkNsaWNrKCl7XHJcbiAgICAgICAgZm9yKHZhciBpPTA7IGk8dGhpcy5tX2xpc3QuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgbGV0IHNlbGVjdEl0ZW06U2VsZWN0SXRlbSA9IHRoaXMubV9zZWxlY3RJdGVtRGljLmdldChpKTtcclxuICAgICAgICAgICAgc2VsZWN0SXRlbS5TZXRDbGlja2VkKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHByaXZhdGUgT25TdGFydEh1bnRCdG5DbGljaygpe1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goR2FtZUV2ZW50LkhVTlRfTE9DS0FUVEFDSywgZmFsc2UpOyAgICAgICAgXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuSFVOVF9BVVRPQVRUQUNLLCB0cnVlKTtcclxuICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5zQXV0b0F0dGFja0FyciA9IFtdO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iU2VsZWN0ZWRGaXNoID0gZmFsc2U7XHJcbiAgICAgICAgZm9yKHZhciBpPTA7IGk8dGhpcy5tX2F1dG9BdHRhY2tBcnIubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5nQXV0b0F0dGFja0Fyci5wdXNoKHRoaXMubV9hdXRvQXR0YWNrQXJyW2ldKTtcclxuICAgICAgICAgICAgaWYodGhpcy5tX2F1dG9BdHRhY2tBcnJbaV0pXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iU2VsZWN0ZWRGaXNoID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5tX2NvbnRyb2wuT25jbG9zZUJ0bkNsaWNrKCk7XHJcbiAgICAgICAgdGhpcy5tX2NvbnRyb2wuQ2xlYXJIdW50ZWRQYW5lbCgpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBPbkxvYWRMYXN0U2V0QnRuQ2xpY2soKXtcclxuICAgICAgICBmb3IodmFyIGk9MDsgaTx0aGlzLm1fbGlzdC5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0SXRlbTpTZWxlY3RJdGVtID0gdGhpcy5tX3NlbGVjdEl0ZW1EaWMuZ2V0KGkpO1xyXG4gICAgICAgICAgICBzZWxlY3RJdGVtLlNldENsaWNrZWQoQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuZ0F1dG9BdHRhY2tBcnJbc2VsZWN0SXRlbS5GaXNoVHlwZV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog54K55YWz6Zet5oyJ6ZKu5pe277yM5LiN5L+d5a2Y6YCJ5oup5L+h5oGvKi9cclxuICAgIHB1YmxpYyBSZW1vdmVVbnVzZVNlbGVjdGVkSXRlbSgpe1xyXG4gICAgICAgIHRoaXMuT25Mb2FkTGFzdFNldEJ0bkNsaWNrKCk7XHJcbiAgICB9XHJcbiAgICAvLyNlbmRyZWdpb25cclxuXHJcbiAgICBwcml2YXRlIG9uQ2xpY2tJdGVtKGl0ZW06ZmFpcnlndWkuR0NvbXBvbmVudCl7XHJcbiAgICAgICAgbGV0IHNlbGVjdEl0ZW06U2VsZWN0SXRlbSA9IHRoaXMuR2V0U2VsZWN0SXRlbShpdGVtKTtcclxuICAgICAgICBzZWxlY3RJdGVtLk9uY2xpY2tlZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBTaG93U2VsZih2aXNpYmxlOmJvb2xlYW4pe1xyXG4gICAgICAgIHRoaXMubV9mdWkudmlzaWJsZSA9IHZpc2libGU7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHU2xpZGVyID0gZmFpcnlndWkuR1NsaWRlcjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi8uLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgUmVzb3VyY2VNYW5nZXIgZnJvbSBcIi4uLy4uL21hbmFnZXIvUmVzb3VyY2VNYW5nZXJcIjtcclxuaW1wb3J0IEJhc2VQYW5lbCBmcm9tIFwiLi9CYXNlUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXR0aW5nIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgbXVzaWNTbGk6IEdTbGlkZXI7XHJcbiAgICBwcml2YXRlIHNvdW5kU2xpOiBHU2xpZGVyO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGlmIChHYW1lRmFjYWRlLkluc3RhbmNlLk90aE1uZy5pc0hhdmVTZXR0aW5nUGFuZWwpIHJldHVybjtcclxuICAgICAgICBlbHNlIEdhbWVGYWNhZGUuSW5zdGFuY2UuT3RoTW5nLmlzSGF2ZVNldHRpbmdQYW5lbCA9IHRydWU7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aVNldHRpbmdQYXRoLmltYWdlLCBDb21tb25Db25zdGFudC5fZnVpU2V0dGluZ1BhdGguZnVpLCB0aGlzLCB0aGlzLm9uTG9hZFNldHRpbmcpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veiuvue9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZFNldHRpbmcoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tX2Z1aSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuZ2V0TWFpbkNvbShDb21tb25Db25zdGFudC5fZnVpU2V0dGluZ1BhdGguUGFja2FnZSwgXCJTZXR0aW5nXCIsIFwiU2V0dGluZ1BhbmVsXCIpO1xyXG4gICAgICAgIHZhciBjbG9zZUJ0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZVwiKS5hc0J1dHRvbjtcclxuICAgICAgICBjbG9zZUJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgdGhpcy5tdXNpY1NsaSA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJtdXNpY1NsaVwiKS5hc1NsaWRlcjtcclxuICAgICAgICB0aGlzLnNvdW5kU2xpID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInNvdW5kU2xpXCIpLmFzU2xpZGVyO1xyXG4gICAgICAgIHRoaXMubXVzaWNTbGkudmFsdWUgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLmdldE11c2ljVm9sdW1lKCk7XHJcbiAgICAgICAgdGhpcy5zb3VuZFNsaS52YWx1ZSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuZ2V0U291bmRWb2x1bWUoKTtcclxuICAgICAgICB0aGlzLm11c2ljU2xpLm9uKGZhaXJ5Z3VpLkV2ZW50cy5TVEFURV9DSEFOR0VELCB0aGlzLCB0aGlzLm9uTXVzaWNDaGFuZ2UpO1xyXG4gICAgICAgIHRoaXMuc291bmRTbGkub24oZmFpcnlndWkuRXZlbnRzLlNUQVRFX0NIQU5HRUQsIHRoaXMsIHRoaXMub25Tb3VuZENoYW5nZSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2VudENvbSDlhbPpl63nm67moIdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gZmFsc2U7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5PdGhNbmcuaXNIYXZlU2V0dGluZ1BhbmVsID0gZmFsc2U7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIub25DbG9zZSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5jbG9zZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlNldHRpbmdQYW5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmlLnlj5jpn7PkuZDmu5HliqjmnaFcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbk11c2ljQ2hhbmdlKCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuc2V0TXVzaWNWb2x1bWUodGhpcy5tdXNpY1NsaS52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmlLnlj5jpn7PmlYjmu5HliqjmnaFcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblNvdW5kQ2hhbmdlKCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuc2V0U291bmRWb2x1bWUodGhpcy5zb3VuZFNsaS52YWx1ZSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuaW1wb3J0IE5ldFJvbGVJbmZvIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvTmV0Um9sZUluZm9cIjtcclxuaW1wb3J0IEJhc2VQYW5lbCBmcm9tIFwiLi9CYXNlUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVcGdyYWRlUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHJpdmF0ZSB0aW1lVGV4OiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIHRyYW4xOiBmYWlyeWd1aS5UcmFuc2l0aW9uO1xyXG4gICAgcHJpdmF0ZSBkYXRhOiBSb2xlSW5mb01zZy5sdl9ub3RpY2VfcmVzcDtcclxuICAgIHByaXZhdGUgbnVtOiBudW1iZXIgPSAzO1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGRhdGE6IFJvbGVJbmZvTXNnLmx2X25vdGljZV9yZXNwKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgIExheWEubG9hZGVyLmxvYWQoW1xyXG4gICAgICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aVVwZ3JhZGVQYXRoMS5pbWFnZSwgdHlwZTogTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpVXBncmFkZVBhdGgyLmltYWdlLCB0eXBlOiBMb2FkZXIuSU1BR0UgfSxcclxuICAgICAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlVcGdyYWRlUGF0aDEuZnVpLCB0eXBlOiBMb2FkZXIuQlVGRkVSIH0sXHJcbiAgICAgICAgXSwgSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxvYWQpKVxyXG4gICAgICAgIC8vIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlVcGdyYWRlUGF0aDEuaW1hZ2UsIENvbW1vbkNvbnN0YW50Ll9mdWlVcGdyYWRlUGF0aDIuZnVpLCB0aGlzLCBudWxsKTtcclxuICAgICAgICAvLyBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmxvYWRVSShDb21tb25Db25zdGFudC5fZnVpVXBncmFkZVBhdGgxLmltYWdlLCBDb21tb25Db25zdGFudC5fZnVpVXBncmFkZVBhdGgxLmZ1aSwgdGhpcywgdGhpcy5vbkxvYWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296K6+572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubV9mdWkgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLmdldE1haW5Db20oQ29tbW9uQ29uc3RhbnQuX2Z1aVVwZ3JhZGVQYXRoMS5QYWNrYWdlLCBcInVwZ3JhZGVQYW5lbFwiLCBcInVwZ3JhZGVDb21cIik7XHJcbiAgICAgICAgdGhpcy50aW1lVGV4ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcInRpbWVUZXhcIikuYXNMYWJlbDtcclxuICAgICAgICB0aGlzLnRpbWVUZXgudGV4dCA9IHRoaXMubnVtLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy50cmFuMSA9IHRoaXMubV9mdWkuZ2V0VHJhbnNpdGlvbihcInQwXCIpO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJsdlRleFwiKS50ZXh0ID0gdGhpcy5kYXRhLm5ld19sdi50b1N0cmluZygpO1xyXG4gICAgICAgIExheWEudGltZXIubG9vcCgxMDAwLCB0aGlzLCB0aGlzLnRpbWVTaG93KVxyXG4gICAgICAgIHZhciBjbG9zZUJ0bjogZmFpcnlndWkuR0J1dHRvbiA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJjbG9zZUJ0blwiKS5hc0J1dHRvbjtcclxuICAgICAgICBjbG9zZUJ0bi5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWAkuiuoeaXtuaYvuekulxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHRpbWVTaG93KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubnVtIC09IDE7XHJcbiAgICAgICAgdGhpcy50aW1lVGV4LnRleHQgPSB0aGlzLm51bS50b1N0cmluZygpO1xyXG4gICAgICAgIGlmICh0aGlzLm51bSA9PSAwKSB7XHJcblxyXG4gICAgICAgICAgICB0aGlzLm9uQ2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAqIFxyXG4gICAgKiBAcGFyYW0gdGFyZ2VudENvbSDlhbPpl63nm67moIdcclxuICAgICovXHJcbiAgICBwcml2YXRlIG9uQ2xvc2UoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy50cmFuMS5zdG9wKCk7XHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhcih0aGlzLCB0aGlzLnRpbWVTaG93KTtcclxuICAgICAgICBOZXRSb2xlSW5mby5JbnN0YW5jZS5pc0hhdmVOb3Rpb24gPSBmYWxzZTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5vbkNsb3NlKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuVXBncmFkZVBhbmVsKTtcclxuICAgIH1cclxufSIsImltcG9ydCBHQ29tcG9uZW50ID0gZmFpcnlndWkuR0NvbXBvbmVudDtcclxuaW1wb3J0IEdMaXN0ID0gZmFpcnlndWkuR0xpc3Q7XHJcbmltcG9ydCBHT2JqZWN0ID0gZmFpcnlndWkuR09iamVjdDtcclxuaW1wb3J0IEdCdXR0b24gPSBmYWlyeWd1aS5HQnV0dG9uO1xyXG5pbXBvcnQgR0xhYmVsID0gZmFpcnlndWkuR0xhYmVsO1xyXG5pbXBvcnQgU291bmQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L1NvdW5kTmFtZUNvbnN0YW50XCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYWxsZXRLZXkge1xyXG4gICAgcHJpdmF0ZSB3YWxsZXRLZXlDb206IEdDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIGxpc3ROdW06IEdMaXN0O1xyXG4gICAgcHJpdmF0ZSBpbnB1dFNob3c6IEdMYWJlbDtcclxuICAgIHByaXZhdGUgbWF4XzogbnVtYmVyO1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKG1heDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5tYXhfID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQobWF4KTtcclxuICAgICAgICB0aGlzLndhbGxldEtleUNvbSA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5jcmVhdGVPYmplY3QoXCJGcmVlVHJhbldhbGxldFwiLCBcIktleU51bWJlclBhbmVsXCIpLmFzQ29tO1xyXG4gICAgICAgIHRoaXMud2FsbGV0S2V5Q29tLnNldFNpemUoZmFpcnlndWkuR1Jvb3QuaW5zdC53aWR0aCwgZmFpcnlndWkuR1Jvb3QuaW5zdC5oZWlnaHQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQWRkRlVJKHRoaXMud2FsbGV0S2V5Q29tKTtcclxuICAgICAgICB0aGlzLmlucHV0U2hvdyA9IHRoaXMud2FsbGV0S2V5Q29tLmdldENoaWxkKFwiaW5wdXRTaG93XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdGhpcy53YWxsZXRLZXlDb20uZ2V0Q2hpbGQoXCJub1wiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25DbGlja05vKTtcclxuICAgICAgICB0aGlzLndhbGxldEtleUNvbS5nZXRDaGlsZChcInllc1wiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25DbGlja1llcyk7XHJcbiAgICAgICAgdGhpcy5saXN0TnVtID0gdGhpcy53YWxsZXRLZXlDb20uZ2V0Q2hpbGQoXCJsaXN0TnVtXCIpLmFzTGlzdDtcclxuICAgICAgICAvL3RoaXMubGlzdE51bS5zZXRWaXJ0dWFsKCk7XHJcbiAgICAgICAgdGhpcy5saXN0TnVtLml0ZW1SZW5kZXJlciA9IG5ldyBMYXlhLkhhbmRsZXIodGhpcywgdGhpcy5SZW5kZXJMaXN0SXRlbSwgbnVsbCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMubGlzdE51bS5udW1JdGVtcyA9IDEyO1xyXG4gICAgICAgIHRoaXMubGlzdE51bS5vbihmYWlyeWd1aS5FdmVudHMuQ0xJQ0tfSVRFTSwgdGhpcywgdGhpcy5vbkNsaWNrSXRlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBSZW5kZXJMaXN0SXRlbShpbmRleDogbnVtYmVyLCBvYmo6IEdPYmplY3QpIHtcclxuICAgICAgICB2YXIgYnV0dG9uOiBHQnV0dG9uID0gb2JqLmFzQnV0dG9uO1xyXG4gICAgICAgIGlmIChpbmRleCA8IDkpIHtcclxuICAgICAgICAgICAgYnV0dG9uLmljb24gPSBmYWlyeWd1aS5VSVBhY2thZ2UuZ2V0SXRlbVVSTChcIkZyZWVUcmFuV2FsbGV0XCIsIChpbmRleCArIDEpLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5kZXggPT0gOSkge1xyXG4gICAgICAgICAgICBidXR0b24uaWNvbiA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5nZXRJdGVtVVJMKFwiRnJlZVRyYW5XYWxsZXRcIiwgXCJkb3RcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbmRleCA9PSAxMCkge1xyXG4gICAgICAgICAgICBidXR0b24uaWNvbiA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5nZXRJdGVtVVJMKFwiRnJlZVRyYW5XYWxsZXRcIiwgXCIwXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5kZXggPT0gMTEpIHtcclxuICAgICAgICAgICAgYnV0dG9uLmljb24gPSBmYWlyeWd1aS5VSVBhY2thZ2UuZ2V0SXRlbVVSTChcIkZyZWVUcmFuV2FsbGV0XCIsIFwiYmFja1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDngrnlh7vmlbDlgLxcclxuICAgICAqIEBwYXJhbSBvYmogXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja0l0ZW0ob2JqOiBmYWlyeWd1aS5HT2JqZWN0KSB7XHJcbiAgICAgICAgdmFyIHN0cjogc3RyaW5nID0gdGhpcy5pbnB1dFNob3cudGV4dDtcclxuICAgICAgICAvLyBpZiAoTnVtYmVyKHN0cikgPj0gdGhpcy5tYXhfKSB7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuaW5wdXRTaG93LnRleHQgPSB0aGlzLm1heF8udG9TdHJpbmcoKTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuaW5wdXRTaG93LnRleHQgPSB0aGlzLkdldFRleHRTdHJpbmcoc3RyLCB0aGlzLmxpc3ROdW0uZ2V0Q2hpbGRJbmRleChvYmopKTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgdGhpcy5pbnB1dFNob3cudGV4dCA9IHRoaXMuR2V0VGV4dFN0cmluZyhzdHIsIHRoaXMubGlzdE51bS5nZXRDaGlsZEluZGV4KG9iaikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6YCa6L+H54K55Ye76I635Y+W6L2s5Y+Y55qE5a2X56ymXHJcbiAgICAgKiBAcGFyYW0gc3RyIFxyXG4gICAgICogQHBhcmFtIGkgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgR2V0VGV4dFN0cmluZyhjb250ZW50OiBzdHJpbmcsIGk6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgc3dpdGNoIChpKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgIGNhc2UgNjpcclxuICAgICAgICAgICAgY2FzZSA3OlxyXG4gICAgICAgICAgICBjYXNlIDg6XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQgKyAoaSArIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIDk6IC8vIC5cclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PSA5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250ZW50LmluZGV4T2YoXCIuXCIpICE9IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudCArIFwiLlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNhc2UgMTA6IC8vIDBcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudCArIFwiMFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIDExOiAvLyBkZWxldGVcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250ZW50Lmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnN1YnN0cmluZygwLCBjb250ZW50Lmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNvbnRlbnQubGVuZ3RoID09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIiAtLSBzdHIgPSBcIiwgY29udGVudCk7XHJcbiAgICAgICAgLy9yZXR1cm4gdXRpbHMuQ29tbW9uVXRpbHMuY2hlY2tfUGhvbmVfVGV4dChjb250ZW50LCB0aGlzLm1heF8pO1xyXG4gICAgICAgIC8vdGhpcy5tYXhfID0gMjQ1Ni43NztcclxuICAgICAgICBjb250ZW50ID0gdXRpbHMuQ29tbW9uVXRpbHMuanVzdF9udW0oY29udGVudCk7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiTnVtYmVyKGNvbnRlbnQpID0gXCIsIE51bWJlcihjb250ZW50KSk7XHJcbiAgICAgICAgaWYgKE51bWJlcihjb250ZW50KSA+IHRoaXMubWF4Xykge1xyXG4gICAgICAgICAgICBjb250ZW50ID0gdGhpcy5tYXhfLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdXRpbHMuQ29tbW9uVXRpbHMuY2hlY2tfUGhvbmVfVGV4dChjb250ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIG5vIOeCueWHu1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uQ2xpY2tObygpIHtcclxuICAgICAgICB0aGlzLndhbGxldEtleUNvbS5kaXNwb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB5ZXMg54K55Ye7IOimgeW4puWbnuaVsOaNriBjYWxsXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja1llcygpIHtcclxuICAgICAgICB0aGlzLm9uQ2xpY2tObygpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLldBTExFVEtFWU5VTSwgdGhpcy5pbnB1dFNob3cudGV4dCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR0NvbXBvbmVudCA9IGZhaXJ5Z3VpLkdDb21wb25lbnQ7XHJcbmltcG9ydCBHU2xpZGVyID0gZmFpcnlndWkuR1NsaWRlcjtcclxuaW1wb3J0IEdJbnB1dCA9IGZhaXJ5Z3VpLkdUZXh0SW5wdXQ7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBOZXRXYWxsZXQgZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRXYWxsZXRcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgV2FsbGV0S2V5IGZyb20gXCIuL1dhbGxlcktleVBhbmVsXCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBFdmVudE5ldFJlc3BvbnNlIGZyb20gXCIuLi8uLi9uZXQvUHJvdG9IYW5kZXIvRXZlbnROZXRSZXNwb25zZVwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuaW1wb3J0IExhbmcgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0xhbmd1YWdlQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgVGlwVHlwZSB9IGZyb20gXCIuLi8uLi9tYW5hZ2VyL1RpcE1hbmFnZXJcIjtcclxuaW1wb3J0IFdhbGxldE1hbmFnZXIgZnJvbSBcIi4uLy4uL21hbmFnZXIvV2FsbGV0TWFuYWdlclwiO1xyXG5pbXBvcnQgeyB1dGlsIH0gZnJvbSBcIi4uLy4uLy4uL2xpYnMvcHJvdG9idWYtbGlicmFyeVwiO1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4uLy4uL25ldC9Qcm90b0hhbmRlci9OZXRMb2dpblwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uLy4uL0VudW0vRW51bURhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdhbGxldFBhbmVsIGV4dGVuZHMgQmFzZVBhbmVsIHtcclxuICAgIHByaXZhdGUgd2FsbGV0U2xpOiBHU2xpZGVyO1xyXG4gICAgcHJpdmF0ZSB3YWxsZXRJbnB1dDogR0lucHV0O1xyXG4gICAgcHJpdmF0ZSB3YWxsZXRLZXlUZXh0OiBmYWlyeWd1aS5HTGFiZWw7XHJcbiAgICBwcml2YXRlIHdhbGxldEtleUJ0bjogZmFpcnlndWkuR0J1dHRvbjtcclxuICAgIHByaXZhdGUgcmF0aW86IG51bWJlciA9IDAuMDU7XHJcbiAgICAvKiog5Lit5b+D6ZKx5YyFKi9cclxuICAgIHByaXZhdGUgY2VydGVyV2FsbGV0VmFsdWU6IG51bWJlciA9IDA7XHJcbiAgICAvKiogZmfpkrHljIUqL1xyXG4gICAgcHJpdmF0ZSBmZ1dhbGxldFZhbHVlOiBudW1iZXIgPSBudWxsO1xyXG4gICAgLyoqIOaCqOimgei/veWKoOWIsC4uKi9cclxuICAgIHByaXZhdGUgYWRkVG9WYWx1ZTogbnVtYmVyID0gMDtcclxuICAgIC8qKiDlrp7pmYXlhYXlgLzpop3luqYqL1xyXG4gICAgcHJpdmF0ZSBhZGRWYWx1ZTogbnVtYmVyID0gMDtcclxuICAgIC8qKiDmmK/lkKboh6rliqjliqDpkrEqL1xyXG4gICAgcHJpdmF0ZSBpc0F1dG9Mb2NhbDogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgaXNBdXRvU2VydmVyOiBib29sZWFuO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihpZDogRW51bURhdGEuRW51bVBhbmVsVHlwZSkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgIC8vR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aUZyZWVUcmFuV2FsbGV0UGF0aC5pbWFnZSwgQ29tbW9uQ29uc3RhbnQuX2Z1aUZyZWVUcmFuV2FsbGV0UGF0aC5mdWksIHRoaXMsIHRoaXMub25Mb2FkV2FsbGV0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChFdmVudENvbnN0YW50UmVzcG9uc2UuV0FMTEVUS0VZTlVNLCB0aGlzLCB0aGlzLndhbGxldEtleU51bSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5TeW5jQ2hpcHNSZXNwLCB0aGlzLCB0aGlzLnN5bmNDaGlwKTsgLy9cclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5TWU5DV0FMTEVURkcsIHRoaXMsIHRoaXMuc3luY1dlbGxldEZHKTsgLy9cclxuXHJcbiAgICAgICAgdGhpcy5pbml0RnVpKCk7XHJcbiAgICAgICAgdGhpcy5hZGRMaXN0ZXJPbkNsaWNrKCk7XHJcblxyXG4gICAgICAgIE5ldFJvb20uSW5zdGFuY2UuU3luY0NoaXBzUmVxKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluaXREYXRhKGRhdGE6IFdhbGxldE1zZy5tYWluX3dhbGxldF9yZXNwKSB7XHJcbiAgICAgICAgdGhpcy5jZXJ0ZXJXYWxsZXRWYWx1ZSA9IE51bWJlcihkYXRhLmNoaXBzKTtcclxuICAgICAgICB0aGlzLmlzQXV0b1NlcnZlciA9IGRhdGEuYXV0b193YWxsZXQgPT0gMCA/IGZhbHNlIDogdHJ1ZTtcclxuICAgICAgICB0aGlzLmlzQXV0b0xvY2FsID0gdGhpcy5pc0F1dG9TZXJ2ZXI7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVVSVZhbHVlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0RnVpKCkge1xyXG4gICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlGcmVlVHJhbldhbGxldFBhdGguUGFja2FnZSk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aSA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5jcmVhdGVPYmplY3QoXCJGcmVlVHJhbldhbGxldFwiLCBcIkZyZWVUcmFuV2FsbGV0UGFuZWxcIikuYXNDb207XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5BZGRGVUkodGhpcy5tX2Z1aSk7XHJcbiAgICAgICAgZmFpcnlndWkuVUlDb25maWcuZGVmYXVsdEZvbnQgPSBcIuW5vOWchlwiO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJwbGF5QWNjVGV4dFwiKS50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubmlja05hbWVXaXRoU3ltYm9sKE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLm5pY2tuYW1lKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiY2VydGVyV2FsbGV0VGV4dFwiKS50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRm9ybWF0KHRoaXMuY2VydGVyV2FsbGV0VmFsdWUpO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJmZ1dhbGxldFRleHRcIikudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdCh0aGlzLmZnV2FsbGV0VmFsdWUpO1xyXG5cclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiYXV0b0FkZEJ1dFwiKS5hc0J1dHRvbi5zZWxlY3RlZCA9IHRoaXMuaXNBdXRvU2VydmVyO1xyXG4gICAgICAgIHRoaXMuaXNBdXRvTG9jYWwgPSB0aGlzLmlzQXV0b1NlcnZlcjtcclxuICAgICAgICB0aGlzLndhbGxldElucHV0ID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcImlucHV0XCIpLmFzVGV4dElucHV0O1xyXG4gICAgICAgIHRoaXMud2FsbGV0S2V5VGV4dCA9IHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJrZXlUZXh0XCIpLmFzTGFiZWw7XHJcbiAgICAgICAgdGhpcy53YWxsZXRLZXlCdG4gPSB0aGlzLm1fZnVpLmdldENoaWxkKFwia2V5QnRuXCIpLmFzQnV0dG9uO1xyXG4gICAgICAgIHRoaXMud2FsbGV0U2xpID0gdGhpcy5tX2Z1aS5nZXRDaGlsZChcIndhbGxldFNsaVwiKS5hc1NsaWRlcjtcclxuICAgICAgICB0aGlzLndhbGxldFNsaS5vbihmYWlyeWd1aS5FdmVudHMuU1RBVEVfQ0hBTkdFRCwgdGhpcywgdGhpcy5vbldhbGxldFNsaWRlckRyYWdFbmQpO1xyXG5cclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUEMpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZmdXYWxsZXRWYWx1ZSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndhbGxldElucHV0LnRleHQgPSBcIjBcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2FsbGV0SW5wdXQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdCh0aGlzLmFkZFRvVmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0SW5wdXQub24oTGF5YS5FdmVudC5JTlBVVCwgdGhpcywgdGhpcy5vbklucHV0KTtcclxuICAgICAgICAgICAgdGhpcy53YWxsZXRLZXlUZXh0LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy53YWxsZXRLZXlCdG4udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy53YWxsZXRJbnB1dC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0S2V5VGV4dC50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRm9ybWF0KHRoaXMuZmdXYWxsZXRWYWx1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0S2V5QnRuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5jcmVhdGVXYWxsZXRLZXkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHVwZGF0ZVVJVmFsdWUoKSB7XHJcbiAgICAgICAgaWYgKCh0aGlzLmNlcnRlcldhbGxldFZhbHVlICsgdGhpcy5mZ1dhbGxldFZhbHVlKSA9PSAwKSB7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0taW5pdFVJIHRoaXMuZmdXYWxsZXRWYWx1ZSA9IFwiLCB0aGlzLmZnV2FsbGV0VmFsdWUpO1xyXG4gICAgICAgICAgICB0aGlzLndhbGxldFNsaS5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLndhbGxldFNsaS5tYXggPSB0aGlzLmNlcnRlcldhbGxldFZhbHVlICsgdGhpcy5mZ1dhbGxldFZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImF1dG9BZGRCdXRcIikuYXNCdXR0b24uc2VsZWN0ZWQgPSB0aGlzLmlzQXV0b1NlcnZlcjtcclxuICAgICAgICB0aGlzLmlzQXV0b0xvY2FsID0gdGhpcy5pc0F1dG9TZXJ2ZXI7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNlcnRlcldhbGxldFRleHRcIikudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdCh0aGlzLmNlcnRlcldhbGxldFZhbHVlKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiZmdXYWxsZXRUZXh0XCIpLnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGb3JtYXQodGhpcy5mZ1dhbGxldFZhbHVlKTtcclxuICAgICAgICB0aGlzLndhbGxldElucHV0LnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGb3JtYXQodGhpcy5hZGRUb1ZhbHVlKTtcclxuICAgICAgICB0aGlzLndhbGxldEtleVRleHQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdCh0aGlzLmZnV2FsbGV0VmFsdWUpO1xyXG4gICAgICAgIHRoaXMud2FsbGV0U2xpLnZhbHVlID0gdGhpcy5mZ1dhbGxldFZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6K+35rGC5ZCM5q2lRkfpkrHljIVcclxuICAgICAqIEBwYXJhbSBkYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN5bmNDaGlwKGRhdGE6IFJvb21Nc2cuc3luY19jaGlwc19yZXNwKSB7XHJcbiAgICAgICAgLy/lgYforr7lt7Llj5HlsIQy5Y+R5a2Q5by577yM5L2G6YO95rKh56Kw5Yiw6bG877yM5q2k5pe25a6i5oi356uv5bey57uP5omj6ZKx5L2G5piv5pyN5Yqh56uv5piv5rKh5pyJ5omj6ZKx55qEXHJcbiAgICAgICAgLy/ov5nml7bpnaLmnb/nmoTmlbDmja7lupTor6XkuI7lrqLmiLfnq6/lkIzmraVcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCIgIHN5bmNDaGlwIHRoaXMuZmdXYWxsZXRWYWx1ZSA9IFwiLCB0aGlzLmZnV2FsbGV0VmFsdWUpO1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIiAgc3luY0NoaXAgTnVtYmVyKGRhdGEuY2hpcHMpID0gXCIsIE51bWJlcihkYXRhLmNoaXBzKSk7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5zZWVMb2coKTtcclxuXHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5mZ1dhbGxldFZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmdXYWxsZXRWYWx1ZSA9IE51bWJlcihkYXRhLmNoaXBzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hZGRUb1ZhbHVlID0gdGhpcy5mZ1dhbGxldFZhbHVlO1xyXG4gICAgICAgIHRoaXMudXBkYXRlVUlWYWx1ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlj5HlsITlrZDlvLnjgIHmiZPmrbvpsbzml7blkIzmraVGR+mSseWMhSovXHJcbiAgICBwdWJsaWMgc3luY1dlbGxldEZHKGNoaXBzOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5tX2Z1aSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiLS0tc3luY1dlbGxldEZHXCIsIGNoaXBzKTtcclxuICAgICAgICAgICAgdGhpcy5mZ1dhbGxldFZhbHVlID0gTnVtYmVyKGNoaXBzKTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVVSVZhbHVlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gc3RyIOWwj+mUruebmOi+k+WFpeeahOWAvFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHdhbGxldEtleU51bShzdHI6IHN0cmluZykge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhzdHIpO1xyXG4gICAgICAgIHRoaXMud2FsbGV0S2V5VGV4dC50ZXh0ID0gc3RyO1xyXG4gICAgICAgIHZhciB2OiBudW1iZXIgPSBOdW1iZXIodXRpbHMuQ29tbW9uVXRpbHMuanVzdF9udW0oc3RyKSk7XHJcbiAgICAgICAgLy8gaWYgKHYgPD0gdGhpcy5mZ1dhbGxldFZhbHVlKSByZXR1cm47XHJcbiAgICAgICAgLy8gaWYgKHYgPiB0aGlzLmNlcnRlcldhbGxldFZhbHVlICsgdGhpcy5mZ1dhbGxldFZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgIHYgPSB0aGlzLmNlcnRlcldhbGxldFZhbHVlICsgdGhpcy5mZ1dhbGxldFZhbHVlO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICB0aGlzLm9uQ2xpY2tNZWFud2hpbGVDaGFuZ2UodiAqIDEwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlr7nmjInpkq7ov5vooYznm5HmjqdcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhZGRMaXN0ZXJPbkNsaWNrKCkge1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJhZGRCdXRcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xpY2tBZGQpO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJzdWJCdXRcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xpY2tTdWIpO1xyXG4gICAgICAgIHRoaXMubV9mdWkuZ2V0Q2hpbGQoXCJhdXRvQWRkQnV0XCIpLm9uQ2xpY2sodGhpcywgdGhpcy5vbkNsaWNrSXNBdXRvKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwic3RhcnRCdXRcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xpY2tTdGFydCk7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5nZXRDaGlsZChcImNsb3NlXCIpLm9uQ2xpY2sodGhpcywgdGhpcy5PbkNsb3NlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIm+W7uuWwj+mUruebmFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNyZWF0ZVdhbGxldEtleSgpIHtcclxuICAgICAgICBuZXcgV2FsbGV0S2V5KHRoaXMuZmdXYWxsZXRWYWx1ZSArIHRoaXMuY2VydGVyV2FsbGV0VmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6L6T5YWl5YC8XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25JbnB1dCgpIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJ0aGlzLndhbGxldElucHV0LnRleHRcIiArIHRoaXMud2FsbGV0SW5wdXQudGV4dCk7XHJcblxyXG4gICAgICAgIGxldCBjb250ZW50ID0gdXRpbHMuQ29tbW9uVXRpbHMuanVzdF9udW0odGhpcy53YWxsZXRJbnB1dC50ZXh0KTtcclxuICAgICAgICBsZXQgbWF4ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQodGhpcy5mZ1dhbGxldFZhbHVlICsgdGhpcy5jZXJ0ZXJXYWxsZXRWYWx1ZSk7XHJcbiAgICAgICAgaWYgKE51bWJlcihjb250ZW50KSA+IG1heCkge1xyXG4gICAgICAgICAgICBjb250ZW50ID0gbWF4LnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLndhbGxldFNsaS52YWx1ZSA9IE51bWJlcihjb250ZW50KSAqIDEwMDtcclxuICAgICAgICB0aGlzLmFkZFRvVmFsdWUgPSBOdW1iZXIoY29udGVudCkgKiAxMDA7XHJcblxyXG4gICAgICAgIHRoaXMud2FsbGV0SW5wdXQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLmNoZWNrX1Bob25lX1RleHQoY29udGVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDngrnlh7vliqDlj7dcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsaWNrQWRkKCkge1xyXG4gICAgICAgIHZhciBhZGQ6IG51bWJlciA9IHRoaXMuYWRkVG9WYWx1ZSArIHRoaXMuY2VydGVyV2FsbGV0VmFsdWUgKiB0aGlzLnJhdGlvO1xyXG4gICAgICAgIHZhciBhbGw6IG51bWJlciA9IHRoaXMuY2VydGVyV2FsbGV0VmFsdWUgKyB0aGlzLmZnV2FsbGV0VmFsdWU7XHJcbiAgICAgICAgaWYgKHRoaXMuY2VydGVyV2FsbGV0VmFsdWUgPiAwICYmIHRoaXMuYWRkVG9WYWx1ZSA8IGFsbCkge1xyXG4gICAgICAgICAgICBpZiAoYWRkID49IGFsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkNsaWNrTWVhbndoaWxlQ2hhbmdlKGFsbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ2xpY2tNZWFud2hpbGVDaGFuZ2UoYWRkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAq54K55Ye75YeP5Y+3XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja1N1YigpIHtcclxuXHJcbiAgICAgICAgLy9pZiAodGhpcy5hZGRUb1ZhbHVlIDwgdGhpcy5jZXJ0ZXJXYWxsZXRWYWx1ZSAmJiB0aGlzLmFkZFRvVmFsdWUgPiB0aGlzLmZnV2FsbGV0VmFsdWUpIHtcclxuICAgICAgICB0aGlzLm9uQ2xpY2tNZWFud2hpbGVDaGFuZ2UodGhpcy5hZGRUb1ZhbHVlIC0gdGhpcy5jZXJ0ZXJXYWxsZXRWYWx1ZSAqIHRoaXMucmF0aW8pO1xyXG4gICAgICAgIC8vfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye75piv5ZCm6Ieq5Yqo5Yqg6ZKxXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja0lzQXV0bygpIHtcclxuICAgICAgICBpZiAodGhpcy5pc0F1dG9Mb2NhbCkge1xyXG4gICAgICAgICAgICB0aGlzLmlzQXV0b0xvY2FsID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmlzQXV0b0xvY2FsID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmi5bmi73mu5HliqjmnaFcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbldhbGxldFNsaWRlckRyYWdFbmQoKSB7XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB2OiBudW1iZXIgPSB0aGlzLndhbGxldFNsaS52YWx1ZTtcclxuICAgICAgICAgICAgaWYgKHRoaXMud2FsbGV0U2xpLnZhbHVlIDw9IHRoaXMuZmdXYWxsZXRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy53YWxsZXRTbGkudmFsdWUgPSB0aGlzLmZnV2FsbGV0VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5hZGRUb1ZhbHVlID0gdGhpcy53YWxsZXRTbGkudmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0SW5wdXQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdCh0aGlzLndhbGxldFNsaS52YWx1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0S2V5VGV4dC50ZXh0ID0gdXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRm9ybWF0KHRoaXMud2FsbGV0U2xpLnZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye75Yqg6ZKx5YeP6ZKx5piv5ZCM5pe25pS55Y+Y5ruR5Yqo5p2h5Y+K5Yqg55qE6ZKx5pWwXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja01lYW53aGlsZUNoYW5nZShudW06IG51bWJlcikge1xyXG4gICAgICAgIGlmIChudW0gPD0gdGhpcy5mZ1dhbGxldFZhbHVlKSB7XHJcbiAgICAgICAgICAgIG51bSA9IHRoaXMuZmdXYWxsZXRWYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hZGRUb1ZhbHVlID0gbnVtO1xyXG4gICAgICAgIHRoaXMud2FsbGV0SW5wdXQudGV4dCA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZvcm1hdChudW0pLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy53YWxsZXRLZXlUZXh0LnRleHQgPSB1dGlscy5Db21tb25VdGlscy5udW1iZXJGb3JtYXQobnVtKS50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMud2FsbGV0U2xpLnZhbHVlID0gbnVtO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog54K55Ye7c3RhcnTmuLjmiI9cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNsaWNrU3RhcnQoKSB7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNlcnRlcldhbGxldFZhbHVlID09IDApIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKExhbmcuZnJlZVRyYW5XYWxsZXRDaC5jZW50ZXJOb3RFbm91Z2gsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmFkZFRvVmFsdWUgPT0gMCkge1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5mcmVlVHJhbldhbGxldENoLnNldE1vbmV5LCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLmFkZFRvVmFsdWUgPT0gdGhpcy5mZ1dhbGxldFZhbHVlICYmIHRoaXMuaXNBdXRvTG9jYWwgPT0gdGhpcy5pc0F1dG9TZXJ2ZXIgfHwgdGhpcy5hZGRUb1ZhbHVlIDwgdGhpcy5mZ1dhbGxldFZhbHVlKSB7XHJcbiAgICAgICAgICAgIC8vZWxzZSBpZih0aGlzLmFkZFRvVmFsdWUgPCB0aGlzLmZnV2FsbGV0VmFsdWUpe1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5mcmVlVHJhbldhbGxldENoLm9wZXJhdGlvbkludmFsaWQsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5hZGRUb1ZhbHVlID0gdGhpcy5hZGRUb1ZhbHVlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuV2FsbGV0TW5nLmlzQXV0b0xvY2FsID0gdGhpcy5pc0F1dG9Mb2NhbDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5mZ1dhbGxldFZhbHVlQnlQYW5lbCA9IHRoaXMuZmdXYWxsZXRWYWx1ZTtcclxuICAgICAgICBOZXRXYWxsZXQuSW5zdGFuY2Uud2FsbGV0UmVxKHRoaXMuYWRkVG9WYWx1ZSwgdGhpcy5pc0F1dG9Mb2NhbCk7XHJcblxyXG4gICAgICAgIHRoaXMuT25DbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwdWJsaWMgT25DbG9zZSgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5mZ1dhbGxldFZhbHVlID0gbnVsbDtcclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLldBTExFVEtFWU5VTSwgdGhpcywgdGhpcy53YWxsZXRLZXlOdW0pO1xyXG4gICAgICAgIC8vR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnRDb25zdGFudFJlc3BvbnNlLlNZTkNXQUxMRVRGRywgdGhpcywgdGhpcy5zeW5jV2VsbGV0RkcpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50TmV0UmVzcG9uc2UuU3luY0NoaXBzUmVzcCwgdGhpcywgdGhpcy5zeW5jQ2hpcCk7XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLm9uQ2xvc2UpO1xyXG5cclxuICAgICAgICAvL3RoaXMubV9mdWkuZGlzcG9zZSgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuYlByb2hpYml0V2FsbGV0QnRuID0gZmFsc2U7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcud2FsbGV0UGFuZWwgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLkNsb3NlKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgSGFuZGxlciA9IGxheWEudXRpbHMuSGFuZGxlcjtcclxuaW1wb3J0IExvYWRlciA9IGxheWEubmV0LkxvYWRlcjtcclxuaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi8uLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5pbXBvcnQgTmV0V2FubmVycyBmcm9tIFwiLi4vLi4vbmV0L1Byb3RvSGFuZGVyL05ldFdhbm5lcnNcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4vQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2lubmVyUGFuZWwgZXh0ZW5kcyBCYXNlUGFuZWwge1xyXG4gICAgcHVibGljIGJjYXN0SnBJbmZvOiBQb29sTXNnLmJjYXN0X2pwX3Jlc3A7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChbXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpV2lubmluZ1BhdGguaW1hZ2UsIHR5cGU6IExvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aVdpbm5pbmdQYXRoLmZ1aSwgdHlwZTogTG9hZGVyLkJVRkZFUiB9LFxyXG4gICAgICAgIF0sIEhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25Mb2FkV2lubmVyKSlcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5sdWNrQXdhcmQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296K6+572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkV2lubmVyKCk6IHZvaWQge1xyXG4gICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlXaW5uaW5nUGF0aC5QYWNrYWdlKTtcclxuICAgICAgICB0aGlzLm1fZnVpID0gZmFpcnlndWkuVUlQYWNrYWdlLmNyZWF0ZU9iamVjdChcIldpbm5pbmdcIiwgXCJ3aW5uaW5nUGFuZWxcIikuYXNDb207XHJcbiAgICAgICAgdGhpcy5tX2Z1aS5zZXRTaXplKGZhaXJ5Z3VpLkdSb290Lmluc3Qud2lkdGgsIGZhaXJ5Z3VpLkdSb290Lmluc3QuaGVpZ2h0KTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkFkZEZVSSh0aGlzLm1fZnVpKTtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiR3JhZGVMb2FkZXJcIikuaWNvbiA9IFwidWk6Ly9XaW5uaW5nL1wiICsgdGhpcy5iY2FzdEpwSW5mby5zY29yZV9sZXZlbDtcclxuICAgICAgICB0aGlzLm1fZnVpLmdldENoaWxkKFwiY2xpcFRleHRcIikudGV4dCA9IFwiK1wiICsgKHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKE51bWJlcih0aGlzLmJjYXN0SnBJbmZvLnNjb3JlKSkpLnRvRml4ZWQoMik7XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDIwMDAsIHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWz6ZetXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuV2lubmVyUGFuZWwpO1xyXG4gICAgfVxyXG59IiwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VNYW5hZ2VyIHtcclxuXHJcbiAgICBwdWJsaWMgSW5pdCgpOiB2b2lkIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOa4heepuui/mOWOn+aVsOaNriovXHJcbiAgICBwdWJsaWMgQ2xlYXJEYXRhKCk6IHZvaWQge1xyXG5cclxuICAgIH1cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBCYXNlTWFuYWdlciBmcm9tIFwiLi9CYXNlTWFuYWdlclwiO1xyXG5pbXBvcnQgeyBGaXNoQmFzZUNvbmZpZyB9IGZyb20gXCIuLi9jb25maWcvRmlzaEJhc2VDb25maWdcIjtcclxuaW1wb3J0IEZpc2hCYXNlQ29uZmlnRGF0YSBmcm9tIFwiLi4vZ2FtZS9GaXNoL0Zpc2hCYXNlQ29uZmlnRGF0YVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25maWdNYW5hZ2VyIGV4dGVuZHMgQmFzZU1hbmFnZXIge1xyXG5cclxuXHJcbiAgICBwcml2YXRlIF9maXNoQmFzZUNvbmZpZzogU3RyaW5nO1xyXG4gICAgLyoqIOmxvOWfuuehgOaVsOaNrumFjee9riovXHJcbiAgICBwdWJsaWMgZ2V0IEZpc2hCYXNlQ29uZmlnKCk6IFN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Zpc2hCYXNlQ29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX2Zpc2hQYXRoQ29uZmlnOiB7IFtwYXRoSUQ6IG51bWJlcl06IEZpc2hXYXlQb2ludCB9ID0ge307Ly/mraPluLjpsbzot6/lvoRcclxuICAgIHByaXZhdGUgX2Zpc2hQYXRoQ29uZmlnVHJhbmZvcm06IHsgW3BhdGhJRDogbnVtYmVyXTogRmlzaFdheVBvaW50IH0gPSB7fTsvLyDovazmjaJ4IHnlkI7nmoTpsbzot6/lvoRcclxuICAgIC8qKiDpsbzot6/lirLmlbDmja7phY3nva4oa2V5OmZpc2hQYXRoSUQgICB2YWx1ZTpGaXNoV2F5UG9pbnQpKi9cclxuICAgIHB1YmxpYyBnZXQgRmlzaFBhdGhDb25maWcoKSB7XHJcbiAgICAgICAgcmV0dXJuIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLl9iVHJhbnNmb3JtID8gdGhpcy5fZmlzaFBhdGhDb25maWdUcmFuZm9ybSA6IHRoaXMuX2Zpc2hQYXRoQ29uZmlnO1xyXG4gICAgICAgIC8vIGlmICghR2FtZUZhY2FkZS5JbnN0YW5jZS5IdW50U2NlbmVNbmcuX2JUcmFuc2Zvcm0pIHtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIHRoaXMuX2Zpc2hQYXRoQ29uZmlnO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBlbHNlIHtcclxuICAgICAgICAvLyAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLSBfZmlzaFBhdGhDb25maWdUcmFuZm9ybSAtLS0tLS0tLS0tLS0tLS0tLS0tLVwiKTtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIHRoaXMuX2Zpc2hQYXRoQ29uZmlnVHJhbmZvcm07XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX2Zpc2hPZmZzZXRDb25maWc6IExheWEuV2Vha09iamVjdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgIC8qKiDpsbzkvY3nva7lgY/np7vmlbDmja7phY3nva4oa2V5OmZpc2hUeXBlSUQgICB2YWx1ZTpGaXNoV2F5UG9pbnQpKi9cclxuICAgIHB1YmxpYyBnZXQgRmlzaE9mZnNldENvbmZpZygpOiBMYXlhLldlYWtPYmplY3Qge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9maXNoT2Zmc2V0Q29uZmlnXHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBfZmlzaFBhdGhMZW5ndGhDb25maWc6IHsgW2tleTogbnVtYmVyXTogTGF5YS5XZWFrT2JqZWN0IH0gPSB7fTtcclxuICAgIHB1YmxpYyBHZXRmaXNoUGF0aExlbmd0aEtleShmaXNoVHlwZTogbnVtYmVyLCBwYXRoSUQ6IG51bWJlcikge1xyXG4gICAgICAgIHJldHVybiBmaXNoVHlwZSAqIDEwMDAwMDAgKyBwYXRoSUQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuaJp+ihjOS6hmluaXQqL1xyXG4gICAgcHJpdmF0ZSBfYkNvbXBsZXRlSW5pdDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHVibGljIEluaXQoKSB7XHJcbiAgICAgICAgaWYgKGZhbHNlID09IHRoaXMuX2JDb21wbGV0ZUluaXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fYkNvbXBsZXRlSW5pdCA9IHRydWU7XHJcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuUHJlbG9hZGluZ1JlczxTdHJpbmc+KFwiY29uZmlnZmlsZS9maXNoQmFzZUNvbmZpZy5qc29uXCIsIExheWEuTG9hZGVyLkpTT04sIGZ1bmN0aW9uIChsb2FkZWRSZXM6IFN0cmluZykge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5fZmlzaEJhc2VDb25maWcgPSBsb2FkZWRSZXM7XHJcbiAgICAgICAgICAgICAgICBGaXNoQmFzZUNvbmZpZ0RhdGEuRmlzaFN3aW1Db25maWcuUGFyc2VGaXNoQmVoYXZpb3JEYXRhKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5QcmVsb2FkaW5nUmVzPExheWEuV2Vha09iamVjdD4oXCJjb25maWdmaWxlL2Zpc2hQYXRoQ29uZmlnLmpzb25cIiwgTGF5YS5Mb2FkZXIuSlNPTiwgZnVuY3Rpb24gKGxvYWRlZFJlczogTGF5YS5XZWFrT2JqZWN0KSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpdGVyYXRvciBpbiBsb2FkZWRSZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZndwID0gbmV3IEZpc2hXYXlQb2ludChpdGVyYXRvciwgc2VsZi5HZXRQYXRoTGVuZ3RoKGxvYWRlZFJlc1tpdGVyYXRvcl0pKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZndwMiA9IG5ldyBGaXNoV2F5UG9pbnQoaXRlcmF0b3IsIHNlbGYuR2V0UGF0aExlbmd0aChsb2FkZWRSZXNbaXRlcmF0b3JdKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fZmlzaFBhdGhDb25maWdbaXRlcmF0b3JdID0gZndwO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2Zpc2hQYXRoQ29uZmlnVHJhbmZvcm1baXRlcmF0b3JdID0gZndwMjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBUcmFuc2Zvcm1GaXNoQ29uZmlnKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5QcmVsb2FkaW5nUmVzPExheWEuV2Vha09iamVjdD4oXCJjb25maWdmaWxlL2Zpc2hPZmZzZXRDb25maWcuanNvblwiLCBMYXlhLkxvYWRlci5KU09OLCBmdW5jdGlvbiAobG9hZGVkUmVzOiBMYXlhLldlYWtPYmplY3QpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGl0ZXJhdG9yIGluIGxvYWRlZFJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBmd3AgPSBuZXcgRmlzaFdheVBvaW50KGl0ZXJhdG9yLCBzZWxmLkdldFBhdGhMZW5ndGgobG9hZGVkUmVzW2l0ZXJhdG9yXSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2Zpc2hPZmZzZXRDb25maWcuc2V0KGl0ZXJhdG9yLCBmd3ApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHZhciBUcmFuc2Zvcm1GaXNoQ29uZmlnID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGZpc2hDb25maWcgPSBzZWxmLl9maXNoUGF0aENvbmZpZ1RyYW5mb3JtO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGZpc2hDb25maWcpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcG9pbnRzID0gZmlzaENvbmZpZ1trZXldLl9wb2ludHM7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzW2ldLnggPSAtcG9pbnRzW2ldLng7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50c1tpXS55ID0gLXBvaW50c1tpXS55O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tICBzZWxmLl9maXNoUGF0aENvbmZpZyA9IFwiLCBzZWxmLl9maXNoUGF0aENvbmZpZyk7XHJcbiAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0tLS0tLS0tLSAgc2VsZi5fZmlzaFBhdGhDb25maWdUcmFuZm9ybSA9IFwiLCBzZWxmLl9maXNoUGF0aENvbmZpZ1RyYW5mb3JtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiuoeeul+W5tui/lOWbnui3r+W+hOmVv+W6plxyXG4gICAgICogQHBhcmFtIHdheXBvaW50cyDot6/lvoTkuIrmiYDmnInnmoTngrlcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHZXRQYXRoTGVuZ3RoKHdheXBvaW50czogc3RyaW5nW10pOiBBcnJheTxPYmplY3Q+IHtcclxuICAgICAgICBsZXQgdG90YWxMZW5ndGg6IG51bWJlciA9IDA7XHJcbiAgICAgICAgdmFyIHZlY3RvcjNBcnI6IEFycmF5PExheWEuVmVjdG9yMz4gPSBuZXcgQXJyYXk8TGF5YS5WZWN0b3IzPigpO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB3YXlwb2ludHMubGVuZ3RoIC0gMTsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgYXJyOiBzdHJpbmdbXSA9IHdheXBvaW50c1tpbmRleF0ucmVwbGFjZSgnKCcsICcnKS5yZXBsYWNlKCcpJywgJycpLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgICAgIC8qKiB46L205LmY5LulLTHmmK/lm6DkuLpqc29u5pWw5o2u5LuOdW5pdHnlvJXmk47lr7zlh7rmnaXnmoTvvIzlhbblnZDmoIfns7vkuI5sYXlh5Z2Q5qCH57O7eOWAvOato+WlveebuOWPjSovXHJcbiAgICAgICAgICAgIGxldCB2ZWM6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoLTEgKiBOdW1iZXIoYXJyWzBdKSwgTnVtYmVyKGFyclsxXSksIE51bWJlcihhcnJbMl0pKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBhcnIxOiBzdHJpbmdbXSA9IHdheXBvaW50c1tpbmRleCArIDFdLnJlcGxhY2UoJygnLCAnJykucmVwbGFjZSgnKScsICcnKS5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgICBsZXQgdmVjMTogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygtMSAqIE51bWJlcihhcnIxWzBdKSwgTnVtYmVyKGFycjFbMV0pLCBOdW1iZXIoYXJyMVsyXSkpO1xyXG4gICAgICAgICAgICB2ZWN0b3IzQXJyLnB1c2godmVjKTtcclxuICAgICAgICAgICAgaWYgKDEgKyBpbmRleCA9PSB3YXlwb2ludHMubGVuZ3RoIC0gMSlcclxuICAgICAgICAgICAgICAgIHZlY3RvcjNBcnIucHVzaCh2ZWMxKTtcclxuICAgICAgICAgICAgdG90YWxMZW5ndGggKz0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKHZlYywgdmVjMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgQXJyYXk8T2JqZWN0Pih2ZWN0b3IzQXJyLCB0b3RhbExlbmd0aCk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlzaFdheVBvaW50IHtcclxuICAgIHB1YmxpYyBfa2V5OiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgX3BvaW50czogQXJyYXk8TGF5YS5WZWN0b3IzPjtcclxuICAgIHB1YmxpYyBfd2F5TGVuZ3RoOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3Ioa2V5OiBzdHJpbmcsIG9ianM6IEFycmF5PE9iamVjdD4pIHsvL3BvaW50czogTGF5YS5WZWN0b3IzW10sIHdheUxlbmd0aDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xyXG4gICAgICAgIHRoaXMuX3BvaW50cyA9IG9ianNbMF0gYXMgQXJyYXk8TGF5YS5WZWN0b3IzPjtcclxuICAgICAgICB0aGlzLl93YXlMZW5ndGggPSBvYmpzWzFdIGFzIG51bWJlcjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXNoUGF0aExlbmd0aCB7XHJcbiAgICBwdWJsaWMgX25vZGVCZWdpblBvaW50OiBudW1iZXI7XHJcbiAgICAvKiog6bG85p+Q5q616Lev5Yqy55qE56e75Yqo6YCf546HKi9cclxuICAgIHB1YmxpYyBfU3BlZWRSYXRlOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgX3BhdGhMZW5ndGg6IG51bWJlcjtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihwb2ludDogbnVtYmVyLCBzcGVlZDogbnVtYmVyLCBsZW5ndGg6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuX25vZGVCZWdpblBvaW50ID0gcG9pbnQ7XHJcbiAgICAgICAgdGhpcy5fU3BlZWRSYXRlID0gc3BlZWQ7XHJcbiAgICAgICAgdGhpcy5fcGF0aExlbmd0aCA9IGxlbmd0aDtcclxuICAgIH1cclxufSIsImltcG9ydCBCYXNlTWFuYWdlciBmcm9tIFwiLi9CYXNlTWFuYWdlclwiO1xyXG5cclxuLyoqXHJcbiAqIOS6i+S7tueuoeeQhlxyXG4gKi9cclxuXHJcbiAgICBleHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudE1hbmFnZXIgZXh0ZW5kcyBCYXNlTWFuYWdlciB7XHJcbiAgICAgICAgcHJpdmF0ZSBfZXZlbnQ6IGxheWEuZXZlbnRzLkV2ZW50RGlzcGF0Y2hlcjtcclxuXHJcbiAgICAgICAgSW5pdCgpe1xyXG4gICAgICAgICAgICB0aGlzLl9ldmVudCA9IG5ldyBsYXlhLmV2ZW50cy5FdmVudERpc3BhdGNoZXIoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIOa3u+WKoOS4gOiIrOa4uOaIj+mAu+i+keS6i+S7tu+8iOS4jeWMheWQq+WNj+iuruWbnuiwg+S6i+S7tu+8iSDopoHpmLLmraLph43lpI3mt7vliqDvvIzlkKbliJnkvJrph43lpI3osIPnlKhcclxuICAgICAgICAgKi9cclxuICAgICAgICBwdWJsaWMgYWRkKHR5cGU6IHN0cmluZywgdGhpc09iamVjdDogYW55LCBsaXN0ZW5lcjogRnVuY3Rpb24sIG9uY2U6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xyXG4gICAgICAgICAgICBpZiAoIW9uY2UpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudC5vbih0eXBlLCB0aGlzT2JqZWN0LCBsaXN0ZW5lcik7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50Lm9uY2UodHlwZSwgdGhpc09iamVjdCwgbGlzdGVuZXIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog5rS+5Y+R5LiA6Iis5ri45oiP6YC76L6R5LqL5Lu277yI5LiN5YyF5ZCr5Y2P6K6u5Zue6LCD5LqL5Lu277yJXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgcHVibGljIGRpc3BhdGNoKHR5cGU6IHN0cmluZywgLi4uYXJncyk6IHZvaWQge1xyXG4gICAgICAgICAgICB0aGlzLl9ldmVudC5ldmVudCh0eXBlLCBhcmdzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIOenu+mZpOS4gOiIrOa4uOaIj+mAu+i+keS6i+S7tu+8iOS4jeWMheWQq+WNj+iuruWbnuiwg+S6i+S7tu+8iVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHB1YmxpYyByZW1vdmUodHlwZTogc3RyaW5nLCB0aGlzT2JqZWN0OiBhbnksIGxpc3RlbmVyOiBGdW5jdGlvbiwgb25jZU9ubHk6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xyXG4gICAgICAgICAgICB0aGlzLl9ldmVudC5vZmYodHlwZSwgdGhpc09iamVjdCwgbGlzdGVuZXIsIG9uY2VPbmx5KTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuIiwiLyoqXHJcbiog546p5a625pWw5o2uXHJcbiovXHJcblxyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBCYXNlTWFuYWdlciBmcm9tIFwiLi9CYXNlTWFuYWdlclwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU1hbmdlciBleHRlbmRzIEJhc2VNYW5hZ2VyIHtcclxuXHJcblx0cHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBHYW1lTWFuZ2VyO1xyXG5cdHB1YmxpYyBzZWNyZXQ6IHN0cmluZztcclxuXHJcblx0cHVibGljIGxhbmc6IHN0cmluZyA9IFwiemgtY25cIjsgIC8v5aSa6K+t6KiAIFx0KOaaguaXtuWumuS5iSDml6DnlKgpXHRcclxuXHJcblx0cHVibGljIGdhbWVfaWQ6IG51bWJlciA9IDUwMDY7XHJcblx0cHVibGljIGlzU2hvd1RpcDogYm9vbGVhbiA9IHRydWU7XHJcblx0cHVibGljIGJSZWNvbm5lY3Q6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcblx0cHVibGljIHNlcnZlcklwOiBzdHJpbmc7XHJcblx0cHVibGljIGxvYmJ5VXJsOiBzdHJpbmc7XHJcblx0cHVibGljIHNlcnZlclBvcnQ6IG51bWJlciA9IDUwMDYyO1xyXG5cdHB1YmxpYyBzaXA6IEFycmF5PHN0cmluZz4gPSBudWxsO1xyXG5cdHB1YmxpYyByZXR1cm46IHN0cmluZztcclxuXHJcblx0LyoqIOW8see9keaDheWGteS4i+S7juaIv+mXtOi/lOWbnuWkp+WOhe+8jOWImeiusOW9leeahOaIv+mXtOeahOWAvCovXHJcblx0cHVibGljIHVzZXJBY2NvdW50OiBzdHJpbmcgPSBcIm51bGxcIjtcclxuXHRwdWJsaWMgdXNlckNoaXBzOiBudW1iZXIgPSAwO1xyXG5cclxuXHQvKiog6LSm5Y+355m75b2V55qEdG9rZW4qL1xyXG5cdHB1YmxpYyB0b2tlbjogc3RyaW5nID0gXCIxMjNcIjtcclxuXHRwdWJsaWMgaGlzdG9yeVVybDogc3RyaW5nID0gXCJcIjtcclxuXHRwdWJsaWMgbXlWZXJzaW9uOiBzdHJpbmcgPSBcIlwiO1xyXG5cdHB1YmxpYyBjbGllbnQ6IHN0cmluZyA9IFwiXCI7ICAvL+WuouaIt+err+iuvuWkh1xyXG5cdHB1YmxpYyBpc0xvYWNhbERldjogYm9vbGVhbiA9IGZhbHNlOyAvL+aYr+WQpuacrOWcsOiwg+ivlVxyXG5cdHB1YmxpYyByZXBvcnRVcmw6IHN0cmluZyA9IG51bGw7XHJcblx0cHVibGljIGFjdFVybDogc3RyaW5nID0gbnVsbDtcclxuXHRwdWJsaWMgcGxheVR5cGU6IHN0cmluZyA9IFwiMlwiOyAvL+ato+W8j+eOqTEgIOivleeOqTJcclxuXHRwdWJsaWMgaXNQbGF5OiBib29sZWFuID0gdHJ1ZTsvL+aYr+WQpuaYr+ivleeOqVxyXG5cdHB1YmxpYyBzaGVldDogbnVtYmVyOyAvLzHmiJbogIVudWxs5pi+56S6ICAw6ZqQ6JePXHJcblx0SW5pdCgpOiB2b2lkIHtcclxuXHRcdHRoaXMuc2lwID0gSlNPTi5wYXJzZSh1dGlscy5Db21tb25VdGlscy5kZWNvZGUoXCJzaXBcIiwgXCJ2YWx1ZVwiKSk7XHJcblx0XHR0aGlzLnNlcnZlcklwID0gdXRpbHMuQ29tbW9uVXRpbHMuZGVjb2RlKFwic2VydmVySXBcIiwgXCJ2YWx1ZVwiKTtcclxuXHRcdC8vdGhpcy5sb2JieVVybCA9IHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZShcImxvYmJ5VXJsXCIsIFwidmFsdWVcIik7XHJcblx0XHR0aGlzLnNlcnZlclBvcnQgPSB1dGlscy5Db21tb25VdGlscy5kZWNvZGUoXCJzZXJ2ZXJQb3J0XCIsIFwidmFsdWVcIik7XHJcblx0XHR0aGlzLnRva2VuID0gdXRpbHMuQ29tbW9uVXRpbHMuZGVjb2RlKFwidG9rZW5cIiwgXCJ2YWx1ZVwiKTtcclxuXHRcdC8vdGhpcy5oaXN0b3J5VXJsID0gdXRpbHMuQ29tbW9uVXRpbHMuZGVjb2RlKFwiaGlzdG9yeVVybFwiLCBcInZhbHVlXCIpO1xyXG5cdFx0dGhpcy5teVZlcnNpb24gPSB1dGlscy5Db21tb25VdGlscy5kZWNvZGUoXCJteVZlcnNpb25cIiwgXCJ2YWx1ZVwiKTtcclxuXHRcdHRoaXMuY2xpZW50ID0gdXRpbHMuQ29tbW9uVXRpbHMuZGVjb2RlKFwiY2xpZW50XCIsIFwidmFsdWVcIik7XHJcblx0XHR0aGlzLnJldHVybiA9IHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZShcInJldHVyblwiLCBcInZhbHVlXCIpO1xyXG5cdFx0dGhpcy5zaGVldCA9IHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZShcInNoZWV0XCIsIFwidmFsdWVcIik7XHJcblxyXG5cdFx0dGhpcy5wbGF5VHlwZSA9IHV0aWxzLkNvbW1vblV0aWxzLmdldFZhbHVlKFwicGxheV90eXBlXCIpO1xyXG5cdFx0dGhpcy5pc1BsYXkgPSB0aGlzLnBsYXlUeXBlID09IFwiMlwiID8gdHJ1ZSA6IGZhbHNlO1xyXG5cclxuXHRcdHRoaXMucmVwb3J0VXJsID0gdXRpbHMuQ29tbW9uVXRpbHMuZ2V0VmFsdWUoXCJnYW1lV2ViTG9nXCIpO1xyXG5cdFx0dGhpcy5hY3RVcmwgPSB1dGlscy5Db21tb25VdGlscy5nZXRWYWx1ZShcImFjdFVybFwiKTtcclxuXHRcdHRoaXMubG9iYnlVcmwgPSB1dGlscy5Db21tb25VdGlscy5nZXRWYWx1ZShcImxvYmJ5VXJsXCIpO1xyXG5cdFx0dGhpcy5oaXN0b3J5VXJsID0gdXRpbHMuQ29tbW9uVXRpbHMuZ2V0VmFsdWUoXCJoaXN0b3J5VXJsXCIpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICAqIOiOt+WPlui/kOihjOiuvuWkh1xyXG5cdCAgKiAxOlBD77yMMjpJT1PmqKrvvIwzOklPU+erlu+8jDQ65a6J5Y2T5qiq77yMNTrlronljZPnq5bvvIw2OuWFtuWug+aoqu+8jDc65YW25a6DXHJcblx0ICAqL1xyXG5cdHB1YmxpYyBnZXREZXZpY2VUeXBlKCk6IG51bWJlciB7XHJcblx0XHR2YXIgaXNIb3Jpem9udGFsOiBib29sZWFuID0gTGF5YS5Ccm93c2VyLmNsaWVudFdpZHRoID4gTGF5YS5Ccm93c2VyLmNsaWVudEhlaWdodDtcclxuXHRcdHZhciBtZWRpYTogbnVtYmVyID0gMTtcclxuXHJcblx0XHRpZiAoTGF5YS5Ccm93c2VyLm9uUEMpIHtcclxuXHRcdFx0bWVkaWEgPSAxO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uSU9TKSB7XHJcblx0XHRcdG1lZGlhID0gaXNIb3Jpem9udGFsID8gMiA6IDM7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChMYXlhLkJyb3dzZXIub25BbmRyb2lkKSAvL29uQW5kcmlvZCBcclxuXHRcdHtcclxuXHRcdFx0bWVkaWEgPSBpc0hvcml6b250YWwgPyA0IDogNTtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRtZWRpYSA9IGlzSG9yaXpvbnRhbCA/IDYgOiA3O1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBtZWRpYTtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBzZWVMb2coKSB7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCIgXCIpO1xyXG5cdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1sb2fnu5PmnpwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cIik7XHJcblxyXG5cdFx0Zm9yIChsZXQga2V5IGluIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdXNlbGVzc0J1bGxldElkRGljdCkge1xyXG5cdFx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCIg5peg55So5a2Q5by5IGJ1bGxldElkID0gXCIsIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdXNlbGVzc0J1bGxldElkRGljdFtrZXldLmJ1bGxldGlkLnRvU3RyaW5nKCkpO1xyXG5cdFx0fVxyXG5cdFx0Zm9yIChsZXQga2V5IGluIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdG90YWxCdWxsZXRJZERpY3QpIHtcclxuXHRcdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiIOW8guW4uOWtkOW8uSBidWxsZXRJZCA9IFwiLCBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3RvdGFsQnVsbGV0SWREaWN0W2tleV0uYnVsbGV0aWQudG9TdHJpbmcoKSk7XHJcblx0XHR9XHJcblx0XHRmb3IgKGxldCBrZXkgaW4gQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UubV9yZXFCdWxsZXRJZERpY3QpIHtcclxuXHRcdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiIOivt+axguS9huacquaUtuWIsOWbnuWkjeeahOWtkOW8uSBidWxsZXRJZCA9IFwiLCBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3JlcUJ1bGxldElkRGljdFtrZXldLmJ1bGxldGlkLnRvU3RyaW5nKCkpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcInNob290QnVsbGV0UmVxID0gXCIsIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5zaG9vdEJ1bGxldFJlcSk7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCJzaG9vdEJ1bGxldFJlc3AgPSBcIiwgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LnNob290QnVsbGV0UmVzcCk7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCJCdWxsZXRQYXNzUmVzcCA9IFwiLCBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkuQnVsbGV0UGFzc1Jlc3ApO1xyXG5cdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiU2hvb3RFcnJvclJlc3AgPSBcIiwgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LlNob290RXJyb3JSZXNwKTtcclxuXHRcdHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXCIpO1xyXG5cdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwidXNlbGVzc0J1bGxldFJlcSA9IFwiLCBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkudXNlbGVzc0J1bGxldFJlcSk7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCJ1c2VsZXNzQnVsbGV0UmVzcCA9IFwiLCBDb21tb25Db25zdGFudC5faHVudFNjZW5lVGVzdEFycnkudXNlbGVzc0J1bGxldFJlc3ApO1xyXG5cdFx0dXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cIik7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCJoaXRGaXNoUmVxID0gXCIsIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5oaXRGaXNoUmVxKTtcclxuXHRcdHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcImhpdEZpc2hSZXNwID0gXCIsIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5oaXRGaXNoUmVzcCk7XHJcblx0XHR1dGlscy5Db21tb25VdGlscy5sb2coXCJmaXNoRGVhZFJlc3AgPSBcIiwgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LmZpc2hEZWFkUmVzcCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0Rmx5aW5nQnVsbGV0Q2hpcHMoKTogbnVtYmVyIHtcclxuXHRcdGxldCBjaGlwczogbnVtYmVyID0gMDtcclxuXHRcdGZvciAobGV0IGtleSBpbiBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5tX3RvdGFsQnVsbGV0SWREaWN0KSB7XHJcblx0XHRcdGNoaXBzICs9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLm1fdG90YWxCdWxsZXRJZERpY3Rba2V5XS5tdWx0aSAqIE5ldFJvb20uSW5zdGFuY2UuX2N1clJvb21JbmZvLmFudGU7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gY2hpcHM7XHJcblx0fVxyXG59IiwiaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgRmlzaENvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXIvRmlzaENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi9FbnVtL0VudW1EYXRhXCI7XHJcbmltcG9ydCB7IEZpc2hCYXNlIH0gZnJvbSBcIi4uL2dhbWUvRmlzaC9GaXNoQmFzZVwiO1xyXG5pbXBvcnQgQmFzZU1hbmFnZXIgZnJvbSBcIi4vQmFzZU1hbmFnZXJcIjtcclxuaW1wb3J0IEJ1bGxldEJhc2UgZnJvbSBcIi4uL2dhbWUvQnVsbGV0L0J1bGxldEJhc2VcIjtcclxuaW1wb3J0IEhGM0RCdWxsZXRDbGFzc2VzIGZyb20gXCIuLi9nYW1lL0J1bGxldC9IRjNEQnVsbGV0Q2xhc3Nlc1wiO1xyXG5pbXBvcnQgSEYzREZpc2hDbGFzc2VzIGZyb20gXCIuLi9nYW1lL0Zpc2gvSEYzREZpc2hDbGFzc2VzXCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IHsgU291bmRzTWFuYWdlciB9IGZyb20gXCIuL1NvdW5kc01hbmFnZXJcIjtcclxuaW1wb3J0IE5ldFJvb20gZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRSb29tXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIdW50U2NlbmVNYW5hZ2VyIGV4dGVuZHMgQmFzZU1hbmFnZXIge1xyXG5cclxuICAgIHB1YmxpYyBfR3VuU2NlbmU6IExheWEuU2NlbmUzRDtcclxuICAgIHB1YmxpYyBfR3VuU2NlbmVDYW1lcmE6IExheWEuQ2FtZXJhO1xyXG4gICAgcHVibGljIF9IdW50U2NlbmU6IExheWEuU2NlbmUzRDtcclxuICAgIHB1YmxpYyBfSHVudFNjZW5lQ2FtZXJhOiBMYXlhLkNhbWVyYTtcclxuXHJcbiAgICBwdWJsaWMgX2JTZWxlY3RlZEZpc2g6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHB1YmxpYyBfYkF1dG9BdHRhY2s6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHB1YmxpYyBfYkxvY2tBdHRhY2s6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHB1YmxpYyBfYlRyYW5zZm9ybTogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIC8qKiDnvJPlrZjpsbzmqKHlnovpooTliLbku7bliJfooagqL1xyXG4gICAgcHJpdmF0ZSBfRmlzaFByZWZhYkRpY3Q6IExheWEuV2Vha09iamVjdDtcclxuICAgIC8qKiDnvJPlrZjlrZDlvLnpooTliLbku7bliJfooagqL1xyXG4gICAgcHJpdmF0ZSBfYnVsbGV0UHJlZmFiRGljdDogTGF5YS5XZWFrT2JqZWN0O1xyXG4gICAgLyoqIOe8k+WtmOaNleeMjuebuOWFs+eJueaViOmihOWItuS7tuWIl+ihqCovXHJcbiAgICBwcml2YXRlIF9lZmZlY3RQcmVmYWJEaWN0OiBMYXlhLldlYWtPYmplY3Q7XHJcbiAgICAvKiog57yT5a2Y54iG6YeR5biB54m55pWI6aKE5Yi25Lu25YiX6KGoKi9cclxuICAgIHByaXZhdGUgX2F3YXJkZmZlY3RQcmVmYWJEaWN0OiBMYXlhLldlYWtPYmplY3Q7XHJcbiAgICAvKiog57yT5a2Y54Ku5Y+w6aKE5Yi25Lu25YiX6KGoKi9cclxuICAgIHByaXZhdGUgX2Nhbm5vblByZWZhYkRpY3Q6IExheWEuV2Vha09iamVjdDtcclxuXHJcblxyXG4gICAgLyoqIOWtmOaUvuWunuS+i+WMlueahOmxvOWvueixoSovXHJcbiAgICAvL3ByaXZhdGUgX0Zpc2hJbnN0YW5jZURpY3Q6IExheWEuV2Vha09iamVjdDtcclxuICAgIHByaXZhdGUgX0Zpc2hJbnN0YW5jZURpY3Q6IHsgW2tleTogbnVtYmVyXTogQXJyYXk8TGF5YS5TcHJpdGUzRD4gfSA9IHt9O1xyXG4gICAgLyoqIOWtmOaUvuWunuS+i+WMlueahOWtkOW8ueWvueixoSovXHJcbiAgICBwcml2YXRlIF9CdWxsZXRJbnN0YW5jZURpY3Q6IHsgW2tleTogbnVtYmVyXTogQXJyYXk8TGF5YS5TcHJpdGUzRD4gfSA9IHt9O1xyXG4gICAgLy8gIHByaXZhdGUgX0J1bGxldEluc3RhbmNlRGljdDogTGF5YS5XZWFrT2JqZWN0O1xyXG4gICAgLyoqIOWtmOaUvuWunuS+i+WMlueahOeJueaViOWvueixoSovXHJcbiAgICBwcml2YXRlIF9lZmZlY3RJbnN0YW5jZURpY3Q6IExheWEuV2Vha09iamVjdDtcclxuXHJcbiAgICAvKirpooTorabpnaLmnb8gKi9cclxuICAgIHByaXZhdGUgd2FybkNvbTogZmFpcnlndWkuR0NvbXBvbmVudCA9IG51bGw7XHJcbiAgICBwcml2YXRlIHdhcm5UcmFuOiBmYWlyeWd1aS5UcmFuc2l0aW9uO1xyXG4gICAgcHJpdmF0ZSB0eXBlOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIGZpc2hJY29uR0xvYWRlcjogZmFpcnlndWkuR0xvYWRlcjtcclxuICAgIHByaXZhdGUgd2FybkdMb2FkZXI6IGZhaXJ5Z3VpLkdMb2FkZXI7XHJcbiAgICBwcml2YXRlIGlzSGF2ZVdhcm5FZmZlY3Q6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgd2FybkVmZmVjdDogTGF5YS5TcHJpdGUzRDsvL+eUseS6jumihOitpuWQjOaXtuWPquiDveaYvuekuuS4gOS4qlxyXG4gICAgcHJpdmF0ZSB3YXJuQXJyOiBBcnJheTxudW1iZXI+ID0gbmV3IEFycmF5PG51bWJlcj4oKTsvL+W9k+WJjemihOitpuS4quaVsFxyXG5cclxuICAgIEluaXQoKSB7XHJcbiAgICAgICAgLy90aGlzLl9IdW50U2NlbmUgPSBuZXcgTGF5YS5TY2VuZTNEKCk7XHJcbiAgICB9XHJcbiAgICAvKiog5riF56m66L+Y5Y6f5pWw5o2uKi9cclxuICAgIHB1YmxpYyBDbGVhckRhdGEoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fRmlzaEluc3RhbmNlRGljdCA9IG51bGw7XHJcbiAgICAgICAgLy90aGlzLkRlbGV0ZUFsbEZpc2hzSW5zKCk7XHJcbiAgICAgICAgdGhpcy5fQnVsbGV0SW5zdGFuY2VEaWN0ID0gbnVsbDtcclxuICAgICAgICAvL3RoaXMuRGVsZXRlQWxsQnVsbGV0c0lucygpO1xyXG4gICAgICAgIC8vdGhpcy5vbkV4aXRXYXJuKCk7XHJcbiAgICAgICAgdGhpcy5fR3VuU2NlbmUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX0h1bnRTY2VuZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fSHVudFNjZW5lQ2FtZXJhID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9GaXNoUHJlZmFiRGljdCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fYnVsbGV0UHJlZmFiRGljdCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fZWZmZWN0UHJlZmFiRGljdCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fYXdhcmRmZmVjdFByZWZhYkRpY3QgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2Nhbm5vblByZWZhYkRpY3QgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2VmZmVjdEluc3RhbmNlRGljdCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fYlNlbGVjdGVkRmlzaCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2JBdXRvQXR0YWNrID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fYkxvY2tBdHRhY2sgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9iVHJhbnNmb3JtID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5vlhaXmjZXnjI7miL/pl7RcclxuICAgICAqL1xyXG4gICAgcHVibGljIEVudGVyUm9vbUluaXQoc2NlbmU6IExheWEuU2NlbmUzRCwgZ3VuU2NlbmU6IExheWEuU2NlbmUzRCkge1xyXG4gICAgICAgIHRoaXMuX0d1blNjZW5lID0gZ3VuU2NlbmU7XHJcbiAgICAgICAgdGhpcy5fR3VuU2NlbmVDYW1lcmEgPSBndW5TY2VuZS5nZXRDaGlsZEJ5TmFtZShcIk1haW4gQ2FtZXJhXCIpIGFzIExheWEuQ2FtZXJhO1xyXG5cclxuICAgICAgICB0aGlzLl9IdW50U2NlbmUgPSBzY2VuZTtcclxuICAgICAgICB0aGlzLl9IdW50U2NlbmVDYW1lcmEgPSBzY2VuZS5nZXRDaGlsZEJ5TmFtZShcIk1haW4gQ2FtZXJhXCIpIGFzIExheWEuQ2FtZXJhO1xyXG4gICAgICAgIC8vdGhpcy5fSHVudFNjZW5lQ2FtZXJhLmZpZWxkT2ZWaWV3ID0gODA7XHJcbiAgICAgICAgdGhpcy5fSHVudFNjZW5lQ2FtZXJhLmNsZWFyRmxhZyA9IDM7XHJcbiAgICAgICAgLy8gY2FtZXJhLmN1bGxpbmdNYXNrID0gKDEgPDwgOCk7XHJcbiAgICAgICAgdGhpcy5fSHVudFNjZW5lQ2FtZXJhLnRyYW5zZm9ybS5wb3NpdGlvbiA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgLTEwKTtcclxuXHJcbiAgICAgICAgdGhpcy5TZXRGaXNoTW9kZWxzKCk7XHJcbiAgICAgICAgdGhpcy5TZXRCdWxsZXRNb2RlbHMoKTtcclxuICAgICAgICB0aGlzLlNldEVmZmVjdE1vZGVscygpO1xyXG4gICAgICAgIHRoaXMuU2V0QXdhcmRFZmZlY3RNb2RlbHMoKTtcclxuICAgICAgICB0aGlzLlNldENhbm5vbk1vZGVscygpO1xyXG4gICAgICAgIEZpc2hDb250cm9sbGVyLkluc3RhbmNlLkluaXQoKTtcclxuICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5Jbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOmAgOWHuuaNleeMjuWcuuaZr+W5tuWbnuaUtuebuOWFs+i1hOa6kCovXHJcbiAgICBwdWJsaWMgRXhpdEh1bnRTY2VuZSgpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuVW5pbml0KCk7XHJcbiAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuVW5pbml0KCk7XHJcblxyXG4gICAgICAgIC8v5Y246L29M2TotYTmupDnvJPlrZhcclxuICAgICAgICB0aGlzLl9IdW50U2NlbmUuZGVzdHJveSh0cnVlKTtcclxuICAgICAgICB0aGlzLm9uRXhpdFdhcm4oKTtcclxuICAgICAgICB0aGlzLl9HdW5TY2VuZS5kZXN0cm95KHRydWUpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcuc3RvcEFsbCgpO1xyXG5cclxuICAgICAgICB0aGlzLkNsZWFyRGF0YSgpO1xyXG5cclxuICAgICAgICBMYXlhLmxvYWRlci5jbGVhclJlcyhDb21tb25Db25zdGFudC5fZ3VuU2NlbmVQYXRoKTtcclxuICAgICAgICBMYXlhLmxvYWRlci5jbGVhclJlcyhDb21tb25Db25zdGFudC5faHVudFNjZW5lUGF0aCk7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIuY2xlYXJSZXMoQ29tbW9uQ29uc3RhbnQuX2h1bnRlckJnUGF0aDEpO1xyXG4gICAgICAgIExheWEubG9hZGVyLmNsZWFyUmVzKENvbW1vbkNvbnN0YW50Ll9odW50ZXJCZ1BhdGgyKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlJlc291cmNlTW5nLlJlbGVhc2VGdWlSZXNCeUdyb3VwTmFtZShDb21tb25Db25zdGFudC5fZ3JvdXBOYW1lX2Z1aVJlcyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bnorDmkp7psbznmoTohJrmnKzkv6Hmga9cclxuICAgICAqL1xyXG4gICAgcHVibGljIEdldEZpc2hCYXNlKG5vZGU6IExheWEuTm9kZSk6IEZpc2hCYXNlIHtcclxuICAgICAgICBsZXQgcGFyZW50ID0gbm9kZS5wYXJlbnQucGFyZW50OyAvL+WFtuS7lumxvFxyXG4gICAgICAgIGlmIChwYXJlbnQgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBwYXJlbnQgPSBub2RlLnBhcmVudDsgLy/nvo7kurrpsbxcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGZpc2ggPSBwYXJlbnQuZ2V0Q29tcG9uZW50KEZpc2hCYXNlKSBhcyBGaXNoQmFzZTtcclxuICAgICAgICByZXR1cm4gZmlzaDtcclxuICAgIH1cclxuXHJcbiAgICAvLyNyZWdpb24g6bG85a+56LGh55qE5a6e5L6L5YyW44CB5Zue5pS25LiO56e76Zmk6bG8XHJcblxyXG4gICAgcHJpdmF0ZSBTZXRGaXNoTW9kZWxzKCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMuX0Zpc2hQcmVmYWJEaWN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX0Zpc2hQcmVmYWJEaWN0ID0gbmV3IExheWEuV2Vha09iamVjdCgpO1xyXG4gICAgICAgICAgICBsZXQgZmlzaE5vZGUgPSB0aGlzLl9IdW50U2NlbmUuZ2V0Q2hpbGRCeU5hbWUoXCJGaXNoTW9kZWxzXCIpO1xyXG4gICAgICAgICAgICBmaXNoTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICBsZXQgbnVtQ2hpbGRyZW4gPSBmaXNoTm9kZS5udW1DaGlsZHJlbjtcclxuICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IG51bUNoaWxkcmVuOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgbmQgPSBmaXNoTm9kZS5nZXRDaGlsZEF0KGluZGV4KTtcclxuICAgICAgICAgICAgICAgIG5kLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmlzaFByZWZhYkRpY3Quc2V0KG5kLm5hbWUsIG5kKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAgKiDojrflj5bpsbzmqKHlnovotYTmupBcclxuICAgICAgICogQHBhcmFtIGZpc2hNb2RlbFR5cGUg6bG855qE5qih5Z6L57G75Z6LSURcclxuICAgICAgICovXHJcbiAgICBwcml2YXRlIEdldEZpc2hNb2RlbChmaXNoTW9kZWxUeXBlOiBudW1iZXIpOiBMYXlhLlNwcml0ZTNEIHtcclxuICAgICAgICBsZXQga2V5O1xyXG4gICAgICAgIGlmIChmaXNoTW9kZWxUeXBlID49IDEwKVxyXG4gICAgICAgICAgICBrZXkgPSBgRmlzaCR7ZmlzaE1vZGVsVHlwZX1gO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAga2V5ID0gYEZpc2gwJHtmaXNoTW9kZWxUeXBlfWA7XHJcbiAgICAgICAgaWYgKHRoaXMuX0Zpc2hQcmVmYWJEaWN0LmhhcyhrZXkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9GaXNoUHJlZmFiRGljdC5nZXQoa2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy53YXJuKGBub3QgZmluZCBmaXNoIG1vZGVsIG9mIGZpc2hJZCR7ZmlzaE1vZGVsVHlwZX1gKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHVibGljIEluc3RhbnRpYXRlRmlzaChmaXNoU3ViVHlwZTogbnVtYmVyLCBwYXJlbnQ/OiBMYXlhLk5vZGUpOiBMYXlhLlNwcml0ZTNEIHtcclxuICAgICAgICBsZXQgZmlzaE1vZGVsVHlwZSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkdldEZpc2hNb2RlbFR5cGUoZmlzaFN1YlR5cGUpO1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMuX0Zpc2hJbnN0YW5jZURpY3QpIHRoaXMuX0Zpc2hJbnN0YW5jZURpY3QgPSB7fTsvL25ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuXHJcbiAgICAgICAgdmFyIGZpc2hJbnM6IExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgdmFyIGZpc2hBcnJheTogQXJyYXk8TGF5YS5TcHJpdGUzRD47XHJcbiAgICAgICAgaWYgKHRoaXMuX0Zpc2hJbnN0YW5jZURpY3RbZmlzaE1vZGVsVHlwZV0pIHtcclxuICAgICAgICAgICAgZmlzaEFycmF5ID0gdGhpcy5fRmlzaEluc3RhbmNlRGljdFtmaXNoTW9kZWxUeXBlXTsvLyBhcyBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICAgICAgdmFyIHRhcnJheSA9IGZpc2hBcnJheS5maWx0ZXIoKHZhbHVlOiBMYXlhLlNwcml0ZTNELCBpbmRleDogbnVtYmVyLCBhcnJheTogTGF5YS5TcHJpdGUzRFtdKSA9PiB2YWx1ZS5hY3RpdmUgPT0gZmFsc2UpIGFzIEFycmF5PExheWEuU3ByaXRlM0Q+O1xyXG4gICAgICAgICAgICBpZiAobnVsbCAhPSB0YXJyYXkgJiYgdGFycmF5Lmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFycmF5WzBdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIGZpc2hBcnJheSA9IG5ldyBBcnJheTxMYXlhLlNwcml0ZTNEPigpO1xyXG5cclxuICAgICAgICBsZXQgcHJlZmFiID0gdGhpcy5HZXRGaXNoTW9kZWwoZmlzaE1vZGVsVHlwZSk7XHJcbiAgICAgICAgZmlzaElucyA9IExheWEuU3ByaXRlM0QuaW5zdGFudGlhdGUocHJlZmFiLCBwYXJlbnQgPT0gbnVsbCA/IHByZWZhYi5wYXJlbnQgOiBwYXJlbnQpO1xyXG4gICAgICAgIGZpc2hBcnJheS5wdXNoKGZpc2hJbnMpO1xyXG4gICAgICAgIHRoaXMuX0Zpc2hJbnN0YW5jZURpY3RbZmlzaE1vZGVsVHlwZV0gPSBmaXNoQXJyYXk7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoZmlzaFN1YlR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzE6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDEpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzI6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDIpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzM6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDMpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzQ6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDQpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzU6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDUpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzY6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDYpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzc6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDcpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzg6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzk6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMDkpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzEwOiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDEwKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuRmlzaF8xMTogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gxMSk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkZpc2hfMTI6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMTIpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzEzOiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDEzKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuRmlzaF8xNDogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gxNCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkZpc2hfMTU6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMTUpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzE2OiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDE2KTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuRmlzaF8xNzogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gxNyk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkZpc2hfMTg6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMTgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5GaXNoXzE5OiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDE5KTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuRmlzaF8yMDogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gyMCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkZyb3plbl9maXNoOiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDIxKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuRmlzaF8yMjogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gyMik7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkdvbGRlbl9TaGFyazogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gyMyk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkdvbGRlbl9EcmFnb246IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMjQpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5NZXJtYWlkOiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaDI1KTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuU2hpcDogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2gyNik7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLktpbmdfZmlzaGYxOiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaEtpbmcxKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjI6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoS2luZzIpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5LaW5nX2Zpc2hmMzogZmlzaElucy5hZGRDb21wb25lbnQoSEYzREZpc2hDbGFzc2VzLkZpc2hLaW5nMyk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLktpbmdfZmlzaGY0OiBmaXNoSW5zLmFkZENvbXBvbmVudChIRjNERmlzaENsYXNzZXMuRmlzaEtpbmc0KTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjU6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoS2luZzUpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5Cb21iX2Zpc2g6IGZpc2hJbnMuYWRkQ29tcG9uZW50KEhGM0RGaXNoQ2xhc3Nlcy5GaXNoMjcpOyBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGZpc2hJbnMuYWRkQ29tcG9uZW50KEZpc2hCYXNlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZpc2hJbnM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmoLnmja7psbzmlbDmja7nsbvlnovojrflj5blr7nlupTnmoTmqKHlnotJRCgg5L+u5pS5dHlwZSDku44yNyjngrjlvLnpsbwpIOS7peWQjiDlvIDlp4sg5a+55bqU55qE5pivIDEgMiAzIDQgNeexu+Wei+mxvOaooeWei+eahOmxvOeOiylcclxuICAgICAqIEBwYXJhbSBmaXNoVHlwZSDpsbznmoTlrZDnsbvlnotcclxuICAgICAqL1xyXG4gICAgcHVibGljIEdldEZpc2hNb2RlbFR5cGUoZmlzaFR5cGU6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgc3dpdGNoIChmaXNoVHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLkJvbWJfZmlzaDpcclxuICAgICAgICAgICAgICAgIGZpc2hUeXBlID0gMjc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5LaW5nX2Zpc2hmMTpcclxuICAgICAgICAgICAgICAgIGZpc2hUeXBlID0gMTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLktpbmdfZmlzaGYyOlxyXG4gICAgICAgICAgICAgICAgZmlzaFR5cGUgPSAyO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRmlzaFN1YnR5cGUuS2luZ19maXNoZjM6XHJcbiAgICAgICAgICAgICAgICBmaXNoVHlwZSA9IDM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5GaXNoU3VidHlwZS5LaW5nX2Zpc2hmNDpcclxuICAgICAgICAgICAgICAgIGZpc2hUeXBlID0gNDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIEVudW1EYXRhLkZpc2hTdWJ0eXBlLktpbmdfZmlzaGY1OlxyXG4gICAgICAgICAgICAgICAgZmlzaFR5cGUgPSA1O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZpc2hUeXBlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6ZSA5q+B5omA5pyJ57yT5a2Y55qE6bG86LWE5rqQXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBEZWxldGVBbGxGaXNoc0lucygpOiB2b2lkIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9GaXNoSW5zdGFuY2VEaWN0KSByZXR1cm47XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5fRmlzaEluc3RhbmNlRGljdCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fRmlzaEluc3RhbmNlRGljdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IHRoaXMuX0Zpc2hJbnN0YW5jZURpY3Rba2V5XSBhcyBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBlbGVtZW50Lmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB0aW5zID0gZWxlbWVudFtpbmRleF0gYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICAgICAgICAgICAgICB0aW5zLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9GaXNoSW5zdGFuY2VEaWN0ID0gbnVsbDtcclxuICAgIH1cclxuICAgIC8vI2VuZHJlZ2lvblxyXG5cclxuICAgIC8vI3JlZ2lvbiAg5a2Q5by55a+56LGh55qE5a6e5L6L5YyWICDnvJPlrZjkuI7lm57mlLZcclxuXHJcbiAgICAvKiog57yT5a2Y54Ku5Y+w6aKE5Yi25Lu25YiX6KGoKi9cclxuICAgIHByaXZhdGUgU2V0Q2Fubm9uTW9kZWxzKCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMuX2Nhbm5vblByZWZhYkRpY3QpIHtcclxuICAgICAgICAgICAgdGhpcy5fY2Fubm9uUHJlZmFiRGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLl9HdW5TY2VuZS5nZXRDaGlsZEJ5TmFtZShcIkNhbm5vbnNcIik7XHJcbiAgICAgICAgICAgIGxldCBudW1DaGlsZHJlbiA9IG51bGwgIT0gbm9kZSA/IG5vZGUubnVtQ2hpbGRyZW4gOiAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbnVtQ2hpbGRyZW47IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBuZCA9IG5vZGUuZ2V0Q2hpbGRBdChpbmRleCk7XHJcbiAgICAgICAgICAgICAgICBuZC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Nhbm5vblByZWZhYkRpY3Quc2V0KG5kLm5hbWUsIG5kKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W54Ku5Y+w6aKE5Yi25Lu26LWE5rqQXHJcbiAgICAgKiBAcGFyYW0gY2Fubm9uUmVzVHlwZSDngq7lj7DotYTmupDnsbvlnotJRCgxXFwyXFwzKVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgR2V0Q2Fubm9uUHJlZmFiKGNhbm5vblJlc1R5cGU6IG51bWJlcik6IExheWEuU3ByaXRlM0Qge1xyXG4gICAgICAgIGxldCBrZXk7XHJcbiAgICAgICAga2V5ID0gYENhbm5vbiR7Y2Fubm9uUmVzVHlwZX1gO1xyXG4gICAgICAgIGlmICh0aGlzLl9jYW5ub25QcmVmYWJEaWN0LmhhcyhrZXkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYW5ub25QcmVmYWJEaWN0LmdldChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLndhcm4oYG5vdCBmaW5kIHByZWZhYiBtb2RlbCBvZiBjYW5ub25SZXNUeXBlICR7Y2Fubm9uUmVzVHlwZX1gKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqIOe8k+WtmOWtkOW8uemihOWItuS7tuWIl+ihqCovXHJcbiAgICBwcml2YXRlIFNldEJ1bGxldE1vZGVscygpOiB2b2lkIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9idWxsZXRQcmVmYWJEaWN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1bGxldFByZWZhYkRpY3QgPSBuZXcgTGF5YS5XZWFrT2JqZWN0KCk7XHJcbiAgICAgICAgICAgIGxldCBidWxsZXROb2RlID0gdGhpcy5fSHVudFNjZW5lLmdldENoaWxkQnlOYW1lKFwiQnVsbGV0c1wiKTtcclxuICAgICAgICAgICAgbGV0IG51bUNoaWxkcmVuID0gYnVsbGV0Tm9kZS5udW1DaGlsZHJlbjtcclxuICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IG51bUNoaWxkcmVuOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgbmQgPSBidWxsZXROb2RlLmdldENoaWxkQXQoaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgLy8gbmQuZ2V0Q2hpbGRBdCgwKS5nZXRDaGlsZEF0KDApLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgbmQuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9idWxsZXRQcmVmYWJEaWN0LnNldChuZC5uYW1lLCBuZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAgICog6I635Y+W5a2Q5by56aKE5Yi25Lu26LWE5rqQXHJcbiAgICAgICAqIEBwYXJhbSBidWxsZXRSZXNUeXBlIOWtkOW8uei1hOa6kOexu+Wei0lEXHJcbiAgICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHZXRCdWxsZXRQcmVmYWIoYnVsbGV0UmVzVHlwZTogbnVtYmVyKTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICAgICAgbGV0IGtleTtcclxuICAgICAgICBrZXkgPSBgQnVsbGV0UHJlZmFiJHtidWxsZXRSZXNUeXBlfWA7XHJcbiAgICAgICAgaWYgKHRoaXMuX2J1bGxldFByZWZhYkRpY3QuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2J1bGxldFByZWZhYkRpY3QuZ2V0KGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMud2Fybihgbm90IGZpbmQgQnVsbGV0UHJlZmFiIG1vZGVsIG9mIGJ1bGxldFJlc1R5cGUgJHtidWxsZXRSZXNUeXBlfWApO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSBidWxsZXRUeXBlIOWtkOW8uei1hOa6kOexu+Wei1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgSW5zdGFudGlhdGVCdWxsZXQoYnVsbGV0VHlwZTogbnVtYmVyKTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fQnVsbGV0SW5zdGFuY2VEaWN0KSB0aGlzLl9CdWxsZXRJbnN0YW5jZURpY3QgPSB7fTsvL25ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuXHJcbiAgICAgICAgdmFyIGNsb25lSW5zOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHZhciBjbG9uZUFycmF5OiBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICBpZiAodGhpcy5fQnVsbGV0SW5zdGFuY2VEaWN0W2J1bGxldFR5cGVdKSB7XHJcbiAgICAgICAgICAgIGNsb25lQXJyYXkgPSB0aGlzLl9CdWxsZXRJbnN0YW5jZURpY3RbYnVsbGV0VHlwZV07Ly8gYXMgQXJyYXk8TGF5YS5TcHJpdGUzRD47XHJcbiAgICAgICAgICAgIHZhciB0YXJyYXkgPSBjbG9uZUFycmF5LmZpbHRlcigodmFsdWU6IExheWEuU3ByaXRlM0QsIGluZGV4OiBudW1iZXIsIGFycmF5OiBMYXlhLlNwcml0ZTNEW10pID0+IHZhbHVlLmFjdGl2ZSA9PSBmYWxzZSkgYXMgQXJyYXk8TGF5YS5TcHJpdGUzRD47XHJcbiAgICAgICAgICAgIGlmIChudWxsICE9IHRhcnJheSAmJiB0YXJyYXkubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgICAgIHJldHVybiB0YXJyYXlbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgY2xvbmVBcnJheSA9IG5ldyBBcnJheTxMYXlhLlNwcml0ZTNEPigpO1xyXG5cclxuICAgICAgICBsZXQgcHJlZmFiID0gdGhpcy5HZXRCdWxsZXRQcmVmYWIoYnVsbGV0VHlwZSk7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gcHJlZmFiKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIGNsb25lSW5zID0gTGF5YS5TcHJpdGUzRC5pbnN0YW50aWF0ZShwcmVmYWIsIHByZWZhYi5wYXJlbnQpO1xyXG4gICAgICAgIGNsb25lQXJyYXkucHVzaChjbG9uZUlucyk7XHJcbiAgICAgICAgdGhpcy5fQnVsbGV0SW5zdGFuY2VEaWN0W2J1bGxldFR5cGVdID0gY2xvbmVBcnJheTtcclxuICAgICAgICBzd2l0Y2ggKGJ1bGxldFR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSAxOiBjbG9uZUlucy5hZGRDb21wb25lbnQoSEYzREJ1bGxldENsYXNzZXMuQnVsbGV0MDEpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOiBjbG9uZUlucy5hZGRDb21wb25lbnQoSEYzREJ1bGxldENsYXNzZXMuQnVsbGV0MDIpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOiBjbG9uZUlucy5hZGRDb21wb25lbnQoSEYzREJ1bGxldENsYXNzZXMuQnVsbGV0MDMpOyBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGNsb25lSW5zLmFkZENvbXBvbmVudChCdWxsZXRCYXNlKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY2xvbmVJbnM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmUgOavgeaJgOaciee8k+WtmOeahOWtkOW8uei1hOa6kFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgRGVsZXRlQWxsQnVsbGV0c0lucygpOiB2b2lkIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9CdWxsZXRJbnN0YW5jZURpY3QpIHJldHVybjtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLl9CdWxsZXRJbnN0YW5jZURpY3QpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX0J1bGxldEluc3RhbmNlRGljdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IHRoaXMuX0J1bGxldEluc3RhbmNlRGljdFtrZXldIGFzIEFycmF5PExheWEuU3ByaXRlM0Q+O1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGVsZW1lbnQubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRpbnMgPSBlbGVtZW50W2luZGV4XSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgICAgICAgICAgICAgIHRpbnMuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgPSAwO1xyXG4gICAgICAgIHRoaXMuX0J1bGxldEluc3RhbmNlRGljdCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uXHJcblxyXG5cclxuICAgIC8vI3JlZ2lvbiAg54m55pWI5a+56LGh55qE5a6e5L6L5YyWICDnvJPlrZjkuI7lm57mlLZcclxuXHJcbiAgICAvKiog57yT5a2Y54m55pWI6aKE5Yi25Lu25YiX6KGoKi9cclxuICAgIHByaXZhdGUgU2V0RWZmZWN0TW9kZWxzKCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMuX2VmZmVjdFByZWZhYkRpY3QpIHtcclxuICAgICAgICAgICAgdGhpcy5fZWZmZWN0UHJlZmFiRGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLl9IdW50U2NlbmUuZ2V0Q2hpbGRCeU5hbWUoXCJFZmZlY3RzXCIpO1xyXG4gICAgICAgICAgICBsZXQgbnVtQ2hpbGRyZW4gPSBub2RlLm51bUNoaWxkcmVuO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbnVtQ2hpbGRyZW47IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBuZCA9IG5vZGUuZ2V0Q2hpbGRBdChpbmRleCk7XHJcbiAgICAgICAgICAgICAgICBuZC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VmZmVjdFByZWZhYkRpY3Quc2V0KG5kLm5hbWUsIG5kKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAgKiDojrflj5bmjZXnjI7lnLrmma/nibnmlYjotYTmupDpooTliLbku7ZcclxuICAgICAgICogQHBhcmFtIGVmZmVjdFJlc1BhdGgg5o2V54yO5Zy65pmv54m55pWI6LWE5rqQXHJcbiAgICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHZXRFZmZlY3RQcmVmYWIoZWZmZWN0UmVzUGF0aDogc3RyaW5nKTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICAgICAgbGV0IGtleSA9IGVmZmVjdFJlc1BhdGg7XHJcbiAgICAgICAgaWYgKHRoaXMuX2VmZmVjdFByZWZhYkRpY3QuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VmZmVjdFByZWZhYkRpY3QuZ2V0KGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMud2Fybihgbm90IGZpbmQgZWZmZWN0UmVzIG1vZGVsIG9mIHBhdGggJHtlZmZlY3RSZXNQYXRofWApO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDnvJPlrZjniIbph5HluIHnibnmlYjpooTliLbku7bliJfooagqL1xyXG4gICAgcHJpdmF0ZSBTZXRBd2FyZEVmZmVjdE1vZGVscygpOiB2b2lkIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9hd2FyZGZmZWN0UHJlZmFiRGljdCkge1xyXG4gICAgICAgICAgICB0aGlzLl9hd2FyZGZmZWN0UHJlZmFiRGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLl9HdW5TY2VuZS5nZXRDaGlsZEJ5TmFtZShcIkVmZmVjdHNcIik7XHJcbiAgICAgICAgICAgIGxldCBudW1DaGlsZHJlbiA9IG5vZGUubnVtQ2hpbGRyZW47XHJcbiAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBudW1DaGlsZHJlbjsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IG5kID0gbm9kZS5nZXRDaGlsZEF0KGluZGV4KTtcclxuICAgICAgICAgICAgICAgIG5kLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYXdhcmRmZmVjdFByZWZhYkRpY3Quc2V0KG5kLm5hbWUsIG5kKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAgKiDojrflj5bmjZXnjI7lnLrmma/niIbph5HluIHnibnmlYjotYTmupDpooTliLbku7ZcclxuICAgICAgICogQHBhcmFtIGVmZmVjdFJlc1BhdGgg5o2V54yO5Zy65pmv54m55pWI6LWE5rqQXHJcbiAgICAgICAqL1xyXG4gICAgcHJpdmF0ZSBHZXRBd2FyZEVmZmVjdFByZWZhYihlZmZlY3RSZXNQYXRoOiBzdHJpbmcpOiBMYXlhLlNwcml0ZTNEIHtcclxuICAgICAgICBsZXQga2V5ID0gZWZmZWN0UmVzUGF0aDtcclxuICAgICAgICBpZiAodGhpcy5fYXdhcmRmZmVjdFByZWZhYkRpY3QuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2F3YXJkZmZlY3RQcmVmYWJEaWN0LmdldChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLndhcm4oYG5vdCBmaW5kIGVmZmVjdFJlcyBtb2RlbCBvZiBwYXRoICR7ZWZmZWN0UmVzUGF0aH1gKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWunuS+i+WMluaNleeMjuWcuuaZr+S4reeahOeJueaViOWvueixoVxyXG4gICAgICogQHBhcmFtIGVmZmVjdFJlc1BhdGgg54m55pWI6LWE5rqQ5ZCN56ewXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBJbnN0YW50aWF0ZUVmZmVjdChlZmZlY3RSZXNQYXRoOiBzdHJpbmcpOiBMYXlhLlNwcml0ZTNEIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9lZmZlY3RJbnN0YW5jZURpY3QpIHRoaXMuX2VmZmVjdEluc3RhbmNlRGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuXHJcbiAgICAgICAgdmFyIGNsb25lSW5zOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHZhciBjbG9uZUFycmF5OiBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICBpZiAodGhpcy5fZWZmZWN0SW5zdGFuY2VEaWN0LmhhcyhlZmZlY3RSZXNQYXRoKSkge1xyXG4gICAgICAgICAgICBjbG9uZUFycmF5ID0gdGhpcy5fZWZmZWN0SW5zdGFuY2VEaWN0LmdldChlZmZlY3RSZXNQYXRoKSBhcyBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICAgICAgdmFyIHRhcnJheSA9IGNsb25lQXJyYXkuZmlsdGVyKCh2YWx1ZTogTGF5YS5TcHJpdGUzRCwgaW5kZXg6IG51bWJlciwgYXJyYXk6IExheWEuU3ByaXRlM0RbXSkgPT4gdmFsdWUuYWN0aXZlID09IGZhbHNlKSBhcyBBcnJheTxMYXlhLlNwcml0ZTNEPjtcclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gdGFycmF5ICYmIHRhcnJheS5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcnJheVswXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNsb25lQXJyYXkgPSBuZXcgQXJyYXk8TGF5YS5TcHJpdGUzRD4oKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNsb25lSW5zID0gdGhpcy5DcmVhdGVFZmZlY3QoZWZmZWN0UmVzUGF0aCwgY2xvbmVBcnJheSk7XHJcblxyXG4gICAgICAgIHJldHVybiBjbG9uZUlucztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIENyZWF0ZUVmZmVjdChlZmZlY3RSZXNQYXRoOiBzdHJpbmcsIGNsb25lQXJyYXk6IEFycmF5PExheWEuU3ByaXRlM0Q+KTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICAgICAgdmFyIGNsb25lSW5zOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIGxldCBwcmVmYWIgPSB0aGlzLkdldEVmZmVjdFByZWZhYihlZmZlY3RSZXNQYXRoKTtcclxuICAgICAgICBpZiAocHJlZmFiID09IG51bGwpIHtcclxuICAgICAgICAgICAgcHJlZmFiID0gdGhpcy5HZXRBd2FyZEVmZmVjdFByZWZhYihlZmZlY3RSZXNQYXRoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG51bGwgPT0gcHJlZmFiKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgY2xvbmVJbnMgPSBMYXlhLlNwcml0ZTNELmluc3RhbnRpYXRlKHByZWZhYiwgcHJlZmFiLnBhcmVudCk7XHJcbiAgICAgICAgY2xvbmVBcnJheS5wdXNoKGNsb25lSW5zKTtcclxuICAgICAgICB0aGlzLl9lZmZlY3RJbnN0YW5jZURpY3Quc2V0KGVmZmVjdFJlc1BhdGgsIGNsb25lQXJyYXkpO1xyXG4gICAgICAgIHJldHVybiBjbG9uZUlucztcclxuICAgIH1cclxuICAgIC8vI2VuZHJlZ2lvblxyXG5cclxuICAgIC8vI3JlZ2lvbiDplIHlrprmjZXpsbxcclxuICAgIHB1YmxpYyBHZXRGaXNoSWQocG9zWCwgcG9zWSkge1xyXG4gICAgICAgIC8v5LuO5bGP5bmV56m66Ze055Sf5oiQ5bCE57q/XHJcbiAgICAgICAgbGV0IHJheTogTGF5YS5SYXkgPSBuZXcgTGF5YS5SYXkobmV3IExheWEuVmVjdG9yMygwLCAwLCAwKSwgbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKSk7XHJcbiAgICAgICAgdGhpcy5fSHVudFNjZW5lQ2FtZXJhLnZpZXdwb3J0UG9pbnRUb1JheShuZXcgTGF5YS5WZWN0b3IyKHBvc1gsIHBvc1kpLCByYXkpO1xyXG4gICAgICAgIC8v5ou/5Yiw5bCE57q/56Kw5pKe55qE54mp5L2TXHJcbiAgICAgICAgbGV0IG91dEhpdEluZm86IExheWEuSGl0UmVzdWx0ID0gbmV3IExheWEuSGl0UmVzdWx0KCk7XHJcbiAgICAgICAgdGhpcy5fSHVudFNjZW5lLnBoeXNpY3NTaW11bGF0aW9uLnJheUNhc3QocmF5LCBvdXRIaXRJbmZvKTtcclxuICAgICAgICAvL+WmguaenOeisOaSnuWIsOeJqeS9k1xyXG4gICAgICAgIGlmIChvdXRIaXRJbmZvLnN1Y2NlZWRlZCkge1xyXG4gICAgICAgICAgICBsZXQgY29sTGF5ZXIgPSBvdXRIaXRJbmZvLmNvbGxpZGVyLm93bmVyIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgICAgIGlmIChjb2xMYXllci5sYXllciA9PSBDb21tb25Db25zdGFudC5MYXllci5GaXNoKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZmlzaDogRmlzaEJhc2UgPSB0aGlzLkdldEZpc2hCYXNlKG91dEhpdEluZm8uY29sbGlkZXIub3duZXIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpc2ggPyBmaXNoLl9NRmlzaEluZm8uX21GaXNoSWQgOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gICAgcHVibGljIEdldEZpc2hQb2ludEJ5SWQoaWQ6IHN0cmluZykge1xyXG4gICAgICAgIGxldCBzY3JpcHQ6IEZpc2hCYXNlID0gRmlzaENvbnRyb2xsZXIuSW5zdGFuY2UuRmlzaE9iakRpY3RbaWRdO1xyXG4gICAgICAgIGlmIChzY3JpcHQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgb3V0UG9zID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgICAgICAgICB0aGlzLl9IdW50U2NlbmVDYW1lcmEudmlld3BvcnQucHJvamVjdChzY3JpcHQuX093bmVyUG9zLCB0aGlzLl9IdW50U2NlbmVDYW1lcmEucHJvamVjdGlvblZpZXdNYXRyaXgsIG91dFBvcyk7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgTGF5YS5Qb2ludChvdXRQb3MueCwgb3V0UG9zLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICog6aKE6K2m5pi+56S6XHJcbiAgICAqIEBwYXJhbSB0eXBlIFxyXG4gICAgKi9cclxuICAgIHB1YmxpYyB3YXJuU2hvdyh0eXBlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLpooTorabmmL7npLpcIik7XHJcbiAgICAgICAgaWYgKCFMYXlhLnN0YWdlLmlzVmlzaWJpbGl0eSkgcmV0dXJuOy8v5YiH5o2i5Yiw5ZCO5Y+w77yM5YGc5q2i6KGo546w5pWI5p6cXHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fR3VuU2NlbmUpIHJldHVybjtcclxuICAgICAgICBpZiAodHlwZSA9PSAwKSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU291bmRNbmcucGxheVNvdW5kKFNvdW5kLnNvdW5kSGVhZEFyci5rZXlTb3VuZEhlYWQsIFNvdW5kLnNvdW5kS2V5QXJyLndhdmUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb3VuZE1uZy5wbGF5U291bmQoU291bmQuc291bmRIZWFkQXJyLmtleVNvdW5kSGVhZCwgU291bmQuc291bmRLZXlBcnIud2Fybik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy53YXJuQ29tID09IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5SZXNvdXJjZU1uZy5sb2FkVUkoQ29tbW9uQ29uc3RhbnQuX2Z1aVdhcm5QYXRoLmltYWdlLCBDb21tb25Db25zdGFudC5fZnVpV2FyblBhdGguZnVpLCB0aGlzLCB0aGlzLm9uTG9hZFdhcm5pbmcpO1xyXG4gICAgICAgICAgICBMYXlhLlNwcml0ZTNELmxvYWQoQ29tbW9uQ29uc3RhbnQuX3dhcm5QYXRoX2xoLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChzOiBMYXlhLlNwcml0ZTNEKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndhcm5FZmZlY3QgPSBzO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fR3VuU2NlbmUuYWRkQ2hpbGQocyk7XHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHsvL+WmguaenOW9k+WJjeaciemihOitpuato+WcqOaSreaUvuW7tui/n+aSreaUvlxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNIYXZlV2FybkVmZmVjdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy53YXJuQXJyLnB1c2godHlwZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNIYXZlV2FybkVmZmVjdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9HdW5TY2VuZS5hZGRDaGlsZCh0aGlzLndhcm5FZmZlY3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZhaXJ5Z3VpLkdSb290Lmluc3QuYWRkQ2hpbGQodGhpcy53YXJuQ29tKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkljb25VcmwoKTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53YXJuQ29tID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzSGF2ZVdhcm5FZmZlY3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9vemihOitpui1hOa6kFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTG9hZFdhcm5pbmcoKTogdm9pZCB7XHJcblxyXG4gICAgICAgIHRoaXMud2FybkNvbSA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuZ2V0TWFpbkNvbShDb21tb25Db25zdGFudC5fZnVpV2FyblBhdGguUGFja2FnZSwgXCJXYXJuaW5nXCIsIFwid2FybmluZ1BhbmVsXCIpO1xyXG4gICAgICAgIHRoaXMud2FyblRyYW4gPSB0aGlzLndhcm5Db20uZ2V0VHJhbnNpdGlvbihcInQwXCIpO1xyXG4gICAgICAgIHRoaXMuZmlzaEljb25HTG9hZGVyID0gdGhpcy53YXJuQ29tLmdldENoaWxkKFwiZmlzaEljb25Mb2FkZXJcIikuYXNMb2FkZXI7XHJcbiAgICAgICAgdGhpcy53YXJuR0xvYWRlciA9IHRoaXMud2FybkNvbS5nZXRDaGlsZChcIndhcm5Mb2FkZXJcIikuYXNMb2FkZXI7XHJcbiAgICAgICAgdGhpcy5JY29uVXJsKCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6aKE6K2m5Zu+5qCHXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgSWNvblVybCgpOiB2b2lkIHtcclxuICAgICAgICBmYWlyeWd1aS5HUm9vdC5pbnN0LnNldENoaWxkSW5kZXgodGhpcy53YXJuQ29tLCAtMSk7XHJcbiAgICAgICAgdGhpcy5maXNoSWNvbkdMb2FkZXIuaWNvbiA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5nZXRJdGVtVVJMKFwiV2FybmluZ1wiLCBcImZpc2hcIiArIHRoaXMudHlwZSk7XHJcbiAgICAgICAgdGhpcy53YXJuR0xvYWRlci5pY29uID0gZmFpcnlndWkuVUlQYWNrYWdlLmdldEl0ZW1VUkwoXCJXYXJuaW5nXCIsIFwid2FyblwiICsgdGhpcy50eXBlKTtcclxuICAgICAgICB0aGlzLndhcm5UcmFuLnBsYXkoTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uQ2xvc2VXYXJuKSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFs+mXremihOitplxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgb25DbG9zZVdhcm4oKTogdm9pZCB7XHJcbiAgICAgICAgZmFpcnlndWkuR1Jvb3QuaW5zdC5yZW1vdmVDaGlsZCh0aGlzLndhcm5Db20pO1xyXG4gICAgICAgIHRoaXMuX0d1blNjZW5lLnJlbW92ZUNoaWxkKHRoaXMud2FybkVmZmVjdCk7XHJcbiAgICAgICAgdGhpcy5pc0hhdmVXYXJuRWZmZWN0ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMud2FybkFyci5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2FyblNob3codGhpcy53YXJuQXJyLnNoaWZ0KCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6YCA5oi/5YmU6Zmk6aKE6K2mXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25FeGl0V2FybigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLndhcm5BcnIubGVuZ3RoID0gMDtcclxuICAgICAgICB0aGlzLm9uQ2xvc2VXYXJuKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQmFzZU1hbmFnZXIgZnJvbSBcIi4vQmFzZU1hbmFnZXJcIjtcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPdGhlck1hbmFnZXIgZXh0ZW5kcyBCYXNlTWFuYWdlciB7XHJcbiAgICAvKirmtLvliqjmmK/lkKbnu5PmnZ8gKi9cclxuICAgIHB1YmxpYyBpc0FjdEVuZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIC8qKuaYr+WQpuacieaIkOmVv+WfuumHkemdouadvyAqL1xyXG4gICAgcHVibGljIGlzSGF2ZUdyb3d0aEZ1bmRQYW5lID0gZmFsc2U7XHJcbiAgICAvKirmmK/lkKbmnInnrYnnuqfln7rph5HpnaLmnb8gKi9cclxuICAgIHB1YmxpYyBpc0hhdmVMZXZlbEJvbnVzUGFuZWwgPSBmYWxzZTtcclxuICAgIC8qKuaYr+WQpuacieS4quS6uuaIkOmVv+S/oeaBr+mdouadvyAqL1xyXG4gICAgcHVibGljIGlzSGF2ZVBlcnNvbkluZm9QYW5lbCA9IGZhbHNlO1xyXG4gICAgLyoq5piv5ZCm5pyJ5biu5Yqp55WM6Z2iICovXHJcbiAgICBwdWJsaWMgaXNIYXZlSGVscFBhbmVsID0gZmFsc2U7XHJcbiAgICAvKirmmK/lkKbmnInmjpLooYzmppznlYzpnaIgKi9cclxuICAgIHB1YmxpYyBpc0hhdmVSYW5rUGFuZWwgPSBmYWxzZTtcclxuICAgIC8qKuaYr+WQpuacieiuvue9rumdouadvyAqL1xyXG4gICAgcHVibGljIGlzSGF2ZVNldHRpbmdQYW5lbCA9IGZhbHNlO1xyXG4gICAgLyoq5piv5ZCm5pyJanDpnaLmnb8gKi9cclxuICAgIHB1YmxpYyBpc0hhdmVKcFBhbmVsID0gZmFsc2U7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfTtcclxuICAgIHB1YmxpYyBJbml0KCkge1xyXG5cclxuICAgIH1cclxufSIsImltcG9ydCBCYXNlTWFuYWdlciBmcm9tIFwiLi9CYXNlTWFuYWdlclwiO1xyXG5pbXBvcnQgTG9hZGluZ1BhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0xvYWRpbmdQYW5lbFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IEhhbmRsZXIgPSBsYXlhLnV0aWxzLkhhbmRsZXI7XHJcbmltcG9ydCBMb2FkZXIgPSBsYXlhLm5ldC5Mb2FkZXI7XHJcbmltcG9ydCBDb21tb25Db25zdGFudCBmcm9tIFwiLi4vY29uc3RhbnQvQ29tbW9uQ29uc3RhbnRcIjtcclxuLyoqXHJcbiogbmFtZSBcclxuKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc291cmNlTWFuZ2VyIGV4dGVuZHMgQmFzZU1hbmFnZXIge1xyXG5cclxuICAgIHB1YmxpYyBMb2FkQXNzZXRzMkQocmVzVXJsLCBjYWxsQmFjazogRnVuY3Rpb24pIHtcclxuICAgICAgICBMYXlhLmxvYWRlci5sb2FkKHJlc1VybCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBjYWxsQmFjaykpO1xyXG4gICAgfVxyXG5cclxuICAgIC8v6YeK5pS+MmTotYTmupAgICAgIGFzc2V0c1VybO+8muWbvumbhui1hOa6kOi3r+W+hFxyXG4gICAgcHVibGljIFJlbGVhc2VBbGwyRChhc3NldHNVcmw6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIExheWEubG9hZGVyLmNsZWFyUmVzKGFzc2V0c1VybCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb1VSei1hOa6kFxyXG4gICAgICogQHBhcmFtIGltYWdlIFxyXG4gICAgICogQHBhcmFtIGZ1aSBcclxuICAgICAqIEBwYXJhbSBsb2FkIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbG9hZFVJKGltYWdlOiBzdHJpbmcsIGZ1aTogc3RyaW5nLCBjYWxsOiBhbnksIGxvYWQ6IEZ1bmN0aW9uKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChbXHJcbiAgICAgICAgICAgIHsgdXJsOiBpbWFnZSwgdHlwZTogTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBmdWksIHR5cGU6IExvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICBdLCBIYW5kbGVyLmNyZWF0ZShjYWxsLCBsb2FkKSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veS4u+mdouadv1xyXG4gICAgICogQHBhcmFtIHBhY2sgXHJcbiAgICAgKiBAcGFyYW0gcGFuZWwgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRNYWluQ29tKHBhY2s6IHN0cmluZywgcGFja05hbWU6IHN0cmluZywgcGFuZWw6IHN0cmluZyk6IGZhaXJ5Z3VpLkdDb21wb25lbnQge1xyXG4gICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKHBhY2spO1xyXG4gICAgICAgIHZhciBtYWluQ29tOiBmYWlyeWd1aS5HQ29tcG9uZW50ID0gbnVsbDtcclxuICAgICAgICAvLyAvLyBjb25zb2xlLmxvZyhcInBhY2tOYW1lXCIpO1xyXG4gICAgICAgIC8vIC8vIGNvbnNvbGUubG9nKHBhY2tOYW1lKTtcclxuICAgICAgICAvLyAvLyBjb25zb2xlLmxvZyhwYW5lbCk7XHJcbiAgICAgICAgbWFpbkNvbSA9IGZhaXJ5Z3VpLlVJUGFja2FnZS5jcmVhdGVPYmplY3QocGFja05hbWUsIHBhbmVsKS5hc0NvbTtcclxuICAgICAgICBtYWluQ29tLnNldFNpemUoZmFpcnlndWkuR1Jvb3QuaW5zdC53aWR0aCwgZmFpcnlndWkuR1Jvb3QuaW5zdC5oZWlnaHQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQWRkRlVJKG1haW5Db20pO1xyXG4gICAgICAgIHJldHVybiBtYWluQ29tO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog56e76ZmkVUnljIVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbW92ZVVJUGFja2FnZShwYWNrOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBmYWlyeWd1aS5VSVBhY2thZ2UucmVtb3ZlUGFja2FnZShwYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOS7juWvueixoeaxoOS4reiOt+W+l+WvueixoSDmsqHmnInor6Xlr7nosaEg6Ieq5Yqo5Yib5bu65a+56LGh5rGgXHJcbiAgICAgKiBAcGFyYW0gcyBcclxuICAgICAqIEBwYXJhbSBjbGEgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRQb29sT2JqZWN0KHM6IHN0cmluZywgY2xhOiBhbnkpOiBhbnkge1xyXG4gICAgICAgIExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhzLCBjbGEpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDlm57mlLbliLDlr7nosaHmsaDkuK1cclxuICAgICAqIEBwYXJhbSBvYmogXHJcbiAgICAgKiBAcGFyYW0gcyBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbW92ZVBvb2xPYmplY3Qob2JqOiBhbnksIHM6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIExheWEuc3RhZ2UucmVtb3ZlQ2hpbGQob2JqKTtcclxuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihzLCBvYmopO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDpooTliqDovb3otYTmupBcclxuICAgICAqIEBwYXJhbSByZXNVcmwg6LWE5rqQ6Lev5YqyXHJcbiAgICAgKiBAcGFyYW0gbG9hZFJlc0NhbGxiYWNrIOWKoOi9veWujOaIkOeahOWbnuiwgyBcclxuICAgICAqL1xyXG4gICAgcHVibGljIFByZWxvYWRpbmdSZXM8VD4ocmVzVXJsLCByZXNUeXBlOiBzdHJpbmcsIGxvYWRSZXNDYWxsYmFjazogRnVuY3Rpb24pIHtcclxuICAgICAgICBMYXlhLmxvYWRlci5sb2FkKFt7IHVybDogcmVzVXJsLCB0eXBlOiByZXNUeXBlIH1dLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICh1cmw6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgICAgICAgICAgbGV0IGxvYWRlZFJlcyA9IExheWEubG9hZGVyLmdldFJlcyh1cmwpIGFzIFQ7XHJcbiAgICAgICAgICAgICAgICBsb2FkUmVzQ2FsbGJhY2sobG9hZGVkUmVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLCBbcmVzVXJsXSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkQXNzZXRzM0Q8VD4ocmVzVXJsLCBsb2FkUmVzQ2FsbGJhY2s6IEZ1bmN0aW9uLCBwYXJhbTogYW55W10gPSBudWxsKSB7XHJcbiAgICAgICAgTGF5YS5TY2VuZTNELmxvYWQocmVzVXJsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChyZXM6IFQpOiB2b2lkIHtcclxuICAgICAgICAgICAgbG9hZFJlc0NhbGxiYWNrKHJlcywgcGFyYW0pO1xyXG4gICAgICAgIH0pKTtcclxuICAgIH1cclxuICAgIC8v5Yqg6L295qih5Z6L5o6l5Y+j77yI6aKE5Yqg6L2977yJXHJcbiAgICBwdWJsaWMgTG9hZFNwcml0ZTNEPFQ+KHJlc1VybCwgbG9hZFJlc0NhbGxiYWNrOiBGdW5jdGlvbiwgcGFyYW06IGFueVtdID0gbnVsbCkge1xyXG4gICAgICAgIExheWEuU3ByaXRlM0QubG9hZChyZXNVcmwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKHJlczogVCk6IHZvaWQge1xyXG4gICAgICAgICAgICBsb2FkUmVzQ2FsbGJhY2socmVzLCBwYXJhbSk7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG4gICAgLy/lrp7kvovljJbnvJPlrZjlr7nosaFcclxuICAgIHB1YmxpYyBDbG9uZVNwcml0ZTNEKFNwM0Q6IExheWEuU3ByaXRlM0QsIHBhcmVudDogTGF5YS5Ob2RlKTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICAgICAgdmFyIHMzRDogTGF5YS5TcHJpdGUzRCA9IExheWEuU3ByaXRlM0QuaW5zdGFudGlhdGUoU3AzRCwgcGFyZW50KSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHMzRC50cmFuc2Zvcm0ubG9jYWxQb3NpdGlvbiA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgczNELnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXIgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIHMzRC50cmFuc2Zvcm0ubG9jYWxTY2FsZSA9IExheWEuVmVjdG9yMy5PTkU7XHJcbiAgICAgICAgcmV0dXJuIHMzRDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDph4rmlL7lnLrmma/miYDmnInotYTmupAgICAgIGFzc2V0c1VybO+8muWcuuaZr+eahGpzb27mlofku7bot6/lvoRcclxuICAgICAqIEBwYXJhbSBhc3NldHNVcmwgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBSZWxlYXNlQWxsM0QoYXNzZXRzVXJsOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICAvL+WKoOi9veebmOmHiuaUvueahOi1hOa6kOmFjee9ruihqFxyXG4gICAgICAgIExheWEubG9hZGVyLmxvYWQoW3sgdXJsOiBhc3NldHNVcmwsIHR5cGU6IExheWEuTG9hZGVyLkpTT04gfV0sXHJcbiAgICAgICAgICAgIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5PbkFzc2V0c09LLCBbYXNzZXRzVXJsXSkpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBPbkFzc2V0c09LKGFzc2V0c1VybDogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgLy/ojrflj5bliqDovb3nmoTmlbDmja7vvIhKc29u5pWw57uE6L2s5YyW5oiQ5pWw57uE77yJXHJcbiAgICAgICAgdmFyIGFycjogYW55ID0gTGF5YS5sb2FkZXIuZ2V0UmVzKGFzc2V0c1VybCk7XHJcbiAgICAgICAgZm9yICh2YXIgaTogbnVtYmVyID0gYXJyLmxlbmd0aCAtIDE7IGkgPiAtMTsgaS0tKSB7XHJcbiAgICAgICAgICAgIC8v5qC55o2u6LWE5rqQ6Lev5b6E6I635Y+W6LWE5rqQ77yIUmVzb3VyY2XkuLrmnZDotKjjgIHotLTlm77jgIHnvZHmoLznrYnnmoTln7rnsbvvvIlcclxuICAgICAgICAgICAgdmFyIHJlc291cmNlOiBMYXlhLlJlc291cmNlID0gTGF5YS5sb2FkZXIuZ2V0UmVzKGFycltpXS51cmwpO1xyXG4gICAgICAgICAgICAvL+i1hOa6kOmHiuaUvlxyXG4gICAgICAgICAgICBpZiAocmVzb3VyY2UpIHtcclxuICAgICAgICAgICAgICAgIHJlc291cmNlLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veaWsOWcuuaZr1xyXG4gICAgICogQHBhcmFtIG5ld2Z1aUFyciBcclxuICAgICAqIEBwYXJhbSBuZXdMcyBcclxuICAgICAqIEBwYXJhbSBjYWxsQmFjayBcclxuICAgICAqL1xyXG4gICAgcHVibGljIExvYWROZXdTY2VuZShuZXdmdWlBcnIsIG5ld0xzOiBzdHJpbmcsIGNhbGxCYWNrOiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ2xlYXJCZWZvclVJKCk7IC8v5riF55CG5LiK5Liqc2NlbmXnmoR1aVxyXG4gICAgICAgIC8v5Yqg6L29MmTotYTmupAgIExheWEubG9hZGVyLmxvYWRcclxuICAgICAgICAvL2xldCBsb2FkaW5nOkxvYWRpbmdQYW5lbCA9IG5ldyBMb2FkaW5nUGFuZWwoKTtcclxuICAgICAgICBsZXQgbG9hZGluZzogTG9hZGluZ1BhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Mb2FkaW5nUGFuZWwpIGFzIExvYWRpbmdQYW5lbDtcclxuICAgICAgICBsb2FkaW5nLlNldENvbnRlbnQoXCLliqDovb0yZOi1hOa6kCBcIik7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChuZXdmdWlBcnIsXHJcbiAgICAgICAgICAgIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgTG9hZDNEUmVzKCk7XHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPSBsb2FkaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZy5TZXRQcm9ncmVzcyh2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICBudWxsLCAxLCB0cnVlLCBDb21tb25Db25zdGFudC5fZ3JvdXBOYW1lX2Z1aVJlc1xyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIC8v6aKE5Yqg6L29M2TotYTmupAgIExheWEubG9hZGVyLmNyZWF0ZVxyXG4gICAgICAgIGZ1bmN0aW9uIExvYWQzRFJlcygpIHtcclxuICAgICAgICAgICAgbG9hZGluZy5TZXRDb250ZW50KFwi5Yqg6L29M2TotYTmupAgXCIpO1xyXG4gICAgICAgICAgICBMYXlhLmxvYWRlci5jcmVhdGUobmV3THMsXHJcbiAgICAgICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChzYzogTGF5YS5TY2VuZTNEKTogdm9pZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0xzID09IENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVQYXRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIExheWEubG9hZGVyLmNyZWF0ZShDb21tb25Db25zdGFudC5fZ3VuU2NlbmVQYXRoLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuY2xvc2UoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Mb2FkaW5nUGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbEJhY2soc2MpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSwgbnVsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTG9hZGluZ1BhbmVsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbEJhY2soc2MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAgICAgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAodmFsdWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChudWxsICE9IGxvYWRpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZy5TZXRQcm9ncmVzcyh2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBudWxsLCApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmAmui/h+i1hOa6kOe7hOWQjeWtl+mHiuaUvui1hOa6kFxyXG4gICAgICogQHBhcmFtIGdyb3VwTmFtZSDotYTmupDnu4TlkI3lrZdcclxuICAgICAqL1xyXG4gICAgcHVibGljIFJlbGVhc2VGdWlSZXNCeUdyb3VwTmFtZShncm91cE5hbWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIExheWEubG9hZGVyLmNsZWFyUmVzQnlHcm91cChncm91cE5hbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L296LS05Zu+6LWE5rqQXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBMb2FkVGV4dHVyZTJEKHBhdGg6IHN0cmluZywgY2FsbEJhY2s6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgTGF5YS5UZXh0dXJlMkQubG9hZChcInVuaXR5UmVzL1RleHR1cmUvXCIgKyBwYXRoLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICh0OiBMYXlhLlRleHR1cmUyRCk6IHZvaWQge1xyXG4gICAgICAgICAgICBjYWxsQmFjayh0KTtcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IExvYWRpbmdQYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9Mb2FkaW5nUGFuZWxcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgUmVjb25uZWN0dGluZ1RpcCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9SZWNvbm5lY3R0aW5nVGlwXCI7XHJcbmltcG9ydCBCYXNlUGFuZWwgZnJvbSBcIi4uL2dhbWUvUGFuZWwvQmFzZVBhbmVsXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgSHVudFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0h1bnRQYW5lbFwiO1xyXG5pbXBvcnQgSGFsbFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0hhbGxQYW5lbFwiO1xyXG5pbXBvcnQgQXV0b0F0dGFja1BhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0F1dG9BdHRhY2tQYW5lbFwiO1xyXG5pbXBvcnQgUHJvbXB0UGFuZWwgZnJvbSBcIi4uL2dhbWUvUGFuZWwvUHJvbXB0UGFuZWxcIjtcclxuaW1wb3J0IFdhbGxldFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL1dhbGxldFBhbmVsXCI7XHJcbmltcG9ydCBMdlJlY29yZHNQYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9MdlJlY29yZHNQYW5lbFwiO1xyXG5pbXBvcnQgU2V0dGluZyBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9TZXR0aW5nUGFuZWxcIjtcclxuaW1wb3J0IEhlbHBQYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9IZWxwUGFuZWxcIjtcclxuaW1wb3J0IFJhbmtpbmdQYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9SYW5raW5nUGFuZWxcIjtcclxuaW1wb3J0IEd1aWRlUGFuZWwgZnJvbSBcIi4uL2dhbWUvUGFuZWwvR3VpZGVQYW5lbFwiO1xyXG5pbXBvcnQgSnBQYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9KcFBhbmVsXCI7XHJcbmltcG9ydCBQZXJzb25hbEluZm9QYW5lbCBmcm9tIFwiLi4vZ2FtZS9QYW5lbC9QZXJzb25hbEluZm9QYW5lbFwiO1xyXG5pbXBvcnQgRnVuZFRpcFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0Z1bmRUaXBQYW5lbFwiO1xyXG5pbXBvcnQgR3Jvd3RoRnVuZFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0dyb3d0aEZ1bmRQYW5lbFwiO1xyXG5pbXBvcnQgTGV2ZWxCb251c1BhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0xldmVsQm9udXNQYW5lbFwiO1xyXG5pbXBvcnQgVXBncmFkZVBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL1VwZ3JhZGVQYW5lbFwiO1xyXG5pbXBvcnQgV2lubmVyUGFuZWwgZnJvbSBcIi4uL2dhbWUvUGFuZWwvV2lubmVyUGFuZWxcIjtcclxuaW1wb3J0IE1hcnF1ZWVQYW5lbCBmcm9tIFwiLi4vZ2FtZS9Mb2dpbi9NYXJxdWVlL01hcnF1ZWVQYW5lbFwiO1xyXG5pbXBvcnQgVGlwTWFuYWdlciBmcm9tIFwiLi9UaXBNYW5hZ2VyXCI7XHJcbmltcG9ydCBMdkRldGFpbFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL0x2RGV0YWlsUGFuZWxcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjZW5lTWFuYWdlciB7XHJcbiAgICAvKiogRnVpKi9cclxuICAgIHByaXZhdGUgRlVJTGF5ZXI6IExheWEuU3ByaXRlO1xyXG4gICAgLyoqIOmdouadvyAqL1xyXG4gICAgcHJpdmF0ZSBQYW5lbExheWVyOiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgUGFuZWxEaWM6IExheWEuV2Vha09iamVjdDtcclxuXHJcbiAgICAvKiog5piv5ZCm56aB5q2i5YWN6L2s5oyJ6ZKuKi9cclxuICAgIHB1YmxpYyBiUHJvaGliaXRXYWxsZXRCdG46IGJvb2xlYW4gPSBmYWxzZTsgLy/mnInlvLnnqpfml7bnpoHmraLlhY3ovazmjInpkq5cclxuXHJcbiAgICBwdWJsaWMgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLlBhbmVsRGljID0gbmV3IExheWEuV2Vha09iamVjdCgpO1xyXG5cclxuICAgICAgICB0aGlzLkZVSUxheWVyID0gbmV3IExheWEuU3ByaXRlKCk7XHJcbiAgICAgICAgdGhpcy5QYW5lbExheWVyID0gbmV3IExheWEuU3ByaXRlKCk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLlBhbmVsTGF5ZXIpO1xyXG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5GVUlMYXllcik7XHJcbiAgICAgICAgdGhpcy5GVUlMYXllci5hZGRDaGlsZChmYWlyeWd1aS5HUm9vdC5pbnN0LmRpc3BsYXlPYmplY3QpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBBZGRGVUkoZnVpOiBmYWlyeWd1aS5HQ29tcG9uZW50KSB7XHJcbiAgICAgICAgZmFpcnlndWkuR1Jvb3QuaW5zdC5hZGRDaGlsZChmdWkpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBSZW1vdmVGVUkoZnVpOiBmYWlyeWd1aS5HQ29tcG9uZW50KSB7XHJcbiAgICAgICAgZnVpLnJlbW92ZUZyb21QYXJlbnQoKTtcclxuICAgICAgICBmdWkuZGlzcG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgR2V0UGFuZWwoaWQ6IEVudW1EYXRhLkVudW1QYW5lbFR5cGUsIGRhdGE6IGFueSA9IG51bGwpIHtcclxuICAgICAgICB2YXIgcGFuZWw6IEJhc2VQYW5lbCA9IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMuUGFuZWxEaWMuaGFzKGlkKSkge1xyXG4gICAgICAgICAgICBwYW5lbCA9IHRoaXMuUGFuZWxEaWMuZ2V0KGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAoaWQpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5IYWxsUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgSGFsbFBhbmVsKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5IdW50UGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgSHVudFBhbmVsKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5Mb2FkaW5nUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgTG9hZGluZ1BhbmVsKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBQcm9tcHRQYW5lbChpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmVjb25uZWN0dGluZzpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBSZWNvbm5lY3R0aW5nVGlwKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5TZXR0aW5nUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgU2V0dGluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSGVscFBhbmVsOlxyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsID0gbmV3IEhlbHBQYW5lbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmFua2luZ1BhbmVsOlxyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsID0gbmV3IFJhbmtpbmdQYW5lbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuR3VpZGVQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBHdWlkZVBhbmVsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5BdXRvQXR0YWNrUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgQXV0b0F0dGFja1BhbmVsKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5XYWxsZXRQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBXYWxsZXRQYW5lbChpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSnBQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBKcFBhbmVsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5QZXJzb25hbEluZm9QYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBQZXJzb25hbEluZm9QYW5lbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuRnVuZFRpcFBhbmVsOlxyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsID0gbmV3IEZ1bmRUaXBQYW5lbChkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkdyb3d0aEZ1bmRQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBHcm93dGhGdW5kUGFuZWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkxldmVsQm9udXNQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBMZXZlbEJvbnVzUGFuZWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkx2UmVjb3Jkc1BhbmVsOlxyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsID0gbmV3IEx2UmVjb3Jkc1BhbmVsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5VcGdyYWRlUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgVXBncmFkZVBhbmVsKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsLm1fbmFtZUlEID0gaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEVudW1EYXRhLkVudW1QYW5lbFR5cGUuV2lubmVyUGFuZWw6XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwgPSBuZXcgV2lubmVyUGFuZWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLk1hcnF1ZWVQYW5lbDpcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbCA9IG5ldyBNYXJxdWVlUGFuZWwoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwubV9uYW1lSUQgPSBpZDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgRW51bURhdGEuRW51bVBhbmVsVHlwZS5MdkRldGFpbFBhbmVsOlxyXG4gICAgICAgICAgICAgICAgICAgIHBhbmVsID0gbmV3IEx2RGV0YWlsUGFuZWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBwYW5lbC5tX25hbWVJRCA9IGlkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlBhbmVsRGljLnNldChpZCwgcGFuZWwpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHBhbmVsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogMS7ov5nph4xwYW5lbOeahOa3u+WKoOWIsFBhbmVsTGF5ZXLlsYLmmoLml7bmmK/msqHmnInmmL7npLrnmoTvvIzmmL7npLrnmoR1aeaYr3BhbmVs5YaF6YOo55qEZnVpXHJcbiAgICAgKiAyLm5ld+S4gOS4qnBhbmVs55qE5ZCM5pe277yM5ZyocGFuZWzlhoXpg6huZXcgZnVp5bm25re75Yqg5ZyoZnVp5bGCXHJcbiAgICAgKiAqL1xyXG4gICAgcHVibGljIENyZWF0ZShpZDogRW51bURhdGEuRW51bVBhbmVsVHlwZSwgZGF0YTogYW55ID0gbnVsbCkge1xyXG4gICAgICAgIHZhciBwYW5lbDogQmFzZVBhbmVsID0gdGhpcy5HZXRQYW5lbChpZCwgZGF0YSkgYXMgQmFzZVBhbmVsO1xyXG4gICAgICAgIHRoaXMuUGFuZWxMYXllci5hZGRDaGlsZChwYW5lbCk7XHJcbiAgICAgICAgaWYgKCFwYW5lbCkgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiBwYW5lbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xvc2UoaWQ6IEVudW1EYXRhLkVudW1QYW5lbFR5cGUsIGJSZW1vdmU6IGJvb2xlYW4gPSB0cnVlKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLlBhbmVsRGljLmhhcyhpZCkpIHJldHVybiBudWxsO1xyXG4gICAgICAgIHZhciBwYW5lbDogQmFzZVBhbmVsID0gdGhpcy5HZXRQYW5lbChpZCkgYXMgQmFzZVBhbmVsO1xyXG4gICAgICAgIGlmICghcGFuZWwpIHJldHVybjtcclxuICAgICAgICBwYW5lbC5DbG9zZShiUmVtb3ZlLCBpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRlc3Ryb3koaWQ6IEVudW1EYXRhLkVudW1QYW5lbFR5cGUpIHtcclxuICAgICAgICBpZiAoIXRoaXMuUGFuZWxEaWMuaGFzKGlkKSkgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgdGhpcy5iUHJvaGliaXRXYWxsZXRCdG4gPSBmYWxzZTtcclxuICAgICAgICB2YXIgcGFuZWw6IEJhc2VQYW5lbCA9IHRoaXMuR2V0UGFuZWwoaWQpIGFzIEJhc2VQYW5lbDtcclxuICAgICAgICB0aGlzLlBhbmVsRGljLmRlbChpZCk7XHJcbiAgICAgICAgaWYgKCFwYW5lbCkgcmV0dXJuO1xyXG4gICAgICAgIHBhbmVsLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICBwYW5lbC5kZXN0cm95KHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBHZXRQYW5lbEJ5SWQoaWQ6IEVudW1EYXRhLkVudW1QYW5lbFR5cGUpIHtcclxuICAgICAgICBpZiAodGhpcy5QYW5lbERpYy5oYXMoaWQpKSB7XHJcbiAgICAgICAgICAgIHZhciBwYW5lbDogQmFzZVBhbmVsID0gdGhpcy5QYW5lbERpYy5nZXQoaWQpO1xyXG4gICAgICAgICAgICBpZiAoIXBhbmVsKSByZXR1cm47XHJcbiAgICAgICAgICAgIHJldHVybiBwYW5lbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmuIXpmaTmjonmiYDmnInnmoRwYW5lbFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY2xlYXJBbGxQYW5lbCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTWFycXVlZVBhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuRnVuZFRpcFBhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuTGV2ZWxCb251c1BhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuR3Jvd3RoRnVuZFBhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSGVscFBhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuU2V0dGluZ1BhbmVsKTtcclxuICAgICAgICB0aGlzLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUGVyc29uYWxJbmZvUGFuZWwpO1xyXG4gICAgICAgIHRoaXMuY2xvc2UoRW51bURhdGEuRW51bVBhbmVsVHlwZS5SYW5raW5nUGFuZWwpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgRW50ZXJIdW50U2NlbmUoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhckFsbFBhbmVsKCk7XHJcbiAgICAgICAgLy/muIXnkIbkuIrkuIDkuKrlnLrmma/nmoR1aeOAgee8k+WtmFxyXG4gICAgICAgIHZhciBpZCA9IEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSGFsbFBhbmVsO1xyXG4gICAgICAgIGlmICh0aGlzLlBhbmVsRGljLmhhcyhpZCkpIHtcclxuICAgICAgICAgICAgdmFyIHBhbmVsID0gdGhpcy5QYW5lbERpYy5nZXQoaWQpIGFzIEhhbGxQYW5lbDtcclxuICAgICAgICAgICAgcGFuZWwuRXhpdEhhbGxTY2VuZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGhhbGxGdWlBcnIgPSBbeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlIdW50ZXJVSVBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlIdW50ZXJVSVBhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2h1bnRlckJnUGF0aDEsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9odW50ZXJCZ1BhdGgyLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpRnJlZVRyYW5XYWxsZXRQYXRoLmltYWdlLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpRnJlZVRyYW5XYWxsZXRQYXRoLmZ1aSwgdHlwZTogTGF5YS5Mb2FkZXIuQlVGRkVSIH1cclxuICAgICAgICAgICAgLy8geyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlIYWxsUGF0aC5pbWFnZSwgdHlwZTogTGF5YS5Mb2FkZXIuSU1BR0UgfSxcclxuICAgICAgICAgICAgLy8geyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlIYWxsUGF0aC5mdWksIHR5cGU6IExheWEuTG9hZGVyLkJVRkZFUiB9LFxyXG4gICAgICAgICAgICAvLyAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlDb21tb25VSVBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIC8vICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlDb21tb25VSVBhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfVxyXG4gICAgICAgIF07XHJcblxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuTG9hZE5ld1NjZW5lKGhhbGxGdWlBcnIsIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVQYXRoLCBMb2FkZWQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIExvYWRlZChzY2VuZTogTGF5YS5TY2VuZTNEKSB7XHJcbiAgICAgICAgICAgIHZhciBwYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuSHVudFBhbmVsKSBhcyBIdW50UGFuZWw7XHJcbiAgICAgICAgICAgIHBhbmVsLkVudGVyQWZ0ZXIoc2NlbmUpO1xyXG4gICAgICAgICAgICAvLyDliqDovb3lrozmnInpu5HlsY9cclxuICAgICAgICAgICAgLy8gTGF5YS5sb2FkZXIuY3JlYXRlKENvbW1vbkNvbnN0YW50Ll9ndW5TY2VuZVBhdGgsXHJcbiAgICAgICAgICAgIC8vICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChzYzogTGF5YS5TY2VuZTNEKTogdm9pZCB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdmFyIHBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5IdW50UGFuZWwpIGFzIEh1bnRQYW5lbDtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgcGFuZWwuRW50ZXJBZnRlcihzY2VuZSk7XHJcbiAgICAgICAgICAgIC8vICAgICB9KSxcclxuICAgICAgICAgICAgLy8gbnVsbCwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgRW50ZXJIYWxsU2NlbmUoY2FsbEJhY2s6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhckFsbFBhbmVsKCk7XHJcbiAgICAgICAgdmFyIGlkID0gRW51bURhdGEuRW51bVBhbmVsVHlwZS5IdW50UGFuZWw7XHJcbiAgICAgICAgaWYgKHRoaXMuUGFuZWxEaWMuaGFzKGlkKSkge1xyXG4gICAgICAgICAgICB2YXIgcGFuZWwgPSB0aGlzLlBhbmVsRGljLmdldChpZCkgYXMgSHVudFBhbmVsO1xyXG4gICAgICAgICAgICBwYW5lbC5FeGl0SHVudFNjZW5lKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgaGFsbEZ1aUFyciA9IFsvL3sgdXJsOiBDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIC8vIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpSGFsbFBhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlIYWxsVUlQYXRoLmltYWdlLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9LFxyXG4gICAgICAgICAgICB7IHVybDogQ29tbW9uQ29uc3RhbnQuX2Z1aUhhbGxVSVBhdGguZnVpLCB0eXBlOiBMYXlhLkxvYWRlci5CVUZGRVIgfSxcclxuICAgICAgICAgICAgeyB1cmw6IENvbW1vbkNvbnN0YW50Ll9mdWlGcmVlVHJhbldhbGxldFBhdGguaW1hZ2UsIHR5cGU6IExheWEuTG9hZGVyLklNQUdFIH0sXHJcbiAgICAgICAgICAgIHsgdXJsOiBDb21tb25Db25zdGFudC5fZnVpRnJlZVRyYW5XYWxsZXRQYXRoLmZ1aSwgdHlwZTogTGF5YS5Mb2FkZXIuQlVGRkVSIH1cclxuICAgICAgICBdO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcuTG9hZE5ld1NjZW5lKGhhbGxGdWlBcnIsIENvbW1vbkNvbnN0YW50Ll9oYWxsUGF0aF9scywgTG9hZGVkKTtcclxuICAgICAgICBmdW5jdGlvbiBMb2FkZWQoc2NlbmU6IExheWEuU2NlbmUzRCkge1xyXG4gICAgICAgICAgICB2YXIgcGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkhhbGxQYW5lbCkgYXMgSGFsbFBhbmVsO1xyXG4gICAgICAgICAgICBwYW5lbC5FbnRlckFmdGVyKHNjZW5lKTtcclxuICAgICAgICAgICAgY2FsbEJhY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBTb2NrZXRTZXJ2ZSBmcm9tIFwiLi8uLi9uZXQvU29ja2V0U2VydmVyXCI7XHJcbmltcG9ydCBHYW1lRXZlbnQgZnJvbSBcIi4vLi4vY29uc3RhbnQvR2FtZUV2ZW50XCI7XHJcbmltcG9ydCBQcm90b0J1ZiBmcm9tIFwiLi4vbmV0L1Byb3RvQnVmXCI7XHJcbmltcG9ydCBQYWNrYWdlSW4gZnJvbSBcIi4uL25ldC9QYWNrYWdlSW5cIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi9FbnVtL0VudW1EYXRhXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldExvZ2luXCI7XHJcbmltcG9ydCBOZXRKcFBvb2wgZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRKcFBvb2xcIjtcclxuaW1wb3J0IEJhc2VNYW5hZ2VyIGZyb20gXCIuL0Jhc2VNYW5hZ2VyXCI7XHJcbmltcG9ydCBSZWNvbm5lY3R0aW5nVGlwIGZyb20gXCIuLi9nYW1lL1BhbmVsL1JlY29ubmVjdHRpbmdUaXBcIjtcclxuaW1wb3J0IE5ldFdhbGxldCBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFdhbGxldFwiO1xyXG5pbXBvcnQgTmV0UmFua2luZyBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJhbmtpbmdcIjtcclxuaW1wb3J0IE5ldFJvb20gZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRSb29tXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IE5ldFdhbm5lcnMgZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRXYW5uZXJzXCI7XHJcbmltcG9ydCBOZXRSb2xlSW5mbyBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvbGVJbmZvXCI7XHJcbmltcG9ydCBOZXRCcm9hZGNhc3QgZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRCcm9hZGNhc3RcIjtcclxuaW1wb3J0IE5ldEFjdCBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldEFjdFwiO1xyXG5pbXBvcnQgUHJvbXB0UGFuZWwgZnJvbSBcIi4uL2dhbWUvUGFuZWwvUHJvbXB0UGFuZWxcIjsgaW1wb3J0IE5ldEF3YXJkIGZyb20gXCIuLi9uZXQvUHJvdG9IYW5kZXIvTmV0QXdhcmRcIjtcclxuaW1wb3J0IENvbW1vbkNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC9Db21tb25Db25zdGFudFwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvY2tldE1hbmFnZXIgZXh0ZW5kcyBCYXNlTWFuYWdlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBzb2NrZXREaWN0OiBMYXlhLldlYWtPYmplY3Q7XHJcbiAgICBwcml2YXRlIGNtZERpY3Q6IExheWEuV2Vha09iamVjdDtcclxuXHJcbiAgICBwcml2YXRlIGNsaWVudEhlYXJ0QmVhdENvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBzZXJ2ZXJIZWFydEJlYXRDb3VudDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc29ja2V0RGljdCA9IG5ldyBMYXlhLldlYWtPYmplY3QoKTtcclxuICAgICAgICB0aGlzLmNtZERpY3QgPSBuZXcgTGF5YS5XZWFrT2JqZWN0KCk7XHJcbiAgICAgICAgdGhpcy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYmFzZSwgQmFzZU1zZy5jX2NtZC5oZWFydGJlYXRfcmVzcCwgQmFzZU1zZy5oZWFydGJlYXRfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVzSGVhcnRCZWF0UmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuXHJcbiAgICAgICAgLy/miYDmnInljY/orq7kuJrliqHpgLvovpHlpITnkIbnsbvnmoTliJ3lp4vljJblnKjov5nph4zmt7vliqBcclxuICAgICAgICBOZXRMb2dpbi5JbnN0YW5jZS5Jbml0KCk7XHJcbiAgICAgICAgTmV0Um9vbS5JbnN0YW5jZS5Jbml0KCk7XHJcbiAgICAgICAgTmV0SnBQb29sLkluc3RhbmNlLkluaXQoKTtcclxuICAgICAgICBOZXRXYWxsZXQuSW5zdGFuY2UuSW5pdCgpO1xyXG4gICAgICAgIE5ldFJhbmtpbmcuSW5zdGFuY2UuSW5pdCgpO1xyXG4gICAgICAgIE5ldFdhbm5lcnMuSW5zdGFuY2UuSW5pdCgpO1xyXG4gICAgICAgIE5ldFJvbGVJbmZvLkluc3RhbmNlLkluaXQoKTtcclxuICAgICAgICBOZXRCcm9hZGNhc3QuSW5zdGFuY2UuSW5pdCgpO1xyXG4gICAgICAgIE5ldEFjdC5JbnN0YW5jZS5Jbml0KCk7XHJcbiAgICAgICAgTmV0QXdhcmQuSW5zdGFuY2UuSW5pdCgpO1xyXG5cclxuICAgICAgICBMYXlhLnN0YWdlLm9uKGxheWEuZXZlbnRzLkV2ZW50LkJMVVIsIHRoaXMsIHRoaXMub25TdGFnZUJsdXIpOyAgIC8v6YCA5Yiw5ZCO5Y+wXHJcbiAgICAgICAgTGF5YS5zdGFnZS5vbihsYXlhLmV2ZW50cy5FdmVudC5GT0NVUywgdGhpcywgdGhpcy5vblN0YWdlRm9jdXMpOyAvL+i/lOWbnuWIsOWJjeWPsFxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKiog5rOo5YaM55uR5ZCsc29ja2V054q25oCB55qE5LqL5Lu277yI6L+e5o6l44CB5pat5byA77yJKi9cclxuICAgIEFkZEV2ZW50KCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuYWRkKEdhbWVFdmVudC5DT05ORUNULCB0aGlzLCB0aGlzLmNvbm5lY3RHYW1lKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmFkZChHYW1lRXZlbnQuU09DS0VUX0NMT1NFLCB0aGlzLCB0aGlzLnJlQ29ubmVjdCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSGFuZGxlQnlDTUQoY21kOiBudW1iZXIsIGNjbWQ6IG51bWJlciwgZGF0YTogYW55LCBjYWxsQmFjazogTGF5YS5IYW5kbGVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hZGRIYW5kbGUoUHJvdG9CdWYuYnVpbGQoY21kLCBjY21kKSwgZGF0YSwgY2FsbEJhY2spO1xyXG5cclxuICAgIH1cclxuICAgIC8qKua3u+WKoOe9kee7nOS6i+S7tuWbnuiwgyoqL1xyXG4gICAgYWRkSGFuZGxlKGNtZDogbnVtYmVyLCBkYXRhOiBhbnksIGNhbGxCYWNrOiBMYXlhLkhhbmRsZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNtZERpY3Quc2V0KGNtZCwgY2FsbEJhY2spO1xyXG4gICAgICAgIFByb3RvQnVmLnJlZ2lzdGVyQ01EKGNtZCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq572R57uc5LqL5Lu25YiG5Y+RKiovXHJcbiAgICBwdWJsaWMgZGlzcGF0Y2hNZXNzYWdlKGNtZDogbnVtYmVyLCBkYXRhOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB2YXIgaGFuZGxlOiBMYXlhLkhhbmRsZXIgPSB0aGlzLmNtZERpY3QuZ2V0KGNtZCk7XHJcbiAgICAgICAgaWYgKGhhbmRsZSkge1xyXG4gICAgICAgICAgICBoYW5kbGUucnVuV2l0aChbY21kLCBkYXRhXSk7XHJcbiAgICAgICAgICAgIGlmIChjbWQgIT0gMCAmJiBjbWQgIT0gMSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IG1zZ0NvZGUgPSBQcm90b0J1Zi5SZXNvbHZlKGNtZCk7XHJcbiAgICAgICAgICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhg5Y2P6K6uIGNtZD0ke21zZ0NvZGVbMF19LGNjbWQ9JHttc2dDb2RlWzFdfSxgICsgXCIgZGF0YT1cIiwgZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxldCBtc2dDb2RlID0gUHJvdG9CdWYuUmVzb2x2ZShjbWQpO1xyXG4gICAgICAgICAgICAgICAgLy91dGlscy5Db21tb25VdGlscy5sb2coYOWNj+iuriBjbWQ9JHttc2dDb2RlWzBdfSxjY21kPSR7bXNnQ29kZVsxXX0g5pyq5aSE55CGYCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6L+e5o6lc29ja2V0KiovXHJcbiAgICBwdWJsaWMgY29ubmVuY3QoaXA6IHN0cmluZywgcG9ydDogbnVtYmVyLCB0eXBlOiBFbnVtRGF0YS5FbnVtU29ja2V0VHlwZSwgdG9rZW46IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHZhciBzb2NrZXQ6IFNvY2tldFNlcnZlID0gdGhpcy5zb2NrZXREaWN0LmdldCh0eXBlKTtcclxuICAgICAgICBpZiAoc29ja2V0ID09IG51bGwpIHtcclxuICAgICAgICAgICAgc29ja2V0ID0gbmV3IFNvY2tldFNlcnZlKHR5cGUpO1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldERpY3Quc2V0KHR5cGUsIHNvY2tldCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNvY2tldC5jb25uZWN0KGlwLCBwb3J0LCB0b2tlbik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj5HpgIHmtojmga9cclxuICAgICAqIEBwYXJhbSBjbWQg5raI5oGv5Y2P6K6u5aSn5aS077yI5Y+W5LqM6L+b5Yi25pWw5o2u55qE5YmNN+S9je+8iVxyXG4gICAgICogQHBhcmFtIGNjbWQg5raI5oGv5Y2P6K6u5bCP5aS077yI5Y+W5LqM6L+b5Yi25pWw5o2u55qE5YmNOOWIsDE25L2N77yJXHJcbiAgICAgKiBAcGFyYW0gZGF0YSDljY/orq7mlbDmja7nsbtcclxuICAgICAqIEBwYXJhbSBwYXJhbSDmlbDmja7lj4LmlbDvvIjmmoLmnKrkvb/nlKjvvIlcclxuICAgICAqIEBwYXJhbSB0eXBlIHNvY2tldOexu+Wei1xyXG4gICAgICovXHJcbiAgICBzZW5kR2FtZURhdGEoY21kOiBudW1iZXIsIGNjbWQ6IG51bWJlciwgZGF0YTogYW55LCBwYXJhbTogYW55ID0gbnVsbCwgdHlwZTogRW51bURhdGEuRW51bVNvY2tldFR5cGUgPSBFbnVtRGF0YS5FbnVtU29ja2V0VHlwZS5HQU1FKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIHNvY2tldDogU29ja2V0U2VydmUgPSB0aGlzLnNvY2tldERpY3QuZ2V0KHR5cGUpO1xyXG4gICAgICAgIGlmIChzb2NrZXQpIHtcclxuICAgICAgICAgICAgdmFyIGhlYWRDbWQgPSBQcm90b0J1Zi5idWlsZChjbWQsIGNjbWQpO1xyXG4gICAgICAgICAgICBzb2NrZXQuc2VuZChoZWFkQ21kLCBkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj5HpgIHor7fmsYLnmbvpmYZcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNlbmRMb2dpblJlcShjb2RlOiBMb2dpbk1zZy5sb2dpbl9tb2RlX2NvZGUsIHRva2VuOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICB2YXIgbG9naW5SZXE6IExvZ2luTXNnLmxvZ2luX3JlcSA9IG5ldyBMb2dpbk1zZy5sb2dpbl9yZXEoKTtcclxuICAgICAgICBOZXRMb2dpbi5JbnN0YW5jZS5fTG9naW5Nb2RlQ29kZSA9IGNvZGU7XHJcbiAgICAgICAgbG9naW5SZXEuY29kZSA9IGNvZGU7XHJcbiAgICAgICAgbG9naW5SZXEudG9rZW4gPSB0b2tlbjtcclxuICAgICAgICBsb2dpblJlcS5sYW5nID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmxhbmc7XHJcbiAgICAgICAgdGhpcy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2xvZ2luLCBMb2dpbk1zZy5jX2NtZC5sb2dpbl9yZXEsIGxvZ2luUmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPkemAgeW/g+i3s+WMhVxyXG4gICAgICogKiovXHJcbiAgICBwcml2YXRlIHNlbmRCZWF0SGVhcnRSZXMoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKGBjbGllbnRIZWFydEJlYXRDb3VudCA9ICR7dGhpcy5jbGllbnRIZWFydEJlYXRDb3VudH0gLCBzZXJ2ZXJIZWFydEJlYXRDb3VudCA9ICR7dGhpcy5zZXJ2ZXJIZWFydEJlYXRDb3VudH1gKTtcclxuICAgICAgICBpZiAodGhpcy5jbGllbnRIZWFydEJlYXRDb3VudCAtIHRoaXMuc2VydmVySGVhcnRCZWF0Q291bnQgPiAyMCkvL+aWree6v+S6hlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0t5b+D6Lez6LaF5pe2LS0tXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlU29ja2V0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBsZXQgbXNnOiBCYXNlTXNnLmhlYXJ0YmVhdF9yZXEgPSBuZXcgQmFzZU1zZy5oZWFydGJlYXRfcmVxKCk7XHJcbiAgICAgICAgICAgIG1zZy5pZCA9IHRoaXMuY2xpZW50SGVhcnRCZWF0Q291bnQ7XHJcbiAgICAgICAgICAgIHRoaXMuY2xpZW50SGVhcnRCZWF0Q291bnQrKztcclxuICAgICAgICAgICAgdGhpcy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2Jhc2UsIEJhc2VNc2cuY19jbWQuaGVhcnRiZWF0X3JlcSwgbXNnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWkhOeQhuW/g+i3s+WMhVxyXG4gICAgICogQHBhcmFtIGNsaWVudERhdGEgXHJcbiAgICAgKiBAcGFyYW0gbXNnSUQgXHJcbiAgICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlY2VpdmVzSGVhcnRCZWF0UmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBCYXNlTXNnLmhlYXJ0YmVhdF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXJ2ZXJIZWFydEJlYXRDb3VudCA9IHBiRGF0YS5pZCBhcyBudW1iZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov57mjqXmiJDlip9cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjb25uZWN0R2FtZSgpOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLov57mjqXmiJDlip/lvIDlp4vnmbvpmYYgY29ubmVjdEdhbWVcIik7XHJcbiAgICAgICAgLyoq5byA5aeL5omn6KGM5b+D6Lez5YyFICovXHJcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDEwMDAsIHRoaXMsIHRoaXMuc2VuZEJlYXRIZWFydFJlcyk7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoTmV0TG9naW4uSW5zdGFuY2UuX0xvZ2luTW9kZUNvZGUpIHtcclxuICAgICAgICAgICAgLy/mraPluLjnmbvlvZVcclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9tb2RlX2NvZGUubm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmlzTG9hY2FsRGV2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmV0TG9naW4uSW5zdGFuY2UuTG9naW5BY2NvdW50UmVxKEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy50b2tlbiwgXCJ6aGFuZ2hhb1wiLCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubGFuZyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tIOato+W4uOeZu+W9leivt+axglwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbmRMb2dpblJlcShMb2dpbk1zZy5sb2dpbl9tb2RlX2NvZGUubm9ybWFsLCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcudG9rZW4pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/ph43ov57nmbvlvZVcclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9tb2RlX2NvZGUucmVjb25uZWN0OiB7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmVjb25uZWN0dGluZyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmlzTG9hY2FsRGV2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmV0TG9naW4uSW5zdGFuY2UuTG9naW5BY2NvdW50UmVxKEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy50b2tlbiwgXCJ6aGFuZ2hhb1wiLCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcubGFuZyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tIOmHjei/nueZu+W9leivt+axglwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbmRMb2dpblJlcShMb2dpbk1zZy5sb2dpbl9tb2RlX2NvZGUucmVjb25uZWN0LCBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcudG9rZW4pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDph43ov55cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZUNvbm5lY3QoKTogdm9pZCB7XHJcblxyXG4gICAgICAgIE5ldExvZ2luLkluc3RhbmNlLl9Mb2dpbk1vZGVDb2RlID0gTG9naW5Nc2cubG9naW5fbW9kZV9jb2RlLnJlY29ubmVjdDtcclxuICAgICAgICBsZXQgZ2FtZU1hbmFnZXIgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmc7XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5jb25uZWN0Q291bnRPdXQoRW51bURhdGEuRW51bVNvY2tldFR5cGUuR0FNRSkpIHtcclxuICAgICAgICAgICAgLy/ph43ov57liqjnlLtcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6Ieq5Yqo6YeN6L+eIFJlY29ubmVjdHRpbmdUaXBcIik7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmVjb25uZWN0dGluZyk7XHJcblxyXG5cclxuICAgICAgICAgICAgdGhpcy5jb25uZW5jdChnYW1lTWFuYWdlci5zZXJ2ZXJJcCwgZ2FtZU1hbmFnZXIuc2VydmVyUG9ydCwgRW51bURhdGEuRW51bVNvY2tldFR5cGUuR0FNRSwgZ2FtZU1hbmFnZXIudG9rZW4pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6YeN6L+e6LaF5pe2IHJlQ29ubmVjdCB0aW1lIG91dCEhIVwiKTtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZVNvY2tldCgpO1xyXG4gICAgICAgICAgICAvL+mHjei/nuW8ueahhlxyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmVjb25uZWN0dGluZyk7XHJcbiAgICAgICAgICAgIGxldCBwcm9tcHRQYW5lbDogUHJvbXB0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlByb21wdFBhbmVsKSBhcyBQcm9tcHRQYW5lbDtcclxuICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuUmVjb25uZWN0KTtcclxuXHJcbiAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BMb2NrQXR0YWNrKCk7XHJcbiAgICAgICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BBdXRvQXR0YWNrKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuICAgIC8qKumHjei/nuaOpei2heaXtioqL1xyXG4gICAgcHVibGljIGNvbm5lY3RDb3VudE91dCh0eXBlOiBFbnVtRGF0YS5FbnVtU29ja2V0VHlwZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHZhciBzb2NrZXQ6IFNvY2tldFNlcnZlID0gdGhpcy5zb2NrZXREaWN0LmdldCh0eXBlKTtcclxuICAgICAgICByZXR1cm4gc29ja2V0LmNvbm5lY3RDb3VudE91dCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWFs+mXrXNvY2tldGzov57mjqUqKi9cclxuICAgIHB1YmxpYyBjbG9zZVNvY2tldCh0eXBlOiBFbnVtRGF0YS5FbnVtU29ja2V0VHlwZSA9IEVudW1EYXRhLkVudW1Tb2NrZXRUeXBlLkdBTUUpOiB2b2lkIHtcclxuICAgICAgICB2YXIgc29ja2V0OiBTb2NrZXRTZXJ2ZSA9IHRoaXMuc29ja2V0RGljdC5nZXQodHlwZSk7XHJcbiAgICAgICAgaWYgKHNvY2tldCkge1xyXG4gICAgICAgICAgICBzb2NrZXQuY2xvc2UoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy5zZW5kQmVhdEhlYXJ0UmVzKTsgLy/lgZzmraLlv4Pot7NcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIt+aWsOa4uOaIj1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVmcmVzaEdhbWUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHV0aWxzLkNvbW1vblV0aWxzLmlzQXBwKCkpIHtcclxuICAgICAgICAgICAgd2luZG93LmNsb3NlKCk7IC8v5YWz6Zet5ri45oiPXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBoaXN0b3J5LmdvKDApOyAvL+WIt+aWsOe9kemhtVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOa4uOaIj+WIh+WIsOWQjuWPsFxyXG4gICAgKi9cclxuICAgIHByaXZhdGUgb25TdGFnZUJsdXIoKSB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0t5YiH5Yiw5ZCO5Y+wLS0tXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ri45oiP5YiH5Zue5YmN5Y+wXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblN0YWdlRm9jdXMoKSB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0t5YiH5Zue5YmN5Y+wLS0tXCIpO1xyXG4gICAgICAgIHZhciBzb2NrZXQ6IFNvY2tldFNlcnZlID0gdGhpcy5zb2NrZXREaWN0LmdldChFbnVtRGF0YS5FbnVtU29ja2V0VHlwZS5HQU1FKTtcclxuICAgICAgICBpZiAoc29ja2V0ICYmIHNvY2tldCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGlmICghc29ja2V0LmlzQ29ubmVjdGVkKCkgJiYgc29ja2V0LmNsb3NlUmVhc29uID09IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgIHNvY2tldC5jdXJSZWNvbm5ldENvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVDb25uZWN0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiXHJcbmltcG9ydCBTb3VuZE1hbmFnZXIgPSBMYXlhLlNvdW5kTWFuYWdlcjtcclxuaW1wb3J0IEhhbmRsZXIgPSBMYXlhLkhhbmRsZXI7XHJcbmltcG9ydCBTb3VuZCBmcm9tIFwiLi4vY29uc3RhbnQvU291bmROYW1lQ29uc3RhbnRcIjtcclxuaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4uL0dhbWVDb25maWdcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNvdW5kc01hbmFnZXIge1xyXG5cclxuICAgIHByaXZhdGUgX3NvdW5kQ29uZmlnOiBKU09OOy8v6bG855qE5aOw6Z+z6YWN572uXHJcbiAgICBwcml2YXRlIF9tdXNpY0NoYW5uZWw6IExheWEuU291bmRDaGFubmVsID0gbnVsbDtcclxuICAgIHByaXZhdGUgX3NvdW5kQ2hhbm5lbExpc3QgPSB7fTtcclxuICAgIHByaXZhdGUgX3NvdW5kVm9sdW1lOiBudW1iZXIgPSAxMDA7XHJcbiAgICBwcml2YXRlIF9tdXNpY1ZvbHVtZTogbnVtYmVyID0gMTAwO1xyXG4gICAgcHJpdmF0ZSBfaXNCbHVyOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9tdXNpY0JnTmFtZTogc3RyaW5nID0gbnVsbDtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICB2YXIgdXJsOiBzdHJpbmcgPSBcImNvbmZpZ2ZpbGUvc291bmRDb25maWcuanNvblwiO1xyXG4gICAgICAgIExheWEubG9hZGVyLmxvYWQodXJsLCBIYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNlbGYuX3NvdW5kQ29uZmlnID0gTGF5YS5sb2FkZXIuZ2V0UmVzKHVybCk7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgICAgIC8vIFNvdW5kTWFuYWdlci5hdXRvU3RvcE11c2ljID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgLy8gLy9MYXlhLkJyb3dzZXIub25JUGhvbmV8fFxyXG4gICAgICAgIC8vIGlmIChMYXlhLkJyb3dzZXIub25JT1MgfHwgTGF5YS5Ccm93c2VyLm9uSVBob25lIHx8IExheWEuQnJvd3Nlci5vbklQYWQpIHtcclxuICAgICAgICAvLyAgICAgdmFyIG11c2ljQnV0dG9uOiBMYXlhLlNwcml0ZSA9IG5ldyBMYXlhLlNwcml0ZSgpO1xyXG4gICAgICAgIC8vICAgICBtdXNpY0J1dHRvbi54ID0gMDtcclxuICAgICAgICAvLyAgICAgbXVzaWNCdXR0b24ueSA9IDA7XHJcbiAgICAgICAgLy8gICAgIG11c2ljQnV0dG9uLnNpemUoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQpO1xyXG4gICAgICAgIC8vICAgICBtdXNpY0J1dHRvbi5hbHBoYSA9IDA7XHJcbiAgICAgICAgLy8gICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQobXVzaWNCdXR0b24pO1xyXG4gICAgICAgIC8vICAgICBtdXNpY0J1dHRvbi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCAoKSA9PiB7IHRoaXMub25DbGlja0lPUyhtdXNpY0J1dHRvbikgfSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIExheWEuc3RhZ2Uub24oXCJibHVyXCIsIHRoaXMsIHRoaXMuX3N0YWdlT25CbHVyKTtcclxuICAgICAgICBMYXlhLnN0YWdlLm9uKFwiZm9jdXNcIiwgdGhpcywgdGhpcy5fc3RhZ2VPbkZvY3VzKTtcclxuICAgICAgICBMYXlhLnN0YWdlLm9uKFwidmlzaWJpbGl0eWNoYW5nZVwiLCB0aGlzLCB0aGlzLl92aXNpYmlsaXR5Q2hhbmdlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5ZyoM0TlnLrmma/kuK0gaW9zIOmAgumFjeWjsOmfsyDnlKjkuo7oh6rluKbnmoTog4zmma/lo7Dpn7NcclxuICAgICAqIEBwYXJhbSBvYmogXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbGlja0lPUyhvYmo6IExheWEuU3ByaXRlKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiaW9zXCIpO1xyXG4gICAgICAgIExheWEuc3RhZ2UucmVtb3ZlQ2hpbGQob2JqKTtcclxuICAgICAgICBvYmoub25EaXNhYmxlKCk7XHJcbiAgICAgICAgdGhpcy5wbGF5TXVzaWMoU291bmQuc291bmRIZWFkQXJyLmJnU291bmRIZWFkICsgU291bmQuc291bmRCZ0Fyci5oYWxsQmdNdXNpYyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlo7Dpn7PphY3nva5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFNvdW5kQ29maWcoKTogSlNPTiB7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zb3VuZENvbmZpZztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdiDorr7nva7og4zmma/pn7PkuZBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldE11c2ljVm9sdW1lKHY6IG51bWJlcik6IHZvaWQge1xyXG5cclxuICAgICAgICB0aGlzLl9tdXNpY1ZvbHVtZSA9IHY7XHJcbiAgICAgICAgdGhpcy5fbXVzaWNDaGFubmVsLnZvbHVtZSA9IHRoaXMuX211c2ljVm9sdW1lIC8gMTAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gdiDorr7nva7pn7PmlYhcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNvdW5kVm9sdW1lKHY6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3NvdW5kVm9sdW1lID0gdjtcclxuICAgICAgICB0aGlzLnVwZGF0ZVNvdW5kVm9sdW1lKHYgLyAxMDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635b6X6IOM5pmv6Z+z5LmQ55qE5aOw6Z+z5aSn5bCPXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRNdXNpY1ZvbHVtZSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9tdXNpY1ZvbHVtZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+W+l+mfs+aViOeahOWjsOmfs+Wkp+Wwj1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0U291bmRWb2x1bWUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc291bmRWb2x1bWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSBzdHIg6IOM5pmv6Z+z5LmQ5ZCN56ewXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBwbGF5TXVzaWMoc3RyOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fbXVzaWNDaGFubmVsKSB0aGlzLl9tdXNpY0NoYW5uZWwuc3RvcCgpO1xyXG4gICAgICAgIHRoaXMuX211c2ljQmdOYW1lID0gc3RyO1xyXG4gICAgICAgIHRoaXMuX211c2ljQ2hhbm5lbCA9IFNvdW5kTWFuYWdlci5wbGF5U291bmQoXCJzb3VuZHMvU2NlbmVTb3VuZC9cIiArIHN0ciArIFwiLm1wM1wiLCAwKTtcclxuICAgICAgICBpZiAodGhpcy5fbXVzaWNDaGFubmVsID09IG51bGwpIHJldHVybjtcclxuICAgICAgICB0aGlzLl9tdXNpY0NoYW5uZWwudm9sdW1lID0gdGhpcy5fbXVzaWNWb2x1bWUgLyAxMDA7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gcm9vbVR5cGUg5oi/6Ze057G75Z6LXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBwbGF5TXVzaWNSb29tKHJvb21UeXBlOiBDb21tb25Nc2cucm9vbV90eXBlKTogdm9pZCB7XHJcbiAgICAgICAgc3dpdGNoIChyb29tVHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlNdXNpYyhTb3VuZC5zb3VuZEJnQXJyLnBsYXlCZ011c2ljMSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5TXVzaWMoU291bmQuc291bmRCZ0Fyci5wbGF5QmdNdXNpYzIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgIHRoaXMucGxheU11c2ljKFNvdW5kLnNvdW5kQmdBcnIucGxheUJnTXVzaWMzKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIGhlYWQg5piv5oyJ6ZKu6L+Y5piv6bG8XHJcbiAgICAgKiBAcGFyYW0gc3RyIOWvueW6lOeahOmfs+aViFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcGxheVNvdW5kKGhlYWQ6IHN0cmluZywgc3RyOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICB2YXIgc291bmROYW1lOiBzdHJpbmcgPSBoZWFkICsgc3RyO1xyXG4gICAgICAgIGlmICh0aGlzLl9pc0JsdXIgfHwgdGhpcy5fc291bmRWb2x1bWUgPT0gMCkgcmV0dXJuO1xyXG4gICAgICAgIHZhciBjaGFubmVsOiBMYXlhLlNvdW5kQ2hhbm5lbDtcclxuICAgICAgICBjaGFubmVsID0gU291bmRNYW5hZ2VyLnBsYXlTb3VuZChzb3VuZE5hbWUgKyBcIi53YXZcIiwgMSwgbmV3IEhhbmRsZXIodGhpcywgKCkgPT4geyB0aGlzLm9uQ29tcGxldGUoaGVhZCArIHN0cikgfSkpO1xyXG4gICAgICAgIGlmIChjaGFubmVsKVxyXG4gICAgICAgICAgICBjaGFubmVsLnZvbHVtZSA9IHRoaXMuX3NvdW5kVm9sdW1lIC8gMTAwO1xyXG4gICAgICAgIGVsc2UgcmV0dXJuO1xyXG4gICAgICAgIGlmICghdGhpcy5fc291bmRDaGFubmVsTGlzdFtzb3VuZE5hbWVdKVxyXG4gICAgICAgICAgICB0aGlzLl9zb3VuZENoYW5uZWxMaXN0W3NvdW5kTmFtZV0gPSBuZXcgQXJyYXk8TGF5YS5Tb3VuZENoYW5uZWw+KCk7XHJcbiAgICAgICAgdGhpcy5fc291bmRDaGFubmVsTGlzdFtzb3VuZE5hbWVdLnB1c2goY2hhbm5lbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB0eXBlIOmxvOWvueW6lOeahOWjsOmfs+WIl+ihqFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZmlzaFR5cGVUb1NvdW5kTnVtKHR5cGU6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgLy9pZiAodHlwZSA9PSAzMikgeyB0eXBlID0gMjcgfTtcclxuICAgICAgICAvL2lmICh0eXBlID4gMjYgJiYgdHlwZSA8IDMyKSB7IHR5cGUgPSB0eXBlICUgMjYgfTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc291bmRDb25maWdbdHlwZSAtIDFdW1wic291bmRpZFwiXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHN0ciDmkq3mlL7lrozmiJDnmoTpgqPkuKrpn7PmlYhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbkNvbXBsZXRlKHN0cjogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zdG9wU291bmROYW1lKHN0cik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlgZzmraLpn7PkuZBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0b3BNdXNpYygpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fbXVzaWNDaGFubmVsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX211c2ljQ2hhbm5lbC5zdG9wKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX211c2ljQ2hhbm5lbC5vZmZBbGwoKTtcclxuICAgICAgICAgICAgdGhpcy5fbXVzaWNDaGFubmVsID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlgZzmraLpn7PmlYhcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0b3BTb3VuZCgpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLl9zb3VuZENoYW5uZWxMaXN0KVxyXG4gICAgICAgICAgICB0aGlzLnN0b3BTb3VuZE5hbWUoa2V5KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAgKiDmm7TmlrDlo7Dpn7Ppn7Pph49cclxuICAgICAgKiBAcGFyYW0gdiBcclxuICAgICAgKi9cclxuICAgIHByaXZhdGUgdXBkYXRlU291bmRWb2x1bWUodjogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5fc291bmRDaGFubmVsTGlzdCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc291bmRDaGFubmVsTGlzdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyYXk6IEFycmF5PGxheWEubWVkaWEuU291bmRDaGFubmVsPiA9IHRoaXMuX3NvdW5kQ2hhbm5lbExpc3Rba2V5XTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXJyYXlbaV0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFycmF5W2ldLnZvbHVtZSA9IHY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmoLnmja7lo7Dpn7PlkI3lrZflhbPpl63lo7Dpn7NcclxuICAgICAqIEBwYXJhbSBzb3VuZE5hbWUgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdG9wU291bmROYW1lKHNvdW5kTmFtZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFzb3VuZE5hbWUpIHJldHVybjtcclxuICAgICAgICBpZiAodGhpcy5fc291bmRDaGFubmVsTGlzdFtzb3VuZE5hbWVdKSB7XHJcbiAgICAgICAgICAgIHZhciBhcnJheSA9IHRoaXMuX3NvdW5kQ2hhbm5lbExpc3Rbc291bmROYW1lXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGFycmF5W2ldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXJyYXlbaV0uc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFycmF5W2ldLm9mZkFsbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFycmF5W2ldID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9zb3VuZENoYW5uZWxMaXN0W3NvdW5kTmFtZV0ubGVuZ3RoID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgTGF5YS5Tb3VuZE1hbmFnZXIuZGVzdHJveVNvdW5kKHNvdW5kTmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlgZzmraLmiYDmnInnmoTlo7Dpn7NcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0b3BBbGwoKTogdm9pZCB7XHJcbiAgICAgICAgU291bmRNYW5hZ2VyLnN0b3BBbGwoKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5pqC5YGc6IOM5pmv6Z+z5LmQXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBwYXVzZU11c2ljKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX211c2ljQ2hhbm5lbCAmJiB0aGlzLl9tdXNpY0NoYW5uZWwucGF1c2UoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOe7p+e7reaSreaUvuiDjOaZr+mfs+S5kFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVzdW1lTXVzaWMoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX211c2ljQ2hhbm5lbClcclxuICAgICAgICAgICAgdGhpcy5fbXVzaWNDaGFubmVsLnJlc3VtZSgpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5wbGF5TXVzaWModGhpcy5fbXVzaWNCZ05hbWUpO1xyXG4gICAgICAgIC8vIHRoaXMuX211c2ljQ2hhbm5lbCAmJiB0aGlzLl9tdXNpY0NoYW5uZWwucmVzdW1lKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWJjeWQjuWPsOWIh+aNolxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF92aXNpYmlsaXR5Q2hhbmdlKCkge1xyXG4gICAgICAgIGlmIChMYXlhLnN0YWdlLmlzVmlzaWJpbGl0eSkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdGFnZU9uRm9jdXMoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9zdGFnZU9uQmx1cigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkseWOu+eEpueCuVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9zdGFnZU9uQmx1cigpIHtcclxuICAgICAgICB0aGlzLl9pc0JsdXIgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucGF1c2VNdXNpYygpO1xyXG4gICAgICAgIHRoaXMuc3RvcFNvdW5kKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bnhKbngrlcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBfc3RhZ2VPbkZvY3VzKCkge1xyXG4gICAgICAgIHRoaXMuX2lzQmx1ciA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucmVzdW1lTXVzaWMoKTtcclxuICAgIH1cclxufSIsImltcG9ydCBCYXNlTWFuYWdlciBmcm9tIFwiLi9CYXNlTWFuYWdlclwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IFNvdW5kIGZyb20gXCIuLi9jb25zdGFudC9Tb3VuZE5hbWVDb25zdGFudFwiO1xyXG5leHBvcnQgZW51bSBUaXBUeXBlIHtcclxuICAgIFFVSVRHQU1FLC8v6YCA5Ye65ri45oiPIOS5n+WPr+eUqOS6jui/lOWbnueZu+W9lVxyXG4gICAgUkVGUkVTSEdBTUUsLy/liLfmlrDmuLjmiI9cclxuICAgIFlFU05PQ0hPSUNFLC8v5Y2V5Y2V6I635b6X546p5a626YCJ5oup5o+Q56S65qGG55qEeWVzIG9yIG5vXHJcbiAgICBPTkVDTE9TRSwvL+WPquacieS4gOS4quWFs+mXreaMiemSriDnlKjkuo7mj5DnpLrkvZznlKhcclxuICAgIFNUT1BBVVRPSFVOVEZJU0gsLy/oh6rliqjmjZXpsbznmoTmj5DnpLrmoYZcclxuICAgIEZMT0FUVElQLC8v6aOY5a2X5o+Q56S65qGG5LiN5bu26L+f5Z6LXHJcbiAgICBGTE9BVFRJUERFTEFZLC8v6aOY5a2X5bu26L+f5Z6LXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpcE1hbmFnZXIgZXh0ZW5kcyBCYXNlTWFuYWdlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBjdXJyVGlwOiBmYWlyeWd1aS5HQ29tcG9uZW50Oy8v5b2T5YmN55qE5o+Q56S65qGGKOmdnumjmOWtl+WeiylcclxuICAgIHByaXZhdGUgaXNIYXZlVGV4dDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSB0ZXhBcnJheTogQXJyYXk8c3RyaW5nPiA9IG5ldyBBcnJheTxzdHJpbmc+KCk7XHJcbiAgICBwcml2YXRlIG1fdGlwRmxvYXQ6IGZhaXJ5Z3VpLkdDb21wb25lbnQgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBfdHJhbjogZmFpcnlndWkuVHJhbnNpdGlvbiA9IG51bGw7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfTtcclxuICAgIHB1YmxpYyBJbml0KCkge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuUmVzb3VyY2VNbmcubG9hZFVJKENvbW1vbkNvbnN0YW50Ll9mdWlUaXBQYXRoLmltYWdlLCBDb21tb25Db25zdGFudC5fZnVpVGlwUGF0aC5mdWksIHRoaXMsIHRoaXMub25Mb2FkUHVibGljKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgb25Mb2FkUHVibGljKCkge1xyXG4gICAgICAgIGZhaXJ5Z3VpLlVJUGFja2FnZS5hZGRQYWNrYWdlKENvbW1vbkNvbnN0YW50Ll9mdWlUaXBQYXRoLlBhY2thZ2UpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIm+W7uuaPkOekuuahhlxyXG4gICAgICogQHBhcmFtIHN0ciDmj5DnpLrlhoXlrrlcclxuICAgICAqIEBwYXJhbSB0eXBlIOaPkOekuuexu+Wei1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY3JlYXRlVGlwKHN0cjogc3RyaW5nLCB0eXBlOiBUaXBUeXBlLCBjYWxsOiBGdW5jdGlvbiA9IG51bGwpIHtcclxuICAgICAgICBpZiAodGhpcy5jdXJyVGlwICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5vbkNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIFRpcFR5cGUuWUVTTk9DSE9JQ0U6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJUaXAgPSB0aGlzLnllc0FuZE5vQ3JlYXRlVGlwKHN0ciwgY2FsbCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBUaXBUeXBlLlFVSVRHQU1FOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyVGlwID0gdGhpcy5vbmx5WWVzQ3JlYXRlVGlwKHN0cik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJUaXAuZ2V0Q2hpbGQoXCJ5ZXNcIikub25DbGljayh0aGlzLCB0aGlzLnF1aXRHYW1lKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFRpcFR5cGUuUkVGUkVTSEdBTUU6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJUaXAgPSB0aGlzLm9ubHlZZXNDcmVhdGVUaXAoc3RyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VyclRpcC5nZXRDaGlsZChcInllc1wiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBUaXBUeXBlLk9ORUNMT1NFOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyVGlwID0gdGhpcy5vbmx5WWVzQ3JlYXRlVGlwKHN0cik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJUaXAuZ2V0Q2hpbGQoXCJ5ZXNcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xvc2UpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgVGlwVHlwZS5TVE9QQVVUT0hVTlRGSVNIOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyVGlwID0gdGhpcy5vbmx5WWVzQ3JlYXRlVGlwKHN0cik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJUaXAuZ2V0Q2hpbGQoXCJ5ZXNcIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xvc2UpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgVGlwVHlwZS5GTE9BVFRJUDpcclxuICAgICAgICAgICAgICAgIHRoaXMuZmxvYXRUaXAoc3RyKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFRpcFR5cGUuRkxPQVRUSVBERUxBWTpcclxuICAgICAgICAgICAgICAgIHRoaXMuZmxvYXRUaXBEZWxheShzdHIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPquacieS4gOS4qnllcyBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvbmx5WWVzQ3JlYXRlVGlwKHN0cjogc3RyaW5nKTogZmFpcnlndWkuR0NvbXBvbmVudCB7XHJcbiAgICAgICAgdmFyIHRpcDEgPSBmYWlyeWd1aS5VSVBhY2thZ2UuY3JlYXRlT2JqZWN0KFwiUHVibGljXCIsIFwidGlwMVwiKS5hc0NvbTtcclxuICAgICAgICB0aXAxLnNldFNpemUoZmFpcnlndWkuR1Jvb3QuaW5zdC53aWR0aCwgZmFpcnlndWkuR1Jvb3QuaW5zdC5oZWlnaHQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQWRkRlVJKHRpcDEpO1xyXG4gICAgICAgIHZhciBjOiBmYWlyeWd1aS5Db250cm9sbGVyID0gdGlwMS5nZXRDb250cm9sbGVyKFwiYzFcIik7XHJcbiAgICAgICAgYy5zZXRTZWxlY3RlZEluZGV4KDEpO1xyXG4gICAgICAgIHRpcDEuZ2V0Q2hpbGQoXCJ0ZXh0XCIpLnRleHQgPSBzdHI7XHJcbiAgICAgICAgdGlwMS5nZXRDaGlsZChcInllc1wiKS5vbkNsaWNrKHRoaXMsIHRoaXMub25DbG9zZSk7XHJcbiAgICAgICAgcmV0dXJuIHRpcDE7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaciXllc+WSjG5vXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgeWVzQW5kTm9DcmVhdGVUaXAoc3RyOiBzdHJpbmcsIGNhbGw6IEZ1bmN0aW9uKTogZmFpcnlndWkuR0NvbXBvbmVudCB7XHJcbiAgICAgICAgdmFyIHRpcDEgPSBmYWlyeWd1aS5VSVBhY2thZ2UuY3JlYXRlT2JqZWN0KFwiUHVibGljXCIsIFwidGlwMVwiKS5hc0NvbTtcclxuICAgICAgICB0aXAxLnNldFNpemUoZmFpcnlndWkuR1Jvb3QuaW5zdC53aWR0aCwgZmFpcnlndWkuR1Jvb3QuaW5zdC5oZWlnaHQpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQWRkRlVJKHRpcDEpO1xyXG4gICAgICAgIHRpcDEuZ2V0Q2hpbGQoXCJ0ZXh0XCIpLnRleHQgPSBzdHI7XHJcbiAgICAgICAgdGlwMS5nZXRDaGlsZChcInllc1wiKS5vbkNsaWNrKHRoaXMsICgpID0+IHsgdGhpcy5jYWxsQmFjayhjYWxsKSB9KTtcclxuICAgICAgICB0aXAxLmdldENoaWxkKFwibm9cIikub25DbGljayh0aGlzLCB0aGlzLm9uQ2xvc2UpO1xyXG4gICAgICAgIHJldHVybiB0aXAxO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDlj43ppohcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjYWxsQmFjayhjYWxsOiBGdW5jdGlvbikge1xyXG4gICAgICAgIHRoaXMub25DbG9zZSgpO1xyXG4gICAgICAgIHJldHVybiBjYWxsKHRydWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDpo5jlrZflu7bov5/lnotcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBmbG9hdFRpcERlbGF5KHN0cjogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNIYXZlVGV4dCkge1xyXG4gICAgICAgICAgICB0aGlzLnRleEFycmF5LnB1c2goc3RyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNIYXZlVGV4dCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1fdGlwRmxvYXQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5SZW1vdmVGVUkodGhpcy5tX3RpcEZsb2F0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm1fdGlwRmxvYXQgPSBmYWlyeWd1aS5VSVBhY2thZ2UuY3JlYXRlT2JqZWN0KFwiUHVibGljXCIsIFwidGlwRmxvYXRcIikuYXNDb207XHJcbiAgICAgICAgICAgIHRoaXMubV90aXBGbG9hdC5zZXRTaXplKGZhaXJ5Z3VpLkdSb290Lmluc3Qud2lkdGgsIGZhaXJ5Z3VpLkdSb290Lmluc3QuaGVpZ2h0KTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5BZGRGVUkodGhpcy5tX3RpcEZsb2F0KTtcclxuICAgICAgICAgICAgdGhpcy5tX3RpcEZsb2F0LmdldENoaWxkKFwidGV4dFwiKS50ZXh0ID0gc3RyO1xyXG4gICAgICAgICAgICB0aGlzLl90cmFuID0gdGhpcy5tX3RpcEZsb2F0LmdldFRyYW5zaXRpb24oXCJ0MFwiKTtcclxuICAgICAgICAgICAgdGhpcy5fdHJhbi5wbGF5KG5ldyBMYXlhLkhhbmRsZXIodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pc0hhdmVUZXh0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50ZXhBcnJheS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mbG9hdFRpcCh0aGlzLnRleEFycmF5LnNoaWZ0KCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5SZW1vdmVGVUkodGhpcy5tX3RpcEZsb2F0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpo5jlrZfkuI3lu7bov59cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBmbG9hdFRpcChzdHI6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLm1fdGlwRmxvYXQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLlJlbW92ZUZVSSh0aGlzLm1fdGlwRmxvYXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1fdGlwRmxvYXQgPSBmYWlyeWd1aS5VSVBhY2thZ2UuY3JlYXRlT2JqZWN0KFwiUHVibGljXCIsIFwidGlwRmxvYXRcIikuYXNDb207XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5BZGRGVUkodGhpcy5tX3RpcEZsb2F0KTtcclxuICAgICAgICB0aGlzLm1fdGlwRmxvYXQuc2V0U2l6ZShmYWlyeWd1aS5HUm9vdC5pbnN0LndpZHRoLCBmYWlyeWd1aS5HUm9vdC5pbnN0LmhlaWdodCk7XHJcblxyXG4gICAgICAgIHRoaXMubV90aXBGbG9hdC5nZXRDaGlsZChcInRleHRcIikudGV4dCA9IHN0cjtcclxuICAgICAgICB0aGlzLl90cmFuID0gdGhpcy5tX3RpcEZsb2F0LmdldFRyYW5zaXRpb24oXCJ0MFwiKTtcclxuICAgICAgICB0aGlzLl90cmFuLnBsYXkobmV3IExheWEuSGFuZGxlcih0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuUmVtb3ZlRlVJKHRoaXMubV90aXBGbG9hdCk7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDpgIDlh7rmuLjmiI8g6L+U5Zue5aSn5Y6FXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcXVpdEdhbWUoKSB7XHJcbiAgICAgICAgdGhpcy5vbkNsb3NlKCk7XHJcbiAgICAgICAgd2luZG93LmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWIt+aWsOa4uOaIj1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlZmVzaEdhbWUoKSB7XHJcbiAgICAgICAgd2luZG93Lm9wZW4odXRpbHMuQ29tbW9uVXRpbHMuZ2V0TG9jYWxIcmVmKCkpO1xyXG4gICAgICAgIHRoaXMub25DbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWz6Zet5by55qGGXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25DbG9zZSgpIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvdW5kTW5nLnBsYXlTb3VuZChTb3VuZC5zb3VuZEhlYWRBcnIua2V5U291bmRIZWFkLCBTb3VuZC5zb3VuZEtleUFyci5vbkNsb3NlKTtcclxuICAgICAgICBpZiAodGhpcy5jdXJyVGlwICE9IG51bGwpIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5SZW1vdmVGVUkodGhpcy5jdXJyVGlwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWklumDqOWboOe0oOWFs+mXrVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY2xvc2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3VyclRpcCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuUmVtb3ZlRlVJKHRoaXMuY3VyclRpcCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm1fdGlwRmxvYXQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLl90cmFuLnN0b3AoKTtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5SZW1vdmVGVUkodGhpcy5tX3RpcEZsb2F0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIvL+WFjei9rOmSseWMheeuoeeQhuexu1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmFzZU1hbmFnZXIgZnJvbSBcIi4vQmFzZU1hbmFnZXJcIjtcclxuaW1wb3J0IEdDb21wb25lbnQgPSBmYWlyeWd1aS5HQ29tcG9uZW50O1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRMb2dpblwiO1xyXG5pbXBvcnQgTmV0Um9vbSBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFJvb21cIjtcclxuaW1wb3J0IE5ldFdhbGxldCBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL05ldFdhbGxldFwiO1xyXG5pbXBvcnQgTGFuZyBmcm9tIFwiLi4vY29uc3RhbnQvTGFuZ3VhZ2VDb25zdGFudFwiO1xyXG5pbXBvcnQgeyBUaXBUeXBlIH0gZnJvbSBcIi4vVGlwTWFuYWdlclwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IFdhbGxldFBhbmVsIGZyb20gXCIuLi9nYW1lL1BhbmVsL1dhbGxldFBhbmVsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgRXZlbnROZXRSZXNwb25zZSBmcm9tIFwiLi4vbmV0L1Byb3RvSGFuZGVyL0V2ZW50TmV0UmVzcG9uc2VcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYWxsZXRNYW5hZ2VyIGV4dGVuZHMgQmFzZU1hbmFnZXIge1xyXG5cclxuICAgIC8vcHJpdmF0ZSB3YWxsZXRTbGlWYWx1ZTogbnVtYmVyOy8v5ruR5Yqo5p2h5ruR5Yqo55qE5YC8XHJcbiAgICBwcml2YXRlIGlzSGF2ZVBhbmVsOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgLyoqIOaYr+WQpuaJk+W8gOmdouadv+ivt+axguWKoOmSsSovXHJcbiAgICBwcml2YXRlIGJSZXFXYWxsZXRQYW5lbDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIC8qKmZn6ZKx5YyF55qE5pi+56S65L2Z6aKdIOacgOaWsCAqL1xyXG4gICAgcHVibGljIGZnV2FsbGV0VmFsdWVCeVBhbmVsOiBudW1iZXIgPSBudWxsO1xyXG4gICAgLyoqZmfpkrHljIXlnKjlj5HlsITlrZDlvLnlkI7nmoTkvZnpop0g5LiN6K6w5b2V5omT5q276bG855qE6ZKxKi9cclxuICAgIHB1YmxpYyBmZ1dhbGxldFZhbHVlQWZ0ZXJTaG9vdDogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyBhZGRUb1ZhbHVlOiBudW1iZXIgPSBudWxsO1xyXG4gICAgcHVibGljIGlzQXV0b0xvY2FsOiBib29sZWFuO1xyXG4gICAgcHVibGljIHdhbGxldFBhbmVsOiBXYWxsZXRQYW5lbCA9IG51bGw7XHJcblxyXG4gICAgcHVibGljIEluaXQoKSB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5NYWluV2FsbGV0UmVzcCwgdGhpcywgdGhpcy5tYWluV2FsbGV0UmVzcCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5hZGQoRXZlbnROZXRSZXNwb25zZS5XYWxsZXRSZXNwLCB0aGlzLCB0aGlzLndhbGxldFJlc3ApO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBVbkluaXQoKSB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5yZW1vdmUoRXZlbnROZXRSZXNwb25zZS5XYWxsZXRSZXNwLCB0aGlzLCB0aGlzLndhbGxldFJlc3ApO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcucmVtb3ZlKEV2ZW50TmV0UmVzcG9uc2UuTWFpbldhbGxldFJlc3AsIHRoaXMsIHRoaXMubWFpbldhbGxldFJlc3ApO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOmSseivt+axgui/lOWbnlxyXG4gICAgICogQHBhcmFtIGRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgd2FsbGV0UmVzcChkYXRhOiBXYWxsZXRNc2cud2FsbGV0X3Jlc3ApIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLliqDpkrEgIHdhbGxldFJlc3AgcGJEYXRhID0gXCIsIGRhdGEpO1xyXG4gICAgICAgIHZhciBjb2RlID0gV2FsbGV0TXNnLm1zZ193YWxsZXRfY29kZTtcclxuICAgICAgICBzd2l0Y2ggKGRhdGEuY29kZSkge1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUuU1VDQ0VTUzpcclxuICAgICAgICAgICAgICAgIGxldCBhZGRWYWx1ZSA9IHRoaXMuYWRkVG9WYWx1ZSAtIHRoaXMuZmdXYWxsZXRWYWx1ZUFmdGVyU2hvb3Q7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5iUmVxV2FsbGV0UGFuZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJSZXFXYWxsZXRQYW5lbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFkZFZhbHVlID0gdGhpcy5hZGRUb1ZhbHVlIC0gdGhpcy5mZ1dhbGxldFZhbHVlQnlQYW5lbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChhZGRWYWx1ZSA9PSAwKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5mcmVlVHJhbldhbGxldENoLmF1dG9BZGRXYWxsZXQucmVwbGFjZShcInswfVwiLCAodXRpbHMuQ29tbW9uVXRpbHMubnVtYmVyRml4ZWQoYWRkVmFsdWUpKS50b0ZpeGVkKDIpKSwgVGlwVHlwZS5GTE9BVFRJUCk7XHJcbiAgICAgICAgICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5TdG9wQXV0b0F0dGFjaygpO1xyXG4gICAgICAgICAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuU3RvcExvY2tBdHRhY2soKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUuRkFJTDpcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmZyZWVUcmFuV2FsbGV0Q2gucmVxRmFpbCwgVGlwVHlwZS5GTE9BVFRJUCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBjb2RlLkZSRVFVRU5UOlxyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKExhbmcuZnJlZVRyYW5XYWxsZXRDaC5yZXFUb29GYXN0LCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIGNvZGUuRlJFUVVFTlRZOlxyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKExhbmcuZnJlZVRyYW5XYWxsZXRDaC5jb25TZXJ2ZXIsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBtYWluV2FsbGV0UmVzcChkYXRhOiBXYWxsZXRNc2cubWFpbl93YWxsZXRfcmVzcCkge1xyXG4gICAgICAgIC8vIHRoaXMud2FsbGV0UGFuZWwuY2VydGVyV2FsbGV0VmFsdWUgPSBOdW1iZXIoZGF0YS5jaGlwcyk7XHJcbiAgICAgICAgLy8gdGhpcy53YWxsZXRQYW5lbC5pc0F1dG9TZXJ2ZXIgPSBHYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5jaGFuZ2VOdW1Ub0Jvb2woZGF0YS5hdXRvX3dhbGxldCk7XHJcbiAgICAgICAgLy8gdGhpcy53YWxsZXRQYW5lbC5pbml0RGF0YSgpO1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIumSseWMheW8ueahhuivt+axgui/lOWbniBtYWluV2FsbGV0UmVzcCBwYkRhdGEgPSBcIiwgZGF0YSk7XHJcbiAgICAgICAgbGV0IGVudW1Db2RlID0gV2FsbGV0TXNnLm1zZ193YWxsZXRfY29kZTtcclxuICAgICAgICBzd2l0Y2ggKGRhdGEuY29kZSkge1xyXG4gICAgICAgICAgICBjYXNlIGVudW1Db2RlLlNVQ0NFU1M6XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9tYW5hZ2VyLlNjZW5lTWFuYWdlci5pbnN0YW5jZS5EaWFsb2dMYXllci5hZGRDaGlsZChuZXcgZ2FtZS5Nb25leVN1cHBseURpYWxvZyhkYXRhLmNoaXBzKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9HYW1lRmFjYWRlLkluc3RhbmNlLldhbGxldE1uZy5TaG93V2FsbGV0KGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2FsbGV0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLldhbGxldFBhbmVsKSBhcyBXYWxsZXRQYW5lbDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLndhbGxldFBhbmVsLmluaXREYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYlJlcVdhbGxldFBhbmVsID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBlbnVtQ29kZS5GQUlMOlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmZyZWVUcmFuV2FsbGV0Q2gucmVxRmFpbCwgVGlwVHlwZS5GTE9BVFRJUCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgZW51bUNvZGUuRlJFUVVFTlRZOlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmZyZWVUcmFuV2FsbGV0Q2guY29uU2VydmVyLCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBlbnVtQ29kZS5GUkVRVUVOVDpcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5mcmVlVHJhbldhbGxldENoLnJlcVRvb0Zhc3QsIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBjYXNlIGVudW1Db2RlLk5PVF9FTk9VR0g6e1xyXG4gICAgICAgICAgICAvLyBcdG1hbmFnZXIuU2NlbmVNYW5hZ2VyLmluc3RhbmNlLkRpYWxvZ0xheWVyLmFkZENoaWxkKG5ldyBnYW1lLlRpcERpYWxvZyhwcm94eXMuTGFuZ3VhZ2VQcm94eS5pbnN0YW5jZS5nZXRUZXh0QnlJZCgyMDAwNykvKuS4reW/g+mSseWMheS9memineS4jei2syovLCAzMDApKTtcclxuICAgICAgICAgICAgLy8gXHRicmVhaztcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog5ZCM5q2lRkfpkrHljIUqL1xyXG4gICAgcHVibGljIHNldEZnV2FsbGV0VmFsdWUoY2hpcHMpIHtcclxuICAgICAgICBpZiAobnVsbCAhPSB0aGlzLndhbGxldFBhbmVsKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0UGFuZWwuc3luY1dlbGxldEZHKGNoaXBzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1haW5XYWxsZXRSZXEoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKE5ldExvZ2luLkluc3RhbmNlLmlzT2ZmaWNpYWwpIHtcclxuICAgICAgICAgICAgTmV0V2FsbGV0Lkluc3RhbmNlLm1haW5XYWxsZXRSZXEoKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ2xvc2VXYWxsdFBhbmVsKCkge1xyXG4gICAgICAgIGlmICh0aGlzLndhbGxldFBhbmVsICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy53YWxsZXRQYW5lbC5PbkNsb3NlKCk7XHJcbiAgICAgICAgICAgIHRoaXMud2FsbGV0UGFuZWwgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyDkvZnpop3kuI3otrNcclxuICAgIHB1YmxpYyBJc2ZnV2FsbGV0RW5vdWdoKCkge1xyXG4gICAgICAgIGlmICghQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UpIHJldHVybjtcclxuICAgICAgICBsZXQgc2VsZkNhbm5vbiA9IEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLnNlbGZDYW5ub247XHJcbiAgICAgICAgaWYgKG51bGwgPT0gc2VsZkNhbm5vbiB8fCBudWxsID09IHNlbGZDYW5ub24uRGF0YSkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICBsZXQgamV0dG9uU2hvdyA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKHNlbGZDYW5ub24uRGF0YS5qZXR0b25fc2hvdyBhcyBudW1iZXIpO1xyXG4gICAgICAgIGxldCBidWxsZXRNdWx0aSA9IHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKHNlbGZDYW5ub24uRGF0YS5idWxsZXRfbXVsdGkgKiBOZXRSb29tLkluc3RhbmNlLl9jdXJSb29tSW5mby5hbnRlKTtcclxuICAgICAgICBpZiAoamV0dG9uU2hvdyA8IGJ1bGxldE11bHRpKSB7XHJcbiAgICAgICAgICAgIGlmIChOZXRMb2dpbi5JbnN0YW5jZS5pc09mZmljaWFsKSB7XHJcbiAgICAgICAgICAgICAgICAvLyDoh6rliqjliqDpkrEgdG9kb1xyXG4gICAgICAgICAgICAgICAgLy8g5aaC5p6cIGFkZFRvVmFsdWUgPiBmZ+S9memineacjeWKoeerr+S8muiHquWKqOaOqOmAgeWKoOmSsSwg5ZCm5YiZ6KaB57uZ5o+Q56S6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0F1dG9Mb2NhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vaWYgKHV0aWxzLkNvbW1vblV0aWxzLm51bWJlckZpeGVkKHRoaXMuYWRkVG9WYWx1ZSkgPCBidWxsZXRNdWx0aSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvL2ZnPj3lrZDlvLnpop3luqbvvIzmraTml7bngrnlh7vngq7lj7DnmoTvvIvmjInpkq7vvIzov5nmmK/ml6Dms5Xoh6rliqjliqDpkrHvvIzlj6rog73nu5nmj5DnpLpcclxuICAgICAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlRpcE1uZy5jcmVhdGVUaXAoTGFuZy5mcmVlVHJhbldhbGxldENoLmNsaXBOb01vbmV5LCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgICAgICAgICAvL31cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvLyDlvLnmoYbliqDpkrFcclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIC8v5bCE5Ye655qE5a2Q5by56L+Y5Zyo56e75Yqo5YiZ57uZ5o+Q56S677yM5LiN5by55qGGXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlNob290ZWRCdWxsZXRBbW91bnQgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmZyZWVUcmFuV2FsbGV0Q2guY2xpcE5vTW9uZXksIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcubWFpbldhbGxldFJlcSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChMYW5nLmZyZWVUcmFuV2FsbGV0Q2guY2xpcE5vTW9uZXksIFRpcFR5cGUuRkxPQVRUSVApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbn0iLCJcclxuaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgUGFja2FnZUluIGZyb20gXCIuL1BhY2thZ2VJblwiO1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIE5ldFJlYWRlciBcclxuICAgICAqL1xyXG4gICAgZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0UmVhZGVyXHJcbiAgICB7XHJcbiAgICAgICAgcHJpdmF0ZSBfcGFja2FnZXM6QXJyYXk8UGFja2FnZUluPiA9IG5ldyBBcnJheTxQYWNrYWdlSW4+KCk7XHJcbiAgICAgICAgY29uc3RydWN0b3IoKSBcclxuICAgICAgICB7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc2V0UGFzc3dvcmQoKVxyXG4gICAgICAgIHtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgZGVjb2RlKClcclxuICAgICAgICB7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIGFkZFBhY2thZ2UocGtnOlBhY2thZ2VJbilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuX3BhY2thZ2VzLnVuc2hpZnQocGtnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBoYXNOZXh0KCk6Ym9vbGVhblxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3BhY2thZ2VzLmxlbmd0aCA+IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgaGFuZGxlTmV4dCgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgcGtnOlBhY2thZ2VJbiA9IHRoaXMuX3BhY2thZ2VzLnBvcCgpO1xyXG4gICAgICAgICAgICAvLyDnlLFOZXRXb3JrTWFuYWdlcuWkhOeQhlxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIG5vdGlmeSgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgcGtnSW46UGFja2FnZUluO1xyXG4gICAgICAgICAgICB3aGlsZSAodGhpcy5fcGFja2FnZXMubGVuZ3RoID4gMCkgXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHBrZ0luID0gdGhpcy5fcGFja2FnZXMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5kaXNwYXRjaE1lc3NhZ2UocGtnSW4uY29kZSxwa2dJbi5kYXRhKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiBcclxuICIsImltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IFByb3RvQnVmIGZyb20gXCIuL1Byb3RvQnVmXCI7XHJcblxyXG4vKipcclxuICogUGFja2FnZUluXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWNrYWdlSW4gZXh0ZW5kcyBMYXlhLkJ5dGUge1xyXG4gICAgY29uc3RydWN0b3Ioc291cmNlOiBBcnJheUJ1ZmZlciwgc3RhcnQ6IG51bWJlciA9IDApIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuZW5kaWFuID0gTGF5YS5Tb2NrZXQuQklHX0VORElBTjtcclxuXHJcbiAgICAgICAgLy8g5o+Q5Y+W5Y2P6K6u5Y+3XHJcbiAgICAgICAgdGhpcy53cml0ZUFycmF5QnVmZmVyKHNvdXJjZSwgc3RhcnQsIDIpO1xyXG5cclxuICAgICAgICB0aGlzLnBvcyA9IDA7XHJcbiAgICAgICAgdGhpcy5fUmVhZEhlYWRlcigpO1xyXG4gICAgICAgIHRoaXMuY2xlYXIoKTtcclxuICAgICAgICB0aGlzLndyaXRlQXJyYXlCdWZmZXIoc291cmNlLCAyKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGRhdGEoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzZXQgZGF0YSh2OiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9kYXRhID0gdjtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIF9kYXRhOiBhbnk7XHJcblxyXG4gICAgcHVibGljIGdldCBzdGFydCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zdGFydDtcclxuICAgIH1cclxuICAgIHByaXZhdGUgX3N0YXJ0OiBudW1iZXI7XHJcblxyXG5cclxuICAgIC8vIOWunumZheacieaViOmVv+W6plxyXG4gICAgcHVibGljIGdldCB2YWxpZExlbmd0aCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl92YWxpZExlbmd0aDtcclxuICAgIH1cclxuICAgIHByaXZhdGUgX3ZhbGlkTGVuZ3RoOiBudW1iZXIgPSAwO1xyXG5cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNvZGUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29kZTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgX2NvZGU6IG51bWJlciA9IC0xO1xyXG5cclxuXHJcbiAgICBwcml2YXRlIF9SZWFkSGVhZGVyKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvZGUgPSB0aGlzLmdldFVpbnQxNigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1bnBhY2soKSB7XHJcbiAgICAgICAgbGV0IGJ1ZmZlcjogQXJyYXlCdWZmZXIgPSB0aGlzLmJ1ZmZlcjtcclxuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLmRlY29kZShQcm90b0J1Zi5kZWNvZGUodGhpcy5jb2RlKSwgbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICog6Kej56CBXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBkZWNvZGUoY2xzOiB7IGRlY29kZTxUPihyZWFkZXI6IChwcm90b2J1Zi5SZWFkZXIgfCBVaW50OEFycmF5KSkgfSwgZGF0YTogVWludDhBcnJheSk6IHByb3RvYnVmLk1lc3NhZ2U8YW55PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYCBjbHM6JHtjbHN9YCk7XHJcblxyXG4gICAgICAgIGlmICghY2xzKSByZXR1cm4gbnVsbDtcclxuICAgICAgICByZXR1cm4gY2xzLmRlY29kZShkYXRhKTtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiXHJcbiAgICAvKipcclxuICogUGFja2FnZU91dFxyXG4gKi9cclxuICAgIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhY2thZ2VPdXQgZXh0ZW5kcyBsYXlhLnV0aWxzLkJ5dGV7XHJcbiAgICAgICAgcHVibGljIGdldCBjb2RlKCkgOiBudW1iZXIge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY29kZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJpdmF0ZSBfY29kZTpudW1iZXI7XHJcblxyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9wYWNrYWdlSW5kZXg6bnVtYmVyID0gMDtcclxuXHJcblxyXG4gICAgICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgICAgICB0aGlzLmVuZGlhbiA9IExheWEuU29ja2V0LkJJR19FTkRJQU47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKiog5pWw5o2u5YyF5Yid5aeL5YyWICovXHJcbiAgICAgICAgcHVibGljIGluaXQoY29kZTpudW1iZXIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvLyDmuIXpmaTmlbDmja5cclxuICAgICAgICAgICAgdGhpcy5jbGVhcigpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy53cml0ZVVpbnQxNihjb2RlKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX2NvZGUgPSBjb2RlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHBhY2soZGF0YTpwcm90b2J1Zi5NZXNzYWdlPGFueT4pXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLndyaXRlQXJyYXlCdWZmZXIoZGF0YVtcIl9fcHJvdG9fX1wiXS5jb25zdHJ1Y3Rvci5lbmNvZGUoZGF0YSkuZmluaXNoKCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAiLCJcclxuLy9wcm90b2J1ZuaVsOaNruWMheeahOWJjTE25a2X6IqC77yM5aSn5aS05Y2g5YmNN+S4quWtl+iKgiDlsI/lpLTljaDlkI455Liq5a2X6IqCXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm90b0J1ZiB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBQcm90b0RpYzogTGF5YS5XZWFrT2JqZWN0O1xyXG5cclxuICAgIC8qKiDmoLnmja7lpKflpLTlkozlsI/lpLTnu4TlkIjmiJDmlofku7bnmoTlpLQqL1xyXG4gICAgcHVibGljIHN0YXRpYyBidWlsZChjbWQ6IG51bWJlciwgY2NtZDogbnVtYmVyKTogbnVtYmVyIHtcclxuXHJcbiAgICAgICAgdmFyIGhlYWRDbWQgPSBjbWQgPDwgOTtcclxuICAgICAgICBoZWFkQ21kICs9IGNjbWQ7XHJcbiAgICAgICAgcmV0dXJuIGhlYWRDbWQ7XHJcbiAgICB9XHJcbiAgICAvKiog5qC55o2u5pWw5o2u5aS077yIMTbkvY3lrZfoioLmlbDmja7vvInvvIzmi4bop6Plh7rlpKflpLTvvIjliY035L2N5a2X6IqC77yJ5LiO5bCP5aS077yI5ZCOOeS9jeWtl+iKgu+8iSovXHJcbiAgICBwdWJsaWMgc3RhdGljIFJlc29sdmUoaGVhZENtZDpudW1iZXIpOiBhbnkge1xyXG4gICAgICAgIHZhciBjbWQgPSBoZWFkQ21kID4+IDk7XHJcbiAgICAgICAgdmFyIGNjbWQgPSBoZWFkQ21kIDw8IDIzO1xyXG4gICAgICAgIHZhciBjY21kID0gY2NtZCA+PiAyMztcclxuICAgICAgICByZXR1cm4gW2NtZCxjY21kXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOagueaNruaVsOaNruWktO+8jOW+l+WIsOaVsOaNruS9k+WvueW6lOeahOexu1xyXG4gICAgICogQHBhcmFtIGhlYWRDbWQg5pWw5o2u5aS0XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZGVjb2RlKGhlYWRDbWQ6IG51bWJlcik6IGFueSB7XHJcbiAgICAgICAgLy8gdmFyIHZhbHVlID0gdGhpcy5Qcm90b0RpYy5nZXQoaGVhZENtZCk7XHJcbiAgICAgICAgLy8gdmFyIGNtZCA9IGhlYWRDbWQgPj4gOTtcclxuICAgICAgICAvLyB2YXIgY2NtZCA9IGhlYWRDbWQgPDwgMjM7XHJcbiAgICAgICAgLy8gdmFyIGNjbWQgPSBjY21kID4+IDIzO1xyXG4gICAgICAgIHJldHVybiB0aGlzLlByb3RvRGljLmdldChoZWFkQ21kKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlZ2lzdGVyQ01EKGNtZDogbnVtYmVyLCBkYXRhOiBhbnkpIHtcclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLlByb3RvRGljKVxyXG4gICAgICAgICAgICB0aGlzLlByb3RvRGljID0gbmV3IExheWEuV2Vha09iamVjdCgpO1xyXG4gICAgICAgIHRoaXMuUHJvdG9EaWMuc2V0KGNtZCwgZGF0YSk7XHJcbiAgICB9XHJcbn1cclxuIiwiLyoqXHJcbiAqIOacjeWKoeWZqOaVsOaNruWkhOeQhuS5i+WQjueahOS6i+S7tuWIhuWPkVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnROZXRSZXNwb25zZSB7XHJcbiAgICAvKiog6L+b5YWl5oi/6Ze0Ki9cclxuICAgIHB1YmxpYyBzdGF0aWMgRW50ZXJSb29tUmVzcDogc3RyaW5nID0gXCJFbnRlclJvb21SZXNwXCI7XHJcblxyXG4gICAgLyoqIOiOt+W+l+aNleeMjuS6uueahOS/oeaBr++8jOaIv+mXtOWHhuWkh+WlveS6hiovXHJcbiAgICBwdWJsaWMgc3RhdGljIFJlYWR5Um9vbVJlc3A6IHN0cmluZyA9IFwiUmVhZHlSb29tUmVzcFwiO1xyXG4gICAgLyoqIOWQjOatpeaIv+mXtOWGheaJgOacieeahOeOqeWutuS/oeaBryovXHJcbiAgICBwdWJsaWMgc3RhdGljIFN5blJvbGVSZXNwOiBzdHJpbmcgPSBcIlN5blJvbGVSZXNwXCI7XHJcbiAgICAvKiog5ZCM5q2l5Ye66bG85L+h5oGvKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgU3luRmlzaFJlc3A6IHN0cmluZyA9IFwiU3luRmlzaFJlc3BcIjtcclxuICAgIC8qKiDmlLnlj5jngq7lj7DlgI3njocg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgQ2hhbmdlQmF0dGVyeVJlc3A6IHN0cmluZyA9IFwiQ2hhbmdlQmF0dGVyeVJlc3BcIjtcclxuICAgIC8qKiDlrZDlvLnnmoTlsITlh7sg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgU2hvb3RCdWxsZXRSZXNwOiBzdHJpbmcgPSBcIlNob290QnVsbGV0UmVzcFwiO1xyXG4gICAgLyoqIOWtkOW8ueeahOWwhOWHuyDmtojmga/ov5Tlm54qL1xyXG4gICAgcHVibGljIHN0YXRpYyBTaG9vdEVycm9yUmVzcDogc3RyaW5nID0gXCJTaG9vdEVycm9yUmVzcFwiO1xyXG4gICAgLyoqIOacieeOqeWutuemu+W8gOaIv+mXtCDmtojmga/ov5Tlm54qL1xyXG4gICAgcHVibGljIHN0YXRpYyBMZWF2ZVJvb21SZXNwOiBzdHJpbmcgPSBcIkxlYXZlUm9vbVJlc3BcIjtcclxuICAgIC8qKiDliLfmlrDph5HluIEg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgVXBkYXRlQ2hpcFJlc3A6IHN0cmluZyA9IFwiVXBkYXRlQ2hpcFJlc3BcIjtcclxuICAgIC8qKiDlkIzmraXnjqnlrrboh6rlt7Hph5HluIEg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgU3luY0NoaXBzUmVzcDogc3RyaW5nID0gXCJTeW5jQ2hpcHNSZXNwXCI7XHJcbiAgICAvKirnlKjkuo7lhY3ovazlkIzmraXph5HluIEgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgTXFTeW5jQ2hpcHNSZXNwOiBzdHJpbmcgPSBcIk1xU3luY0NoaXBzUmVzcFwiO1xyXG4gICAgLyoqIOWtkOW8ueaXoOaViCDmtojmga/ov5Tlm54qL1xyXG4gICAgcHVibGljIHN0YXRpYyBCdWxsZXRVc2VsZXNzUmVzcDogc3RyaW5nID0gXCJCdWxsZXRVc2VsZXNzUmVzcFwiO1xyXG4gICAgLyoqIOWtkOW8ueaXoOaViCDmtojmga/ov5Tlm54qL1xyXG4gICAgcHVibGljIHN0YXRpYyBCdWxsZXRQYXNzUmVzcDogc3RyaW5nID0gXCJCdWxsZXRQYXNzUmVzcFwiO1xyXG4gICAgLyoqIOWtkOW8ueaXoOaViCDmtojmga/ov5Tlm54qL1xyXG4gICAgcHVibGljIHN0YXRpYyBTeW5jSnBKZXR0b25SZXNwOiBzdHJpbmcgPSBcIlN5bmNKcEpldHRvblJlc3BcIjtcclxuICAgIC8qKiDpsbzmrbvkuqEg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgRmlzaERlYWRSZXNwOiBzdHJpbmcgPSBcIkZpc2hEZWFkUmVzcFwiO1xyXG4gICAgLyoqIOS7juS4lueVjEJvc3PouqvkuIrmjonkuIvph5HluIEg5raI5oGv6L+U5ZueKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgT25lUGllY2VSZXNwOiBzdHJpbmcgPSBcIk9uZVBpZWNlUmVzcFwiO1xyXG4gICAgLyoq5Yqg6ZKx5L+h5oGv5Y+N6aaIICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFdhbGxldFJlc3A6IHN0cmluZyA9IFwiV2FsbGV0UmVzcFwiO1xyXG4gICAgLyoq6ZKx5YyF5by55qGG5L+h5oGv5Y+N6aaIICovXHJcbiAgICBwdWJsaWMgc3RhdGljIE1haW5XYWxsZXRSZXNwOiBzdHJpbmcgPSBcIk1haW5XYWxsZXRSZXNwXCI7XHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBUaXBUeXBlIH0gZnJvbSBcIi4uLy4uL21hbmFnZXIvVGlwTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0QWN0IHtcclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogTmV0QWN0O1xyXG4gICAgcHJpdmF0ZSB1aWQ6IG51bWJlciB8IExvbmc7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBOZXRBY3Qge1xyXG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgTmV0QWN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19hY3QsIEFjdE1zZy5jX2NtZC5hY3RfbGlzdF9yZXNwLCBBY3RNc2cuYWN0X2xpc3RfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmFjdExpc3RSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19hY3QsIEFjdE1zZy5jX2NtZC5hY3RfZGV0YWlsX2luZm9fcmVzcCwgQWN0TXNnLmFjdF9kZXRhaWxfaW5mb19yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuYWN0RGV0YWlsUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYWN0LCBBY3RNc2cuY19jbWQudG9wXzEyX25vdGljZV9yZXNwLCBBY3RNc2cudG9wXzEyX25vdGljZV9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMudG9wTm90aWNlUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOa0u+WKqOWIl+ihqOivt+axglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgYWN0TGlzdFJlcSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxOiBBY3RNc2cuYWN0X2xpc3RfcmVxID0gbmV3IEFjdE1zZy5hY3RfbGlzdF9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2FjdCwgQWN0TXNnLmNfY21kLmFjdF9saXN0X3JlcSwgcmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOa0u+WKqOivpuaDheivt+axglxyXG4gICAgICogQHBhcmFtIGZ1bmRJZCBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGFjdERldGFpbFJlcShpZDogbnVtYmVyIHwgTG9uZyk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXE6IEFjdE1zZy5hY3RfZGV0YWlsX2luZm9fcmVxID0gbmV3IEFjdE1zZy5hY3RfZGV0YWlsX2luZm9fcmVxKCk7XHJcbiAgICAgICAgcmVxLnVpZCA9IGlkO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfYWN0LCBBY3RNc2cuY19jbWQuYWN0X2RldGFpbF9pbmZvX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635b6X5rS75Yqo5YiX6KGoXHJcbiAgICAgKiBAcGFyYW0gY21kIFxyXG4gICAgICogQHBhcmFtIHBiRGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhY3RMaXN0UmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBBY3RNc2cuYWN0X2xpc3RfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIC8vLy8gY29uc29sZS5sb2cocGJEYXRhKTtcclxuXHJcbiAgICAgICAgdmFyIGFjdEluZm86IEFycmF5PEFjdE1zZy5JYWN0X2luZm8+ID0gcGJEYXRhLmluZm87XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY3RJbmZvLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMudWlkID0gYWN0SW5mb1swXS51aWQ7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkFDVExJU1RSRVNQLCBhY3RJbmZvWzBdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy90aGlzLmFjdERldGFpbFJlcSh0aGlzLnVpZCk7Ly/mmoLml7bmsqHmnInnlKjliLDmtLvliqjor6bmg4VcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAqIOiOt+W+l+a0u+WKqOivpuaDhVxyXG4gICAgKiBAcGFyYW0gY21kIFxyXG4gICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgKi9cclxuICAgIHByaXZhdGUgYWN0RGV0YWlsUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBBY3RNc2cuYWN0X2RldGFpbF9pbmZvX3Jlc3ApOiB2b2lkIHtcclxuXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOi/lOWIqea0u+WKqOmjmOWtl1xyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgdG9wTm90aWNlUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBBY3RNc2cudG9wXzEyX25vdGljZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5UaXBNbmcuY3JlYXRlVGlwKHBiRGF0YS5jb250ZW50LCBUaXBUeXBlLkZMT0FUVElQREVMQVkpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IEZ1bmRUaXBQYW5lbCBmcm9tIFwiLi4vLi4vZ2FtZS9QYW5lbC9GdW5kVGlwUGFuZWxcIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRBd2FyZCB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldEF3YXJkO1xyXG4gICAgcHVibGljIGVuZFRpbWU6IG51bWJlcjtcclxuICAgIHB1YmxpYyBpc0hhdmVGdW5kVGlwOiBib29sZWFuID0gZmFsc2U7Ly/mmK/lkKbmnInnrYnnuqfmj5DnpLpcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IE5ldEF3YXJkIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE5ldEF3YXJkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19hd2FyZCwgQXdhcmRNc2cuY19jbWQuZ3Jvd3RoX2Z1bmRfaW5mb19yZXNwLCBBd2FyZE1zZy5ncm93dGhfZnVuZF9pbmZvX3Jlc3AsXHJcbiAgICAgICAgICAgIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5ncm93dGhGdW5kSW5mb1Jlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX2F3YXJkLCBBd2FyZE1zZy5jX2NtZC5ncm93dGhfZnVuZF9jb25maWdfcmVzcCwgQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfY29uZmlnX3Jlc3AsXHJcbiAgICAgICAgICAgIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5ncm93dGhGdW5kQ29uZmlnUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYXdhcmQsIEF3YXJkTXNnLmNfY21kLmdyb3d0aF9mdW5kX2J1eV9yZXNwLCBBd2FyZE1zZy5ncm93dGhfZnVuZF9idXlfcmVzcCxcclxuICAgICAgICAgICAgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmdyb3d0aEZ1bmRCdXlSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19hd2FyZCwgQXdhcmRNc2cuY19jbWQubHZfYXdhcmRfcmVzcCwgQXdhcmRNc2cubHZfYXdhcmRfcmVzcCxcclxuICAgICAgICAgICAgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmx2QXdhcmRSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19hd2FyZCwgQXdhcmRNc2cuY19jbWQubHZfYXdhcmRfbm90aWNlX3Jlc3AsIEF3YXJkTXNnLmx2X2F3YXJkX25vdGljZV9yZXNwLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMubHZBd2FyZE5vdGljZVJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX2F3YXJkLCBBd2FyZE1zZy5jX2NtZC5ncm93dGhfZnVuZF9zdGF0ZV9yZXNwLCBBd2FyZE1zZy5ncm93dGhfZnVuZF9zdGF0ZV9yZXNwLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuZ3Jvd3RoRnVuZFN0YXRlUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYXdhcmQsIEF3YXJkTXNnLmNfY21kLmx2X2F3YXJkX3N0YXRlX3Jlc3AsIEF3YXJkTXNnLmx2X2F3YXJkX3N0YXRlX3Jlc3AsXHJcbiAgICAgICAgICAgIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5sdkF3YXJkU3RhdGVSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOivt+axguWfuumHkeaho+asoVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ3Jvd3RoRnVuZEluZm9SZXEoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfaW5mb19yZXEgPSBuZXcgQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfaW5mb19yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2F3YXJkLCBBd2FyZE1zZy5jX2NtZC5ncm93dGhfZnVuZF9pbmZvX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAqIOivt+axguWfuumHkemFjee9rlxyXG4gICAgICAqL1xyXG4gICAgcHVibGljIGdyb3d0aEZ1bmRDb25maWdSZXEoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfY29uZmlnX3JlcSA9IG5ldyBBd2FyZE1zZy5ncm93dGhfZnVuZF9jb25maWdfcmVxKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19hd2FyZCwgQXdhcmRNc2cuY19jbWQuZ3Jvd3RoX2Z1bmRfY29uZmlnX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAqIOivt+axgui0reS5sOWfuumHkeaho+asoVxyXG4gICAgICAqL1xyXG4gICAgcHVibGljIGdyb3d0RnVuZEJ1eVJlcShpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfYnV5X3JlcSA9IG5ldyBBd2FyZE1zZy5ncm93dGhfZnVuZF9idXlfcmVxKCk7XHJcbiAgICAgICAgcmVxLmZ1bmRfaWQgPSBpZDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2F3YXJkLCBBd2FyZE1zZy5jX2NtZC5ncm93dGhfZnVuZF9idXlfcmVxLCByZXEpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgICog6K+35rGC6aKG5Y+W562J57qn5aWW5YqxXHJcbiAgICAgICovXHJcbiAgICBwdWJsaWMgbHZBd2FyZFJlcShsdjogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cubHZfYXdhcmRfcmVxID0gbmV3IEF3YXJkTXNnLmx2X2F3YXJkX3JlcSgpO1xyXG4gICAgICAgIHJlcS5sdiA9IGx2O1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfYXdhcmQsIEF3YXJkTXNnLmNfY21kLmx2X2F3YXJkX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6K+35rGC6YCa55+l6K6+572uXHJcbiAgICAgKiBAcGFyYW0gaXNOb3RpY2Ug5piv5ZCm5LuK5aSp6YCa55+lXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBsdkF3YXJkTm90aWNlU2V0UmVxKGlzTm90aWNlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cubHZfYXdhcmRfbm90aWNlX3NldF9yZXEgPSBuZXcgQXdhcmRNc2cubHZfYXdhcmRfbm90aWNlX3NldF9yZXEoKTtcclxuICAgICAgICByZXEubm90X3RvZGF5ID0gaXNOb3RpY2VcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2F3YXJkLCBBd2FyZE1zZy5jX2NtZC5sdl9hd2FyZF9ub3RpY2Vfc2V0X3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICAqIOivt+axguaIkOmVv+WfuumHkeeahOeKtuaAgVxyXG4gICAgICAqL1xyXG4gICAgcHVibGljIGdyb3d0aEZ1bmRTdGF0ZVJlcSgpOiB2b2lkIHtcclxuICAgICAgICAvLy8vY29uc29sZS5sb2coXCLor7fmsYJcIik7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cuZ3Jvd3RoX2Z1bmRfc3RhdGVfcmVxID0gbmV3IEF3YXJkTXNnLmdyb3d0aF9mdW5kX3N0YXRlX3JlcSgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfYXdhcmQsIEF3YXJkTXNnLmNfY21kLmdyb3d0aF9mdW5kX3N0YXRlX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6K+35rGC562J57qn5aWW6YeR6aKG5Y+W54q25oCBXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBsdkF3YXJkU3RhdGVSZXEoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogQXdhcmRNc2cubHZfYXdhcmRfc3RhdGVfcmVxID0gbmV3IEF3YXJkTXNnLmx2X2F3YXJkX3N0YXRlX3JlcSgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfYXdhcmQsIEF3YXJkTXNnLmNfY21kLmx2X2F3YXJkX3N0YXRlX3JlcSwgcmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOi0reS5sOeahOaIkOmVv+WfuumHkeaho+asoVxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ3Jvd3RoRnVuZEluZm9SZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX2luZm9fcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRJTkZPUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICog5oiQ6ZW/5Z+66YeRY29uZmlnXHJcbiAgKiBAcGFyYW0gY21kIFxyXG4gICogQHBhcmFtIHBiRGF0YSBcclxuICAqL1xyXG4gICAgcHJpdmF0ZSBncm93dGhGdW5kQ29uZmlnUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBBd2FyZE1zZy5ncm93dGhfZnVuZF9jb25maWdfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRDT05GSUdSRVNQLCBwYkRhdGEpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDotK3kubDln7rph5Hov5Tlm57nirbmgIFcclxuICAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGdyb3d0aEZ1bmRCdXlSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX2J1eV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuR1JPV1RIRlVOREJVWVJFU1AsIHBiRGF0YSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAqIOetiee6p+WfuumHkemihuWPlui/lOWbnlxyXG4gICogQHBhcmFtIGNtZCBcclxuICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgKi9cclxuICAgIHByaXZhdGUgbHZBd2FyZFJlc3AoY21kOiBudW1iZXIsIHBiRGF0YTogQXdhcmRNc2cubHZfYXdhcmRfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWQVdBUkRSRVNQLCBwYkRhdGEpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgKiDnrYnnuqfmj5DnpLrmoYZcclxuICAqIEBwYXJhbSBjbWQgXHJcbiAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICovXHJcbiAgICBwcml2YXRlIGx2QXdhcmROb3RpY2VSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IEF3YXJkTXNnLmx2X2F3YXJkX25vdGljZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzSGF2ZUZ1bmRUaXApIHtcclxuICAgICAgICAgICAgdGhpcy5pc0hhdmVGdW5kVGlwID0gdHJ1ZVxyXG4gICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLkZ1bmRUaXBQYW5lbCwgcGJEYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuTFZBV0FSRE5PVElDRVJFU1AsIHBiRGF0YSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICog5oiQ6ZW/5Z+66YeR54q25oCBXHJcbiAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBncm93dGhGdW5kU3RhdGVSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IEF3YXJkTXNnLmdyb3d0aF9mdW5kX3N0YXRlX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmVuZFRpbWUgPSBwYkRhdGEuZW5kX3RpbWUgYXMgbnVtYmVyO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkdST1dUSEZVTkRTVEFURVJFU1AsIHBiRGF0YSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAqIOetiee6p+WlluWKseeKtuaAgVxyXG4gICogQHBhcmFtIGNtZCBcclxuICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgKi9cclxuICAgIHByaXZhdGUgbHZBd2FyZFN0YXRlUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBBd2FyZE1zZy5sdl9hd2FyZF9zdGF0ZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuTFZBV0FSRFNUQVRFUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4vTmV0TG9naW5cIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRCcm9hZGNhc3Qge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBOZXRCcm9hZGNhc3Q7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXQgSW5zdGFuY2UoKTogTmV0QnJvYWRjYXN0IHtcclxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE5ldEJyb2FkY2FzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XHJcbiAgICB9XHJcblxyXG4gICAgSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYnJvYWRjYXN0LCBCcm9hZENhc3RNc2cuY19jbWQuYmNhc3Rfd29ybGRfcmVzcCwgQnJvYWRDYXN0TXNnLmJjYXN0X3dvcmxkX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5iY2FzdFdvcmxkUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYnJvYWRjYXN0LCBCcm9hZENhc3RNc2cuY19jbWQuYmNhc3Rfcm9vbV9yZXNwLCBCcm9hZENhc3RNc2cuYmNhc3Rfcm9vbV9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuYmNhc3RSb29tUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfYnJvYWRjYXN0LCBCcm9hZENhc3RNc2cuY19jbWQuYmNhc3RfbXNnX3Jlc3AsIEJyb2FkQ2FzdE1zZy5iY2FzdF9tc2dfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmJjYXN0TXNnUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFqOWxgOW5v+aSrVxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYmNhc3RXb3JsZFJlc3AoY21kOiBudW1iZXIsIHBiRGF0YTogQnJvYWRDYXN0TXNnLmJjYXN0X3dvcmxkX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5CQ0FTVFdPUkxEUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaIv+mXtOW5v+aSrVxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYmNhc3RSb29tUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBCcm9hZENhc3RNc2cuYmNhc3Rfcm9vbV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuQkNBU1RST09NUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAqIOW5v+aSrea2iOaBr1xyXG4gICAqIEBwYXJhbSBjbWQgXHJcbiAgICogQHBhcmFtIHBiRGF0YSBcclxuICAgKi9cclxuICAgIHByaXZhdGUgYmNhc3RNc2dSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IEJyb2FkQ2FzdE1zZy5iY2FzdF9tc2dfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkJDQVNUTVNHUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4vTmV0TG9naW5cIjtcclxuaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi8uLi9FbnVtL0VudW1EYXRhXCI7XHJcbmltcG9ydCBXaW5uZXJQYW5lbCBmcm9tIFwiLi4vLi4vZ2FtZS9QYW5lbC9XaW5uZXJQYW5lbFwiO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5ldEpwUG9vbCB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldEpwUG9vbDtcclxuICAgIHB1YmxpYyBfSnBBbW91bnQ6IExvbmcgfCBudW1iZXIgPSAwO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IE5ldEpwUG9vbCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBOZXRKcFBvb2woKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIEluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fSnBBbW91bnQgPSAwO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19wb29sLCBQb29sTXNnLmNfY21kLmJjYXN0X2pwX3Jlc3AsIFBvb2xNc2cuYmNhc3RfanBfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVCY2FzdEpQUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcG9vbCwgUG9vbE1zZy5jX2NtZC5hbW91bnRfanBfcmVzcCwgUG9vbE1zZy5hbW91bnRfanBfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVBbW91bnRKUFJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlub/mkq3kuK3lpZZcclxuICAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlY2VpdmVCY2FzdEpQUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBQb29sTXNnLmJjYXN0X2pwX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBpZiAocGJEYXRhLnVpZC50b1N0cmluZygpID09IE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpKSB7XHJcbiAgICAgICAgICAgIHZhciB3aW46IFdpbm5lclBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5TZXR0aW5nUGFuZWwpIGFzIFdpbm5lclBhbmVsO1xyXG4gICAgICAgICAgICB3aW4uYmNhc3RKcEluZm8gPSBwYkRhdGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwYkRhdGEuY29udGVudCAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkpQQkNBU1QsIHBiRGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX0pwQW1vdW50ID0gcGJEYXRhLmFtb3VudDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5KUE5VTUJFUiwgcGJEYXRhLmFtb3VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBqcOmHkeminVxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmVjZWl2ZUFtb3VudEpQUmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBQb29sTXNnLmFtb3VudF9qcF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fSnBBbW91bnQgPSBwYkRhdGEuYW1vdW50O1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkpQTlVNQkVSLCBwYkRhdGEuYW1vdW50KTtcclxuICAgIH1cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCBHYW1lRXZlbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0dhbWVFdmVudFwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBUaXBUeXBlIH0gZnJvbSBcIi4uLy4uL21hbmFnZXIvVGlwTWFuYWdlclwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5pbXBvcnQgUHJvbXB0UGFuZWwgZnJvbSBcIi4uLy4uL2dhbWUvUGFuZWwvUHJvbXB0UGFuZWxcIjtcclxuaW1wb3J0IEJhdHRlcnlDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVyL0JhdHRlcnlDb250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRMb2dpbiB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldExvZ2luO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog546p5a6255m75b2V5L+h5oGvKOS4quS6uuaVsOaNruOAgeaIv+mXtOmFjee9ruOAgemxvOeahOmFjee9rilcclxuICAgICAqL1xyXG4gICAgcHVibGljIF9wbGF5ZXJMb2dpbkluZm86IExvZ2luTXNnLmxvZ2luX3Jlc3A7XHJcbiAgICAvKirmmK/lkKbmmK/mraPlvI/nmbvpmYYgKi9cclxuICAgIHB1YmxpYyBpc09mZmljaWFsOiBib29sZWFuO1xyXG4gICAgLyoq562J57qn5byA5YWzICovXHJcbiAgICBwdWJsaWMgaXNPbkx2U3c6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgICAvKiog6bG855qE6YWN572u5L+h5oGvKi9cclxuICAgIHByaXZhdGUgX2Zpc2hDb25maWdEaWN0OiBMYXlhLldlYWtPYmplY3Q7XHJcbiAgICAvKipcclxuICAgICAqIOa4uOaIj3Rva2VuIOeUqOS6jumHjei/nlxyXG4gICAgICovXHJcbiAgICBfSnd0VG9rZW46IHN0cmluZyA9IFwiXCI7XHJcbiAgICAvKipcclxuICAgICAqIOeZu+W9leaooeW8j++8jOato+W4uDEg6YeN6L+eMlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgX0xvZ2luTW9kZUNvZGU6IG51bWJlciA9IExvZ2luTXNnLmxvZ2luX21vZGVfY29kZS5ub3JtYWw7XHJcblxyXG4gICAgcHVibGljIGJMb2dpbkZhaWxlOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG5cclxuICAgIHB1YmxpYyBiQXV0b1RyYW5zZmVyOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKirlkozmnI3liqHlmajnmoTml7bpl7TlgY/np7vph48gKi9cclxuICAgIHB1YmxpYyBfdGltZU9mZnNldDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwdWJsaWMgblJhY2VJZDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwdWJsaWMgX2N1clJvb21JbmRleDogQ29tbW9uTXNnLnJvb21fdHlwZTtcclxuXHJcbiAgICBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19sb2dpbiwgTG9naW5Nc2cuY19jbWQubG9naW5fcmVzcCwgTG9naW5Nc2cubG9naW5fcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkxvZ2luUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfbG9naW4sIExvZ2luTXNnLmNfY21kLnRpbWVfcmVzcCwgTG9naW5Nc2cudGltZV9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuVGltZVJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX2xvZ2luLCBMb2dpbk1zZy5jX2NtZC5raWN0b3V0X3Jlc3AsIExvZ2luTXNnLmtpY3RvdXRfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLktpY3RvdXRSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19sb2dpbiwgTG9naW5Nc2cuY19jbWQuc3dpdGNoX3Jlc3AsIExvZ2luTXNnLnN3aXRjaF9yZXNwLFxyXG4gICAgICAgICAgICBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuc3dpdGNoUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBOZXRMb2dpbiB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBOZXRMb2dpbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICog546p5a626KeS6Imy5L+h5oGvXHJcbiAgICAqL1xyXG4gICAgcHVibGljIGdldCBSb2xlSW5mbygpOiBSb2xlTXNnLklyb2xlX2luZm8ge1xyXG5cclxuICAgICAgICBpZiAobnVsbCA9PSB0aGlzLl9wbGF5ZXJMb2dpbkluZm8pXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wbGF5ZXJMb2dpbkluZm8ucm9sZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5oi/6Ze05Z+65pys5L+h5oGv5YiX6KGoXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXQgUm9vbUluZm9MaXN0KCk6IExvZ2luTXNnLklsb2dpbl9yb29tX2luZm9bXSB7XHJcbiAgICAgICAgaWYgKG51bGwgPT0gdGhpcy5fcGxheWVyTG9naW5JbmZvIHx8IG51bGwgPT0gdGhpcy5fcGxheWVyTG9naW5JbmZvLnJvb21faW5mbylcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BsYXllckxvZ2luSW5mby5yb29tX2luZm87XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmxvOmFjee9ruWIl+ihqFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgRmlzaEluZm9MaXN0KGZpc2hUeXBlOiBudW1iZXIpOiBMb2dpbk1zZy5JZmlzaF9jb25maWcge1xyXG4gICAgICAgIGlmIChudWxsID09IHRoaXMuX2Zpc2hDb25maWdEaWN0IHx8ICF0aGlzLl9maXNoQ29uZmlnRGljdC5oYXMoZmlzaFR5cGUpKVxyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZmlzaENvbmZpZ0RpY3QuZ2V0KGZpc2hUeXBlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/lkKbmmK/oh6rlt7HnmoR1aWRcclxuICAgICAqIEBwYXJhbSB1aWQg546p5a62dWlkXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBJc1NlbGZVaWQodWlkOiBudW1iZXIgfCBMb25nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuUm9sZUluZm8ucm9sZUlkLnRvU3RyaW5nKCkgPT0gdWlkLnRvU3RyaW5nKCk7XHJcbiAgICB9XHJcbiAgICAvLyNyZWdpb24gc29ja2V0IHJlc3BvbnNlXHJcblxyXG4gICAgLyoqXHJcbiAgICAgICAgKiDlpITnkIbnmbvpmYbor7fmsYLlm57lpI1cclxuICAgICAgICAqL1xyXG4gICAgcHJpdmF0ZSBMb2dpblJlc3AoY21kOiBudW1iZXIsIGRhdGE6IExvZ2luTXNnLmxvZ2luX3Jlc3ApOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdmFyIHJlY29ubmVjdCA9IFwi5q2j5bi46L+e5o6lXCI7XHJcbiAgICAgICAgaWYgKE5ldExvZ2luLkluc3RhbmNlLl9Mb2dpbk1vZGVDb2RlID09IExvZ2luTXNnLmxvZ2luX21vZGVfY29kZS5yZWNvbm5lY3QpIHtcclxuICAgICAgICAgICAgLy9pZiAoZGF0YS5yZWNvbm5lY3QgJiYgZGF0YS5yZWNvbm5lY3QhPW51bGwpIHtcclxuICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuR0FNRV9SRUNPTk5FQ1QpO1xyXG4gICAgICAgICAgICByZWNvbm5lY3QgPSBcIuaWree6v+mHjei/nlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0gTG9naW5SZXNwIFwiICsgcmVjb25uZWN0ICsgXCIgZGF0YSA9IFwiLCBkYXRhKTtcclxuXHJcbiAgICAgICAgc3dpdGNoIChkYXRhLmNvZGUpIHtcclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLlNVQ0NFU1M6XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE5ldExvZ2luLkluc3RhbmNlLl9Mb2dpbk1vZGVDb2RlID09IExvZ2luTXNnLmxvZ2luX21vZGVfY29kZS5yZWNvbm5lY3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChHYW1lRXZlbnQuR0FNRV9SRUNPTk5FQ1QpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLnRva2VuID0gZGF0YS5qd3RfdG9rZW47XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcGxheWVyTG9naW5JbmZvID0gZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzT2ZmaWNpYWwgPSBkYXRhLnJvbGUuaXNfd2FsbGV0O1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX0p3dFRva2VuID0gZGF0YS5qd3RfdG9rZW47XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmlzaENvbmZpZ0RpY3QgPSBuZXcgTGF5YS5XZWFrT2JqZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcuYWRkVG9WYWx1ZSA9IGRhdGEucm9sZS5hdXRvX3dhbGxldCBhcyBudW1iZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5XYWxsZXRNbmcuaXNBdXRvTG9jYWwgPSAoZGF0YS5yb2xlLmF1dG9fd2FsbGV0IGFzIG51bWJlcikgPiAwID8gdHJ1ZSA6IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZmlzaF9pbmZvLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Zpc2hDb25maWdEaWN0LnNldChlbGVtZW50LmZpc2hfdHlwZSwgZWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2dpblRpbWVSZXEoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuTE9HSU5SRVNST0xFSU5GTywgZGF0YS5yb2xlKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLkZBSUw6IHtcclxuICAgICAgICAgICAgICAgIGxldCBwcm9tcHRQYW5lbDogUHJvbXB0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlByb21wdFBhbmVsKSBhcyBQcm9tcHRQYW5lbDtcclxuICAgICAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWUsIENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LkxvZ2luRmFpbCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIExvZ2luTXNnLmxvZ2luX2NvZGUuRVJSX0FDQ09VTlQ6IHtcclxuICAgICAgICAgICAgICAgIGxldCBwcm9tcHRQYW5lbDogUHJvbXB0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlByb21wdFBhbmVsKSBhcyBQcm9tcHRQYW5lbDtcclxuICAgICAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWUsIENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LkFjY291bnRFcnJvcik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIExvZ2luTXNnLmxvZ2luX2NvZGUuVE9LRU5fVElNRU9VVDoge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuVG9rZVRpbWVPdXQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLlRPS0VOX0VSUk9SOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5Ub2tlRXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLk9USEVSX0xPR0lOOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5Mb2dpbk90aGVyKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgTG9naW5Nc2cubG9naW5fY29kZS5GT1JDRV9LSUNUT1VUOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5Mb2dpbk90aGVyKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgTG9naW5Nc2cubG9naW5fY29kZS5NQUlOVEFJTl9LSUNUT1VUOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5lcnJfbXNnICYmIGRhdGEuZXJyX21zZyAhPSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgZGF0YS5lcnJfbXNnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWUsIENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LkZvcmNlS2ljdG91dCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5pyN5Yqh56uv5pe26Ze05ZCM5q2l5aSE55CGXHJcbiAgICAgKiBAcGFyYW0gZGF0YSDov5Tlm57nu5PmnpxcclxuICAgICAqL1xyXG4gICAgVGltZVJlc3AoY21kOiBudW1iZXIsIGRhdGE6IExvZ2luTXNnLnRpbWVfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBjdXJEYXRlID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgdGhpcy5fdGltZU9mZnNldCA9IE51bWJlcihkYXRhLnRpbWUpIC0gY3VyRGF0ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6Lii5Lq65ZCM5q2l5aSE55CGXHJcbiAgICAgKiDov5nph4zkuI3mmK/mnI3liqHnq6/nm7TmjqXmjqjpgIHvvIzmmK/lnKhvbmNsb3Nl5pe25o6l5pS25pyN5Yqh56uv5Lyg6YCS55qE5Y+C5pWwcmVhc29u6L+b6KGM6Kej5p6Q77yM6Ieq5bex6LCD55Sob25tZXNzYWdl5rS+5Y+R6L+H5p2lXHJcbiAgICAgKiBAcGFyYW0gZGF0YSDov5Tlm57nu5PmnpxcclxuICAgICAqL1xyXG4gICAgS2ljdG91dFJlc3AoY21kOiBudW1iZXIsIGRhdGE6IExvZ2luTXNnLmtpY3RvdXRfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tS2ljdG91dFJlc3AtLS0tLVwiKTtcclxuICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoZGF0YS5jb2RlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgTG9naW5Nc2cubG9naW5fY29kZS5GQUlMOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5Mb2dpbkZhaWwpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLkVSUl9BQ0NPVU5UOiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJvbXB0UGFuZWw6IFByb21wdFBhbmVsID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5TY2VuZU1uZy5DcmVhdGUoRW51bURhdGEuRW51bVBhbmVsVHlwZS5Qcm9tcHRQYW5lbCkgYXMgUHJvbXB0UGFuZWw7XHJcbiAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5BY2NvdW50RXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBMb2dpbk1zZy5sb2dpbl9jb2RlLlRPS0VOX1RJTUVPVVQ6IHtcclxuICAgICAgICAgICAgICAgIGxldCBwcm9tcHRQYW5lbDogUHJvbXB0UGFuZWwgPSBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlByb21wdFBhbmVsKSBhcyBQcm9tcHRQYW5lbDtcclxuICAgICAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWUsIENvbW1vbkNvbnN0YW50Ll9Qcm9tcHRDb250ZW50LlRva2VUaW1lT3V0KTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgTG9naW5Nc2cubG9naW5fY29kZS5UT0tFTl9FUlJPUjoge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuVG9rZUVycm9yKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgTG9naW5Nc2cubG9naW5fY29kZS5PVEhFUl9MT0dJTjoge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuTG9naW5PdGhlcik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIExvZ2luTXNnLmxvZ2luX2NvZGUuRk9SQ0VfS0lDVE9VVDoge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgcHJvbXB0UGFuZWwuSW5pdERhdGEoRW51bURhdGEuRW51bVByb21wdFR5cGUuUmVmZXNoR2FtZSwgQ29tbW9uQ29uc3RhbnQuX1Byb21wdENvbnRlbnQuTG9naW5PdGhlcik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIExvZ2luTXNnLmxvZ2luX2NvZGUuTUFJTlRBSU5fS0lDVE9VVDoge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByb21wdFBhbmVsOiBQcm9tcHRQYW5lbCA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuU2NlbmVNbmcuQ3JlYXRlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUHJvbXB0UGFuZWwpIGFzIFByb21wdFBhbmVsO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuZXJyX21zZyAmJiBkYXRhLmVycl9tc2cgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHByb21wdFBhbmVsLkluaXREYXRhKEVudW1EYXRhLkVudW1Qcm9tcHRUeXBlLlJlZmVzaEdhbWUsIGRhdGEuZXJyX21zZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9tcHRQYW5lbC5Jbml0RGF0YShFbnVtRGF0YS5FbnVtUHJvbXB0VHlwZS5SZWZlc2hHYW1lLCBDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5Gb3JjZUtpY3RvdXQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuY2xvc2VTb2NrZXQoKTtcclxuICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5TdG9wTG9ja0F0dGFjaygpO1xyXG4gICAgICAgIEJhdHRlcnlDb250cm9sbGVyLkluc3RhbmNlLlN0b3BBdXRvQXR0YWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlvIDlhbNcclxuICAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAgKiBAcGFyYW0gZGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzd2l0Y2hSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBMb2dpbk1zZy5zd2l0Y2hfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHZhciBpbmZvOiBBcnJheTxMb2dpbk1zZy5zd2l0Y2hfaW5mbz4gPSBkYXRhLnN3aXRjaDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZm8ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGluZm9baV0udHlwZSA9PSAyKSB7Ly/nrYnnuqflvIDlhbNcclxuICAgICAgICAgICAgICAgIHRoaXMuaXNPbkx2U3cgPSBpbmZvW2ldLmlzX29uO1xyXG4gICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudENvbnN0YW50UmVzcG9uc2UuU1dJVENIUkVTUCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGluZm9baV0udHlwZSA9PSAzKSB7Ly/lubjov5Dlrp3nrrHlvIDlhbNcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuICAgIC8vIC8vIC8qKlxyXG4gICAgLy8gLy8gICog5pu05paw5ri45oiPdG9rZW7lpITnkIZcclxuICAgIC8vIC8vICAqIEBwYXJhbSBkYXRhIOi/lOWbnue7k+aenFxyXG4gICAgLy8gLy8gICovXHJcbiAgICAvLyAvLyBVcGRhdGVUb2VrbnBIYW5kbGUoZGF0YTogYW55KTogdm9pZCB7XHJcbiAgICAvLyAvLyAgICAgbGV0IG1zZyA9IE1zZ1Byb3RvQnVmZi51cGRhdGVfdG9rZW5fcmVzcC5kZWNvZGUoZGF0YSk7XHJcbiAgICAvLyAvLyAgICAgdGhpcy5zUm9vbVRva2VuID0gbXNnLmp3dFRva2VuO1xyXG4gICAgLy8gLy8gICAgIEVtaXR0ZXIuZW1pdChNZXNzYWdlQ29uc3QubG9naW5fVXBkYXRlVG9rZW5NZXNzKTtcclxuICAgIC8vIC8vIH1cclxuICAgIC8vI2VuZHJlZ2lvbiBzb2NrZXQgcmVzcG9uc2VcclxuXHJcbiAgICAvLyNyZWdpb24gIHNvY2tldCByZXF1ZXN0XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnlLPor7fnmbvlvZVcclxuICAgICAqIEBwYXJhbSB0b2tlbiBcclxuICAgICAqIEBwYXJhbSBhY2NvdW50IOi0puWPt1xyXG4gICAgICogQHBhcmFtIGxhbmcg6K+t6KiAXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBMb2dpbkFjY291bnRSZXEodG9rZW46IHN0cmluZywgYWNjb3VudDogc3RyaW5nLCBsYW5nPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogTG9naW5Nc2cubG9naW5fYWNjb3VudF9yZXEgPSBuZXcgTG9naW5Nc2cubG9naW5fYWNjb3VudF9yZXEoKTtcclxuICAgICAgICByZXEudG9rZW4gPSBcIjEyM1wiOy8vdG9rZW47Ly/nlKjotKblj7fmlrnlvI/nmbvlvZXnmoTml7blgJnvvIx0b2tlbuWbuuWumuatu++8jOS/neaMgeS4juacjeWKoeWZqOS4gOiHtFxyXG4gICAgICAgIC8vcmVxLmFjY291bnQgPSBcImFiYzMzOThcIjsvL2FjY291bnQ7XHJcbiAgICAgICAgcmVxLmFjY291bnQgPSBcImFjY19hYmM1NDE5XCIgKyB1dGlscy5Db21tb25VdGlscy5yYW5kb20oMSwgMTAwMDApOy8vYWNjb3VudDtcclxuICAgICAgICByZXEubGFuZyA9IGxhbmc7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19sb2dpbiwgTG9naW5Nc2cuY19jbWQubG9naW5fYWNjb3VudF9yZXEsIHJlcSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj5HpgIHml7bpl7TmoKHlh4bor7fmsYJcclxuICAgICovXHJcbiAgICBMb2dpblRpbWVSZXEoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcTogTG9naW5Nc2cudGltZV9yZXEgPSBuZXcgTG9naW5Nc2cudGltZV9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX2xvZ2luLCBMb2dpbk1zZy5jX2NtZC50aW1lX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8vI2VuZHJlZ2lvbiAgc29ja2V0IHJlcXVlc3RcclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0UmFua2luZyB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldFJhbmtpbmc7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBOZXRSYW5raW5nIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE5ldFJhbmtpbmcoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIEluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3JhbmssIFJhbmtNc2cuY19jbWQucmFua19yZXNwLCBSYW5rTXNnLnJhbmtfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJhbmtSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaOkuihjOamnOivt+axglxyXG4gICAgICogQHBhcmFtIHR5cGUg5piv5pys5ZGo6L+Y5piv5LiK5ZGoXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByYW5rUmVxKGluZGV4Om51bWJlcix0eXBlOiBSYW5rTXNnLnJhbmtfdHlwZSk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXE6IFJhbmtNc2cucmFua19yZXEgPSBuZXcgUmFua01zZy5yYW5rX3JlcSgpO1xyXG4gICAgICAgIHJlcS5pbmRleCA9aW5kZXg7XHJcbiAgICAgICAgcmVxLnR5cGUgPSB0eXBlO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfcmFuaywgUmFua01zZy5jX2NtZC5yYW5rX3JlcSwgcmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaOkuihjOamnOi/lOWbnuaVsOaNrlxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcmFua1Jlc3AoY21kOiBudW1iZXIsIHBiRGF0YTogUmFua01zZy5yYW5rX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5SQU5LUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBFdmVudENvbnN0YW50UmVzcG9uc2UgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0V2ZW50Q29uc3RhbnRSZXNwb25zZVwiO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5ldFJlcG9ydCB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldFJlcG9ydDtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IE5ldFJlcG9ydCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBOZXRSZXBvcnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIEluaXQoKTogdm9pZCB7IH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDor7fmsYLojrflvpfkuK3lpZblkI3ljZVcclxuICAgICAqIEBwYXJhbSB0eXBlIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgU2NyZWVuUmVwb3J0UmVxKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXE6IFJlcG9ydE1zZy5zY3JlZW5fcmVwb3J0X3JlcSA9IG5ldyBSZXBvcnRNc2cuc2NyZWVuX3JlcG9ydF9yZXEoKTtcclxuICAgICAgICByZXEuc3JjZWVuID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmdldERldmljZVR5cGUoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3JlcG9ydCwgUmVwb3J0TXNnLmNfY21kLnNjcmVlbl9yZXBvcnRfcmVxLCByZXEpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEdhbWVGYWNhZGUgZnJvbSBcIi4uLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgRXZlbnRDb25zdGFudFJlc3BvbnNlIGZyb20gXCIuLi8uLi9jb25zdGFudC9FdmVudENvbnN0YW50UmVzcG9uc2VcIjtcclxuaW1wb3J0IE5ldExvZ2luIGZyb20gXCIuL05ldExvZ2luXCI7XHJcbmltcG9ydCBFbnVtRGF0YSBmcm9tIFwiLi4vLi4vRW51bS9FbnVtRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0Um9sZUluZm8ge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBOZXRSb2xlSW5mbztcclxuICAgIHB1YmxpYyBsdkluZm86IFJvbGVJbmZvTXNnLmx2X2luZm9fcmVzcCA9IG51bGw7XHJcbiAgICBwdWJsaWMgaXNIYXZlTm90aW9uOiBCb29sZWFuID0gZmFsc2U7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBOZXRSb2xlSW5mbyB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBOZXRSb2xlSW5mbygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XHJcbiAgICB9XHJcblxyXG4gICAgSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9sZV9pbmZvLCBSb2xlSW5mb01zZy5jX2NtZC5sdl9pbmZvX3Jlc3AsIFJvbGVJbmZvTXNnLmx2X2luZm9fcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmx2SW5mb1Jlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3JvbGVfaW5mbywgUm9sZUluZm9Nc2cuY19jbWQubHZfY29uZmlnX3Jlc3AsIFJvbGVJbmZvTXNnLmx2X2NvbmZpZ19yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMubHZDb25maWdSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb2xlX2luZm8sIFJvbGVJbmZvTXNnLmNfY21kLmx2X25vdGljZV9yZXNwLCBSb2xlSW5mb01zZy5sdl9ub3RpY2VfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLmx2Tm90aWNlUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOivt+axguetiee6p+S/oeaBr1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbHZJbmZvUmVxKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXE6IFJvbGVJbmZvTXNnLmx2X2luZm9fcmVxID0gbmV3IFJvbGVJbmZvTXNnLmx2X2luZm9fcmVxKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19yb2xlX2luZm8sIFJvbGVJbmZvTXNnLmNfY21kLmx2X2luZm9fcmVxLCByZXEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6K+35rGC562J57qn6YWN572uXHJcbiAgICAgKiBAcGFyYW0gZnVuZElkIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbHZDb25maWdSZXEoZnVuZElkOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxOiBSb2xlSW5mb01zZy5sdl9jb25maWdfcmVxID0gbmV3IFJvbGVJbmZvTXNnLmx2X2NvbmZpZ19yZXEoKTtcclxuICAgICAgICByZXEuZnVuZF9pZCA9IGZ1bmRJZDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3JvbGVfaW5mbywgUm9sZUluZm9Nc2cuY19jbWQubHZfY29uZmlnX3JlcSwgcmVxKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog562J57qn5L+h5oGv6L+U5ZueXHJcbiAgICAgKiBAcGFyYW0gY21kIFxyXG4gICAgICogQHBhcmFtIHBiRGF0YSBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBsdkluZm9SZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IFJvbGVJbmZvTXNnLmx2X2luZm9fcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubHZJbmZvID0gcGJEYXRhO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWSU5GT1JFU1AsIHBiRGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAqIOetiee6p+mFjee9rui/lOWbnlxyXG4gICAgKiBAcGFyYW0gY21kIFxyXG4gICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgKi9cclxuICAgIHByaXZhdGUgbHZDb25maWdSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IFJvbGVJbmZvTXNnLmx2X2NvbmZpZ19yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi562J57qn6YWN572uXCIpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnRDb25zdGFudFJlc3BvbnNlLkxWQ09ORklHUkVTUCwgcGJEYXRhKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICog562J57qn6YCa55+lXHJcbiAgKiBAcGFyYW0gY21kIFxyXG4gICogQHBhcmFtIHBiRGF0YSBcclxuICAqL1xyXG4gICAgcHJpdmF0ZSBsdk5vdGljZVJlc3AoY21kOiBudW1iZXIsIHBiRGF0YTogUm9sZUluZm9Nc2cubHZfbm90aWNlX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCLnrYnnuqfpgJrnn6VcIik7XHJcbiAgICAgICAgaWYgKE5ldExvZ2luLkluc3RhbmNlLlJvbGVJbmZvLnJvbGVJZC50b1N0cmluZygpID09IHBiRGF0YS51aWQudG9TdHJpbmcoKSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNIYXZlTm90aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzSGF2ZU5vdGlvbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLkNyZWF0ZShFbnVtRGF0YS5FbnVtUGFuZWxUeXBlLlVwZ3JhZGVQYW5lbCwgcGJEYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5MVk5PVElDRVJFU1AsIHBiRGF0YSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcbmltcG9ydCBOZXRMb2dpbiBmcm9tIFwiLi9OZXRMb2dpblwiO1xyXG5pbXBvcnQgRXZlbnROZXRSZXNwb25zZSBmcm9tIFwiLi9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCBGaXNoQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlci9GaXNoQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uLy4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcbmltcG9ydCB7IFRpcFR5cGUgfSBmcm9tIFwiLi4vLi4vbWFuYWdlci9UaXBNYW5hZ2VyXCI7XHJcbmltcG9ydCBCYXR0ZXJ5Q29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlci9CYXR0ZXJ5Q29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0Um9vbSB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldFJvb207XHJcbiAgICAvKirmiL/pl7TlhoXnmoTkurrniankv6Hmga/liJfooaggKi9cclxuICAgIF9Sb29tUm9sZUluZm9EaWN0OiB7IFtpbmRleDogc3RyaW5nXTogUm9vbU1zZy5Jcm9vbV9yb2xlX2luZm8gfSA9IHt9O1xyXG4gICAgLyoq5oi/6Ze05YaF6bG855qE5L+h5oGv5YiX6KGoICovXHJcbiAgICBfRmlzaERpY3Q6IHsgW2luZGV4OiBzdHJpbmddOiBSb29tTXNnLkl1cGRhdGVfZmlzaF9yZXNwIH0gPSB7fTtcclxuICAgIC8qKiog546p5a6255m76ZmG5oi/6Ze05L+h5oGvKi9cclxuICAgIF9jdXJSb29tSW5mbzogTG9naW5Nc2cuSWxvZ2luX3Jvb21faW5mbztcclxuXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXQgSW5zdGFuY2UoKTogTmV0Um9vbSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBOZXRSb29tKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcclxuICAgIH07XHJcbiAgICBJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmVudGVyX3Jvb21fcmVzcCwgUm9vbU1zZy5lbnRlcl9yb29tX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5FbnRlclJvb21SZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnJlYWR5X3Jvb21fcmVzcCwgUm9vbU1zZy5yZWFkeV9yb29tX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5SZWFkeVJvb21SZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnN5bl9maXNoX3Jlc3AsIFJvb21Nc2cuc3luX2Zpc2hfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLlN5bkZpc2hSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmhpdF9maXNoX3Jlc3AsIFJvb21Nc2cuaGl0X2Zpc2hfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkhpdEZpc2hSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnNob290X2J1bGxldF9yZXNwLCBSb29tTXNnLnNob290X2J1bGxldF9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuU2hvb3RCdWxsZXRSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnNob290X2Vycl9yZXNwLCBSb29tTXNnLnNob290X2Vycl9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuU2hvb3RFcnJSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmNoYW5nZV9iYXR0ZXJ5X3Jlc3AsIFJvb21Nc2cuY2hhbmdlX2JhdHRlcnlfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkNoYW5nZUJhdHRlcnlSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIC8vICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC51cGRhdGVfZmlzaF9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMucmVjZWl2ZUxvZ2luUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5maXNoX2RlYWRfcmVzcCwgUm9vbU1zZy5maXNoX2RlYWRfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkZpc2hEZWFkUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5sZWF2ZV9yb29tX3Jlc3AsIFJvb21Nc2cubGVhdmVfcm9vbV9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuTGVhdmVSb29tUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC51cGRhdGVfY2hpcHNfcmVzcCwgUm9vbU1zZy51cGRhdGVfY2hpcHNfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLlVwZGF0ZUNoaXBSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIC8vICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuc2hvb3RfZXJyX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5yZWNlaXZlTG9naW5SZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmJhdHRlcnlfZXJyX3Jlc3AsIFJvb21Nc2cuYmF0dGVyeV9lcnJfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkJhdHRlcnlFcnJSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnN5bmNfY2hpcHNfcmVzcCwgUm9vbU1zZy5zeW5jX2NoaXBzX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5TeW5jQ2hpcHNSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnJvb21fc3RhdHVzX3Jlc3AsIFJvb21Nc2cucm9vbV9zdGF0dXNfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLlJvb21TdGF0dXNSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnN5bl9yb2xlX3Jlc3AsIFJvb21Nc2cuc3luX3JvbGVfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLlN5blJvbGVSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmJ1bGxldF91c2VsZXNzX3Jlc3AsIFJvb21Nc2cuYnVsbGV0X3VzZWxlc3NfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkJ1bGxldFVzZWxlc3NSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmJ1bGxldF9wYXNzX3Jlc3AsIFJvb21Nc2cuYnVsbGV0X3Bhc3NfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkJ1bGxldFBhc3NSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnN5bmNfanBfamV0dG9uX3Jlc3AsIFJvb21Nc2cuc3luY19qcF9qZXR0b25fcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLlN5bmNKcEpldHRvblJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuZmlzaF9tYXRyaXhfcmVzcCwgUm9vbU1zZy5maXNoX21hdHJpeF9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuRmlzaE1hdHJpeFJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuY2xlYW5fd2F2ZV9yZXNwLCBSb29tTXNnLmNsZWFuX3dhdmVfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkNsZWFuV2F2ZVJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQub25lX3BpZWNlX3Jlc3AsIFJvb21Nc2cub25lX3BpZWNlX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5PbmVQaWVjZVJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgLy8gR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuaGl0X3Jlc3VsdF9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMucmVjZWl2ZUxvZ2luUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICAvLyBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5leHRyYV9yZXdhcmRfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVMb2dpblJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQud2F2ZV9tYXRyaXhfcmVzcCwgUm9vbU1zZy53YXZlX21hdHJpeF9yZXNwLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuV2F2ZU1hdHJpeFJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQubXFfc3luY19jaGlwc19yZXNwLCBSb29tTXNnLm1xX3N5bmNfY2hpcHNfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLk1xU3luY0NoaXBzUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICAvLyBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5maXNoX3NlbGVjdF9zYXZlX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5yZWNlaXZlTG9naW5SZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmZpc2hfc2VsZWN0X3Jlc3AsIFJvb21Nc2cuZmlzaF9zZWxlY3RfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkZpc2hTZWxlY3RSZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIC8vIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnVwZGF0ZV92YWxlbnRpbmVfc2NvcmUsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5yZWNlaXZlTG9naW5SZXNwLCBudWxsLCBmYWxzZSkpO1xyXG4gICAgICAgIC8vIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLmFkZEhhbmRsZUJ5Q01EKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLnJvdGF0ZV9jYW52YXNfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVMb2dpblJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICAgICAgLy8gR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQud2VhcG9uX2NoaXBfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLnJlY2VpdmVMb2dpblJlc3AsIG51bGwsIGZhbHNlKSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8vI3JlZ2lvbiBzb2NrZXQgcmVzcG9uc2VcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5vlhaXmiL/pl7Tlm57lpI1cclxuICAgICAqIEBwYXJhbSBkYXRhIOWNj+iuruaVsOaNruexu1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIEVudGVyUm9vbVJlc3AoY21kOiBudW1iZXIsIGRhdGE6IFJvb21Nc2cuZW50ZXJfcm9vbV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKGDov5vlhaXmiL/pl7Rtc2dfcm9vbV9jb2RlID0gJHtkYXRhLmNvZGV9YCk7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoZGF0YS5jb2RlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgUm9vbU1zZy5tc2dfcm9vbV9jb2RlLlNVQ0NFU1NfRU5URVI6XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy90aGlzLlJlYWR5Um9vbVJlcSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLndhcm4oXCItLS0tLS0tLS0tLS3ov5vlhaXmiL/pl7TmiJDlip8tLS0tLS0tLS0tLS1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLkVudGVyUm9vbVJlc3AsIGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFJvb21Nc2cubXNnX3Jvb21fY29kZS5GQUxTRV9FTlRFUjpcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy53YXJuKFwiLS0tLS0tLS0tLS0t6L+b5YWl5oi/6Ze05aSx6LSlLS0tLS0tLS0tLS0tXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuVGlwTW5nLmNyZWF0ZVRpcChDb21tb25Db25zdGFudC5fUHJvbXB0Q29udGVudC5FbnRlclJvb21GYWlsLCBUaXBUeXBlLkZMT0FUVElQKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5oi/6Ze05YaF6KeS6Imy5L+h5oGvICovXHJcbiAgICBwcml2YXRlIFJlYWR5Um9vbVJlc3AoY21kOiBudW1iZXIsIGRhdGE6IFJvb21Nc2cucmVhZHlfcm9vbV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiUmVhZHlSb29tUmVzcCBkYXRhID0gXCIsIGRhdGEpO1xyXG4gICAgICAgIGxldCByb2xlSW5mbyA9IGRhdGEucm9sZTtcclxuICAgICAgICBsZXQgYlNlbGZ1aWQgPSBmYWxzZTtcclxuICAgICAgICBmb3IgKGxldCB2YWx1ZSBvZiByb2xlSW5mbykge1xyXG4gICAgICAgICAgICB0aGlzLl9Sb29tUm9sZUluZm9EaWN0W3ZhbHVlLnVpZC50b1N0cmluZygpXSA9IHZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoTmV0TG9naW4uSW5zdGFuY2UuSXNTZWxmVWlkKHZhbHVlLnVpZCkpIHtcclxuICAgICAgICAgICAgICAgIGJTZWxmdWlkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGJTZWxmdWlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuU3luU2VhdFJlcSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLlJlYWR5Um9vbVJlc3AsIGRhdGEucm9sZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5ZCM5q2l6bG85rGg5Lit6bG855qE5L+h5oGvICovXHJcbiAgICBwcml2YXRlIFN5bkZpc2hSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLnN5bl9maXNoX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIuWQjOatpemxvOS/oeaBryBTeW5GaXNoUmVzcCBkYXRhID0gXCIsIGRhdGEpO1xyXG4gICAgICAgIGxldCBmaXNoTGlzdCA9IGRhdGEuZmlzaF9saXN0O1xyXG4gICAgICAgIGZvciAobGV0IHZhbHVlIG9mIGZpc2hMaXN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX0Zpc2hEaWN0W3ZhbHVlLmlkLnRvU3RyaW5nKCldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5TeW5GaXNoUmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Ye75Lit6bG8IOa2iOaBr+i/lOWbniAqL1xyXG4gICAgcHJpdmF0ZSBIaXRGaXNoUmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy5oaXRfZmlzaF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKFJvb21Nc2cubXNnX3Jvb21fY29kZS5FUlJfQ0hJUFMgPT0gZGF0YS5jb2RlKSB7XHJcbiAgICAgICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIkhpdEZpc2hSZXNwIGVycm9yIGRhdGEgPSBcIiwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIENvbW1vbkNvbnN0YW50Ll9odW50U2NlbmVUZXN0QXJyeS5oaXRGaXNoUmVzcCsrO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWtkOW8ueeahOWwhOWHuyDmtojmga/ov5Tlm54gKi9cclxuICAgIHByaXZhdGUgU2hvb3RCdWxsZXRSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLnNob290X2J1bGxldF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV0pIHtcclxuICAgICAgICAgICAgdGhpcy5fUm9vbVJvbGVJbmZvRGljdFtkYXRhLnVpZC50b1N0cmluZygpXS5qZXR0b25fc2hvdyA9IGRhdGEuamV0dG9uc2hvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLlNob290QnVsbGV0UmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Y+R5bCE5a2Q5by55oql6ZSZ6L+U5ZueICovXHJcbiAgICBwcml2YXRlIFNob290RXJyUmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy5zaG9vdF9lcnJfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIuWPkeWwhOWtkOW8ueaKpemUmSBkYXRhOlwiLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirmlLnlj5jngq7lj7DlgI3njocg5raI5oGv6L+U5ZueICovXHJcbiAgICBDaGFuZ2VCYXR0ZXJ5UmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy5jaGFuZ2VfYmF0dGVyeV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV0pIHtcclxuICAgICAgICAgICAgdGhpcy5fUm9vbVJvbGVJbmZvRGljdFtkYXRhLnVpZC50b1N0cmluZygpXS5idWxsZXRfbXVsdGkgPSBkYXRhLm11bHRpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50TmV0UmVzcG9uc2UuQ2hhbmdlQmF0dGVyeVJlc3AsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKumxvOatu+S6oSDmtojmga/ov5Tlm54gKi9cclxuICAgIEZpc2hEZWFkUmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy5maXNoX2RlYWRfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9Sb29tUm9sZUluZm9EaWN0W2RhdGEudWlkLnRvU3RyaW5nKCldKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV0uamV0dG9uX3Nob3cgPSBkYXRhLmpldHRvbnNob3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5GaXNoRGVhZFJlc3AsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuemu+W8gOaIv+mXtCDmtojmga/ov5Tlm54gKi9cclxuICAgIExlYXZlUm9vbVJlc3AoY21kOiBudW1iZXIsIGRhdGE6IFJvb21Nc2cubGVhdmVfcm9vbV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV0pIHtcclxuICAgICAgICAgICAgZGVsZXRlIHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5MZWF2ZVJvb21SZXNwLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirliLfmlrDph5HluIEg5raI5oGv6L+U5ZueICovXHJcbiAgICBVcGRhdGVDaGlwUmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy51cGRhdGVfY2hpcHNfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9Sb29tUm9sZUluZm9EaWN0W2RhdGEudWlkLnRvU3RyaW5nKCldKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV0uamV0dG9uX3Nob3cgPSBkYXRhLmpldHRvbnNob3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5VcGRhdGVDaGlwUmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5YiH5o2i54Ku5Y+w6ZSZ6K+vIOa2iOaBr+i/lOWbniAqL1xyXG4gICAgQmF0dGVyeUVyclJlc3AoY21kOiBudW1iZXIsIG1zZzogUm9vbU1zZy5iYXR0ZXJ5X2Vycl9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi5YiH5o2i54Ku5Y+w6ZSZ6K+vIFwiICsgbXNnLmNvZGUpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKirlkIzmraXnjqnlrrboh6rlt7Hph5HluIEg5raI5oGv6L+U5ZueICovXHJcbiAgICBTeW5jQ2hpcHNSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLnN5bmNfY2hpcHNfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwic3luY19jaGlwc19yZXNwIOi3n+aWsOmHkeW4gVwiKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50TmV0UmVzcG9uc2UuU3luY0NoaXBzUmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKuS4reW/g+mSseWMhSDmtojmga/ov5Tlm54gKi9cclxuICAgIE1xU3luY0NoaXBzUmVzcChjbWQ6IG51bWJlciwgbXNnOiBSb29tTXNnLm1xX3N5bmNfY2hpcHNfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGxldCBzZWxmSUQgPSBOZXRMb2dpbi5JbnN0YW5jZS5Sb2xlSW5mby5yb2xlSWQ7XHJcbiAgICAgICAgbGV0IHJvbGUgPSB0aGlzLl9Sb29tUm9sZUluZm9EaWN0W3NlbGZJRC50b1N0cmluZygpXTtcclxuICAgICAgICBpZiAocm9sZSkge1xyXG4gICAgICAgICAgICByb2xlLmpldHRvbl9zaG93ID0gbXNnLmNoaXBzO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwibXFfc3luY19jaGlwc19yZXNwIOi3n+aWsOmHkeW4gVwiKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50TmV0UmVzcG9uc2UuTXFTeW5jQ2hpcHNSZXNwLCBtc2cpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWGsOWGu+aViOaenOetiSDmtojmga/ov5Tlm54gKi9cclxuICAgIFJvb21TdGF0dXNSZXNwKGNtZDogbnVtYmVyLCBtc2c6IFJvb21Nc2cucm9vbV9zdGF0dXNfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIuWGsOWGu+aViOaenOetiSBcIiArIG1zZy5zdGF0dXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWQjOatpeinkuiJsuS/oeaBryDmtojmga/ov5Tlm54gKi9cclxuICAgIFN5blJvbGVSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLnN5bl9yb2xlX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fUm9vbVJvbGVJbmZvRGljdCkge1xyXG4gICAgICAgICAgICBkZWxldGUgdGhpcy5fUm9vbVJvbGVJbmZvRGljdFtrZXldO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcm9sZUluZm8gPSBkYXRhLnJvbGU7XHJcbiAgICAgICAgZm9yIChsZXQgdmFsdWUgb2Ygcm9sZUluZm8pIHtcclxuICAgICAgICAgICAgdGhpcy5fUm9vbVJvbGVJbmZvRGljdFt2YWx1ZS51aWQudG9TdHJpbmcoKV0gPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLlN5blJvbGVSZXNwLCBkYXRhLnJvbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuWtkOW8ueaXoOaViCDmtojmga/ov5Tlm54gKi9cclxuICAgIEJ1bGxldFVzZWxlc3NSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLmJ1bGxldF91c2VsZXNzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBsZXQgcm9sZSA9IHRoaXMuX1Jvb21Sb2xlSW5mb0RpY3RbZGF0YS51aWQudG9TdHJpbmcoKV07XHJcbiAgICAgICAgaWYgKHJvbGUpIHtcclxuICAgICAgICAgICAgcm9sZS5qZXR0b25fc2hvdyA9IGRhdGEuamV0dG9uc2hvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLkJ1bGxldFVzZWxlc3NSZXNwLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirlrZDlvLnml6DmlYgg5raI5oGv6L+U5ZueICovXHJcbiAgICBCdWxsZXRQYXNzUmVzcChjbWQ6IG51bWJlciwgZGF0YTogUm9vbU1zZy5idWxsZXRfcGFzc19yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJvbGUgPSB0aGlzLl9Sb29tUm9sZUluZm9EaWN0W2RhdGEudWlkLnRvU3RyaW5nKCldO1xyXG4gICAgICAgIGlmIChyb2xlKSB7XHJcbiAgICAgICAgICAgIHJvbGUuamV0dG9uX3Nob3cgPSBkYXRhLmpldHRvbnNob3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5CdWxsZXRQYXNzUmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5pyN5Yqh5Zmo5Li75Yqo5o6o6YCB77yM5ZCM5q2l546p5a62KOWPr+iDveaYr+iHquW3seS5n+WPr+iDveaYr+WIq+S6uilqcOS4reWllumHkeW4ge+8iOetueegge+8iemineW6piDmtojmga/ov5Tlm54gKi9cclxuICAgIFN5bmNKcEpldHRvblJlc3AoY21kOiBudW1iZXIsIGRhdGE6IFJvb21Nc2cuc3luY19qcF9qZXR0b25fcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIGxldCByb2xlID0gdGhpcy5fUm9vbVJvbGVJbmZvRGljdFtkYXRhLnVpZC50b1N0cmluZygpXTtcclxuICAgICAgICBpZiAocm9sZSkge1xyXG4gICAgICAgICAgICByb2xlLmpldHRvbl9zaG93ID0gZGF0YS5qZXR0b25zaG93O1xyXG4gICAgICAgIH1cclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50TmV0UmVzcG9uc2UuU3luY0pwSmV0dG9uUmVzcCwgZGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6bG855+p6Zi15L+h5oGvIOa2iOaBr+i/lOWbniAqL1xyXG4gICAgRmlzaE1hdHJpeFJlc3AoY21kOiBudW1iZXIsIG1zZzogUm9vbU1zZy5maXNoX21hdHJpeF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6bG86Zi15p2l5Li0IFwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirms6LmtarmnaXooq0g5raI5oGv6L+U5ZueICovXHJcbiAgICBDbGVhbldhdmVSZXNwKGNtZDogbnVtYmVyLCBtc2c6IFJvb21Nc2cuY2xlYW5fd2F2ZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi5rOi5rWq5p2l6KKtIFwiKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkh1bnRTY2VuZU1uZy53YXJuU2hvdygwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKirku47kuJbnlYxCb3Nz6Lqr5LiK5o6J5LiL6YeR5biBIOa2iOaBr+i/lOWbniAqL1xyXG4gICAgT25lUGllY2VSZXNwKGNtZDogbnVtYmVyLCBkYXRhOiBSb29tTXNnLm9uZV9waWVjZV9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJvbGUgPSB0aGlzLl9Sb29tUm9sZUluZm9EaWN0W2RhdGEudWlkLnRvU3RyaW5nKCldO1xyXG4gICAgICAgIGlmIChyb2xlKSB7XHJcbiAgICAgICAgICAgIHJvbGUuamV0dG9uX3Nob3cgPSBkYXRhLmpldHRvbnNob3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5PbmVQaWVjZVJlc3AsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuazoua1quefqemYteadpeS4tCDmtojmga/ov5Tlm54gKi9cclxuICAgIFdhdmVNYXRyaXhSZXNwKGNtZDogbnVtYmVyLCBtc2c6IFJvb21Nc2cud2F2ZV9tYXRyaXhfcmVzcCk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIuazoua1quefqemYteadpeS4tCBcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6Ieq5Yqo5o2V6bG85Yqg6L295LiK5qyh6K6+572uIOa2iOaBr+i/lOWbniAqL1xyXG4gICAgRmlzaFNlbGVjdFJlc3AoY21kOiBudW1iZXIsIGRhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIuiHquWKqOaNlemxvOWKoOi9veS4iuasoeiuvue9riBcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jZW5kcmVnaW9uXHJcblxyXG4gICAgLy8jcmVnaW9uICBzb2NrZXQgcmVxdWVzdFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6K+35rGC6L+b5YWl5oi/6Ze0XHJcbiAgICAgKiBAcGFyYW0gcm9vbVR5cGUg5oi/6Ze057G75Z6LXHJcbiAgICAgKiBAcGFyYW0gcmVMb2dpbkNvZGUg6L+e5o6l57G75Z6LXHJcbiAgICAgKi9cclxuICAgIEVudGVyUm9vbVJlcShyb29tVHlwZTogQ29tbW9uTXNnLnJvb21fdHlwZSwgcmVMb2dpbkNvZGU6IFJvbGVNc2cubXNnX3JlbG9naW5fY29kZSk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXEgPSBuZXcgUm9vbU1zZy5lbnRlcl9yb29tX3JlcSgpO1xyXG4gICAgICAgIHJlcS50eXBlID0gcm9vbVR5cGU7XHJcbiAgICAgICAgcmVxLmNvZGUgPSByZUxvZ2luQ29kZTtcclxuICAgICAgICBOZXRMb2dpbi5JbnN0YW5jZS5fY3VyUm9vbUluZGV4ID0gcm9vbVR5cGU7XHJcbiAgICAgICAgdGhpcy5fY3VyUm9vbUluZm8gPSBOZXRMb2dpbi5JbnN0YW5jZS5Sb29tSW5mb0xpc3RbcmVxLnR5cGUgLSAxXTsgICAgICAgLy/mnI3liqHnq6/mmK8gMSAyIDPjgILlrqLmiLfnq6/mlbDnu4TkuIvmoIcw5byA5aeLXHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmVudGVyX3Jvb21fcmVxLCByZXEpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKiog6K+35rGC5ZCM5q2l5oi/6Ze05YaF5q2j5Zyo5omT6bG855qE546p5a625L+h5oGvKi9cclxuICAgIFJlYWR5Um9vbVJlcSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxID0gbmV3IFJvb21Nc2cucmVhZHlfcm9vbV9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQucmVhZHlfcm9vbV9yZXEsIHJlcSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWQjOatpeW6p+S9jea2iOaBr+S/oeWPt++8jOW8gOWni+WHuumxvCovXHJcbiAgICBTeW5TZWF0UmVxKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXEgPSBuZXcgUm9vbU1zZy5zeW5fc2VhdF9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuc3luX3NlYXRfcmVxLCByZXEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6YCa55+l5pyN5Yqh5Zmo5Ye75Lit5LqG6bG8XHJcbiAgICAgKiBAcGFyYW0gbXVsdGkg5a2Q5by55YCN546HXHJcbiAgICAgKiBAcGFyYW0gZmlzaGlkIOWHu+S4reeahOmxvElE5YiX6KGoXHJcbiAgICAgKiBAcGFyYW0gcmVsYXRlRmlzaCDlhbPogZTnmoTpsbxJROWIl+ihqFxyXG4gICAgICogQHBhcmFtIGJ1bGxldElkIOWtkOW8uUlEXHJcbiAgICAgKi9cclxuICAgIEhpdEZpc2hSZXEobXVsdGk6IG51bWJlciwgZmlzaGlkOiBudW1iZXIgfCBMb25nLCByZWxhdGVGaXNoOiAobnVtYmVyIHwgTG9uZylbXSwgYnVsbGV0SWQ6IG51bWJlciB8IExvbmcpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxID0gbmV3IFJvb21Nc2cuaGl0X2Zpc2hfcmVxKCk7XHJcbiAgICAgICAgcmVxLmJ1bGxldF9tdWx0aSA9IG11bHRpO1xyXG4gICAgICAgIHJlcS5maXNoX2lkID0gW2Zpc2hpZF07XHJcbiAgICAgICAgcmVxLnJlbGF0ZWRfZmlzaCA9IHJlbGF0ZUZpc2g7XHJcbiAgICAgICAgcmVxLmJ1bGxldGlkID0gYnVsbGV0SWQ7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmhpdF9maXNoX3JlcSwgcmVxKTtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCItLS0gSGl0RmlzaFJlcSBidWxsZXRpZCA9IFwiLCBidWxsZXRJZCwgXCIgcmVxRGF0YSA9IFwiLCByZXEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+R5bCE5a2Q5by56K+35rGCXHJcbiAgICAgKiBAcGFyYW0gdWlkIFxyXG4gICAgICogQHBhcmFtIG11bHRpIFxyXG4gICAgICogQHBhcmFtIGFuZ2xlIFxyXG4gICAgICogQHBhcmFtIHRpbWUgXHJcbiAgICAgKiBAcGFyYW0gZmlzaGlkIFxyXG4gICAgICogQHBhcmFtIGJ1bGxldGlkIFxyXG4gICAgICovXHJcbiAgICBTaG9vdEJ1bGxldFJlcSh1aWQ6IG51bWJlciB8IExvbmcsIG11bHRpOiBudW1iZXIsIGFuZ2xlOiBudW1iZXIsIHRpbWU6IG51bWJlciwgZmlzaGlkOiBudW1iZXIgfCBMb25nLCBidWxsZXRpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcSA9IG5ldyBSb29tTXNnLnNob290X2J1bGxldF9yZXEoKTtcclxuICAgICAgICByZXEudWlkID0gdWlkO1xyXG4gICAgICAgIHJlcS5tdWx0aSA9IG11bHRpO1xyXG4gICAgICAgIHJlcS5hbmdlbCA9IGFuZ2xlO1xyXG4gICAgICAgIHJlcS50aW1lID0gdGltZTtcclxuICAgICAgICByZXEuZmlzaGlkID0gZmlzaGlkOy8v6bG8SUTvvIjplIHlrprnirbmgIHkvb/nlKjvvInmnInpsbzkvKBJRCDmsqHmnInkvKAwOyBcclxuICAgICAgICByZXEuYnVsbGV0aWQgPSBidWxsZXRpZDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuc2hvb3RfYnVsbGV0X3JlcSwgcmVxKTtcclxuXHJcbiAgICAgICAgQ29tbW9uQ29uc3RhbnQuX2h1bnRTY2VuZVRlc3RBcnJ5LnNob290QnVsbGV0UmVxKys7XHJcbiAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UubV9yZXFCdWxsZXRJZERpY3RbYnVsbGV0aWRdID0gcmVxO1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tIFNob290QnVsbGV0UmVxIGJ1bGxldElEID0gXCIsIGJ1bGxldGlkLnRvU3RyaW5nKCksIFwiIGJ1bGxldF9tdWx0aSA9IFwiLCBtdWx0aSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliIfmjaLngq7lj7DlgI3njodcclxuICAgICAqIEBwYXJhbSBiYXR0ZXJ5TXVsdGkg54Ku5Y+w5YCN546HXHJcbiAgICAgKiBAcGFyYW0gcm9sZUlkIOeOqeWutklEXHJcbiAgICAgKi9cclxuICAgIENoYW5nZUJhdHRlcnlSZXEoYmF0dGVyeU11bHRpSW5kZXg6IG51bWJlciwgcm9sZUlkOiBudW1iZXIgfCBMb25nKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcSA9IG5ldyBSb29tTXNnLmNoYW5nZV9iYXR0ZXJ5X3JlcSgpO1xyXG4gICAgICAgIHJlcS5tdWx0aSA9IE5ldFJvb20uSW5zdGFuY2UuX2N1clJvb21JbmZvLmJhdHRlcnlbYmF0dGVyeU11bHRpSW5kZXhdO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5jaGFuZ2VfYmF0dGVyeV9yZXEsIHJlcSk7XHJcbiAgICAgICAgdGhpcy5fUm9vbVJvbGVJbmZvRGljdFtyb2xlSWQudG9TdHJpbmcoKV0uYnVsbGV0X211bHRpID0gTmV0Um9vbS5JbnN0YW5jZS5fY3VyUm9vbUluZm8uYmF0dGVyeVtiYXR0ZXJ5TXVsdGlJbmRleF07XHJcbiAgICAgICAgZm9yIChsZXQgaXRlcmF0b3IgaW4gdGhpcy5fUm9vbVJvbGVJbmZvRGljdCkge1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOemu+W8gOaIv+mXtCovXHJcbiAgICBMZWF2ZVJvb21SZXEoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHJlcSA9IG5ldyBSb29tTXNnLmxlYXZlX3Jvb21fcmVxKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ19yb29tLCBSb29tTXNnLmNfY21kLmxlYXZlX3Jvb21fcmVxLCByZXEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlkIzmraXph5HluIHor7fmsYIqL1xyXG4gICAgU3luY0NoaXBzUmVxKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCByZXEgPSBuZXcgUm9vbU1zZy5zeW5jX2NoaXBzX3JlcCgpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfcm9vbSwgUm9vbU1zZy5jX2NtZC5zeW5jX2NoaXBzX3JlcCwgcmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5ZCM5q2l5paw55So5oi36L+b5YWl6L+H5omT6bG85Zy65pmvKi9cclxuICAgIE5vdmljZVByb21wdFJlcSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxID0gbmV3IFJvb21Nc2cubm92aWNlX3Byb21wdF9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQubm92aWNlX3Byb21wdF9yZXEsIHJlcSk7XHJcbiAgICB9XHJcbiAgICBCdWxsZXRVc2VMZXNzUmVxKHVzZXJpZDogbnVtYmVyIHwgTG9uZywgYnVsbGV0TXVsdGk6IG51bWJlciwgYnVsbGV0SWQ6IG51bWJlciB8IExvbmcpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxID0gbmV3IFJvb21Nc2cuYnVsbGV0X3VzZWxlc3NfcmVxKCk7XHJcbiAgICAgICAgcmVxLnVpZCA9IHVzZXJpZDtcclxuICAgICAgICByZXEubXVsdGkgPSBidWxsZXRNdWx0aTtcclxuICAgICAgICByZXEuYnVsbGV0aWQgPSBidWxsZXRJZDtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3Jvb20sIFJvb21Nc2cuY19jbWQuYnVsbGV0X3VzZWxlc3NfcmVxLCByZXEpO1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLSDlrZDlvLnpo57lh7rovrnnlYwgQnVsbGV0VXNlTGVzc1JlcSBidWxsZXRJZCA9IFwiLCBidWxsZXRJZCk7XHJcbiAgICB9XHJcbiAgICAvLyNlbmRyZWdpb25cclxufVxyXG5cclxuLy8gZXhwb3J0IGNsYXNzIExvY2tJbmZvIHtcclxuLy8gICAgIHB1YmxpYyBMb2NrRmlzaElkOiBzdHJpbmcgPSBudWxsOyAgICAgICAgICAgICAgIC8v6ZSB5a6a6bG855qESURcclxuLy8gICAgIHB1YmxpYyBJc0xvY2tTdGF0ZTogYm9vbGVhbiA9IGZhbHNlOyAgICAgICAgICAgIC8v5piv5ZCm5byA5ZCv6ZSB5a6a54q25oCBXHJcbi8vICAgICBwdWJsaWMgTG9ja0Zpc2hQb3M6IGNjLlZlYzIgPSBudWxsOyAgICAgICAgICAgICAvL+mUgeWumumxvOeahOWdkOagh1xyXG4vLyAgICAgcHVibGljIExvY2tOb2RlU2l6ZTogY2MuVmVjMiA9IG51bGw7ICAgICAgICAgICAgLy/plIHlrprpsbzlsLrlr7hcclxuLy8gICAgIHB1YmxpYyBQcmVMb2NrUG9zOiBjYy5WZWMyID0gbnVsbDsgICAgICAgICAgICAgIC8v6ZSB5a6a6bG85bC65a+4XHJcbi8vIH0iLCJpbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuLi8uLi91dGlscy9Db21tb25VdGlsXCI7XHJcblxyXG5pbXBvcnQgY29kZSA9IFdhbGxldE1zZy5tc2dfd2FsbGV0X2NvZGU7XHJcbmltcG9ydCBGcmVlVHJhbldhbGxldCBmcm9tIFwiLi4vLi4vZ2FtZS9QYW5lbC9XYWxsZXRQYW5lbFwiO1xyXG5pbXBvcnQgRXZlbnROZXRSZXNwb25zZSBmcm9tIFwiLi9FdmVudE5ldFJlc3BvbnNlXCI7XHJcbmltcG9ydCB7IFRpcFR5cGUgfSBmcm9tIFwiLi4vLi4vbWFuYWdlci9UaXBNYW5hZ2VyXCI7XHJcbmltcG9ydCBMYW5nIGZyb20gXCIuLi8uLi9jb25zdGFudC9MYW5ndWFnZUNvbnN0YW50XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRXYWxsZXQge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBOZXRXYWxsZXQ7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXQgSW5zdGFuY2UoKTogTmV0V2FsbGV0IHtcclxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE5ldFdhbGxldCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XHJcbiAgICB9XHJcblxyXG4gICAgSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfd2FsbGV0LCBXYWxsZXRNc2cuY19jbWQubWFpbl93YWxsZXRfcmVzcCwgV2FsbGV0TXNnLm1haW5fd2FsbGV0X3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5taWFuV2FsbGV0UmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5hZGRIYW5kbGVCeUNNRChOZXRDb2RlTXNnLmNtZC5tc2dfd2FsbGV0LCBXYWxsZXRNc2cuY19jbWQud2FsbGV0X3Jlc3AsIFdhbGxldE1zZy53YWxsZXRfcmVzcCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLndhbGxldFJlc3AsIG51bGwsIGZhbHNlKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpkrHljIXlvLnmoYbov5Tlm55cclxuICAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG1pYW5XYWxsZXRSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IFdhbGxldE1zZy5tYWluX3dhbGxldF9yZXNwKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5FdmVudE1uZy5kaXNwYXRjaChFdmVudE5ldFJlc3BvbnNlLk1haW5XYWxsZXRSZXNwLCBwYkRhdGEpO1xyXG4gICAgICAgIC8vdGhpcy53YWxsZXRDb2RlKHBiRGF0YS5jb2RlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOmSsei/lOWbnlxyXG4gICAgICogQHBhcmFtIGNtZCBcclxuICAgICAqIEBwYXJhbSBwYkRhdGEgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgd2FsbGV0UmVzcChjbWQ6IG51bWJlciwgcGJEYXRhOiBXYWxsZXRNc2cud2FsbGV0X3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuV2FsbGV0TW5nLndhbGxldENvZGUocGJEYXRhLmNvZGUpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuRXZlbnRNbmcuZGlzcGF0Y2goRXZlbnROZXRSZXNwb25zZS5XYWxsZXRSZXNwLCBwYkRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgKiDor7fmsYLpkrHljIXlvLnmoYZcclxuICAgICovXHJcbiAgICBwdWJsaWMgbWFpbldhbGxldFJlcSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxOiBXYWxsZXRNc2cubWFpbl93YWxsZXRfcmVxID0gbmV3IFdhbGxldE1zZy5tYWluX3dhbGxldF9yZXEoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNvY2tldE1uZy5zZW5kR2FtZURhdGEoTmV0Q29kZU1zZy5jbWQubXNnX3dhbGxldCwgV2FsbGV0TXNnLmNfY21kLm1haW5fd2FsbGV0X3JlcSwgcmVxKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPkemAgeiuvue9rueahOmSsVxyXG4gICAgICogQHBhcmFtIGNoaXAgXHJcbiAgICAgKiBAcGFyYW0gYXV0byBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHdhbGxldFJlcShjaGlwOiBudW1iZXIsIGF1dG86IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxOiBXYWxsZXRNc2cud2FsbGV0X3JlcSA9IG5ldyBXYWxsZXRNc2cud2FsbGV0X3JlcSgpO1xyXG4gICAgICAgIHJlcS5jaGlwcyA9IGNoaXA7XHJcbiAgICAgICAgcmVxLmF1dG8gPSBhdXRvO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuU29ja2V0TW5nLnNlbmRHYW1lRGF0YShOZXRDb2RlTXNnLmNtZC5tc2dfd2FsbGV0LCBXYWxsZXRNc2cuY19jbWQud2FsbGV0X3JlcSwgcmVxKTtcclxuICAgIH1cclxufSIsImltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLi8uLi9HYW1lRmFjYWRlXCI7XHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL0NvbW1vblV0aWxcIjtcclxuaW1wb3J0IEV2ZW50Q29uc3RhbnRSZXNwb25zZSBmcm9tIFwiLi4vLi4vY29uc3RhbnQvRXZlbnRDb25zdGFudFJlc3BvbnNlXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0V2FubmVycyB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IE5ldFdhbm5lcnM7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBOZXRXYW5uZXJzIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE5ldFdhbm5lcnMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIEluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuYWRkSGFuZGxlQnlDTUQoTmV0Q29kZU1zZy5jbWQubXNnX3dpbm5lcnMsIFdpbm5lck1zZy5jX2NtZC53aW5uZXJzX3Jlc3AsIFdpbm5lck1zZy53aW5uZXJzX3Jlc3AsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy53aW5uZXJzUmVzcCwgbnVsbCwgZmFsc2UpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDor7fmsYLojrflvpfkuK3lpZblkI3ljZVcclxuICAgICAqIEBwYXJhbSB0eXBlIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgd2lubmVyc1JlcSgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcmVxOiBXaW5uZXJNc2cud2lubmVyc19yZXEgPSBuZXcgV2lubmVyTXNnLndpbm5lcnNfcmVxKCk7XHJcbiAgICAgICAgR2FtZUZhY2FkZS5JbnN0YW5jZS5Tb2NrZXRNbmcuc2VuZEdhbWVEYXRhKE5ldENvZGVNc2cuY21kLm1zZ193aW5uZXJzLCBXaW5uZXJNc2cuY19jbWQud2lubmVyc19yZXEsIHJlcSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuK3lpZblkI3ljZXov5Tlm55cclxuICAgICAqIEBwYXJhbSBjbWQgXHJcbiAgICAgKiBAcGFyYW0gcGJEYXRhIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHdpbm5lcnNSZXNwKGNtZDogbnVtYmVyLCBwYkRhdGE6IFdpbm5lck1zZy53aW5uZXJzX3Jlc3ApOiB2b2lkIHtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nLmRpc3BhdGNoKEV2ZW50Q29uc3RhbnRSZXNwb25zZS5XSU5ORVJSRVNQLCBwYkRhdGEpO1xyXG4gICAgfVxyXG5cclxufSIsIi8qKlxyXG4gKiBcclxuICovXHJcbmltcG9ydCBOZXRSZWFkZXIgZnJvbSBcIi4vTmV0UmVhZGVyXCI7XHJcbmltcG9ydCBHYW1lRmFjYWRlIGZyb20gXCIuLy4uL0dhbWVGYWNhZGVcIjtcclxuaW1wb3J0IEdhbWVFdmVudCBmcm9tIFwiLi8uLi9jb25zdGFudC9HYW1lRXZlbnRcIjtcclxuaW1wb3J0IEV2ZW50TWFuYWdlciBmcm9tIFwiLi4vbWFuYWdlci9FdmVudE1hbmFnZXJcIjtcclxuaW1wb3J0IFBhY2thZ2VPdXQgZnJvbSBcIi4vUGFja2FnZU91dFwiO1xyXG5pbXBvcnQgUGFja2FnZUluIGZyb20gXCIuL1BhY2thZ2VJblwiO1xyXG5pbXBvcnQgRW51bURhdGEgZnJvbSBcIi4uL0VudW0vRW51bURhdGFcIjtcclxuaW1wb3J0IHsgdXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvQ29tbW9uVXRpbFwiO1xyXG5pbXBvcnQgQmF0dGVyeUNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXIvQmF0dGVyeUNvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvY2tldFNlcnZlIHtcclxuICAgIHByaXZhdGUgc29ja2V0OiBsYXlhLm5ldC5Tb2NrZXQ7XHJcbiAgICBwcml2YXRlIF9QQUNLQUdFX09VVF9OQU1FID0gXCJfUEFDS0FHRV9PVVRfTkFNRV9cIjtcclxuICAgIHByaXZhdGUgbmV0UmVhZGVyOiBOZXRSZWFkZXI7XHJcbiAgICBwcml2YXRlIHR5cGU6IEVudW1EYXRhLkVudW1Tb2NrZXRUeXBlO1xyXG4gICAgcHVibGljIHN0YXRpYyBNQVhfUkVDT05ORVRfQ09VVDogbnVtYmVyID0gNTtcclxuICAgIHB1YmxpYyBjdXJSZWNvbm5ldENvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgcHVibGljIGNsb3NlUmVhc29uOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgIHByaXZhdGUgRXZlbnRNYW5hZ2VyOiBFdmVudE1hbmFnZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihfdHlwZTogRW51bURhdGEuRW51bVNvY2tldFR5cGUpIHtcclxuXHJcbiAgICAgICAgdGhpcy5uZXRSZWFkZXIgPSBuZXcgTmV0UmVhZGVyKCk7XHJcbiAgICAgICAgdGhpcy5FdmVudE1hbmFnZXIgPSBHYW1lRmFjYWRlLkluc3RhbmNlLkV2ZW50TW5nO1xyXG5cclxuICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBsYXlhLm5ldC5Tb2NrZXQoKTtcclxuICAgICAgICB0aGlzLnNvY2tldC5lbmRpYW4gPSBMYXlhLkJ5dGUuTElUVExFX0VORElBTjtcclxuICAgICAgICB0aGlzLnNvY2tldC5vbihsYXlhLmV2ZW50cy5FdmVudC5PUEVOLCB0aGlzLCB0aGlzLm9uQ29ubmVjdCk7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQub24obGF5YS5ldmVudHMuRXZlbnQuQ0xPU0UsIHRoaXMsIHRoaXMub25DbG9zZSwgW10pO1xyXG4gICAgICAgIHRoaXMuc29ja2V0Lm9uKGxheWEuZXZlbnRzLkV2ZW50LkVSUk9SLCB0aGlzLCB0aGlzLm9uRXJyb3IpO1xyXG4gICAgICAgIHRoaXMuc29ja2V0Lm9uKGxheWEuZXZlbnRzLkV2ZW50Lk1FU1NBR0UsIHRoaXMsIHRoaXMub25NZXNzYWdlKTtcclxuXHJcbiAgICAgICAgdGhpcy50eXBlID0gX3R5cGU7XHJcblxyXG4gICAgICAgIHRoaXMuSW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pdCgpIHtcclxuICAgICAgICBsZXQgZ2FtZU1uZyA9IEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZztcclxuICAgICAgICBpZiAoZ2FtZU1uZy5zaXAgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBnYW1lTW5nLnNpcC5wdXNoKGdhbWVNbmcuc2VydmVySXApO1xyXG4gICAgICAgICAgICBnYW1lTW5nLnNpcC5yZXZlcnNlKCk7XHJcbiAgICAgICAgICAgIFNvY2tldFNlcnZlLk1BWF9SRUNPTk5FVF9DT1VUID0gZ2FtZU1uZy5zaXAubGVuZ3RoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgZ2FtZU1uZy5zaXAgPSBuZXcgQXJyYXk8c3RyaW5nPigpO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IFNvY2tldFNlcnZlLk1BWF9SRUNPTk5FVF9DT1VUOyBpKyspIHtcclxuXHJcbiAgICAgICAgICAgICAgICBnYW1lTW5nLnNpcC5wdXNoKGdhbWVNbmcuc2VydmVySXApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwdWJsaWMgY29ubmVjdChob3N0OiBzdHJpbmcsIHBvcnQ6IG51bWJlciwgdG9rZW46IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHV0aWxzLkNvbW1vblV0aWxzLmxvZyhob3N0LCBwb3J0LCB0b2tlbik7XHJcbiAgICAgICAgaWYgKHRoaXMuc29ja2V0LmNvbm5lY3RlZCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmRlYnVnKFwic29ja2V05bey6L+e5o6lXCIgKyBcIl9cIiArIHRoaXMudHlwZSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRva2VuICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5jb25uZWN0QnlVcmwoaG9zdCArIFwiOlwiICsgcG9ydCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdChob3N0LCBwb3J0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIExheWEudGltZXIub25jZSg1MDAwLCB0aGlzLCB0aGlzLmNoZWNrRXJyb0hhbmRsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOi/nuaOpei2heaXtiovXHJcbiAgICBwcml2YXRlIGNoZWNrRXJyb0hhbmRsZSgpOiB2b2lkIHtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJjaGVja0Vycm9IYW5kbGVcIik7XHJcbiAgICAgICAgdGhpcy5jdXJSZWNvbm5ldENvdW50ID0gU29ja2V0U2VydmUuTUFYX1JFQ09OTkVUX0NPVVQ7XHJcbiAgICAgICAgdGhpcy5FdmVudE1hbmFnZXIuZGlzcGF0Y2goR2FtZUV2ZW50LlNPQ0tFVF9DTE9TRSArIHRoaXMuZ2V0U29ja2V0VHlwZVN0cigpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xvc2UoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNDb25uZWN0ZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29ja2V0LmNvbm5lY3RlZDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQ29ubmVjdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLkV2ZW50TWFuYWdlci5kaXNwYXRjaChHYW1lRXZlbnQuQ09OTkVDVCArIHRoaXMuZ2V0U29ja2V0VHlwZVN0cigpKTtcclxuICAgICAgICB0aGlzLmN1clJlY29ubmV0Q291bnQgPSAtMTtcclxuICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJvbkNvbm5lY3Qg5q2j5bi45bu656uL6L+e5o6lOmN1clJlY29ubmV0Q291bnQgPSBcIiwgdGhpcy5jdXJSZWNvbm5ldENvdW50KTtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMuY2hlY2tFcnJvSGFuZGxlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQ2xvc2UoZXY6IENsb3NlRXZlbnQpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwib25DbG9zZSDlhbPpl63ov57mjqU6Y3VyUmVjb25uZXRDb3VudCA9IFwiLCB0aGlzLmN1clJlY29ubmV0Q291bnQgKyBcIiAgZXYgPSBcIiwgZXYpO1xyXG5cclxuICAgICAgICB0aGlzLmNsb3NlUmVhc29uID0gZXYucmVhc29uO1xyXG4gICAgICAgIC8v5pat57q/5YWz6Zet6Ieq5Yqo5bCE5Ye744CB5riF6Zmk5a2Q5by5XHJcbiAgICAgICAgQmF0dGVyeUNvbnRyb2xsZXIuSW5zdGFuY2UuU3RvcEF1dG9BdHRhY2soKTtcclxuICAgICAgICBCYXR0ZXJ5Q29udHJvbGxlci5JbnN0YW5jZS5TdG9wTG9ja0F0dGFjaygpO1xyXG4gICAgICAgIEdhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkRlbGV0ZUFsbEJ1bGxldHNJbnMoKTtcclxuICAgICAgICBHYW1lRmFjYWRlLkluc3RhbmNlLlNjZW5lTW5nLmNsb3NlKEVudW1EYXRhLkVudW1QYW5lbFR5cGUuUmVjb25uZWN0dGluZyk7XHJcblxyXG4gICAgICAgIC8v572R57uc6Zeu6aKY77yM5q2j5bi45o6J57q/XHJcbiAgICAgICAgaWYgKGV2LnJlYXNvbiA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUmVjb25uZXRDb3VudCsrO1xyXG4gICAgICAgICAgICB0aGlzLkV2ZW50TWFuYWdlci5kaXNwYXRjaChHYW1lRXZlbnQuU09DS0VUX0NMT1NFICsgdGhpcy5nZXRTb2NrZXRUeXBlU3RyKCkpO1xyXG4gICAgICAgICAgICAvL0dhbWVGYWNhZGUuSW5zdGFuY2UuSHVudFNjZW5lTW5nLkRlbGV0ZUFsbEZpc2hzSW5zKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8v6KKr6Lii5LiL57q/XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGxldCBhcnJidWY6IEFycmF5QnVmZmVyID0gdGhpcy5OZXRDbG9zZVJlYXNvbkhhbmRsZShldi5yZWFzb24pO1xyXG4gICAgICAgICAgICAvLyB2YXIgYnl0ZTpMYXlhLkJ5dGUgPSBuZXcgTGF5YS5CeXRlKGFycmJ1Zik7XHJcbiAgICAgICAgICAgIC8vIGxldCByZWFzb246c3RyaW5nID0gYnl0ZS5nZXRTdHJpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5vbk1lc3NhZ2UoYXJyYnVmKTsgLy9LaWN0b3V0UmVzcFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRXJyb3IoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jdXJSZWNvbm5ldENvdW50Kys7XHJcbiAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwib25FcnJvciDov57mjqXlh7rplJk6Y3VyUmVjb25uZXRDb3VudCA9IFwiLCB0aGlzLmN1clJlY29ubmV0Q291bnQpO1xyXG4gICAgICAgIHRoaXMuRXZlbnRNYW5hZ2VyLmRpc3BhdGNoKEdhbWVFdmVudC5TT0NLRVRfQ0xPU0UgKyB0aGlzLmdldFNvY2tldFR5cGVTdHIoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnvZHnu5zlhbPpl63ljp/lm6DlpITnkIZcclxuICAgICAqIEBwYXJhbSByZWFzb24g572R57uc5YWz6ZetIOaWreW8gOWOn+WboFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIE5ldENsb3NlUmVhc29uSGFuZGxlKHJlYXNvbjogc3RyaW5nKTogQXJyYXlCdWZmZXIge1xyXG4gICAgICAgIC8v6Lii5Lq65raI5oGvXHJcbiAgICAgICAgdmFyIHVpbnQ4YXIgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocmVhc29uKTsgLy/ikaDmraTlpITniIbnuqLkuI3nlKjlpITnkIYg4pGhbGF5YeiHquW4pueahOino+aekOaciemXrumimFxyXG4gICAgICAgIC8vdmFyIGJ5dGU6TGF5YS5CeXRlID0gbmV3IExheWEuQnl0ZSgpO1xyXG4gICAgICAgIC8vYnl0ZS53cml0ZVVURlN0cmluZyhyZWFzb24pO1xyXG4gICAgICAgIC8vIGJ5dGUud3JpdGVBcnJheUJ1ZmZlcigpO1xyXG4gICAgICAgIC8vdmFyIHVpbnQ4YXIgPSBieXRlLmdldFVpbnQ4QXJyYXkoMCwgYnl0ZS5sZW5ndGgpO1xyXG4gICAgICAgIC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLS0tYnl0ZSA9IFwiLCBieXRlKTtcclxuICAgICAgICAvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS0tLXVpbnQ4YXIgPSBcIiwgdWludDhhcik7XHJcbiAgICAgICAgdmFyIGxlbiA9IHVpbnQ4YXIubGVuZ3RoO1xyXG4gICAgICAgIGlmIChsZW4gPD0gNSkge1xyXG4gICAgICAgICAgICBsZW4gPSA2O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYXJyYXlCdWZmID0gbmV3IEFycmF5QnVmZmVyKGxlbik7XHJcblxyXG4gICAgICAgIHZhciB1OGEgPSBuZXcgVWludDhBcnJheShhcnJheUJ1ZmYpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgdThhW2ldID0gdWludDhhcltpXSA/IHVpbnQ4YXJbaV0gOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGFycmF5QnVmZjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPkemAgeivt+axglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2VuZChjb2RlOiBudW1iZXIsIGRhdGE6IHByb3RvYnVmLk1lc3NhZ2U8YW55Pik6IHZvaWQge1xyXG4gICAgICAgIGlmICghdGhpcy5zb2NrZXQuY29ubmVjdGVkKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgLy8gaWYgKDAgIT0gY29kZSlcclxuICAgICAgICAvLyAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwic2VuZFwiLCBjb2RlLCBkYXRhKTtcclxuICAgICAgICBpZiAodGhpcy5zb2NrZXQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB2YXIgcGtnOiBQYWNrYWdlT3V0ID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKHRoaXMuX1BBQ0tBR0VfT1VUX05BTUUsIFBhY2thZ2VPdXQpO1xyXG4gICAgICAgICAgICBwa2cuaW5pdChjb2RlKTtcclxuICAgICAgICAgICAgcGtnLnBhY2soZGF0YSk7XHJcbiAgICAgICAgICAgIHBrZy5wb3MgPSAwO1xyXG4gICAgICAgICAgICAvLyBwa2cud3JpdGVJbnQzMihwa2cuYnVmZmVyLmJ5dGVMZW5ndGgpO1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5zZW5kKHBrZy5idWZmZXIpO1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5mbHVzaCgpO1xyXG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3Zlcih0aGlzLl9QQUNLQUdFX09VVF9OQU1FLCBwa2cpO1xyXG4gICAgICAgICAgICAvLyB1dGlscy5Db21tb25VdGlscy5sb2coXCLlj5HpgIHmlbDmja5jb2RlPVwiLGNvZGUsSlNPTi5zdHJpbmdpZnkoZGF0YSkgKTsgIFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjb25uZWN0Q291bnRPdXQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IGdhbWVNYW5hZ2VyID0gR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jdXJSZWNvbm5ldENvdW50ID49IFNvY2tldFNlcnZlLk1BWF9SRUNPTk5FVF9DT1VUKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDova7or6JcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwi6L2u6K+iIHRoaXMuY3VyUmVjb25uZXRDb3VudCA9IFwiLCB0aGlzLmN1clJlY29ubmV0Q291bnQpO1xyXG4gICAgICAgICAgICBnYW1lTWFuYWdlci5zZXJ2ZXJJcCA9IGdhbWVNYW5hZ2VyLnNpcFt0aGlzLmN1clJlY29ubmV0Q291bnRdO1xyXG4gICAgICAgICAgICB1dGlscy5Db21tb25VdGlscy5sb2coXCJjb25uZWN0Q291bnRPdXQgZ2FtZU1hbmFnZXIuc2VydmVySXAgPSBcIiwgZ2FtZU1hbmFnZXIuc2VydmVySXApO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaUtuWIsOacjeWKoeWZqOaVsOaNrlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG9uTWVzc2FnZShtZXNzYWdlOiBBcnJheUJ1ZmZlcik6IHZvaWQge1xyXG4gICAgICAgIGlmIChtZXNzYWdlLmJ5dGVMZW5ndGggPD0gMCkgcmV0dXJuO1xyXG5cclxuICAgICAgICBsZXQgcGFja2FnZUluOiBQYWNrYWdlSW4gPSBuZXcgUGFja2FnZUluKG1lc3NhZ2UpO1xyXG4gICAgICAgIHBhY2thZ2VJbi51bnBhY2soKTtcclxuICAgICAgICAvLyAgdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwib25NZXNzYWdlXCIsIHBhY2thZ2VJbi5jb2RlLCBwYWNrYWdlSW4uZGF0YSk7XHJcbiAgICAgICAgdGhpcy5uZXRSZWFkZXIuYWRkUGFja2FnZShwYWNrYWdlSW4pO1xyXG4gICAgICAgICg8TmV0UmVhZGVyPnRoaXMubmV0UmVhZGVyKS5ub3RpZnkoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFNvY2tldFR5cGVTdHIoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50eXBlID09IEVudW1EYXRhLkVudW1Tb2NrZXRUeXBlLkdBTUUgPyBcIlwiIDogU3RyaW5nKEVudW1EYXRhLkVudW1Tb2NrZXRUeXBlLlVTRVJfQkVIQVZJT1IpO1xyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEF1dG9EZXN0cm95IGV4dGVuZHMgTGF5YS5TY3JpcHQzRCB7XHJcbiAgICBwcml2YXRlIF9kZWxheVRpbWU6IG51bWJlciA9IDU7XHJcbiAgICBwcml2YXRlIF9iRGVsZXRlOiBib29sZWFuO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gZHQg5bu25pe26ZSA5q+B5pe26Ze0XHJcbiAgICAgKiBAcGFyYW0gYkRlbCDmmK/lkKbliKDpmaTor6XoioLngrlcclxuICAgICAqL1xyXG4gICAgcHVibGljIEluaXREYXRhKGR0OiBudW1iZXIsIGJEZWw6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9kZWxheVRpbWUgPSBkdDtcclxuICAgICAgICB0aGlzLl9iRGVsZXRlID0gYkRlbDtcclxuICAgICAgICB0aGlzLm93bmVyLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuX2RlbGF5VGltZSwgdGhpcywgdGhpcy5EZXN0cm95U2VsZik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBEZXN0cm95U2VsZigpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fYkRlbGV0ZSlcclxuICAgICAgICAgICAgdGhpcy5vd25lci5kZXN0cm95KCk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm93bmVyLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIEJlemllckN1cnZlcnMge1xyXG4gICAgLyoqXHJcbiAqIOagueaNrui0neWhnuWwlOWFrOW8j+axguabsue6v+S4iueahOeCuVxyXG4gKiBAcGFyYW0gZ2l6bW9Qb2ludHMg54K56ZuGXHJcbiAqIEBwYXJhbSB0ICjlj5blgLzojIPlm7QwLTEpXHJcbiAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBHZXRQb2ludChnaXptb1BvaW50czogTGF5YS5WZWN0b3IzW10sIHQ6IG51bWJlcik6IExheWEuVmVjdG9yMyB7XHJcbiAgICAgICAgbGV0IG51bVNlY3Rpb25zID0gZ2l6bW9Qb2ludHMubGVuZ3RoIC0gMztcclxuICAgICAgICBsZXQgdFNlYyA9IE1hdGguZmxvb3IodCAqIG51bVNlY3Rpb25zKTtcclxuICAgICAgICBsZXQgY3VyclB0ID0gbnVtU2VjdGlvbnMgLSAxO1xyXG4gICAgICAgIGlmIChjdXJyUHQgPiB0U2VjKSB7XHJcbiAgICAgICAgICAgIGN1cnJQdCA9IHRTZWM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB1ID0gdCAqIG51bVNlY3Rpb25zIC0gY3VyclB0O1xyXG4gICAgICAgIGxldCBhID0gZ2l6bW9Qb2ludHNbY3VyclB0XTtcclxuICAgICAgICBsZXQgYiA9IGdpem1vUG9pbnRzW2N1cnJQdCArIDFdO1xyXG4gICAgICAgIGxldCBjID0gZ2l6bW9Qb2ludHNbY3VyclB0ICsgMl07XHJcbiAgICAgICAgbGV0IGQgPSBnaXptb1BvaW50c1tjdXJyUHQgKyAzXTtcclxuXHJcbiAgICAgICAgbGV0IG5ld1BvaW50OiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIGxldCBhdTogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBsZXQgYnU6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgbGV0IGN1OiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIGxldCBkdTogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoYSwgLTEgKiB1ICogdSAqIHUsIGF1KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoYiwgMyAqIHUgKiB1ICogdSwgYnUpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShjLCAtMyAqIHUgKiB1ICogdSwgY3UpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShkLCAxICogdSAqIHUgKiB1LCBkdSk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZChhdSwgYnUsIG5ld1BvaW50KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKG5ld1BvaW50LCBjdSwgbmV3UG9pbnQpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5hZGQobmV3UG9pbnQsIGR1LCBuZXdQb2ludCk7XHJcblxyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShhLCAyICogdSAqIHUsIGF1KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoYiwgLTUgKiB1ICogdSwgYnUpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShjLCA0ICogdSAqIHUsIGN1KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoZCwgLTEgKiB1ICogdSwgZHUpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5hZGQobmV3UG9pbnQsIGF1LCBuZXdQb2ludCk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZChuZXdQb2ludCwgYnUsIG5ld1BvaW50KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKG5ld1BvaW50LCBjdSwgbmV3UG9pbnQpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5hZGQobmV3UG9pbnQsIGR1LCBuZXdQb2ludCk7XHJcblxyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShhLCAtMSAqIHUsIGF1KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoYywgMSAqIHUsIGN1KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKG5ld1BvaW50LCBhdSwgbmV3UG9pbnQpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5hZGQobmV3UG9pbnQsIGN1LCBuZXdQb2ludCk7XHJcblxyXG4gICAgICAgIExheWEuVmVjdG9yMy5zY2FsZShiLCAyLCBidSk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZChuZXdQb2ludCwgYnUsIG5ld1BvaW50KTtcclxuXHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKG5ld1BvaW50LCAwLjUsIG5ld1BvaW50KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ld1BvaW50O1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEVudW1EYXRhIGZyb20gXCIuLi9FbnVtL0VudW1EYXRhXCI7XHJcblxyXG5pbXBvcnQgTmV0TG9naW4gZnJvbSBcIi4uL25ldC9Qcm90b0hhbmRlci9OZXRMb2dpblwiO1xyXG5pbXBvcnQgR2FtZUZhY2FkZSBmcm9tIFwiLi4vR2FtZUZhY2FkZVwiO1xyXG5pbXBvcnQgQ29tbW9uQ29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50L0NvbW1vbkNvbnN0YW50XCI7XHJcblxyXG4vKipcclxuKiBuYW1lIFxyXG4qL1xyXG5leHBvcnQgbW9kdWxlIHV0aWxzIHtcclxuXHRleHBvcnQgY2xhc3MgQ29tbW9uVXRpbHMge1xyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgaXNEZWJ1ZzogYm9vbGVhbiA9IHRydWU7XHJcblx0XHRwcml2YXRlIHN0YXRpYyBLRVlTVFI2NDogc3RyaW5nID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPVwiO1xyXG5cclxuXHRcdGNvbnN0cnVjdG9yKCkge1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHQvKipcclxuXHRcdCAqIOiOt+W+l+W5s+WPsOmcgOimgeeahHZhbHVlIOaVsOaNrlxyXG5cdFx0ICogQHBhcmFtIGlkIGlk5ZCN5a2XXHJcblx0XHQgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgZ2V0VmFsdWUoaWQ6IHN0cmluZyk6IHN0cmluZyB7XHJcblx0XHRcdGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkgPT0gbnVsbCkgcmV0dXJuO1xyXG5cdFx0XHR2YXIgdjogc3RyaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xyXG5cdFx0XHR2YXIgdjI6IHN0cmluZyA9IHRoaXMudXRmOHRvMTYodGhpcy5kZWNvZGVCeUJhc2U2NCh2KSk7XHJcblx0XHRcdHJldHVybiB2MjtcclxuXHRcdH1cclxuXHJcblx0XHQvKipcclxuXHRcdCAqIOiOt+W+l+W9k+WJjee9kemhteeahOWcsOWdgFxyXG5cdFx0ICovXHJcblx0XHRwdWJsaWMgc3RhdGljIGdldExvY2FsSHJlZigpOiBzdHJpbmcge1xyXG5cdFx0XHRyZXR1cm4gd2luZG93LmxvY2F0aW9uLmhyZWY7XHJcblx0XHR9XHJcblx0XHRwdWJsaWMgc3RhdGljIGRlY29kZUJ5QmFzZTY0KGlucHV0OiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cdFx0XHR2YXIgb3V0cHV0ID0gW10sXHJcblx0XHRcdFx0Y2hyMSwgY2hyMiwgY2hyMyxcclxuXHRcdFx0XHRlbmMxLCBlbmMyLCBlbmMzLCBlbmM0LFxyXG5cdFx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdFx0aW5wdXQgPSBpbnB1dC5yZXBsYWNlKC9bXkEtWmEtejAtOVxcK1xcL1xcPV0vZywgXCJcIik7XHJcblxyXG5cdFx0XHR3aGlsZSAoaSA8IGlucHV0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdGVuYzEgPSBDb21tb25VdGlscy5LRVlTVFI2NC5pbmRleE9mKGlucHV0LmNoYXJBdChpKyspKTtcclxuXHRcdFx0XHRlbmMyID0gQ29tbW9uVXRpbHMuS0VZU1RSNjQuaW5kZXhPZihpbnB1dC5jaGFyQXQoaSsrKSk7XHJcblx0XHRcdFx0ZW5jMyA9IENvbW1vblV0aWxzLktFWVNUUjY0LmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO1xyXG5cdFx0XHRcdGVuYzQgPSBDb21tb25VdGlscy5LRVlTVFI2NC5pbmRleE9mKGlucHV0LmNoYXJBdChpKyspKTtcclxuXHJcblx0XHRcdFx0Y2hyMSA9IChlbmMxIDw8IDIpIHwgKGVuYzIgPj4gNCk7XHJcblx0XHRcdFx0Y2hyMiA9ICgoZW5jMiAmIDE1KSA8PCA0KSB8IChlbmMzID4+IDIpO1xyXG5cdFx0XHRcdGNocjMgPSAoKGVuYzMgJiAzKSA8PCA2KSB8IGVuYzQ7XHJcblxyXG5cdFx0XHRcdG91dHB1dC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoY2hyMSkpO1xyXG5cclxuXHRcdFx0XHRpZiAoZW5jMyAhPT0gNjQpIHtcclxuXHRcdFx0XHRcdG91dHB1dC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoY2hyMikpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAoZW5jNCAhPT0gNjQpIHtcclxuXHRcdFx0XHRcdG91dHB1dC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoY2hyMykpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIG91dHB1dC5qb2luKCcnKTtcclxuXHRcdH1cclxuXHJcblx0XHQvKipcclxuXHRcdCAqIHV0Zjjovax1dGYxNlxyXG5cdFx0ICogQHBhcmFtIHtPYmplY3R9IHN0clxyXG5cdFx0ICovXHJcblx0XHRwdWJsaWMgc3RhdGljIHV0Zjh0bzE2KHN0cjogc3RyaW5nKTogc3RyaW5nIHtcclxuXHRcdFx0dmFyIG91dCwgaSwgbGVuLCBjO1xyXG5cdFx0XHR2YXIgY2hhcjIsIGNoYXIzO1xyXG5cdFx0XHRvdXQgPSBcIlwiO1xyXG5cdFx0XHRsZW4gPSBzdHIubGVuZ3RoO1xyXG5cdFx0XHRpID0gMDtcclxuXHRcdFx0d2hpbGUgKGkgPCBsZW4pIHtcclxuXHRcdFx0XHRjID0gc3RyLmNoYXJDb2RlQXQoaSsrKTtcclxuXHRcdFx0XHRzd2l0Y2ggKGMgPj4gNCkge1xyXG5cdFx0XHRcdFx0Y2FzZSAwOlxyXG5cdFx0XHRcdFx0Y2FzZSAxOlxyXG5cdFx0XHRcdFx0Y2FzZSAyOlxyXG5cdFx0XHRcdFx0Y2FzZSAzOlxyXG5cdFx0XHRcdFx0Y2FzZSA0OlxyXG5cdFx0XHRcdFx0Y2FzZSA1OlxyXG5cdFx0XHRcdFx0Y2FzZSA2OlxyXG5cdFx0XHRcdFx0Y2FzZSA3OlxyXG5cdFx0XHRcdFx0XHRvdXQgKz0gc3RyLmNoYXJBdChpIC0gMSk7XHJcblx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0Y2FzZSAxMjpcclxuXHRcdFx0XHRcdGNhc2UgMTM6XHJcblx0XHRcdFx0XHRcdGNoYXIyID0gc3RyLmNoYXJDb2RlQXQoaSsrKTtcclxuXHRcdFx0XHRcdFx0b3V0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjICYgMHhGKSA8PCA2KSB8IChjaGFyMiAmIDB4M0YpKTtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRjYXNlIDE0OlxyXG5cdFx0XHRcdFx0XHRjaGFyMiA9IHN0ci5jaGFyQ29kZUF0KGkrKyk7XHJcblx0XHRcdFx0XHRcdGNoYXIzID0gc3RyLmNoYXJDb2RlQXQoaSsrKTtcclxuXHRcdFx0XHRcdFx0b3V0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjICYgMHgwRikgPDwgMTIpIHwgKChjaGFyMiAmIDB4M0YpIDw8IDYpIHwgKChjaGFyMyAmIDB4M0YpIDw8IDApKTtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBvdXQ7XHJcblx0XHR9O1xyXG5cclxuXHRcdC8vR2FtZU1uZy5zZXJ2ZXJJcCA9IFwid3M6Ly8xOTIuMTY4LjEwLjkzXCI7IEdhbWVNbmcuc2VydmVyUG9ydCA9IDI3MDcwOyBHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuaXNMb2FjYWxEZXYgPSB0cnVlOyAvL+WbveW8ulxyXG5cdFx0Ly9HYW1lTW5nLnNlcnZlcklwID0gXCJ3czovLzE5Mi4xNjguMTAuNDNcIjsgR2FtZU1uZy5zZXJ2ZXJQb3J0ID0gMjcwNzA7IEdhbWVGYWNhZGUuSW5zdGFuY2UuR2FtZU1uZy5pc0xvYWNhbERldiA9IHRydWU7IC8v5a625LmQXHJcblx0XHQvL0dhbWVNbmcuc2VydmVySXAgPSBcIndzOi8vZGV2LWJ5LTEuYmxpenptaS5sb2NhbFwiOyBHYW1lTW5nLnNlcnZlclBvcnQgPSA1MDA2MjsgR2FtZUZhY2FkZS5JbnN0YW5jZS5HYW1lTW5nLmlzTG9hY2FsRGV2ID0gdHJ1ZTsgLy9kZXZcclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIGRlY29kZShpZDogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogYW55IHtcclxuXHRcdFx0dmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XHJcblx0XHRcdGlmIChlbGVtZW50KSB7XHJcblx0XHRcdFx0dmFyIGF0dHJpYnV0ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKHZhbHVlKTtcclxuXHRcdFx0XHRpZiAoaWQgPT09IFwibXlWZXJzaW9uXCIpIHtcclxuXHRcdFx0XHRcdHJldHVybiBhdHRyaWJ1dGU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5kZWNvZGVCeUJhc2U2NChhdHRyaWJ1dGUpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzd2l0Y2ggKGlkKSB7XHJcblx0XHRcdFx0Y2FzZSBcInNpcFwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZUJ5QmFzZTY0KFwiV3lKM2MzTTZYQzljTDJacGMyZ3RlSGg0TG1SbGRpNWliR2w2ZW0xcExtTnVNVEl6SWl3aWQzTnpPbHd2WEM5bWFYTm9MV0ZpWXk1a1pYWXVZbXhwZW5wdGFTNWpiakV5TXlJc0luZHpjenBjTDF3dlptbHphQzB4TWpNdVpHVjJMbUpzYVhwNmJXa3VZMjR4TWpNaUxDSjNjM002WEM5Y0wyWnBjMmd0WVdKakxtUmxkaTVpYkdsNmVtMXBMbU51SWl3aWQzTnpPbHd2WEM5bWFYTm9MV0pzYVhwNmJXa3VZMjV6SWl3aWQzTnpPbHd2WEM5bWFYTm9MV0pzYVhwNmJXa3VZMjV6SWl3aWQzTnpPbHd2WEM5bWFYTm9MV0ZpWWk1aWJHbDZlbTFwTG1OdUlsMD1cIik7XHJcblx0XHRcdFx0Y2FzZSBcInNlcnZlcklwXCI6XHJcblx0XHRcdFx0XHRHYW1lRmFjYWRlLkluc3RhbmNlLkdhbWVNbmcuaXNMb2FjYWxEZXYgPSB0cnVlO1xyXG5cdFx0XHRcdFx0Ly9yZXR1cm4gXCJ3czovLzE5Mi4xNjguMTAuOTNcIjsgLy8g5Zu95by6XHJcblx0XHRcdFx0XHQvL3JldHVybiBcIndzOi8vMTkyLjE2OC4xMC40M1wiOyAvLyDlrrbkuZBcclxuXHRcdFx0XHRcdHJldHVybiBcIndzOi8vZGV2LWJ5LTEuYmxpenptaS5sb2NhbFwiOyAvL2RldlxyXG5cdFx0XHRcdGNhc2UgXCJsb2JieVVybFwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZUJ5QmFzZTY0KFwiYUhSMGNITTZMeTlzYjJKaWVTNTNZVzUwWjJGdFpTNXZjbWN2UDNSNWNHVTlhRFU9XCIpO1xyXG5cdFx0XHRcdGNhc2UgXCJzZXJ2ZXJQb3J0XCI6XHJcblx0XHRcdFx0XHQvL1x0cmV0dXJuIDI3MDcwO1xyXG5cdFx0XHRcdFx0cmV0dXJuIDUwMDYyO1xyXG5cdFx0XHRcdGNhc2UgXCJ0b2tlblwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIHV0aWxzLkNvbW1vblV0aWxzLmRlY29kZUJ5QmFzZTY0KFwiT0RBeFFqWTVORVEwUVRZeE5VWXlOQT09XCIpO1xyXG5cdFx0XHRcdGNhc2UgXCJoaXN0b3J5VXJsXCI6XHJcblx0XHRcdFx0XHRyZXR1cm4gdXRpbHMuQ29tbW9uVXRpbHMuZGVjb2RlQnlCYXNlNjQoXCJhSFIwY0hNNkx5OWpaRzR1YkhaNVpYUnZkMjR1WTI5dEwyaHBjM1J2Y25rL2MyVnlkbVZ5WDJsa1BUSTFKbU5zYVdWdWREMW9OUT09XCIpO1xyXG5cdFx0XHRcdGNhc2UgXCJyZXR1cm5cIjpcclxuXHRcdFx0XHRcdHJldHVybiB1dGlscy5Db21tb25VdGlscy5kZWNvZGVCeUJhc2U2NChcIk1RPT1cIik7XHJcblx0XHRcdFx0Y2FzZSBcInBsYXlfdHlwZVwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIDA7XHJcblx0XHRcdFx0Y2FzZSBcInNoZWV0XCI6XHJcblx0XHRcdFx0XHRyZXR1cm4gMDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIFwiXCI7XHJcblx0XHR9XHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBkYXRlZm9ybWF0KHRpbWU6IG51bWJlciwgZm10OiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cdFx0XHRsZXQgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpO1xyXG5cdFx0XHRsZXQgbyA9IHtcclxuXHRcdFx0XHRcIk0rXCI6IGRhdGUuZ2V0TW9udGgoKSArIDEsIC8v5pyI5Lu9XHJcblx0XHRcdFx0XCJkK1wiOiBkYXRlLmdldERhdGUoKSwgLy/ml6VcclxuXHRcdFx0XHRcImgrXCI6IGRhdGUuZ2V0SG91cnMoKSwgLy/lsI/ml7ZcclxuXHRcdFx0XHRcIm0rXCI6IGRhdGUuZ2V0TWludXRlcygpLCAvL+WIhlxyXG5cdFx0XHRcdFwicytcIjogZGF0ZS5nZXRTZWNvbmRzKCksIC8v56eSXHJcblx0XHRcdFx0XCJxK1wiOiBNYXRoLmZsb29yKChkYXRlLmdldE1vbnRoKCkgKyAzKSAvIDMpLCAvL+Wto+W6plxyXG5cdFx0XHRcdFwiU1wiOiBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC8v5q+r56eSXHJcblx0XHRcdH07XHJcblx0XHRcdGlmICgvKHkrKS8udGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChkYXRlLmdldEZ1bGxZZWFyKCkgKyBcIlwiKS5zdWJzdHIoNCAtIFJlZ0V4cC4kMS5sZW5ndGgpKTtcclxuXHRcdFx0Zm9yICh2YXIgayBpbiBvKVxyXG5cdFx0XHRcdGlmIChuZXcgUmVnRXhwKFwiKFwiICsgayArIFwiKVwiKS50ZXN0KGZtdCkpIGZtdCA9IGZtdC5yZXBsYWNlKFJlZ0V4cC4kMSwgKFJlZ0V4cC4kMS5sZW5ndGggPT0gMSkgPyAob1trXSkgOiAoKFwiMDBcIiArIG9ba10pLnN1YnN0cigoXCJcIiArIG9ba10pLmxlbmd0aCkpKTtcclxuXHRcdFx0cmV0dXJuIGZtdDtcclxuXHRcdH07XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiDmlbDmja7ovazmjaIg5pWw5o2u6L2s5YyW5oiQ5Y2D5YWD56ym77yI55So5LqO6YeR5biB5qC85byP77yJXHJcblx0XHQgKiBAcGFyYW0gbnVtIOmSsVxyXG5cdFx0ICovXHJcblx0XHRwdWJsaWMgc3RhdGljIG51bWJlckZvcm1hdChudW06IG51bWJlcik6IHN0cmluZyB7XHJcblx0XHRcdHZhciBjb2luU3RyOiBzdHJpbmcgPSAobnVtIC8gMTAwKS50b0ZpeGVkKDIpLnJlcGxhY2UoLyhcXGQpKD89KFxcZHszfSkrXFwuKS9nLCAnJDEsJyk7XHJcblx0XHRcdHJldHVybiBjb2luU3RyO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8qKlxyXG4gICAgICAgKiDph5HluIHlrZfkvZPorr7nva7oh6rliqjlpKflsI9cclxuICAgICAgICovXHJcblx0XHRwdWJsaWMgc3RhdGljIGNvaW5BdXRvRm9udFNpemUoY29pblRleHQ6IGZhaXJ5Z3VpLkdUZXh0RmllbGQpOiB2b2lkIHtcclxuXHRcdFx0dmFyIGNvaW5MZW5nOiBudW1iZXIgPSBjb2luVGV4dC50ZXh0Lmxlbmd0aDtcclxuXHRcdFx0dmFyIGNvaW5Gb250U2l6ZTogbnVtYmVyID0gMjI7XHJcblx0XHRcdGlmIChjb2luTGVuZyA+IDEwKSB7XHJcblx0XHRcdFx0Y29pbkZvbnRTaXplID0gMjggLSBjb2luTGVuZztcclxuXHRcdFx0fVxyXG5cdFx0XHRjb2luVGV4dC5mb250U2l6ZSA9IGNvaW5Gb250U2l6ZTtcclxuXHRcdH1cclxuXHRcdC8qKlxyXG5cdFx0ICAgKiDlkI3lrZflrZfkvZPorr7nva7oh6rliqjlpKflsI9cclxuXHRcdCAgICovXHJcblx0XHRwdWJsaWMgc3RhdGljIG5hbWVBdXRvRm9udFNpemUoY29pblRleHQ6IGZhaXJ5Z3VpLkdUZXh0RmllbGQpOiB2b2lkIHtcclxuXHRcdFx0dmFyIGNvaW5MZW5nOiBudW1iZXIgPSBjb2luVGV4dC50ZXh0Lmxlbmd0aDtcclxuXHRcdFx0dmFyIGNvaW5Gb250U2l6ZTogbnVtYmVyID0gMjU7XHJcblx0XHRcdGlmIChjb2luTGVuZyA+IDEzKSB7XHJcblx0XHRcdFx0Y29pbkZvbnRTaXplID0gMjUgLSAoY29pbkxlbmcgLSAxMykgKiAxLjU7XHJcblx0XHRcdH1cclxuXHRcdFx0Y29pblRleHQuZm9udFNpemUgPSBjb2luRm9udFNpemU7XHJcblx0XHR9XHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBodW50ZWRJdGVtVmFsdWVGb250U2l6ZSh2YWx1ZTogZmFpcnlndWkuR1RleHRGaWVsZCkge1xyXG5cdFx0XHR2YXIgbGVuOiBudW1iZXIgPSB2YWx1ZS50ZXh0Lmxlbmd0aDtcclxuXHRcdFx0dmFyIGZvbnRTaXplOiBudW1iZXIgPSAxODtcclxuXHRcdFx0aWYgKGxlbiA+PSA3KSB7XHJcblx0XHRcdFx0Zm9udFNpemUgPSAxNiAtIChsZW4gLSA3KTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dmFsdWUuZm9udFNpemUgPSBmb250U2l6ZTtcclxuXHRcdH1cclxuXHJcblx0XHQvKiog5pyN5Yqh5Zmo55qE5pWw5YC86Z2i6aKd6L2s5o2iKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgbnVtYmVyRml4ZWQobnVtOiBudW1iZXIpOiBudW1iZXIge1xyXG5cdFx0XHRyZXR1cm4gbnVtIC8gMTAwO1xyXG5cdFx0fVxyXG5cdFx0LyoqXHJcblx0XHQgICAqIOmHkeW4geWtl+S9k+iuvue9ruiHquWKqOWkp+Wwj1xyXG5cdFx0ICAgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgY29pbkd1bkF1dG9Gb250U2l6ZShjb2luVGV4dDogTGF5YS5Gb250Q2xpcCk6IHZvaWQge1xyXG5cdFx0XHR2YXIgY29pbkxlbmc6IG51bWJlciA9IGNvaW5UZXh0LnZhbHVlLmxlbmd0aDtcclxuXHRcdFx0dmFyIGNvaW5Gb250U2l6ZTogbnVtYmVyID0gMTI7XHJcblx0XHRcdGlmIChjb2luTGVuZyA+IDEzKSB7XHJcblx0XHRcdFx0Y29pbkZvbnRTaXplID0gMjUgLSBjb2luTGVuZztcclxuXHRcdFx0fVxyXG5cclxuXHRcdH1cclxuXHRcdC8qKlxyXG5cdFx0ICog5piv5ZCm5piv6aaW5qyh6L+b5oi/XHJcblx0XHQgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgaXNGaXJzdEVudGVyUm9vbTogYm9vbGVhbiA9IHRydWU7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiDml7bpl7TmiLPnmoTovazljJZcclxuXHRcdCAqIEBwYXJhbSB0aW1lU3RhbXAgXHJcblx0XHQgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgbnVtYmVyVG9EYXRhVGltZSh0aW1lU3RhbXA6IG51bWJlcik6IHN0cmluZyB7XHJcblx0XHRcdHZhciBkID0gbmV3IERhdGUodGltZVN0YW1wKTtcclxuXHRcdFx0aWYgKHRpbWVTdGFtcC50b1N0cmluZygpLmxlbmd0aCA9PSAxMCkge1xyXG5cdFx0XHRcdGQgPSBuZXcgRGF0ZSh0aW1lU3RhbXAgKiAxMDAwKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR2YXIgc3RyID0gZC5nZXRGdWxsWWVhcigpICsgJy0nO1xyXG5cdFx0XHRzdHIgKz0gKGQuZ2V0TW9udGgoKSArIDEpID49IDEwID8gKGQuZ2V0TW9udGgoKSArIDEpIDogXCIwXCIgKyAoZC5nZXRNb250aCgpICsgMSk7XHJcblx0XHRcdHN0ciArPSAnLSc7XHJcblx0XHRcdHN0ciArPSBkLmdldERhdGUoKSA+PSAxMCA/IGQuZ2V0RGF0ZSgpIDogXCIwXCIgKyBkLmdldERhdGUoKTtcclxuXHRcdFx0c3RyICs9IFwiIFwiXHJcblx0XHRcdHN0ciArPSBkLmdldEhvdXJzKCkgPj0gMTAgPyBkLmdldEhvdXJzKCkgOiBcIjBcIiArIGQuZ2V0SG91cnMoKTtcclxuXHRcdFx0c3RyICs9ICc6J1xyXG5cdFx0XHRzdHIgKz0gZC5nZXRNaW51dGVzKCkgPj0gMTAgPyBkLmdldE1pbnV0ZXMoKSA6IFwiMFwiICsgZC5nZXRNaW51dGVzKCk7XHJcblx0XHRcdHN0ciArPSAnOidcclxuXHRcdFx0c3RyICs9IGQuZ2V0U2Vjb25kcygpID49IDEwID8gZC5nZXRTZWNvbmRzKCkgOiBcIjBcIiArIGQuZ2V0U2Vjb25kcygpO1xyXG5cdFx0XHRyZXR1cm4gc3RyO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICog6I635b6X5pe26Ze05oiz5beu77yI5LiA6Iis55So5LqO5rS75Yqo77yJXHJcblx0XHQgKiBAcGFyYW0gdCBcclxuXHRcdCAqL1xyXG5cdFx0cHVibGljIHN0YXRpYyBnZXRUaW1lRGlmZmVyZW5jZSh0OiBudW1iZXIpOiBzdHJpbmcge1xyXG5cdFx0XHR2YXIgYnVkZ2V0VGltZSA9IG5ldyBEYXRlKHQgKiAxMDAwKVxyXG5cdFx0XHR2YXIgbm93VGltZSA9IG5ldyBEYXRlKHRoaXMuZ2V0Tm93QWN0dWFsVGltZVN0YW1wKCkpO1xyXG5cdFx0XHR2YXIgZGF0YURpZmYgPSBidWRnZXRUaW1lLmdldFRpbWUoKSAtIG5vd1RpbWUuZ2V0VGltZSgpO1xyXG5cdFx0XHR2YXIgc3RyOiBzdHJpbmcgPSBudWxsO1xyXG5cdFx0XHRpZiAodCAqIDEwMDAgPj0gdGhpcy5nZXROb3dBY3R1YWxUaW1lU3RhbXAoKSkge1xyXG5cdFx0XHRcdHZhciBkYXkgPSBkYXRhRGlmZiAvICgxMDAwICogNjAgKiA2MCAqIDI0KTtcclxuXHRcdFx0XHRkYXkgPSBNYXRoLmZsb29yKGRheSk7XHJcblx0XHRcdFx0c3RyID0gZGF5ID4gMCA/IGRheSArIFwiRCBcIiA6IFwiXCI7XHJcblx0XHRcdFx0dmFyIGhvdXJzID0gKGRhdGFEaWZmICUgKDEwMDAgKiA2MCAqIDYwICogMjQpKSAvICgxMDAwICogNjAgKiA2MCk7XHJcblx0XHRcdFx0aG91cnMgPSBNYXRoLmZsb29yKGhvdXJzKTtcclxuXHRcdFx0XHRzdHIgKz0gaG91cnMgPj0gMTAgPyBob3VycyA6IFwiMFwiICsgaG91cnM7XHJcblx0XHRcdFx0c3RyICs9IFwiOlwiO1xyXG5cdFx0XHRcdHZhciBtaW51dGVzID0gKGRhdGFEaWZmICUgKDEwMDAgKiA2MCAqIDYwKSkgLyAoMTAwMCAqIDYwKTtcclxuXHRcdFx0XHRtaW51dGVzID0gTWF0aC5mbG9vcihtaW51dGVzKTtcclxuXHRcdFx0XHRzdHIgKz0gbWludXRlcyA+PSAxMCA/IG1pbnV0ZXMgOiBcIjBcIiArIG1pbnV0ZXM7XHJcblx0XHRcdFx0c3RyICs9IFwiOlwiO1xyXG5cdFx0XHRcdHZhciBzZWNvbmRzID0gKGRhdGFEaWZmICUgKDEwMDAgKiA2MCkpIC8gMTAwMDtcclxuXHRcdFx0XHRzZWNvbmRzID0gTWF0aC5yb3VuZChzZWNvbmRzKTtcclxuXHRcdFx0XHRzdHIgKz0gc2Vjb25kcyA+PSAxMCA/IHNlY29uZHMgOiBcIjBcIiArIHNlY29uZHM7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0c3RyID0gbnVsbDtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gc3RyO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICog5a6e6ZmF5ZCM5q2l5pyN5Yqh56uv55qE5pe26Ze077yI546w5Zyo5pe26Ze05ZCM5q2l5pyN5Yqh56uv55qE5pe26Ze077yJXHJcblx0XHQgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgZ2V0Tm93QWN0dWFsVGltZVN0YW1wKCk6IG51bWJlciB7XHJcblx0XHRcdHJldHVybiB0aGlzLmdldE5vd1RpbWVTdGFtcCgpICsgdGhpcy5nZXRPZmZzZXRUaW1lKCk7XHJcblx0XHR9XHJcblx0XHQvKipcclxuXHRcdCAqIOeOsOWcqOaXtumXtOaIs1xyXG5cdFx0ICovXHJcblx0XHRwdWJsaWMgc3RhdGljIGdldE5vd1RpbWVTdGFtcCgpOiBudW1iZXIge1xyXG5cclxuXHRcdFx0cmV0dXJuIERhdGUubm93KCk7XHJcblx0XHR9XHJcblx0XHQvKipcclxuXHRcdCAqIOiOt+W+l+WBj+enu+aXtumXtFxyXG5cdFx0ICovXHJcblx0XHRwdWJsaWMgc3RhdGljIGdldE9mZnNldFRpbWUoKTogbnVtYmVyIHtcclxuXHJcblx0XHRcdHJldHVybiBOZXRMb2dpbi5JbnN0YW5jZS5fdGltZU9mZnNldDtcclxuXHRcdH1cclxuXHRcdC8qKlxyXG5cdFx0ICog5pi156ew5qC85byP55qE6L2s5YyWXHJcblx0XHQgKiBAcGFyYW0gbmFtZSBcclxuXHRcdCAqL1xyXG5cdFx0cHVibGljIHN0YXRpYyBuaWNrTmFtZVRvRm9ybWF0KG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcblxyXG5cdFx0XHR2YXIgbjogc3RyaW5nID0gbmFtZTtcclxuXHRcdFx0aWYgKG4ubGVuZ3RoID4gMTApIHtcclxuXHRcdFx0XHRuID0gbi5zdWJzdHIoMCwgMTApO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgbmlja05hbWVXaXRoU3ltYm9sKG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcblxyXG5cdFx0XHR2YXIgbjogc3RyaW5nID0gbmFtZTtcclxuXHRcdFx0aWYgKG4ubGVuZ3RoID4gMTApIHtcclxuXHRcdFx0XHRuID0gbi5zdWJzdHIoMCwgMTApICsgXCIuLi5cIjtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbjtcclxuXHRcdH1cclxuXHQgICAgLyoqXHJcbiAgICAgICAgKiBqcOi9rOexu+Wei1xyXG4gICAgICAgICogQHBhcmFtIG51bSDkuK3lpZbnrYnnuqdcclxuICAgICAgICAqL1xyXG5cdFx0cHVibGljIHN0YXRpYyBqcFdpbm5lclRvVHlwZShudW06IG51bWJlcik6IHN0cmluZyB7XHJcblx0XHRcdHZhciBzdHI6IHN0cmluZztcclxuXHRcdFx0c3dpdGNoIChudW0pIHtcclxuXHRcdFx0XHRjYXNlIDE6XHJcblx0XHRcdFx0XHRzdHIgPSBcIuS4gOetieWlllwiO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0Y2FzZSAyOlxyXG5cdFx0XHRcdFx0c3RyID0gXCLkuoznrYnlpZZcIjtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgMzpcclxuXHRcdFx0XHRcdHN0ciA9IFwi5LiJ562J5aWWXCI7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlIDQ6XHJcblx0XHRcdFx0XHRzdHIgPSBcIuWbm+etieWlllwiO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHN0cjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBwdWJsaWMgc3RhdGljIGNoZWNrX01vbmV5VGV4dChleElucHV0OiBMYXlhLlRleHRJbnB1dCwgbWF4OiBudW1iZXIsIG1pbjogbnVtYmVyLCBzbGlkZXI6IExheWEuSFNsaWRlciA9IG51bGwsIE1vbmV5U3VwcGx5OiBnYW1lLk1vbmV5U3VwcGx5RGlhbG9nID0gbnVsbCk6IHZvaWQge1xyXG5cdFx0Ly8gXHRsZXQgc3RyID0gZXhJbnB1dC50ZXh0O1xyXG5cdFx0Ly8gXHR2YXIgZW5kOiBzdHJpbmcgPSBcIlwiO1xyXG5cdFx0Ly8gXHRsZXQgYXJyOiBBcnJheTxhbnk+ID0gW107XHJcblx0XHQvLyBcdC8vIGNvbnNvbGUubG9nKHN0ciArIFwic3RyXCIpO1xyXG5cdFx0Ly8gXHRpZiAoc3RyLmluZGV4T2YoXCIuXCIpICE9IC0xKSB7XHJcblx0XHQvLyBcdFx0ZW5kID0gc3RyLnN1YnN0cihzdHIuaW5kZXhPZihcIi5cIiksIHN0ci5sZW5ndGgpO1xyXG5cdFx0Ly8gXHRcdGlmIChlbmQubGVuZ3RoID4gMylcclxuXHRcdC8vIFx0XHRcdGVuZCA9IGVuZC5zdWJzdHIoMCwgMyk7XHJcblx0XHQvLyBcdFx0Ly8gY29uc29sZS5sb2coZW5kICsgXCJeXl5cIik7XHJcblx0XHQvLyBcdFx0YXJyID0gc3RyLnN1YnN0cigwLCBzdHIuaW5kZXhPZihcIi5cIikpLnNwbGl0KFwiXCIpO1xyXG5cdFx0Ly8gXHR9XHJcblx0XHQvLyBcdGVsc2VcclxuXHRcdC8vIFx0XHRhcnIgPSBzdHIuc3BsaXQoXCJcIik7XHJcblxyXG5cclxuXHJcblx0XHQvLyBcdHZhciBsZW46IG51bWJlciA9IHN0ci5sZW5ndGg7XHJcblx0XHQvLyBcdHZhciBhOiBBcnJheTxudW1iZXI+ID0gW107XHJcblxyXG5cdFx0Ly8gXHRmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG5cdFx0Ly8gXHRcdGlmIChOdW1iZXIoYXJyW2ldKSB8fCBhcnJbaV0gPT0gXCIwXCIpIHtcclxuXHRcdC8vIFx0XHRcdHZhciBuOiBudW1iZXIgPSBOdW1iZXIoYXJyW2ldKTtcclxuXHRcdC8vIFx0XHRcdGEucHVzaChuKVxyXG5cdFx0Ly8gXHRcdH1cclxuXHRcdC8vIFx0fVxyXG5cclxuXHRcdC8vIFx0dmFyIG1vbmV5OiBudW1iZXIgPSBOdW1iZXIoYS5qb2luKFwiXCIpKTtcclxuXHRcdC8vIFx0dmFyIG46IG51bWJlciA9IDEwO1xyXG5cdFx0Ly8gXHR2YXIgeDogbnVtYmVyID0gMDtcclxuXHRcdC8vIFx0aWYgKGVuZCAhPSBcIlwiICYmIGVuZC5sZW5ndGggPiAxKSB7XHJcblx0XHQvLyBcdFx0aWYgKGVuZC5sZW5ndGggPT0gMykgbiA9IDEwMDtcclxuXHJcblx0XHQvLyBcdFx0eCA9IE51bWJlcihlbmQuc3Vic3RyKDEsIGVuZC5sZW5ndGgpKSAvIG47XHJcblx0XHQvLyBcdH1cclxuXHRcdC8vIFx0Ly8gY29uc29sZS5sb2cobW9uZXkgKyBcIm1vbmV5XCIpO1xyXG5cclxuXHRcdC8vIFx0aWYgKG1vbmV5ICsgeCA+IG1heCAvIDEwMCkge1xyXG5cdFx0Ly8gXHRcdG1vbmV5ID0gbWF4IC8gMTAwO1xyXG5cdFx0Ly8gXHRcdGV4SW5wdXQudGV4dCA9IFN0cmluZyhtYXggLyAxMDApO1xyXG5cdFx0Ly8gXHRcdHRoaXMuY2hlY2tfTW9uZXlUZXh0KGV4SW5wdXQsIG1heCwgbWluLCBzbGlkZXIpO1xyXG5cclxuXHJcblx0XHQvLyBcdH0gZWxzZSBpZiAobW9uZXkgKyB4IDwgbWluIC8gMTAwKSB7XHJcblx0XHQvLyBcdFx0bW9uZXkgPSBtaW4gLyAxMDA7XHJcblx0XHQvLyBcdFx0ZXhJbnB1dC50ZXh0ID0gU3RyaW5nKG1pbiAvIDEwMCk7XHJcblxyXG5cdFx0Ly8gXHRcdHRoaXMuY2hlY2tfTW9uZXlUZXh0KGV4SW5wdXQsIG1heCwgbWluLCBzbGlkZXIpO1xyXG5cdFx0Ly8gXHR9XHJcblx0XHQvLyBcdGVsc2VcclxuXHRcdC8vIFx0XHRleElucHV0LnRleHQgPSB0aGlzLmZvcm1hdE51bV8wMChtb25leSkgKyBlbmQ7XHJcblxyXG5cclxuXHJcblx0XHQvLyBcdGlmIChzbGlkZXIgIT0gbnVsbCkgeyAvL+i/m+W6puadoeaciemXrumimOOAglxyXG5cdFx0Ly8gXHRcdHZhciBudW06IG51bWJlciA9IE51bWJlcihtb25leSArIGVuZCkgLyBtYXg7XHJcblx0XHQvLyBcdFx0aWYgKE1vbmV5U3VwcGx5KVxyXG5cdFx0Ly8gXHRcdFx0TW9uZXlTdXBwbHkuaXNTbGlkZXJFdmVudCA9IGZhbHNlO1xyXG5cdFx0Ly8gXHRcdHNsaWRlci52YWx1ZSA9IG51bSAqIDEwMDAwO1xyXG5cclxuXHRcdC8vIFx0fVxyXG5cclxuXHJcblx0XHQvLyB9XHJcblxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgZm9ybWF0TnVtXzAwKG51bTogbnVtYmVyLCBpbnNlcnRTaWduOiBzdHJpbmcgPSBcIixcIik6IHN0cmluZyB7XHJcblx0XHRcdHZhciBzOiBzdHJpbmcgPSBudW0udG9TdHJpbmcoKTtcclxuXHRcdFx0dmFyIG46IHN0cmluZztcclxuXHRcdFx0dmFyIGFycjogQXJyYXk8YW55PjtcclxuXHRcdFx0aWYgKHMuaW5kZXhPZihcIi5cIikgPT0gLTEpXHJcblx0XHRcdFx0biA9IFwiXCI7XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGFyciA9IHMuc3BsaXQoXCJcIik7XHJcblx0XHRcdFx0YXJyLnNwbGljZShhcnIuaW5kZXhPZihcIi5cIiksIDEpO1xyXG5cdFx0XHRcdG4gPSBcIi5cIiArIGFyci5zcGxpY2UoYXJyLmxlbmd0aCAtIDIsIDIpLmpvaW4oXCJcIik7XHJcblx0XHRcdFx0cyA9IGFyci5qb2luKFwiXCIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGFyciA9IFtdO1xyXG5cdFx0XHR2YXIgc3RyOiBzdHJpbmcgPSBOdW1iZXIobnVtKS50b1N0cmluZygpO1xyXG5cdFx0XHR2YXIgaWR4OiBudW1iZXIgPSAwO1xyXG5cdFx0XHRmb3IgKHZhciBpOiBudW1iZXIgPSBzdHIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuXHRcdFx0XHRpZHgrKztcclxuXHRcdFx0XHRpZiAoaWR4ID09IDMgJiYgaSAhPSAwKSB7XHJcblx0XHRcdFx0XHRpZHggPSAxO1xyXG5cdFx0XHRcdFx0c3RyID0gc3RyLnN1YnN0cmluZygwLCBpKSArIGluc2VydFNpZ24gKyBzdHIuc3Vic3RyKGkpO1xyXG5cdFx0XHRcdFx0aS0tO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gc3RyICsgbjtcclxuXHRcdH1cclxuXHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBjaGVja19QaG9uZV9UZXh0KGlucHV0U3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cclxuXHJcblx0XHRcdGxldCBzdHIgPSBpbnB1dFN0cmluZztcclxuXHRcdFx0dmFyIGVuZDogc3RyaW5nID0gXCJcIjtcclxuXHRcdFx0bGV0IGFycjogQXJyYXk8YW55PiA9IFtdO1xyXG5cdFx0XHQvLyBjb25zb2xlLmxvZyhzdHIgKyBcInN0clwiKTtcclxuXHRcdFx0aWYgKHN0ci5pbmRleE9mKFwiLlwiKSAhPSAtMSkge1xyXG5cdFx0XHRcdGVuZCA9IHN0ci5zdWJzdHIoc3RyLmluZGV4T2YoXCIuXCIpLCBzdHIubGVuZ3RoKTtcclxuXHRcdFx0XHRpZiAoZW5kLmxlbmd0aCA+IDMpXHJcblx0XHRcdFx0XHRlbmQgPSBlbmQuc3Vic3RyKDAsIDMpO1xyXG5cdFx0XHRcdGlmIChlbmQuaW5kZXhPZihcIi5cIikgPiAtMSAmJiBlbmQubGFzdEluZGV4T2YoXCIuXCIpID4gLTEgJiYgZW5kLmluZGV4T2YoXCIuXCIpICE9IGVuZC5sYXN0SW5kZXhPZihcIi5cIikpIHtcclxuXHRcdFx0XHRcdGVuZCA9IFwiLjBcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly8gY29uc29sZS5sb2coZW5kICsgXCJeXl5cIik7XHJcblx0XHRcdFx0YXJyID0gc3RyLnN1YnN0cigwLCBzdHIuaW5kZXhPZihcIi5cIikpLnNwbGl0KFwiXCIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRhcnIgPSBzdHIuc3BsaXQoXCJcIik7XHJcblxyXG5cclxuXHJcblx0XHRcdHZhciBsZW46IG51bWJlciA9IHN0ci5sZW5ndGg7XHJcblx0XHRcdHZhciBhOiBBcnJheTxudW1iZXI+ID0gW107XHJcblxyXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGlmIChOdW1iZXIoYXJyW2ldKSB8fCBhcnJbaV0gPT0gXCIwXCIpIHtcclxuXHRcdFx0XHRcdHZhciBuOiBudW1iZXIgPSBOdW1iZXIoYXJyW2ldKTtcclxuXHRcdFx0XHRcdGEucHVzaChuKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dmFyIG1vbmV5OiBudW1iZXIgPSBOdW1iZXIoYS5qb2luKFwiXCIpKTtcclxuXHRcdFx0dmFyIG46IG51bWJlciA9IDEwO1xyXG5cdFx0XHR2YXIgeDogbnVtYmVyID0gMDtcclxuXHRcdFx0aWYgKGVuZCAhPSBcIlwiICYmIGVuZC5sZW5ndGggPiAxKSB7XHJcblx0XHRcdFx0aWYgKGVuZC5sZW5ndGggPT0gMykgbiA9IDEwMDtcclxuXHJcblx0XHRcdFx0eCA9IE51bWJlcihlbmQuc3Vic3RyKDEsIGVuZC5sZW5ndGgpKSAvIG47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB0aGlzLmZvcm1hdE51bV8wMChtb25leSkgKyBlbmQ7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgQ2hlY2tfSW5wdXQodGV4dCkge1xyXG5cdFx0XHRpZiAodGV4dCA9PSBcIjAwXCIgfHwgdGV4dCA9PSBcIi5cIiB8fCB0ZXh0Lm1hdGNoKC9bXjAtOS5dL2cpKSB7XHJcblx0XHRcdFx0dGV4dCA9IHRleHQuc3Vic3RyaW5nKDAsIHRleHQubGVuZ3RoIC0gMSk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKHRleHQubWF0Y2goLy4vZykgJiYgdGV4dC5tYXRjaCgvLi9nKS5sZW5ndGggPiAxIHx8IHRleHQubWF0Y2goL1teMC05Ll0vZykpIHtcclxuXHRcdFx0XHR0ZXh0ID0gdGV4dC5zdWJzdHJpbmcoMCwgdGV4dC5sZW5ndGggLSAxKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAodGV4dC5zcGxpdCgvLi8pWzFdICYmIHRleHQuc3BsaXQoLy4vKVsxXS5sZW5ndGggPT0gMykge1xyXG5cdFx0XHRcdHRleHQgPSB0ZXh0LnN1YnN0cmluZygwLCB0ZXh0Lmxlbmd0aCAtIDEpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChpc05hTih0ZXh0KSB8fCB0ZXh0ID09IG51bGwgfHwgdGV4dCA9PSBcIlwiKSB7XHJcblx0XHRcdFx0aWYgKHRleHQubGVuZ3RoID4gMSkgdGV4dCA9IDA7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0dGV4dCA9IHRleHQgPj0gMCA/IHRleHQgOiAwO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gdGV4dDtcclxuXHRcdH1cclxuXHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBnZXRMaW1pdFN0cmluZyhzdHI6IHN0cmluZywgbGltaXRMZW46IG51bWJlcikge1xyXG5cdFx0XHR2YXIgY3VyTmFtZSA9ICcnO1xyXG5cdFx0XHR2YXIgY3VyTmFtZVNpemUgPSAwO1xyXG5cdFx0XHR3aGlsZSAoY3VyTmFtZVNpemUgPCBsaW1pdExlbiAmJiBzdHJbY3VyTmFtZS5sZW5ndGhdICE9IG51bGwpIHtcclxuXHRcdFx0XHRjdXJOYW1lU2l6ZSArPSBzdHIuY2hhckNvZGVBdChjdXJOYW1lLmxlbmd0aCkgPD0gMTI2ID8gMSA6IDI7XHJcblx0XHRcdFx0Y3VyTmFtZSArPSBzdHJbY3VyTmFtZS5sZW5ndGhdO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChjdXJOYW1lLmxlbmd0aCA8IHN0ci5sZW5ndGgpIHtcclxuXHRcdFx0XHRjdXJOYW1lID0gY3VyTmFtZS5zdWJzdHIoMCwgKGN1ck5hbWUuY2hhckNvZGVBdChjdXJOYW1lLmxlbmd0aCAtIDEpIDw9IDEyNiA/IGN1ck5hbWUubGVuZ3RoIC0gMiA6IGN1ck5hbWUubGVuZ3RoIC0gMSkpO1xyXG5cdFx0XHRcdGN1ck5hbWUgKz0gJy4uLic7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGN1ck5hbWU7XHJcblx0XHR9O1xyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgc3RyaW5nRm9ybWF0KGNvbnRlbnQ6IHN0cmluZywgYXJnczogQXJyYXk8YW55Pik6IHN0cmluZyB7XHJcblx0XHRcdGZvciAodmFyIGk6IG51bWJlciA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdFx0dmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJ1xcXFx7JyArIGkgKyAnXFxcXH0nLCAnZ2knKTtcclxuXHRcdFx0XHRjb250ZW50ID0gY29udGVudC5yZXBsYWNlKHJlZ2V4cCwgYXJnc1tpXSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBjb250ZW50O1xyXG5cdFx0fVxyXG5cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIGdldERhdGVTdHIoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyLCBkYXk6IG51bWJlciwgY29uZmlnOiBhbnkpOiBBcnJheTxhbnk+IHtcclxuXHRcdFx0Y29uZmlnID0gY29uZmlnIHx8IHsgbWluRGF0ZTogXCIxOTAwLTAxLTAxXCIsIG1heERhdGU6IFwiMjA5OS0xMi0zMVwiIH07XHJcblx0XHRcdHV0aWxzLkNvbW1vblV0aWxzLmxvZyh1dGlscy5Db21tb25VdGlscy5zdHJpbmdGb3JtYXQoXCJ5ZWFyOiB7MH0sIG1vbnRoOiB7MX0sIGRheTogezJ9XCIsIFt5ZWFyLCBtb250aCwgZGF5XSkpO1xyXG5cdFx0XHR2YXIgYXJyeTogQXJyYXk8YW55PiA9IFtdO1xyXG5cclxuXHRcdFx0Ly/orqHnrpfmn5DlubTmn5DmnIjmnInlpJrlsJHlpKks5aaC5p6c5piv5LqM5pyI77yM6Zew5bm0MjjlpKnlkKbliJkyOeWkqVxyXG5cdFx0XHR2YXIgc2V0TW9udGhEYXlzOiBGdW5jdGlvbiA9IGZ1bmN0aW9uICh5ZWFyOiBudW1iZXIsIG1vbnRoOiBudW1iZXIpOiBudW1iZXIge1xyXG5cdFx0XHRcdHZhciBlcjogbnVtYmVyID0geWVhciAlIDQgPT0gMCAmJiB5ZWFyICUgMTAwICE9IDAgfHwgeWVhciAlIDQwMCA9PSAwID8gMjkgOiAyODtcclxuXHRcdFx0XHRyZXR1cm4gWzMxLCBlciwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdW21vbnRoIC0gMV07XHJcblx0XHRcdH1cclxuXHRcdFx0Ly/lvpfliLDmjIflrprmnIjnmoTkuIrkuKrmnIjmnIDlkI7kuIDlpKnkvKDov5vmnaXmjIkxMuaciOeul1xyXG5cdFx0XHR2YXIgZ2V0UGVydk1vbnRoTGFzdERheTogRnVuY3Rpb24gPSBmdW5jdGlvbiAoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyKTogbnVtYmVyIHtcclxuXHRcdFx0XHRyZXR1cm4gbmV3IERhdGUoeWVhciwgbW9udGggLSAxLCAwKS5nZXREYXRlKCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8v6KGl6b2Q5pWw5L2NXHJcblx0XHRcdHZhciBkaWdpdDogRnVuY3Rpb24gPSBmdW5jdGlvbiAobnVtOiBudW1iZXIpOiBzdHJpbmcge1xyXG5cdFx0XHRcdHJldHVybiBudW0gPCAxMCA/IFwiMFwiICsgbnVtIDogbnVtLnRvU3RyaW5nKCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8v5b2T5YmN5pyI56ys5LiA5aSp5piv5pif5pyf5YegXHJcblx0XHRcdHZhciBkYXRlOiBudW1iZXIgPSBzZXRNb250aERheXMoeWVhciwgbW9udGgpO1xyXG5cdFx0XHR2YXIgd2Vla2RheTogbnVtYmVyID0gbmV3IERhdGUoeWVhciwgbW9udGggLSAxLCAxKS5nZXREYXkoKTtcclxuXHRcdFx0Ly/moLnmja7ov5nkuKrmmJ/mnJ/nrpfliY3pnaLlh6DlpKnnmoTkuIrkuKrmnIjmnIDlkI7lh6DlpKlcclxuXHRcdFx0dmFyIHByZXZMYXN0RGF5ID0gd2Vla2RheSAhPT0gMCA/IHdlZWtkYXkgOiB3ZWVrZGF5ICsgNztcclxuXHRcdFx0Ly/lvpfliLDkuIrkuKrmnIjmnIDlkI7kuIDlpKlcclxuXHRcdFx0dmFyIHBlcnZNb250aGxhc3REYXk6IG51bWJlciA9IGdldFBlcnZNb250aExhc3REYXkoeWVhciwgbW9udGgpO1xyXG5cdFx0XHR2YXIgY3VycmVudE1vbnRoRGF5czogbnVtYmVyID0gZ2V0UGVydk1vbnRoTGFzdERheSh5ZWFyLCBtb250aCArIDEpO1xyXG5cdFx0XHQvL+S4iuaciOacgOWQjuWHoOWkqeW+queOr1xyXG5cdFx0XHR2YXIgbGFzdGRheXM6IG51bWJlciA9IHBlcnZNb250aGxhc3REYXkgLSBwcmV2TGFzdERheTtcclxuXHRcdFx0Ly/liKTmlq3mmK/lkKbotoXlh7rlhYHorrjnmoTml6XmnJ/ojIPlm7RcclxuXHRcdFx0dmFyIHN0YXJ0RGF5OiBudW1iZXIgPSAxO1xyXG5cdFx0XHR2YXIgbWluQXJyOiBBcnJheTxudW1iZXI+ID0gY29uZmlnLm1pbkRhdGUuc3BsaXQoXCItXCIpO1xyXG5cdFx0XHR2YXIgbWF4QXJyOiBBcnJheTxudW1iZXI+ID0gY29uZmlnLm1heERhdGUuc3BsaXQoXCItXCIpO1xyXG5cdFx0XHR2YXIgZW5kRGF5OiBudW1iZXIgPSBjdXJyZW50TW9udGhEYXlzO1xyXG5cdFx0XHR2YXIgdGhpc0RhdGU6IERhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KTtcclxuXHRcdFx0dmFyIGZpcnN0RGF0ZTogRGF0ZSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKTtcclxuXHRcdFx0dmFyIGxhc3REYXRlOiBEYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIGN1cnJlbnRNb250aERheXMpO1xyXG5cdFx0XHR2YXIgbWluVGltZTogRGF0ZSA9IG5ldyBEYXRlKG1pbkFyclswXSwgbWluQXJyWzFdLCBtaW5BcnJbMl0pO1xyXG5cdFx0XHR2YXIgbWF4VGltZTogRGF0ZSA9IG5ldyBEYXRlKG1heEFyclswXSwgbWF4QXJyWzFdLCBtYXhBcnJbMl0pO1xyXG5cdFx0XHR2YXIgbWluRGF0ZURheTogbnVtYmVyID0gbWluVGltZS5nZXREYXRlKCk7XHJcblxyXG5cdFx0XHRpZiAobWluVGltZSA+IGxhc3REYXRlKSB7XHJcblx0XHRcdFx0c3RhcnREYXkgPSBjdXJyZW50TW9udGhEYXlzICsgMTtcclxuXHRcdFx0fSBlbHNlIGlmIChtaW5UaW1lID49IGZpcnN0RGF0ZSAmJiBtaW5UaW1lIDw9IGxhc3REYXRlKSB7XHJcblx0XHRcdFx0c3RhcnREYXkgPSBtaW5EYXRlRGF5O1xyXG5cdFx0XHR9IGVsc2UgaWYgKG1pblRpbWUgPj0gZmlyc3REYXRlKSB7XHJcblxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAobWF4VGltZSkge1xyXG5cdFx0XHRcdHZhciBtYXhEYXRlRGF5OiBudW1iZXIgPSBtYXhUaW1lLmdldERhdGUoKTtcclxuXHRcdFx0XHRpZiAobWF4VGltZSA8IGZpcnN0RGF0ZSkge1xyXG5cdFx0XHRcdFx0ZW5kRGF5ID0gc3RhcnREYXk7XHJcblx0XHRcdFx0fSBlbHNlIGlmIChtYXhUaW1lID49IGZpcnN0RGF0ZSAmJiBtYXhUaW1lIDw9IGxhc3REYXRlKSB7XHJcblx0XHRcdFx0XHRlbmREYXkgPSBtYXhEYXRlRGF5O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly/lvqrnjq/kuIrmnIjliankvZnnmoTlpKnmlbBcclxuXHRcdFx0Zm9yICh2YXIgcDogbnVtYmVyID0gcHJldkxhc3REYXkgLSAxOyBwID49IDA7IHAtLSkge1xyXG5cdFx0XHRcdHZhciBweTogbnVtYmVyID0gMDtcclxuXHRcdFx0XHR2YXIgcG06IG51bWJlciA9IDA7XHJcblx0XHRcdFx0dmFyIHByZUNsczogbnVtYmVyID0gMDtcclxuXHRcdFx0XHR2YXIgcHJlRGF5czogbnVtYmVyID0gZGlnaXQocGVydk1vbnRobGFzdERheSAtIHApO1xyXG5cdFx0XHRcdG1vbnRoID09PSAxID8gKHB5ID0geWVhciAtIDEsIHBtID0gMTMpIDogKHB5ID0geWVhciwgcG0gPSBtb250aCk7XHJcblx0XHRcdFx0dmFyIHRoYXRwcmV0bTogbnVtYmVyID0gcGFyc2VJbnQocHkudG9TdHJpbmcoKSArIGRpZ2l0KHBtIC0gMSkudG9TdHJpbmcoKSArIHByZURheXMudG9TdHJpbmcoKSk7XHJcblx0XHRcdFx0dmFyIG1pbnByZXRtOiBudW1iZXIgPSBwYXJzZUludChtaW5BcnJbMF0udG9TdHJpbmcoKSArIGRpZ2l0KG1pbkFyclsxXSkudG9TdHJpbmcoKSArIGRpZ2l0KG1pbkFyclsyXSkudG9TdHJpbmcoKSk7XHJcblx0XHRcdFx0dmFyIG1heG5leHR0bTogbnVtYmVyID0gcGFyc2VJbnQobWF4QXJyWzBdLnRvU3RyaW5nKCkgKyBkaWdpdChtYXhBcnJbMV0pLnRvU3RyaW5nKCkgKyBkaWdpdChtYXhBcnJbMl0pLnRvU3RyaW5nKCkpO1xyXG5cdFx0XHRcdHZhciBpblRpbWU6IHN0cmluZyA9IHRoYXRwcmV0bSA+PSBtaW5wcmV0bSAmJiB0aGF0cHJldG0gPD0gbWF4bmV4dHRtID8gXCJwcmV2ZGF0ZVwiIDogXCJkaXNhYmxlZFwiO1xyXG5cdFx0XHRcdGFycnkucHVzaCh7XHJcblx0XHRcdFx0XHRpblRpbWU6IGluVGltZSxcclxuXHRcdFx0XHRcdHB5OiBweSxcclxuXHRcdFx0XHRcdHBtOiBwbSAtIDEsXHJcblx0XHRcdFx0XHRwZDogcHJlRGF5c1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8v5b6q546v5pys5pyI55qE5aSp5pWwLOWwhuaXpeacn+aMieWFgeiuuOeahOiMg+WbtOWIhuS4ieauteaLvOaOpVxyXG5cdFx0XHRmb3IgKHZhciBpOiBudW1iZXIgPSAxOyBpIDwgc3RhcnREYXk7IGkrKykge1xyXG5cdFx0XHRcdGkgPSBkaWdpdChpKTtcclxuXHRcdFx0XHRhcnJ5LnB1c2goe1xyXG5cdFx0XHRcdFx0aW5UaW1lOiBcImRpc2FibGVkXCIsXHJcblx0XHRcdFx0XHRweTogeWVhcixcclxuXHRcdFx0XHRcdHBtOiBtb250aCxcclxuXHRcdFx0XHRcdHBkOiBpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGZvciAodmFyIGo6IG51bWJlciA9IHN0YXJ0RGF5OyBqIDw9IGVuZERheTsgaisrKSB7XHJcblx0XHRcdFx0aiA9IGRpZ2l0KGopO1xyXG5cdFx0XHRcdGFycnkucHVzaCh7XHJcblx0XHRcdFx0XHRpblRpbWU6IGRheSA9PSBqID8gXCJhY3Rpb25cIiA6IFwibm9ybWFsXCIsXHJcblx0XHRcdFx0XHRweTogeWVhcixcclxuXHRcdFx0XHRcdHBtOiBtb250aCxcclxuXHRcdFx0XHRcdHBkOiBqXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Zm9yICh2YXIgazogbnVtYmVyID0gZW5kRGF5ICsgMTsgayA8PSBjdXJyZW50TW9udGhEYXlzOyBrKyspIHtcclxuXHRcdFx0XHRrID0gZGlnaXQoayk7XHJcblx0XHRcdFx0YXJyeS5wdXNoKHtcclxuXHRcdFx0XHRcdGluVGltZTogXCJkaXNhYmxlZFwiLFxyXG5cdFx0XHRcdFx0cHk6IHllYXIsXHJcblx0XHRcdFx0XHRwbTogbW9udGgsXHJcblx0XHRcdFx0XHRwZDoga1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8v5b6q546v6KGl5LiK5LiL5Liq5pyI55qE5byA5aeL5Yeg5aSpXHJcblx0XHRcdHZhciBuZXh0RGF5QXJyID0gW10sIG5leHRNb250aFN0YXJ0RGF5cyA9IDQyIC0gcHJldkxhc3REYXkgLSBzZXRNb250aERheXMoeWVhciwgbW9udGgpO1xyXG5cdFx0XHRmb3IgKHZhciBuID0gMTsgbiA8PSBuZXh0TW9udGhTdGFydERheXM7IG4rKykge1xyXG5cdFx0XHRcdHZhciBueSwgbm0sIG5leHRDbHM7XHJcblx0XHRcdFx0biA9IGRpZ2l0KG4pO1xyXG5cdFx0XHRcdG1vbnRoID49IDEyID8gKG55ID0geWVhciArIDEsIG5tID0gMCkgOiAobnkgPSB5ZWFyLCBubSA9IG1vbnRoKTtcclxuXHRcdFx0XHR2YXIgdGhhdG5leHR0bSA9IHBhcnNlSW50KG55LnRvU3RyaW5nKCkgKyBkaWdpdChwYXJzZUludChubSkgKyAxKS50b1N0cmluZygpICsgZGlnaXQobikudG9TdHJpbmcoKSksXHJcblx0XHRcdFx0XHRtaW5uZXh0dG0gPSBwYXJzZUludChtaW5BcnJbMF0udG9TdHJpbmcoKSArIGRpZ2l0KG1pbkFyclsxXSkudG9TdHJpbmcoKSArIGRpZ2l0KG1pbkFyclsyXSkudG9TdHJpbmcoKSksXHJcblx0XHRcdFx0XHRtYXhuZXh0dG0gPSBwYXJzZUludChtYXhBcnJbMF0udG9TdHJpbmcoKSArIGRpZ2l0KG1heEFyclsxXSkudG9TdHJpbmcoKSArIGRpZ2l0KG1heEFyclsyXSkudG9TdHJpbmcoKSk7XHJcblx0XHRcdFx0bmV4dENscyA9IHRoYXRuZXh0dG0gPD0gbWF4bmV4dHRtICYmIHRoYXRuZXh0dG0gPj0gbWlubmV4dHRtID8gXCJuZXh0ZGF0ZVwiIDogbmV4dENscyA9IFwiZGlzYWJsZWRcIjtcclxuXHRcdFx0XHRhcnJ5LnB1c2goe1xyXG5cdFx0XHRcdFx0aW5UaW1lOiBuZXh0Q2xzLFxyXG5cdFx0XHRcdFx0cHk6IG55LFxyXG5cdFx0XHRcdFx0cG06IG5tICsgMSxcclxuXHRcdFx0XHRcdHBkOiBuXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0XHQvLyB1dGlscy5Db21tb25VdGlscy5sb2coSlNPTi5zdHJpbmdpZnkoYXJyeSkpO1xyXG5cdFx0XHRyZXR1cm4gYXJyeTtcclxuXHRcdH1cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIGZvcm1hdE51bWJlcihudW06IG51bWJlcikge1xyXG5cclxuXHRcdFx0bnVtID0gbnVtIC8gMTAwO1xyXG5cdFx0XHR2YXIgc2lnbjogYm9vbGVhbiA9IG51bSA+PSAwO1xyXG5cdFx0XHRudW0gPSBNYXRoLmFicyhudW0pO1xyXG5cdFx0XHR2YXIgc3RyOiBzdHJpbmcgPSBudW0udG9TdHJpbmcoKTtcclxuXHRcdFx0aWYgKHN0ci5pbmRleE9mKFwiLlwiKSA+IC0xICYmIHN0ci5zcGxpdChcIi5cIilbMV0ubGVuZ3RoID4gMikge1xyXG5cdFx0XHRcdHZhciBpbmRleDogbnVtYmVyID0gc3RyLmluZGV4T2YoXCIuXCIpO1xyXG5cdFx0XHRcdHZhciBsZW46IG51bWJlciA9IHN0ci5sZW5ndGg7XHJcblx0XHRcdFx0c3RyID0gc3RyLnN1YnN0cmluZygwLCBpbmRleCArIDMpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciB2YWx1ZTogc3RyaW5nID0gc3RyLnJlcGxhY2UoLyhefFxccylcXGQrL2csIGZ1bmN0aW9uIChtOiBzdHJpbmcpIHtcclxuXHRcdFx0XHRyZXR1cm4gbS5yZXBsYWNlKC8oPz0oPyFcXGIpKFxcZHszfSkrJCkvZywgJywnKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cclxuXHRcdFx0cmV0dXJuIHNpZ24gPyB2YWx1ZSA6IFwiLVwiICsgdmFsdWU7XHJcblx0XHR9O1xyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgZm9ybWF0TnVtYmVyV2l0aDAwKG51bTogbnVtYmVyKSB7XHJcblx0XHRcdGxldCB2YWx1ZSA9IHRoaXMuZm9ybWF0TnVtYmVyKG51bSk7XHJcblx0XHRcdHV0aWxzLkNvbW1vblV0aWxzLmxvZyhcInZhbHVlID0gXCIsIHZhbHVlKTtcclxuXHRcdFx0bGV0IGkgPSB2YWx1ZS5pbmRleE9mKFwiLlwiKTtcclxuXHRcdFx0aWYgKGkgPT0gLTEpIC8v5rKh5pyJLlxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dmFsdWUgKz0gXCIuXCIgKyBcIjAwXCI7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoaSA9PSB2YWx1ZS5sZW5ndGggLSAyKSB7XHJcblx0XHRcdFx0dmFsdWUgKz0gXCIwXCI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIGp1c3RfbnVtKGV4SW5wdXQ6IHN0cmluZyk6IHN0cmluZyB7XHJcblx0XHRcdGxldCBzdHIgPSBleElucHV0O1xyXG5cdFx0XHR2YXIgZW5kOiBzdHJpbmcgPSBcIlwiO1xyXG5cdFx0XHRsZXQgYXJyOiBBcnJheTxhbnk+ID0gW107XHJcblx0XHRcdC8vIGNvbnNvbGUubG9nKHN0ciArIFwic3RyXCIpO1xyXG5cdFx0XHRpZiAoc3RyLmluZGV4T2YoXCIuXCIpICE9IC0xKSB7XHJcblx0XHRcdFx0ZW5kID0gc3RyLnN1YnN0cihzdHIuaW5kZXhPZihcIi5cIiksIHN0ci5sZW5ndGgpO1xyXG5cdFx0XHRcdGlmIChlbmQubGVuZ3RoID4gMylcclxuXHRcdFx0XHRcdGVuZCA9IGVuZC5zdWJzdHIoMCwgMyk7XHJcblxyXG5cdFx0XHRcdGFyciA9IHN0ci5zdWJzdHIoMCwgc3RyLmluZGV4T2YoXCIuXCIpKS5zcGxpdChcIlwiKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0YXJyID0gc3RyLnNwbGl0KFwiXCIpO1xyXG5cclxuXHJcblxyXG5cdFx0XHR2YXIgbGVuOiBudW1iZXIgPSBzdHIubGVuZ3RoO1xyXG5cdFx0XHR2YXIgYTogQXJyYXk8bnVtYmVyPiA9IFtdO1xyXG5cclxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRpZiAoTnVtYmVyKGFycltpXSkgfHwgYXJyW2ldID09IFwiMFwiKSB7XHJcblx0XHRcdFx0XHR2YXIgbjogbnVtYmVyID0gTnVtYmVyKGFycltpXSk7XHJcblx0XHRcdFx0XHRhLnB1c2gobilcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHZhciBtb25leTogbnVtYmVyID0gTnVtYmVyKGEuam9pbihcIlwiKSk7XHJcblx0XHRcdGlmIChlbmQgIT0gXCJcIiAmJiBlbmQubGVuZ3RoID4gMSkge1xyXG5cdFx0XHRcdGxldCBlbmRUZW1wID0gXCIuXCI7XHJcblx0XHRcdFx0bGV0IGVuZEFycjogQXJyYXk8YW55PiA9IFtdO1xyXG5cdFx0XHRcdGVuZEFyciA9IGVuZC5zdWJzdHIoMSwgZW5kLmxlbmd0aCkuc3BsaXQoXCJcIik7XHJcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlbmRBcnIubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRcdGlmIChOdW1iZXIoZW5kQXJyW2ldKSB8fCBlbmRBcnJbaV0gPT0gXCIwXCIpIHtcclxuXHRcdFx0XHRcdFx0ZW5kVGVtcCArPSBOdW1iZXIoZW5kQXJyW2ldKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZW5kID0gZW5kVGVtcDtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbW9uZXkgKyBlbmQ7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgbG9nKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBhbnlbXSk6IHZvaWQge1xyXG5cdFx0XHRpZiAoQ29tbW9uVXRpbHMuaXNEZWJ1Zykge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdH1cclxuXHRcdHB1YmxpYyBzdGF0aWMgd2FybihtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pOiB2b2lkIHtcclxuXHRcdFx0aWYgKENvbW1vblV0aWxzLmlzRGVidWcpIHtcclxuXHRcdFx0XHRjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0fVxyXG5cdFx0cHVibGljIHN0YXRpYyByYW5kb20obWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyIHtcclxuXHRcdFx0cmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSArIG1pbjtcclxuXHRcdH1cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIHJhbmRvbUZsb2F0KG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcblx0XHRcdHJldHVybiBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW47XHJcblx0XHR9XHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBkaXN0YW5jZSh4MSwgeTEsIHgyLCB5Mik6IG51bWJlciB7XHJcblx0XHRcdHJldHVybiBNYXRoLnNxcnQoKHgxIC0geDIpICogKHgxIC0geDIpICsgKHkxIC0geTIpICogKHkxIC0geTIpKTtcclxuXHRcdH1cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIHNldEl0ZW0oa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcclxuXHRcdFx0TGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuXHRcdH1cclxuXHJcblx0XHRwdWJsaWMgc3RhdGljIGdldEl0ZW0oa2V5OiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cdFx0XHRyZXR1cm4gTGF5YS5Mb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgZ2V0VGltZUJ5VGltZVpvbmUodGltZTogbnVtYmVyLCBpbmRleDogbnVtYmVyKTogbnVtYmVyIHtcclxuXHRcdFx0aWYgKHR5cGVvZiBpbmRleCAhPT0gJ251bWJlcicpIHJldHVybjtcclxuXHRcdFx0dmFyIGQ6IERhdGUgPSBuZXcgRGF0ZSgpO1xyXG5cdFx0XHQvL+acrOWcsOaXtumXtOS4jkdNVOaXtumXtOeahOaXtumXtOWBj+enu+W3rlxyXG5cdFx0XHR2YXIgb2Zmc2V0OiBudW1iZXIgPSBkLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMDtcclxuXHRcdFx0Ly/lvpfliLDnjrDlnKjnmoTmoLzmnpflsLzmsrvml7bpl7RcclxuXHRcdFx0dmFyIHV0Y1RpbWU6IG51bWJlciA9IHRpbWUgKyBvZmZzZXQ7XHJcblx0XHRcdHJldHVybiB1dGNUaW1lICsgMzYwMDAwMCAqIGluZGV4O1xyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgaHR0cFJlcXVlc3QodXJsOiBzdHJpbmcsIGNvbnRleHQ6IGFueSA9IG51bGwsIG9uQ29tcGxldGVIYW5kbGVyOiBGdW5jdGlvbiA9IG51bGwsIG9uRXJyb3JIYW5kbGVyOiBGdW5jdGlvbiA9IG51bGwsXHJcblx0XHRcdG9uUHJvY2Vzc0hhbmRsZXI6IEZ1bmN0aW9uID0gbnVsbCwgZGF0YTogYW55ID0gbnVsbCwgbWV0aG9kOiBzdHJpbmcgPSBcInBvc3RcIiwgcmVzcG9uc2VUeXBlOiBzdHJpbmcgPSBcImpzb25cIiwgaGVhZGVyczogYW55W10gPSBudWxsLCApOiBMYXlhLkh0dHBSZXF1ZXN0IHtcclxuXHJcblx0XHRcdHZhciB4aHI6IExheWEuSHR0cFJlcXVlc3QgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xyXG5cdFx0XHR4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCBjb250ZXh0LCAoZnVuY3Rpb24gKHJlcXVlc3Q6IExheWEuSHR0cFJlcXVlc3QpOiBGdW5jdGlvbiB7XHJcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uIChlOiBhbnkpIHtcclxuXHRcdFx0XHRcdG9uQ29tcGxldGVIYW5kbGVyLmFwcGx5KGNvbnRleHQsIFtlLCByZXF1ZXN0LmRhdGFdKTtcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHR9KSh4aHIpKTtcclxuXHRcdFx0eGhyLm9uY2UoTGF5YS5FdmVudC5FUlJPUiwgY29udGV4dCwgb25FcnJvckhhbmRsZXIpO1xyXG5cdFx0XHR4aHIub25jZShMYXlhLkV2ZW50LlBST0dSRVNTLCBjb250ZXh0LCBvblByb2Nlc3NIYW5kbGVyKTtcclxuXHRcdFx0eGhyLnNlbmQodXJsLCBkYXRhLCBcImdldFwiLCByZXNwb25zZVR5cGUsIFtdKTtcclxuXHJcblx0XHRcdHJldHVybiB4aHI7XHJcblx0XHR9XHJcblxyXG5cdFx0LyoqKlxyXG4gICAgICAgICAqICDmmK/lkKbkuLphcHDniYjmnKxcclxuICAgICAgICAgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgaXNBcHAoKTogYm9vbGVhbiB7XHJcblx0XHRcdGxldCB1c2VyQWdlbnQ6IHN0cmluZyA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKVxyXG5cdFx0XHRyZXR1cm4gdXNlckFnZW50LmluZGV4T2YoXCJicm93c2VyX3R5cGUvYW5kcm9pZF9hcHBcIikgIT0gLTE7XHJcblx0XHR9XHJcblxyXG5cdFx0LyoqIOaYr+WQpumcgOimgemAgumFjSovXHJcblx0XHRwdWJsaWMgc3RhdGljIGlzSXBob25YQWRhcHRlKCk6IGJvb2xlYW4ge1xyXG5cclxuXHRcdFx0dmFyIGFuZ2xlID0gMDtcclxuXHJcblx0XHRcdC8v5aaC5p6c5pivQVBQ5aSn5Y6FLOiuvuWkh+aYr2lwaG9uZVgg5YiY5rW355qE6auY5bqmNDRwdFxyXG5cdFx0XHQvL+aoquWxjyDlt6bml4vvvJo5MCAg5Y+z5peL77yaLTkwXHJcblx0XHRcdGlmICh3aW5kb3cub3JpZW50YXRpb24pIHtcclxuXHRcdFx0XHRhbmdsZSA9IHdpbmRvdy5vcmllbnRhdGlvbiBhcyBudW1iZXI7XHJcblx0XHRcdH1cclxuXHRcdFx0Ly8gZWxzZSBpZiAoc2NyZWVuLm1zT3JpZW50YXRpb24pIHtcclxuXHRcdFx0Ly8gXHRhbmdsZSA9IHNjcmVlbi5tc09yaWVudGF0aW9uLjtcclxuXHRcdFx0Ly8gfVxyXG5cdFx0XHQvL3V0aWxzLkNvbW1vblV0aWxzLmxvZyhcIi0tLS0tLS0tLS1zY3JlZW4ubXNPcmllbnRhdGlvbiA9IFwiLCBzY3JlZW4ubXNPcmllbnRhdGlvbik7XHJcblx0XHRcdC8vdXRpbHMuQ29tbW9uVXRpbHMubG9nKFwiLS0tLS0tLS0tLWFuZ2xlID0gXCIsIGFuZ2xlKTtcclxuXHJcblx0XHRcdGlmIChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJEZXZjaWNlX1R5cGUvaVBob25lWFwiKSA+IC0xKSB7XHJcblx0XHRcdFx0Ly91dGlscy5Db21tb25VdGlscy5sb2coXCItLS0taXNJcGhvblgg5piv5LmfXCIpO1xyXG5cdFx0XHRcdGlmIChhbmdsZSA+PSAwKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHJcblx0XHQvKipcclxuXHRcdCAqIOWwhuWxj+W5leWdkOagh+i9rOaNouWIsOS4lueVjOWdkOagh1xyXG5cdFx0ICogQHBhcmFtIGNhbSDnm7jmnLpcclxuXHRcdCAqIEBwYXJhbSBzb3VyY2VQb3Mg6KeG5Y+j5Z2Q5qCHXHJcblx0XHQgKi9cclxuXHRcdHB1YmxpYyBzdGF0aWMgU2NyZWVuVG9Xb3JsZFBvaW50KGNhbTogTGF5YS5DYW1lcmEsIHNvdXJjZVBvczogTGF5YS5WZWN0b3IzKSB7XHJcblx0XHRcdGxldCBiT3J0aG9ncmFwaGljID0gY2FtLm9ydGhvZ3JhcGhpYztcclxuXHRcdFx0Y2FtLm9ydGhvZ3JhcGhpYyA9IHRydWU7XHJcblx0XHRcdGNhbS5vcnRob2dyYXBoaWNWZXJ0aWNhbFNpemUgPSAxMS41O1xyXG5cdFx0XHR2YXIgb3V0UG9zOiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG5cdFx0XHRjYW0uY29udmVydFNjcmVlbkNvb3JkVG9PcnRob2dyYXBoaWNDb29yZChzb3VyY2VQb3MsIG91dFBvcyk7XHJcblx0XHRcdG91dFBvcy56ID0gMDtcclxuXHRcdFx0Y2FtLm9ydGhvZ3JhcGhpYyA9IGJPcnRob2dyYXBoaWM7XHJcblxyXG5cdFx0XHRyZXR1cm4gb3V0UG9zO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICog57uZ5a+56LGh5re75Yqg57uE5Lu25bm26L+U5Zue5re75Yqg55qE57uE5Lu2XHJcblx0XHQgKiBAcGFyYW0gdHJhbnMg5b6F5re75Yqg57uE5Lu255qE5a+56LGhXHJcblx0XHQgKiBAcGFyYW0gdHlwZSDnu4Tku7bnsbvlnotcclxuXHRcdCAqL1xyXG5cdFx0cHVibGljIHN0YXRpYyBDdXN0b21BZGRDb21wb25lbnQodHJhbnM6IExheWEuU3ByaXRlM0QsIHR5cGU6IGFueSkge1xyXG5cdFx0XHRsZXQgY29tcG9uZW50ID0gdHJhbnMuZ2V0Q29tcG9uZW50KHR5cGUpO1xyXG5cdFx0XHRpZiAobnVsbCA9PSBjb21wb25lbnQpXHJcblx0XHRcdFx0Y29tcG9uZW50ID0gdHJhbnMuYWRkQ29tcG9uZW50KHR5cGUpO1xyXG5cdFx0XHRyZXR1cm4gY29tcG9uZW50O1xyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgQ3JlYXRMYXlhSW1nKHBhdGg6IHN0cmluZywgcG9zOiBMYXlhLlBvaW50LCBwYXJlbnQ6IExheWEuTm9kZSwgYW5jaG9yWDogbnVtYmVyID0gMC41LCBhbmNob3JZOiBudW1iZXIgPSAwLjUpOiBMYXlhLkltYWdlIHtcclxuXHRcdFx0dmFyIGltZyA9IG5ldyBMYXlhLkltYWdlKHBhdGgpO1xyXG5cdFx0XHRpbWcuYW5jaG9yWCA9IGFuY2hvclg7XHJcblx0XHRcdGltZy5hbmNob3JZID0gYW5jaG9yWTtcclxuXHRcdFx0aW1nLnBvcyhwb3MueCwgcG9zLnkpO1xyXG5cdFx0XHQvL2ltZy5tb3VzZVRocm91Z2ggPSBmYWxzZTtcclxuXHRcdFx0Ly9pbWcubW91c2VFbmFibGVkID0gdHJ1ZTtcclxuXHRcdFx0cGFyZW50LmFkZENoaWxkKGltZyk7XHJcblx0XHRcdHJldHVybiBpbWc7XHJcblx0XHR9XHJcblxyXG5cdFx0cHVibGljIHN0YXRpYyBDcmVhdExheWFMYWJlbChwb3M6IExheWEuUG9pbnQsIHdpZHRoOiBudW1iZXIsIHBhcmVudDogTGF5YS5Ob2RlLCBmb250U2l6ZTogbnVtYmVyKSB7XHJcblx0XHRcdHZhciBsYWJlbCA9IG5ldyBMYXlhLkxhYmVsKFwiXCIpOy8vaW5mby5nZXRDaGlsZChcIlVzZXJOYW1lTGFiZWxcIikuYXNMYWJlbDtcclxuXHRcdFx0bGFiZWwucG9zKHBvcy54LCBwb3MueSk7XHJcblx0XHRcdGxhYmVsLmFsaWduID0gXCJjZW50ZXJcIjtcclxuXHRcdFx0bGFiZWwud2lkdGggPSB3aWR0aDtcclxuXHRcdFx0bGFiZWwuZm9udFNpemUgPSBmb250U2l6ZTtcclxuXHRcdFx0cGFyZW50LmFkZENoaWxkKGxhYmVsKTtcclxuXHJcblx0XHRcdHJldHVybiBsYWJlbFxyXG5cdFx0fVxyXG5cclxuXHRcdHB1YmxpYyBzdGF0aWMgQ3JlYXRGb250Q2xpcChwb3M6IExheWEuUG9pbnQsIHNraW46IHN0cmluZywgc2hlZXQ6IHN0cmluZywgcGFyZW50OiBMYXlhLk5vZGUsIHdpZHRoOiBudW1iZXIpIHtcclxuXHRcdFx0dmFyIGZvbnRjbGlwOiBMYXlhLkZvbnRDbGlwID0gbmV3IExheWEuRm9udENsaXAoc2tpbiwgc2hlZXQpO1xyXG5cdFx0XHRmb250Y2xpcC5hbGlnbiA9IFwiY2VudGVyXCI7XHJcblx0XHRcdGZvbnRjbGlwLndpZHRoID0gd2lkdGg7XHJcblx0XHRcdGZvbnRjbGlwLnBvcyhwb3MueCwgcG9zLnkpO1xyXG5cdFx0XHRmb250Y2xpcC5zcGFjZVggPSAtMztcclxuXHRcdFx0Zm9udGNsaXAuek9yZGVyID0gRW51bURhdGEuU0NSRUVOX1pPREVSLkJvdW5zRm9udDtcclxuXHRcdFx0cGFyZW50LmFkZENoaWxkKGZvbnRjbGlwKTtcclxuXHJcblx0XHRcdHJldHVybiBmb250Y2xpcDtcclxuXHRcdH1cclxuXHR9XHJcbn0iXX0=
