//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LeanTweenTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(LeanTweenType));
		L.RegVar("notUsed", get_notUsed, null);
		L.RegVar("linear", get_linear, null);
		L.RegVar("easeOutQuad", get_easeOutQuad, null);
		L.RegVar("easeInQuad", get_easeInQuad, null);
		L.RegVar("easeInOutQuad", get_easeInOutQuad, null);
		L.RegVar("easeInCubic", get_easeInCubic, null);
		L.RegVar("easeOutCubic", get_easeOutCubic, null);
		L.RegVar("easeInOutCubic", get_easeInOutCubic, null);
		L.RegVar("easeInQuart", get_easeInQuart, null);
		L.RegVar("easeOutQuart", get_easeOutQuart, null);
		L.RegVar("easeInOutQuart", get_easeInOutQuart, null);
		L.RegVar("easeInQuint", get_easeInQuint, null);
		L.RegVar("easeOutQuint", get_easeOutQuint, null);
		L.RegVar("easeInOutQuint", get_easeInOutQuint, null);
		L.RegVar("easeInSine", get_easeInSine, null);
		L.RegVar("easeOutSine", get_easeOutSine, null);
		L.RegVar("easeInOutSine", get_easeInOutSine, null);
		L.RegVar("easeInExpo", get_easeInExpo, null);
		L.RegVar("easeOutExpo", get_easeOutExpo, null);
		L.RegVar("easeInOutExpo", get_easeInOutExpo, null);
		L.RegVar("easeInCirc", get_easeInCirc, null);
		L.RegVar("easeOutCirc", get_easeOutCirc, null);
		L.RegVar("easeInOutCirc", get_easeInOutCirc, null);
		L.RegVar("easeInBounce", get_easeInBounce, null);
		L.RegVar("easeOutBounce", get_easeOutBounce, null);
		L.RegVar("easeInOutBounce", get_easeInOutBounce, null);
		L.RegVar("easeInBack", get_easeInBack, null);
		L.RegVar("easeOutBack", get_easeOutBack, null);
		L.RegVar("easeInOutBack", get_easeInOutBack, null);
		L.RegVar("easeInElastic", get_easeInElastic, null);
		L.RegVar("easeOutElastic", get_easeOutElastic, null);
		L.RegVar("easeInOutElastic", get_easeInOutElastic, null);
		L.RegVar("easeSpring", get_easeSpring, null);
		L.RegVar("easeShake", get_easeShake, null);
		L.RegVar("punch", get_punch, null);
		L.RegVar("once", get_once, null);
		L.RegVar("clamp", get_clamp, null);
		L.RegVar("pingPong", get_pingPong, null);
		L.RegVar("animationCurve", get_animationCurve, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_notUsed(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.notUsed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_linear(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.linear);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutQuad(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutQuad);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInQuad(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInQuad);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutQuad(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutQuad);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInCubic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInCubic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutCubic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutCubic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutCubic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutCubic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInQuart(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInQuart);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutQuart(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutQuart);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutQuart(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutQuart);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInQuint(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInQuint);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutQuint(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutQuint);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutQuint(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutQuint);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInSine(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInSine);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutSine(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutSine);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutSine(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutSine);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInExpo(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInExpo);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutExpo(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutExpo);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutExpo(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutExpo);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInCirc(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInCirc);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutCirc(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutCirc);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutCirc(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutCirc);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInBounce(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInBounce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutBounce(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutBounce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutBounce(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutBounce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInBack(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInBack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutBack(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutBack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutBack(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutBack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInElastic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInElastic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeOutElastic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeOutElastic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeInOutElastic(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeInOutElastic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeSpring(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeSpring);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_easeShake(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.easeShake);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_punch(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.punch);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_once(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.once);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clamp(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.clamp);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pingPong(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.pingPong);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animationCurve(IntPtr L)
	{
		ToLua.Push(L, LeanTweenType.animationCurve);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		LeanTweenType o = (LeanTweenType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

